{"tagname":"class","name":"Ext.app.domain.View","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/domain/View.js","linenr":1}],"doc":"\n","aliases":{},"alternateClassNames":[],"extends":"Ext.app.EventDomain","mixins":[],"requires":[],"uses":[],"members":[{"tagname":"cfg","name":"idProperty","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/EventDomain.js","linenr":50}],"doc":"<p>Name of the identifier property for this event domain.</p>\n","type":"String","default":null,"properties":null,"id":"cfg-idProperty","owner":"Ext.app.EventDomain","html_type":"String"},{"tagname":"property","name":"isInstance","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/domain/View.js","linenr":7}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":7,"type":"Boolean","default":"true","readonly":null,"id":"property-isInstance","owner":"Ext.app.domain.View","params":null,"return":null,"throws":null,"properties":null,"overrides":[{"name":"isInstance","owner":"Ext.app.EventDomain","link":"<a href=\"#!/api/Ext.app.EventDomain-property-isInstance\" rel=\"Ext.app.EventDomain-property-isInstance\" class=\"docClass\">Ext.app.EventDomain.isInstance</a>"}],"short_doc":" ...","html_type":"Boolean"},{"tagname":"method","name":"constructor","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/domain/View.js","linenr":9}],"doc":"\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":9,"params":[{"name":"controller","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["callParent"],"id":"method-constructor","owner":"Ext.app.domain.View","return":{"type":"Ext.app.domain.View","doc":"\n","html_type":"<a href=\"#!/api/Ext.app.domain.View\" rel=\"Ext.app.domain.View\" class=\"docClass\">Ext.app.domain.View</a>"},"overrides":[{"name":"constructor","owner":"Ext.app.EventDomain","link":"<a href=\"#!/api/Ext.app.EventDomain-method-constructor\" rel=\"Ext.app.EventDomain-method-constructor\" class=\"docClass\">Ext.app.EventDomain.constructor</a>"}],"short_doc":" ..."},{"tagname":"method","name":"destroy","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/domain/View.js","linenr":25}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":25,"params":[],"chainable":false,"fires":[],"method_calls":["callParent"],"id":"method-destroy","owner":"Ext.app.domain.View","return":null,"throws":null,"properties":null,"type":null,"overrides":[{"name":"destroy","owner":"Ext.app.EventDomain","link":"<a href=\"#!/api/Ext.app.EventDomain-method-destroy\" rel=\"Ext.app.EventDomain-method-destroy\" class=\"docClass\">Ext.app.EventDomain.destroy</a>"}],"short_doc":" ..."},{"tagname":"method","name":"dispatch","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/EventDomain.js","linenr":68}],"doc":"<p>This method dispatches an event fired by an object monitored by this domain. This\nis not called directly but is called by interceptors injected by the <code>monitor</code> method.</p>\n","params":[{"tagname":"params","type":"Object","name":"target","doc":"<p>The firer of the event.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"String","name":"ev","doc":"<p>The event being fired.</p>\n\n","html_type":"String"},{"tagname":"params","type":"Array","name":"args","doc":"<p>The arguments for the event. This array <strong>does not</strong> include the event name.\nThat has already been sliced off because this class intercepts the fireEventArgs\nmethod which takes an array as the event's argument list.</p>\n\n","html_type":"Array"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>false</code> if any listener returned <code>false</code>, otherwise <code>true</code>.</p>\n\n","properties":null,"html_type":"Boolean"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["match"],"id":"method-dispatch","owner":"Ext.app.EventDomain","short_doc":"This method dispatches an event fired by an object monitored by this domain. ..."},{"tagname":"method","name":"listen","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/EventDomain.js","linenr":127}],"doc":"<p>This method adds listeners on behalf of a controller. This method is passed an\nobject that is keyed by selectors. The value of these is also an object but now\nkeyed by event name. For example:</p>\n\n<pre><code> domain.listen({\n     'some[selector]': {\n         click: function() { ... }\n     },\n\n     'other selector': {\n         change: {\n             fn: function() { ... },\n             delay: 10\n         }\n     }\n\n }, controller);\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"selectors","doc":"<p>Config object containing selectors and listeners.</p>\n","html_type":"Object"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-listen","owner":"Ext.app.EventDomain","short_doc":"This method adds listeners on behalf of a controller. ..."},{"tagname":"method","name":"match","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/domain/View.js","linenr":15}],"doc":"<p>This method matches the firer of the event (the <code>target</code>) to the given <code>selector</code>.\nDefault matching is very simple: a match is true when selector equals target's\n<a href=\"#!/api/Ext.app.domain.View-cfg-idProperty\" rel=\"Ext.app.domain.View-cfg-idProperty\" class=\"docClass\">idProperty</a>, or when selector is '*' wildcard to match any\ntarget.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":15,"params":[{"name":"target","type":"Object","html_type":"Object"},{"name":"selector","type":"Object","html_type":"Object"},{"name":"controller","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-match","owner":"Ext.app.domain.View","return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the <code>target</code> matches the <code>selector</code>.</p>\n\n\n\n","properties":null,"html_type":"Boolean"},"protected":true,"overrides":[{"name":"match","owner":"Ext.app.EventDomain","link":"<a href=\"#!/api/Ext.app.EventDomain-method-match\" rel=\"Ext.app.EventDomain-method-match\" class=\"docClass\">Ext.app.EventDomain.match</a>"}],"short_doc":"This method matches the firer of the event (the target) to the given selector. ..."},{"tagname":"method","name":"monitor","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/EventDomain.js","linenr":251}],"doc":"<p>This method is called by the derived class to monitor <code>fireEvent</code> calls. Any call\nto <code>fireEvent</code> on the target Observable will be intercepted and dispatched to any\nlistening Controllers. Assuming the original <code>fireEvent</code> method does not return\n<code>false</code>, the event is passed to the <code>dispatch</code> method of this object.</p>\n\n<p>This is typically called in the <code>constructor</code> of derived classes.</p>\n","params":[{"tagname":"params","type":"Ext.Class","name":"observable","doc":"<p>The Observable to monitor for events.</p>\n","html_type":"Ext.Class"}],"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["dispatch","isSuspended"],"id":"method-monitor","owner":"Ext.app.EventDomain","short_doc":"This method is called by the derived class to monitor fireEvent calls. ..."},{"tagname":"method","name":"unlisten","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/EventDomain.js","linenr":281}],"doc":"<p>Removes all of a controller's attached listeners.</p>\n","params":[{"tagname":"params","type":"String","name":"controllerId","doc":"<p>The id of the controller.</p>\n","html_type":"String"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-unlisten","owner":"Ext.app.EventDomain","short_doc":"Removes all of a controller's attached listeners. ..."}],"code_type":"ext_define","id":"class-Ext.app.domain.View"}