{"tagname":"class","name":"Ext.app.Application","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":1}],"doc":"<p>Represents an Ext JS application, which is typically a single page app using a\n<a href=\"#!/api/Ext.container.Viewport\" rel=\"Ext.container.Viewport\" class=\"docClass\">Viewport</a>.</p>\n\n<p>An application consists of one or more Views. The behavior of a View is managed by its\ncorresponding <a href=\"#!/api/Ext.app.ViewController\" rel=\"Ext.app.ViewController\" class=\"docClass\">ViewController</a> and ViewModel.</p>\n\n<p>Global activities are coordinated by <a href=\"#!/api/Ext.app.Controller\" rel=\"Ext.app.Controller\" class=\"docClass\">Controllers</a> which are\nultimately instantiated by an instance of this (or a derived) class.</p>\n\n<pre><code>Ext.application({\n    name: 'MyApp',\n\n    // An instance of this view is created and set as the Viewport:\n    autoCreateViewport: 'MyApp.view.Main'\n});\n</code></pre>\n\n<p>This does several things. First it creates a global variable called 'MyApp' - all of\nyour Application's classes (such as its Models, Views and Controllers) will reside under\nthis single namespace, which drastically lowers the chances of colliding global variables.</p>\n\n<p>The MyApp global will also have a getApplication method to get a reference to the current\napplication:</p>\n\n<pre><code>var app = MyApp.getApplication();\n</code></pre>\n\n<h1>Telling Application about the rest of the app</h1>\n\n<p>Because an <a href=\"#!/api/Ext.app.Application\" rel=\"Ext.app.Application\" class=\"docClass\">Ext.app.Application</a> represents an entire app, we should tell it about the other\nparts of the app - namely the Models, Views and Controllers that are bundled with the application. Let's say we have a blog management app; we\nmight have Models and Controllers for Posts and Comments, and Views for listing, adding and editing Posts and Comments.\nHere's how we'd tell our Application about all these things:</p>\n\n<pre><code>Ext.application({\n    name: 'Blog',\n\n    models: ['Post', 'Comment'],\n\n    controllers: ['Posts', 'Comments'],\n\n    launch: function() {\n        ...\n    }\n});\n</code></pre>\n\n<p>Note that we didn't actually list the Views directly in the Application itself. This is because Views are managed by\nControllers, so it makes sense to keep those dependencies there. The Application will load each of the specified\nControllers using the pathing conventions laid out in the <a href=\"#/guide/application_architecture\">application architecture guide</a> - in this case\nexpecting the controllers to reside in app/controller/Posts.js and app/controller/Comments.js. In turn, each\nController simply needs to list the Views it uses and they will be automatically loaded. Here's how our Posts\ncontroller like be defined:</p>\n\n<pre><code>Ext.define('MyApp.controller.Posts', {\n    extend: '<a href=\"#!/api/Ext.app.Controller\" rel=\"Ext.app.Controller\" class=\"docClass\">Ext.app.Controller</a>',\n    views: ['posts.List', 'posts.Edit'],\n\n    //the rest of the Controller here\n});\n</code></pre>\n\n<p>Because we told our Application about our Models and Controllers, and our Controllers about their Views, Ext JS will\nautomatically load all of our app files for us. This means we don't have to manually add script tags into our html\nfiles whenever we add a new class, but more importantly it enables us to create a minimized build of our entire\napplication using Sencha Cmd.</p>\n\n<h1>Deriving from <a href=\"#!/api/Ext.app.Application\" rel=\"Ext.app.Application\" class=\"docClass\">Ext.app.Application</a></h1>\n\n<p>Typically, applications do not derive directly from <a href=\"#!/api/Ext.app.Application\" rel=\"Ext.app.Application\" class=\"docClass\">Ext.app.Application</a>. Rather, the\nconfiguration passed to <code>Ext.application</code> mimics what you might do in a derived class.\nIn some cases, however, it can be desirable to share logic by using a derived class\nfrom <code><a href=\"#!/api/Ext.app.Application\" rel=\"Ext.app.Application\" class=\"docClass\">Ext.app.Application</a></code>.</p>\n\n<p>Derivation works as you would expect, but using the derived class should still be the\njob of the <code>Ext.application</code> method.</p>\n\n<pre><code>Ext.define('MyApp.app.Application', {\n    extend: '<a href=\"#!/api/Ext.app.Application\" rel=\"Ext.app.Application\" class=\"docClass\">Ext.app.Application</a>',\n    name: 'MyApp',\n    ...\n});\n\nExt.application('MyApp.app.Application');\n</code></pre>\n\n<p>For more information about writing Ext JS applications, please see the <a href=\"#/guide/application_architecture\">application architecture guide</a>.</p>\n","aliases":{},"alternateClassNames":[],"extends":"Ext.app.Controller","mixins":[],"requires":["Ext.tip.QuickTipManager","Ext.util.History","Ext.util.MixedCollection"],"uses":[],"members":[{"tagname":"cfg","name":"active","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Controller.js","linenr":458}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":458,"type":"Boolean","default":"true","accessor":true,"evented":null,"id":"cfg-active","owner":"Ext.app.Controller","short_doc":" ...","html_type":"Boolean"},{"tagname":"cfg","name":"appFolder","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":166}],"doc":"<p>The path to the directory which contains all application's classes.\nThis path will be registered via Ext.Loader.setPath for the namespace specified\nin the <a href=\"#!/api/Ext.app.Application-cfg-name\" rel=\"Ext.app.Application-cfg-name\" class=\"docClass\">name</a> config.</p>\n","type":"String","default":"'app'","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-appFolder","owner":"Ext.app.Application","short_doc":"The path to the directory which contains all application's classes. ...","html_type":"String"},{"tagname":"cfg","name":"appProperty","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":191}],"doc":"<p>The name of a property to be assigned to the main namespace to gain a reference to\nthis application. Can be set to an empty value to prevent the reference from\nbeing created</p>\n\n<pre><code>Ext.application({\n    name: 'MyApp',\n    appProperty: 'myProp',\n\n    launch: function() {\n        console.log(MyApp.myProp === this);\n    }\n});\n</code></pre>\n","type":"String","default":"'app'","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-appProperty","owner":"Ext.app.Application","short_doc":"The name of a property to be assigned to the main namespace to gain a reference to\nthis application. ...","html_type":"String"},{"tagname":"cfg","name":"application","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Controller.js","linenr":398}],"doc":"<p>The <a href=\"#!/api/Ext.app.Application\" rel=\"Ext.app.Application\" class=\"docClass\">Ext.app.Application</a> for this controller accessible via the getApplication method.</p>\n","type":"Ext.app.Application","default":null,"properties":null,"accessor":true,"readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"evented":null,"id":"cfg-application","owner":"Ext.app.Controller","html_type":"<a href=\"#!/api/Ext.app.Application\" rel=\"Ext.app.Application\" class=\"docClass\">Ext.app.Application</a>"},{"tagname":"cfg","name":"autoCreateViewport","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":208}],"doc":"<p>Set to <code>true</code> to automatically load and instantiate <code>AppName.view.Viewport</code>\nbefore firing the launch function. Otherwise this is the name of the view to\ncreate and apply the <code>viewport</code> plugin.</p>\n\n<p>@cmd-auto-dependency {aliasPrefix: \"view.\", mvc: true, requires: [\"<a href=\"#!/api/Ext.plugin.Viewport\" rel=\"Ext.plugin.Viewport\" class=\"docClass\">Ext.plugin.Viewport</a>\"]}</p>\n","type":"Boolean/String","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-autoCreateViewport","owner":"Ext.app.Application","short_doc":"Set to true to automatically load and instantiate AppName.view.Viewport\nbefore firing the launch function. ...","html_type":"Boolean/String"},{"tagname":"cfg","name":"before","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":296}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":296,"type":"Object","default":null,"accessor":true,"evented":null,"id":"cfg-before","owner":"Ext.app.BaseController","html_type":"Object"},{"tagname":"cfg","name":"control","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":30}],"doc":"<p>Adds listeners to components selected via Ext.ComponentQuery. Accepts an\nobject containing component paths mapped to a hash of listener functions.</p>\n\n<p>In the following example the <code>updateUser</code> function is mapped to to the <code>click</code>\nevent on a button component, which is a child of the <code>useredit</code> component.</p>\n\n<pre><code> Ext.define('MyApp.controller.Users', {\n     extend: '<a href=\"#!/api/Ext.app.Controller\" rel=\"Ext.app.Controller\" class=\"docClass\">Ext.app.Controller</a>',\n\n     config: {\n         control: {\n             'useredit button[action=save]': {\n                 click: 'updateUser'\n             }\n          }\n     },\n\n     updateUser: function(button) {\n         console.log('clicked the Save button');\n     }\n });\n</code></pre>\n\n<p>The method you pass to the listener will automatically be resolved on the controller.\nIn this case, the <code>updateUser</code> method that will get executed on the <code>button</code> <code>click</code>\nevent will resolve to the <code>updateUser</code> method on the controller,</p>\n\n<p>See Ext.ComponentQuery for more information on component selectors.</p>\n","type":"Object","default":null,"properties":null,"accessor":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"evented":null,"id":"cfg-control","owner":"Ext.app.BaseController","short_doc":"Adds listeners to components selected via Ext.ComponentQuery. ...","html_type":"Object"},{"tagname":"cfg","name":"controllers","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":115}],"doc":"<p>Names of controllers that the app uses.</p>\n","type":"String/String[]","default":null,"properties":null,"id":"cfg-controllers","owner":"Ext.app.Application","html_type":"String/String[]"},{"tagname":"cfg","name":"defaultToken","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":219}],"doc":"<p>The default token to be used at application launch\nif one is not present. Often this is set to something like <code>'home'</code>.</p>\n","type":"String","default":"null","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-defaultToken","owner":"Ext.app.Application","short_doc":"The default token to be used at application launch\nif one is not present. ...","html_type":"String"},{"tagname":"cfg","name":"enableQuickTips","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":185}],"doc":"<p>True to automatically set up <a href=\"#!/api/Ext.tip.QuickTip\" rel=\"Ext.tip.QuickTip\" class=\"docClass\">Ext.tip.QuickTip</a> support.</p>\n","type":"Boolean","default":"true","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-enableQuickTips","owner":"Ext.app.Application","short_doc":"True to automatically set up Ext.tip.QuickTip support. ...","html_type":"Boolean"},{"tagname":"cfg","name":"extend","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":99}],"doc":"<p>A class name to use with the <code>Ext.application</code> call. The class must also extend <a href=\"#!/api/Ext.app.Application\" rel=\"Ext.app.Application\" class=\"docClass\">Ext.app.Application</a>.</p>\n\n<pre><code>Ext.define('MyApp.Application', {\n    extend : '<a href=\"#!/api/Ext.app.Application\" rel=\"Ext.app.Application\" class=\"docClass\">Ext.app.Application</a>',\n\n    launch : function() {\n        Ext.direct.Manager.addProvider(Ext.app.REMOTING_API);\n    }\n});\n\nExt.application({\n    extend : 'MyApp.Application'\n});\n</code></pre>\n","type":"String","default":null,"properties":null,"id":"cfg-extend","owner":"Ext.app.Application","short_doc":"A class name to use with the Ext.application call. ...","html_type":"String"},{"tagname":"cfg","name":"glyphFontFamily","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":225}],"doc":"<p>The glyphFontFamily to use for this application.  Used as the default font-family\nfor all components that support a <code>glyph</code> config.</p>\n","type":"String","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-glyphFontFamily","owner":"Ext.app.Application","short_doc":"The glyphFontFamily to use for this application. ...","html_type":"String"},{"tagname":"cfg","name":"id","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":24}],"doc":"<p>The id of this controller. You can use this id when dispatching.</p>\n","type":"String","default":null,"properties":null,"accessor":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"evented":null,"id":"cfg-id","owner":"Ext.app.BaseController","short_doc":"The id of this controller. ...","html_type":"String"},{"tagname":"cfg","name":"listen","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":64}],"doc":"<p>Adds listeners to different event sources (also called \"event domains\"). The\nprimary event domain is that of components, but there are also other event domains:\n<a href=\"#!/api/Ext.app.domain.Global\" rel=\"Ext.app.domain.Global\" class=\"docClass\">Global</a> domain that intercepts events fired from\nExt.GlobalEvents Observable instance, <a href=\"#!/api/Ext.app.domain.Controller\" rel=\"Ext.app.domain.Controller\" class=\"docClass\">Controller</a>\ndomain can be used to listen to events fired by other Controllers,\n<a href=\"#!/api/Ext.app.domain.Store\" rel=\"Ext.app.domain.Store\" class=\"docClass\">Store</a> domain gives access to Store events, and\n<a href=\"#!/api/Ext.app.domain.Direct\" rel=\"Ext.app.domain.Direct\" class=\"docClass\">Direct</a> domain can be used with Ext.Direct Providers\nto listen to their events.</p>\n\n<p>To listen to \"bar\" events fired by a controller with id=\"foo\":</p>\n\n<pre><code> Ext.define('AM.controller.Users', {\n     extend: '<a href=\"#!/api/Ext.app.Controller\" rel=\"Ext.app.Controller\" class=\"docClass\">Ext.app.Controller</a>',\n\n     config: {\n         listen: {\n             controller: {\n                 '#foo': {\n                    bar: 'onFooBar'\n                 }\n             }\n         }\n     }\n });\n</code></pre>\n\n<p>To listen to \"bar\" events fired by any controller, and \"baz\" events\nfired by Store with storeId=\"baz\":</p>\n\n<pre><code> Ext.define('AM.controller.Users', {\n     extend: '<a href=\"#!/api/Ext.app.Controller\" rel=\"Ext.app.Controller\" class=\"docClass\">Ext.app.Controller</a>',\n\n     config: {\n         listen: {\n             controller: {\n                 '*': {\n                    bar: 'onAnyControllerBar'\n                 }\n             },\n             store: {\n                 '#baz': {\n                     baz: 'onStoreBaz'\n                 }\n             }\n         }\n     }\n });\n</code></pre>\n\n<p>To listen to \"idle\" events fired by Ext.GlobalEvents when other event\nprocessing is complete and Ext JS is about to return control to the browser:</p>\n\n<pre><code> Ext.define('AM.controller.Users', {\n     extend: '<a href=\"#!/api/Ext.app.Controller\" rel=\"Ext.app.Controller\" class=\"docClass\">Ext.app.Controller</a>',\n\n     config: {\n         listen: {\n             global: {            // Global events are always fired\n                 idle: 'onIdle'   // from the same object, so there\n             }                    // are no selectors\n         }\n     }\n });\n</code></pre>\n\n<p>As this relates to components, the following example:</p>\n\n<pre><code> Ext.define('AM.controller.Users', {\n     extend: '<a href=\"#!/api/Ext.app.Controller\" rel=\"Ext.app.Controller\" class=\"docClass\">Ext.app.Controller</a>',\n\n     config: {\n         listen: {\n             component: {\n                 'useredit button[action=save]': {\n                    click: 'updateUser'\n                 }\n             }\n         }\n     }\n });\n</code></pre>\n\n<p>Is equivalent to:</p>\n\n<pre><code> Ext.define('AM.controller.Users', {\n     extend: '<a href=\"#!/api/Ext.app.Controller\" rel=\"Ext.app.Controller\" class=\"docClass\">Ext.app.Controller</a>',\n\n     config: {\n         control: {\n             'useredit button[action=save]': {\n                click: 'updateUser'\n             }\n         }\n     }\n });\n</code></pre>\n\n<p>Of course, these can all be combined in a single call and used instead of\n<code>control</code>, like so:</p>\n\n<pre><code> Ext.define('AM.controller.Users', {\n     extend: '<a href=\"#!/api/Ext.app.Controller\" rel=\"Ext.app.Controller\" class=\"docClass\">Ext.app.Controller</a>',\n\n     config: {\n         listen: {\n             global: {\n                 idle: 'onIdle'\n             },\n             controller: {\n                 '*': {\n                    foobar: 'onAnyFooBar'\n                 },\n                 '#foo': {\n                    bar: 'onFooBar'\n                 }\n             },\n             component: {\n                 'useredit button[action=save]': {\n                    click: 'updateUser'\n                 }\n             },\n             store: {\n                 '#qux': {\n                     load: 'onQuxLoad'\n                 }\n             }\n         }\n     }\n });\n</code></pre>\n","type":"Object","default":null,"properties":null,"accessor":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"evented":null,"id":"cfg-listen","owner":"Ext.app.BaseController","short_doc":"Adds listeners to different event sources (also called \"event domains\"). ...","html_type":"Object"},{"tagname":"cfg","name":"models","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Controller.js","linenr":315}],"doc":"<p>Array of models to require from AppName.model namespace. For example:</p>\n\n<pre><code> Ext.define(\"MyApp.controller.Foo\", {\n     extend: \"<a href=\"#!/api/Ext.app.Controller\" rel=\"Ext.app.Controller\" class=\"docClass\">Ext.app.Controller</a>\",\n     models: ['User', 'Vehicle']\n });\n</code></pre>\n\n<p>This is equivalent of:</p>\n\n<pre><code> Ext.define(\"MyApp.controller.Foo\", {\n     extend: \"<a href=\"#!/api/Ext.app.Controller\" rel=\"Ext.app.Controller\" class=\"docClass\">Ext.app.Controller</a>\",\n     requires: ['MyApp.model.User', 'MyApp.model.Vehicle'],\n\n     getUserModel: function() {\n         return this.getModel(\"User\");\n     },\n\n     getVehicleModel: function() {\n         return this.getModel(\"Vehicle\");\n     }\n });\n</code></pre>\n","type":"String/String[]","default":null,"properties":null,"id":"cfg-models","owner":"Ext.app.Controller","short_doc":"Array of models to require from AppName.model namespace. ...","html_type":"String/String[]"},{"tagname":"cfg","name":"moduleClassName","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Controller.js","linenr":460}],"doc":"<p>private</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"type":"Object","default":null,"accessor":true,"evented":null,"id":"cfg-moduleClassName","owner":"Ext.app.Controller","html_type":"Object"},{"tagname":"cfg","name":"name","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":177}],"doc":"<p>The name of your application. This will also be the namespace for your views, controllers\nmodels and stores. Don't use spaces or special characters in the name. <strong>Application name\nis mandatory</strong>.</p>\n","type":"String","default":"''","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-name","owner":"Ext.app.Application","short_doc":"The name of your application. ...","html_type":"String"},{"tagname":"cfg","name":"namespaces","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":126}],"doc":"<p>The list of namespace prefixes used in the application to resolve dependencies\nlike Views and Stores:</p>\n\n<pre><code> Ext.application({\n     name: 'MyApp',\n\n     namespaces: ['Common.code'],\n\n     controllers: [ 'Common.code.controller.Foo', 'Bar' ]\n });\n\n Ext.define('Common.code.controller.Foo', {\n     extend: '<a href=\"#!/api/Ext.app.Controller\" rel=\"Ext.app.Controller\" class=\"docClass\">Ext.app.Controller</a>',\n\n     models: ['Foo'],    // Loads Common.code.model.Foo\n     views:  ['Bar']     // Loads Common.code.view.Bar\n });\n\n Ext.define('MyApp.controller.Bar', {\n     extend: '<a href=\"#!/api/Ext.app.Controller\" rel=\"Ext.app.Controller\" class=\"docClass\">Ext.app.Controller</a>',\n\n     models: ['Foo'],    // Loads MyApp.model.Foo\n     views:  ['Bar']     // Loads MyApp.view.Bar\n });\n</code></pre>\n\n<p>You don't need to include main namespace (MyApp), it will be added to the list\nautomatically.</p>\n","type":"String/String[]","default":"[]","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-namespaces","owner":"Ext.app.Application","short_doc":"The list of namespace prefixes used in the application to resolve dependencies\nlike Views and Stores:\n\n Ext.applicati...","html_type":"String/String[]"},{"tagname":"cfg","name":"paths","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":159}],"doc":"<p>Additional load paths to add to Ext.Loader.\nSee Ext.Loader.paths config for more details.</p>\n","type":"Object","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-paths","owner":"Ext.app.Application","short_doc":"Additional load paths to add to Ext.Loader. ...","html_type":"Object"},{"tagname":"cfg","name":"refs","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Controller.js","linenr":405}],"doc":"<p>You can specify refs with either an Object or an Array:</p>\n\n<pre><code> Ext.define('MyApp.controller.Foo', {\n     extend: '<a href=\"#!/api/Ext.app.Controller\" rel=\"Ext.app.Controller\" class=\"docClass\">Ext.app.Controller</a>',\n\n     config: {\n         refs: {\n             list: 'grid',\n             user: {\n                 autoCreate: true,\n                 selector: 'form',\n                 xtype: 'form'\n             }\n         }\n     }\n });\n</code></pre>\n\n<p>This will add the <code>getList</code> and <code>getUser</code> methods to the controller which will internally use\nExt.ComponentQuery to reference the resolved component.</p>\n\n<pre><code> Ext.define('MyApp.controller.Foo', {\n     extend: '<a href=\"#!/api/Ext.app.Controller\" rel=\"Ext.app.Controller\" class=\"docClass\">Ext.app.Controller</a>',\n\n     config : {\n         refs: [{\n             ref: 'list',\n             selector: 'grid'\n         }]\n     }\n });\n</code></pre>\n\n<p>This will add method <code>getList</code> to the controller which will internally use\nExt.ComponentQuery to reference the grid component on page.</p>\n\n<p>The recommended way to use refs is within the config object but legacy means of specifying\nrefs as a sibling of the config object is still supported.</p>\n\n<p>The following fields can be used in ref definition:</p>\n\n<ul>\n<li><code>ref</code> - name of the reference.</li>\n<li><code>selector</code> - Ext.ComponentQuery selector to access the component.</li>\n<li><code>autoCreate</code> - True to create the component automatically if not found on page.</li>\n<li><code>forceCreate</code> - Forces the creation of the component every time reference is accessed\n(when <code>get&lt;REFNAME&gt;</code> is called).</li>\n<li><code>xtype</code> - Used to create component by its xtype with autoCreate or forceCreate. If\nyou don't provide xtype, an <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> instance will be created.</li>\n</ul>\n\n","type":"Object[]","default":null,"properties":null,"accessor":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"evented":null,"id":"cfg-refs","owner":"Ext.app.Controller","short_doc":"You can specify refs with either an Object or an Array:\n\n Ext.define('MyApp.controller.Foo', {\n     extend: 'Ext.app....","html_type":"Object[]"},{"tagname":"cfg","name":"routes","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":195}],"doc":"<p>An object of routes to handle hash changes. A route can be defined in a simple way:</p>\n\n<pre><code>routes : {\n    'foo/bar'  : 'handleFoo',\n    'user/:id' : 'showUser'\n}\n</code></pre>\n\n<p>Where the property is the hash (which can accept a parameter defined by a colon) and the value\nis the method on the controller to execute. The parameters will get sent in the action method.</p>\n\n<p>At the application level, you can define a event that will be executed when no matching\nroutes are found.</p>\n\n<pre><code>Ext.application({\n    name: 'MyApp',\n    listen: {\n        controller: {\n            '#': {\n                unmatchedroute: 'onUnmatchedRoute'\n            }\n        }\n    },\n\n    onUnmatchedRoute: function(hash) {\n        console.log('Unmatched', hash);\n        // Do something...\n    }\n});\n</code></pre>\n\n<p>There is also a complex means of defining a route where you can use a before action and even\nspecify your own RegEx for the parameter:</p>\n\n<pre><code>routes : {\n    'foo/bar'  : {\n        action  : 'handleFoo',\n        before  : 'beforeHandleFoo'\n    },\n    'user/:id' : {\n        action     : 'showUser',\n        before     : 'beforeShowUser',\n        conditions : {\n            ':id' : '([0-9]+)'\n        }\n    }\n}\n</code></pre>\n\n<p>This will only match if the <code>id</code> parameter is a number.</p>\n\n<p>The before action allows you to cancel an action. Every before action will get passed an <code>action</code> argument with\na <code>resume</code> and <code>stop</code> methods as the last argument of the method and you <em>MUST</em> execute either method:</p>\n\n<pre><code>beforeHandleFoo : function(action) {\n    //some logic here\n\n    //this will allow the handleFoo action to be executed\n    action.resume();\n},\nhandleFoo : function() {\n    //will get executed due to true being passed in callback in beforeHandleFoo\n},\nbeforeShowUser : function(id, action) {\n    //allows for async process like an Ajax\n    Ext.Ajax.request({\n        url     : 'foo.php',\n        success : function() {\n            //will not allow the showUser method to be executed but will continue other queued actions.\n            action.stop();\n        },\n        failure : function() {\n            //will not allow the showUser method to be executed and will not allow other queued actions to be executed.\n            action.stop(true);\n        }\n    });\n},\nshowUser : function(id) {\n    //will not get executed due to false being passed in callback in beforeShowUser\n}\n</code></pre>\n\n<p>You <em>MUST</em> execute the <code>resume</code> or <code>stop</code> method on the <code>action</code> argument. Executing <code>action.resume();</code> will continue\nthe action, <code>action.stop();</code> will not allow the action to resume but will allow other queued actions to resume,\n<code>action.stop(true);</code> will not allow the action and any other queued actions to resume.</p>\n\n<p>The default RegEx that will be used is <code>([%a-zA-Z0-9\\\\-\\\\_\\\\s,]+)</code> but you can specify any\nthat may suit what you need to accomplish. An example of an advanced condition may be to make\na parameter optional and case-insensitive:</p>\n\n<pre><code>routes : {\n    'user:id' : {\n        action     : 'showUser',\n        before     : 'beforeShowUser',\n        conditions : {\n            ':id' : '(?:(?:\\/){1}([%a-z0-9_,\\s\\-]+))?'\n        }\n    }\n}\n</code></pre>\n","type":"Object","default":null,"properties":null,"accessor":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"evented":null,"id":"cfg-routes","owner":"Ext.app.BaseController","short_doc":"An object of routes to handle hash changes. ...","html_type":"Object"},{"tagname":"cfg","name":"scope","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":120}],"doc":"<p>The scope to execute the <a href=\"#!/api/Ext.app.Application-method-launch\" rel=\"Ext.app.Application-method-launch\" class=\"docClass\">launch</a> function in. Defaults to the Application instance.</p>\n","type":"Object","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-scope","owner":"Ext.app.Application","short_doc":"The scope to execute the launch function in. ...","html_type":"Object"},{"tagname":"cfg","name":"stores","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Controller.js","linenr":367}],"doc":"<p>Array of stores to require from AppName.store namespace and to generate getter methods for.\nFor example:</p>\n\n<pre><code> Ext.define(\"MyApp.controller.Foo\", {\n     extend: \"<a href=\"#!/api/Ext.app.Controller\" rel=\"Ext.app.Controller\" class=\"docClass\">Ext.app.Controller</a>\",\n     stores: ['Users', 'Vehicles']\n });\n</code></pre>\n\n<p>This is equivalent to:</p>\n\n<pre><code> Ext.define(\"MyApp.controller.Foo\", {\n     extend: \"<a href=\"#!/api/Ext.app.Controller\" rel=\"Ext.app.Controller\" class=\"docClass\">Ext.app.Controller</a>\",\n\n     requires: [\n         'MyApp.store.Users',\n         'MyApp.store.Vehicles'\n     ]\n\n     getUsersStore: function() {\n         return this.getStore(\"Users\");\n     },\n\n     getVehiclesStore: function() {\n         return this.getStore(\"Vehicles\");\n     }\n });\n</code></pre>\n","type":"String/String[]","default":null,"properties":null,"id":"cfg-stores","owner":"Ext.app.Controller","short_doc":"Array of stores to require from AppName.store namespace and to generate getter methods for. ...","html_type":"String/String[]"},{"tagname":"cfg","name":"views","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Controller.js","linenr":341}],"doc":"<p>Array of views to require from AppName.view namespace and to generate getter methods for.\nFor example:</p>\n\n<pre><code> Ext.define(\"MyApp.controller.Foo\", {\n     extend: \"<a href=\"#!/api/Ext.app.Controller\" rel=\"Ext.app.Controller\" class=\"docClass\">Ext.app.Controller</a>\",\n     views: ['List', 'Detail']\n });\n</code></pre>\n\n<p>This is equivalent of:</p>\n\n<pre><code> Ext.define(\"MyApp.controller.Foo\", {\n     extend: \"<a href=\"#!/api/Ext.app.Controller\" rel=\"Ext.app.Controller\" class=\"docClass\">Ext.app.Controller</a>\",\n     requires: ['MyApp.view.List', 'MyApp.view.Detail'],\n\n     getListView: function() {\n         return this.getView(\"List\");\n     },\n\n     getDetailView: function() {\n         return this.getView(\"Detail\");\n     }\n });\n</code></pre>\n","type":"String/String[]","default":null,"properties":null,"id":"cfg-views","owner":"Ext.app.Controller","short_doc":"Array of views to require from AppName.view namespace and to generate getter methods for. ...","html_type":"String/String[]"},{"tagname":"property","name":"isApplication","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":97}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":97,"type":"Boolean","default":"true","readonly":null,"id":"property-isApplication","owner":"Ext.app.Application","short_doc":" ...","html_type":"Boolean"},{"tagname":"property","name":"isController","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":21}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":21,"type":"Boolean","default":"true","readonly":null,"id":"property-isController","owner":"Ext.app.BaseController","short_doc":" ...","html_type":"Boolean"},{"tagname":"method","name":"constructor","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":304}],"doc":"<p>Creates new Application.</p>\n","params":[{"tagname":"params","type":"Object","name":"config","optional":true,"doc":"<p>Config object.</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":["launch"],"method_calls":["callParent","doInit","finishInitControllers","getName","initControllers","initNamespace","onBeforeLaunch"],"id":"method-constructor","owner":"Ext.app.Application","return":{"type":"Ext.app.Application","doc":"\n","html_type":"<a href=\"#!/api/Ext.app.Application\" rel=\"Ext.app.Application\" class=\"docClass\">Ext.app.Application</a>"},"overrides":[{"name":"constructor","owner":"Ext.app.Controller","link":"<a href=\"#!/api/Ext.app.Controller-method-constructor\" rel=\"Ext.app.Controller-method-constructor\" class=\"docClass\">Ext.app.Controller.constructor</a>"}],"short_doc":"Creates new Application. ..."},{"tagname":"method","name":"activate","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Controller.js","linenr":656}],"doc":"<p>Allow the controller to resume receiving events from the event bus.\nRoutes will also be able to begin firing on this controller.\nAlso see <a href=\"#!/api/Ext.app.Controller-method-deactivate\" rel=\"Ext.app.Controller-method-deactivate\" class=\"docClass\">deactivate</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["setActive"],"id":"method-activate","owner":"Ext.app.Controller","short_doc":"Allow the controller to resume receiving events from the event bus. ..."},{"tagname":"method","name":"addRef","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Controller.js","linenr":706}],"doc":"<p>Registers one or more <a href=\"#!/api/Ext.app.Controller-cfg-refs\" rel=\"Ext.app.Controller-cfg-refs\" class=\"docClass\">references</a>.</p>\n","params":[{"tagname":"params","type":"Object/Object[]","name":"refs","doc":"\n","html_type":"Object/Object[]"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["ref"],"id":"method-addRef","owner":"Ext.app.Controller","short_doc":"Registers one or more references. ..."},{"tagname":"method","name":"applyControl","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":325}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":325,"params":[{"name":"control","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-applyControl","owner":"Ext.app.BaseController","short_doc":" ..."},{"tagname":"method","name":"applyListen","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":317}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":317,"params":[{"name":"listen","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-applyListen","owner":"Ext.app.BaseController","short_doc":" ..."},{"tagname":"method","name":"applyRefs","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Controller.js","linenr":583}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":583,"params":[{"name":"refs","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["normalizeRefs"],"id":"method-applyRefs","owner":"Ext.app.Controller","short_doc":" ..."},{"tagname":"method","name":"control","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":397}],"doc":"<p>Adds listeners to components selected via Ext.ComponentQuery. Accepts an\nobject containing component paths mapped to a hash of listener functions.</p>\n\n<p>In the following example the <code>updateUser</code> function is mapped to to the <code>click</code>\nevent on a button component, which is a child of the <code>useredit</code> component.</p>\n\n<pre><code> Ext.define('AM.controller.Users', {\n     init: function() {\n         this.control({\n             'useredit button[action=save]': {\n                 click: this.updateUser\n             }\n         });\n     },\n\n     updateUser: function(button) {\n         console.log('clicked the Save button');\n     }\n });\n</code></pre>\n\n<p>Or alternatively one call <code>control</code> with two arguments:</p>\n\n<pre><code> this.control('useredit button[action=save]', {\n     click: this.updateUser\n });\n</code></pre>\n\n<p>See Ext.ComponentQuery for more information on component selectors.</p>\n","params":[{"tagname":"params","type":"String/Object","name":"selectors","doc":"<p>If a String, the second argument is used as the\nlisteners, otherwise an object of selectors -> listeners is assumed</p>\n","html_type":"String/Object"},{"tagname":"params","type":"Object","name":"listeners","optional":true,"doc":"<p>Config for listeners.</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-control","owner":"Ext.app.BaseController","short_doc":"Adds listeners to components selected via Ext.ComponentQuery. ..."},{"tagname":"method","name":"createController","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":463}],"doc":"<p>Create an instance of a controller by name.</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"<p>The name of the controller. For a controller with the\nfull class name <code>MyApp.controller.Foo</code>, the name parameter should be <code>Foo</code>.\nIf the controller already exists, it will be returned.</p>\n","html_type":"String"}],"return":{"type":"Ext.app.Controller","name":"return","doc":"<p>controller</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.app.Controller\" rel=\"Ext.app.Controller\" class=\"docClass\">Ext.app.Controller</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getController"],"id":"method-createController","owner":"Ext.app.Application","short_doc":"Create an instance of a controller by name. ..."},{"tagname":"method","name":"deactivate","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Controller.js","linenr":665}],"doc":"<p>Prevent this controller from receiving events from the event bus.\nRoutes will also not be triggered on inactive controllers unless\nthe <a href=\"#!/api/Ext.app.route.Route-cfg-allowInactive\" rel=\"Ext.app.route.Route-cfg-allowInactive\" class=\"docClass\">Ext.app.route.Route.allowInactive</a> flag is set.\nAlso see <a href=\"#!/api/Ext.app.Controller-method-activate\" rel=\"Ext.app.Controller-method-activate\" class=\"docClass\">activate</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["setActive"],"id":"method-deactivate","owner":"Ext.app.Controller","short_doc":"Prevent this controller from receiving events from the event bus. ..."},{"tagname":"method","name":"destroy","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":541}],"doc":"<p>Inherit docs</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[{"name":"destroyRefs","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["callParent","getAppProperty","getName"],"id":"method-destroy","owner":"Ext.app.Application","return":null,"throws":null,"properties":null,"type":null,"overrides":[{"name":"destroy","owner":"Ext.app.Controller","link":"<a href=\"#!/api/Ext.app.Controller-method-destroy\" rel=\"Ext.app.Controller-method-destroy\" class=\"docClass\">Ext.app.Controller.destroy</a>"}],"short_doc":"Inherit docs ..."},{"tagname":"method","name":"destroyController","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":475}],"doc":"<p>Destroys a controller, any listeners are unbound.</p>\n","params":[{"tagname":"params","type":"String/Ext.app.Controller","name":"controller","doc":"<p>The controller</p>\n","html_type":"String/<a href=\"#!/api/Ext.app.Controller\" rel=\"Ext.app.Controller\" class=\"docClass\">Ext.app.Controller</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getController"],"id":"method-destroyController","owner":"Ext.app.Application","short_doc":"Destroys a controller, any listeners are unbound. ..."},{"tagname":"method","name":"doInit","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Controller.js","linenr":612}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":612,"params":[{"name":"app","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["init"],"id":"method-doInit","owner":"Ext.app.Controller","short_doc":" ..."},{"tagname":"method","name":"ensureId","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Controller.js","linenr":840}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":840,"params":[],"chainable":false,"fires":[],"method_calls":["getId","getModuleClassName","setId"],"id":"method-ensureId","owner":"Ext.app.Controller","short_doc":" ..."},{"tagname":"method","name":"finishInit","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Controller.js","linenr":621}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":621,"params":[{"name":"app","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["getController"],"id":"method-finishInit","owner":"Ext.app.Controller","short_doc":" ..."},{"tagname":"method","name":"finishInitControllers","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":368}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":368,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-finishInitControllers","owner":"Ext.app.Application","short_doc":" ..."},{"tagname":"method","name":"getActive","doc":"<p>Returns the value of <a href=\"#!/api/Ext.app.Controller-cfg-active\" rel=\"Ext.app.Controller-cfg-active\" class=\"docClass\">active</a>.</p>\n","params":[],"return":{"type":"Boolean","doc":"\n","html_type":"Boolean"},"id":"method-getActive","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Controller.js","linenr":458}],"static":null,"private":null,"inheritable":null,"linenr":458,"owner":"Ext.app.Controller","short_doc":"Returns the value of active. ..."},{"tagname":"method","name":"getAppProperty","doc":"<p>Returns the value of <a href=\"#!/api/Ext.app.Application-cfg-appProperty\" rel=\"Ext.app.Application-cfg-appProperty\" class=\"docClass\">appProperty</a>.</p>\n","params":[],"return":{"type":"String","doc":"\n","html_type":"String"},"id":"method-getAppProperty","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":191}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.app.Application","short_doc":"Returns the value of appProperty. ..."},{"tagname":"method","name":"getApplication","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":536}],"doc":"<p>Inherit docs</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":true,"fires":null,"method_calls":null,"id":"method-getApplication","owner":"Ext.app.Application","return":{"type":"Ext.app.Application","doc":"\n","html_type":"<a href=\"#!/api/Ext.app.Application\" rel=\"Ext.app.Application\" class=\"docClass\">Ext.app.Application</a>"},"properties":null,"readonly":true,"overrides":[{"name":"getApplication","owner":"Ext.app.Controller","link":"<a href=\"#!/api/Ext.app.Controller-method-getApplication\" rel=\"Ext.app.Controller-method-getApplication\" class=\"docClass\">Ext.app.Controller.getApplication</a>"}],"short_doc":"Inherit docs ..."},{"tagname":"method","name":"getAutoCreateViewport","doc":"<p>Returns the value of <a href=\"#!/api/Ext.app.Application-cfg-autoCreateViewport\" rel=\"Ext.app.Application-cfg-autoCreateViewport\" class=\"docClass\">autoCreateViewport</a>.</p>\n","params":[],"return":{"type":"Boolean/String","doc":"\n","html_type":"Boolean/String"},"id":"method-getAutoCreateViewport","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":208}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.app.Application","short_doc":"Returns the value of autoCreateViewport. ..."},{"tagname":"method","name":"getBefore","doc":"<p>Returns the value of <a href=\"#!/api/Ext.app.BaseController-cfg-before\" rel=\"Ext.app.BaseController-cfg-before\" class=\"docClass\">before</a>.</p>\n","params":[],"return":{"type":"Object","doc":"\n","html_type":"Object"},"id":"method-getBefore","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":296}],"static":null,"private":null,"inheritable":null,"linenr":296,"owner":"Ext.app.BaseController","short_doc":"Returns the value of before. ..."},{"tagname":"method","name":"getControl","doc":"<p>Returns the value of <a href=\"#!/api/Ext.app.BaseController-cfg-control\" rel=\"Ext.app.BaseController-cfg-control\" class=\"docClass\">control</a>.</p>\n","params":[],"return":{"type":"Object","doc":"\n","html_type":"Object"},"id":"method-getControl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":30}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.app.BaseController","short_doc":"Returns the value of control. ..."},{"tagname":"method","name":"getController","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":486}],"doc":"<p>Returns instance of a <a href=\"#!/api/Ext.app.Controller\" rel=\"Ext.app.Controller\" class=\"docClass\">Controller</a> with the given id.\nWhen controller doesn't exist yet, it's created. Note that this method depends\non Application instance and will return undefined when Application is not\naccessible. The only exception is when this Controller instance's id is requested;\nin that case we always return the instance even if Application is no available.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":486,"params":[{"name":"name","type":"Object","html_type":"Object"},{"name":"preventCreate","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["getModuleClassName"],"id":"method-getController","owner":"Ext.app.Application","return":{"type":"Ext.app.Controller","name":"return","doc":"<p>controller instance or undefined.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.app.Controller\" rel=\"Ext.app.Controller\" class=\"docClass\">Ext.app.Controller</a>"},"overrides":[{"name":"getController","owner":"Ext.app.Controller","link":"<a href=\"#!/api/Ext.app.Controller-method-getController\" rel=\"Ext.app.Controller-method-getController\" class=\"docClass\">Ext.app.Controller.getController</a>"}],"short_doc":"Returns instance of a Controller with the given id. ..."},{"tagname":"method","name":"getDefaultToken","doc":"<p>Returns the value of <a href=\"#!/api/Ext.app.Application-cfg-defaultToken\" rel=\"Ext.app.Application-cfg-defaultToken\" class=\"docClass\">defaultToken</a>.</p>\n","params":[],"return":{"type":"String","doc":"\n","html_type":"String"},"id":"method-getDefaultToken","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":219}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.app.Application","short_doc":"Returns the value of defaultToken. ..."},{"tagname":"method","name":"getEnableQuickTips","doc":"<p>Returns the value of <a href=\"#!/api/Ext.app.Application-cfg-enableQuickTips\" rel=\"Ext.app.Application-cfg-enableQuickTips\" class=\"docClass\">enableQuickTips</a>.</p>\n","params":[],"return":{"type":"Boolean","doc":"\n","html_type":"Boolean"},"id":"method-getEnableQuickTips","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":185}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.app.Application","short_doc":"Returns the value of enableQuickTips. ..."},{"tagname":"method","name":"getGlyphFontFamily","doc":"<p>Returns the value of <a href=\"#!/api/Ext.app.Application-cfg-glyphFontFamily\" rel=\"Ext.app.Application-cfg-glyphFontFamily\" class=\"docClass\">glyphFontFamily</a>.</p>\n","params":[],"return":{"type":"String","doc":"\n","html_type":"String"},"id":"method-getGlyphFontFamily","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":225}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.app.Application","short_doc":"Returns the value of glyphFontFamily. ..."},{"tagname":"method","name":"getId","doc":"<p>Returns the value of <a href=\"#!/api/Ext.app.BaseController-cfg-id\" rel=\"Ext.app.BaseController-cfg-id\" class=\"docClass\">id</a>.</p>\n","params":[],"return":{"type":"String","doc":"\n","html_type":"String"},"id":"method-getId","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":24}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.app.BaseController","short_doc":"Returns the value of id. ..."},{"tagname":"method","name":"getListen","doc":"<p>Returns the value of <a href=\"#!/api/Ext.app.BaseController-cfg-listen\" rel=\"Ext.app.BaseController-cfg-listen\" class=\"docClass\">listen</a>.</p>\n","params":[],"return":{"type":"Object","doc":"\n","html_type":"Object"},"id":"method-getListen","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":64}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.app.BaseController","short_doc":"Returns the value of listen. ..."},{"tagname":"method","name":"getModel","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Controller.js","linenr":807}],"doc":"<p>Returns a Model class with the given name.</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"\n","html_type":"String"}],"return":{"type":"Ext.Class","name":"return","doc":"<p>A class ultimately derived from <code>Ext.data.Model</code>.</p>\n","properties":null,"html_type":"Ext.Class"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getModel","owner":"Ext.app.Controller","short_doc":"Returns a Model class with the given name. ..."},{"tagname":"method","name":"getModuleClassName","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":430}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.app.Application-cfg-moduleClassName\" rel=\"Ext.app.Application-cfg-moduleClassName\" class=\"docClass\">moduleClassName</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":430,"params":[{"name":"name","type":"Object","html_type":"Object"},{"name":"kind","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["getName"],"id":"method-getModuleClassName","owner":"Ext.app.Application","return":{"type":"Object","doc":"\n","html_type":"Object"},"overrides":[{"name":"getModuleClassName","owner":"Ext.app.Controller","link":"<a href=\"#!/api/Ext.app.Controller-method-getModuleClassName\" rel=\"Ext.app.Controller-method-getModuleClassName\" class=\"docClass\">Ext.app.Controller.getModuleClassName</a>"}],"short_doc":"Returns the value of moduleClassName. ..."},{"tagname":"method","name":"getName","doc":"<p>Returns the value of <a href=\"#!/api/Ext.app.Application-cfg-name\" rel=\"Ext.app.Application-cfg-name\" class=\"docClass\">name</a>.</p>\n","params":[],"return":{"type":"String","doc":"\n","html_type":"String"},"id":"method-getName","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":177}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.app.Application","short_doc":"Returns the value of name. ..."},{"tagname":"method","name":"getRef","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Controller.js","linenr":715}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":715,"params":[{"name":"ref","type":"Object","html_type":"Object"},{"name":"info","type":"Object","html_type":"Object"},{"name":"config","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-getRef","owner":"Ext.app.Controller","short_doc":" ..."},{"tagname":"method","name":"getRefs","doc":"<p>Returns the value of <a href=\"#!/api/Ext.app.Controller-cfg-refs\" rel=\"Ext.app.Controller-cfg-refs\" class=\"docClass\">refs</a>.</p>\n","params":[],"return":{"type":"Object[]","doc":"\n","html_type":"Object[]"},"id":"method-getRefs","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Controller.js","linenr":405}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.app.Controller","short_doc":"Returns the value of refs. ..."},{"tagname":"method","name":"getRoutes","doc":"<p>Returns the value of <a href=\"#!/api/Ext.app.BaseController-cfg-routes\" rel=\"Ext.app.BaseController-cfg-routes\" class=\"docClass\">routes</a>.</p>\n","params":[],"return":{"type":"Object","doc":"\n","html_type":"Object"},"id":"method-getRoutes","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":195}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.app.BaseController","short_doc":"Returns the value of routes. ..."},{"tagname":"method","name":"getStore","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Controller.js","linenr":780}],"doc":"<p>Returns instance of a Store with the given name.\nWhen store doesn't exist yet, it's created.</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"\n","html_type":"String"}],"return":{"type":"Ext.data.Store","name":"return","doc":"<p>a store instance.</p>\n","properties":null,"html_type":"Ext.data.Store"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getStore","owner":"Ext.app.Controller","short_doc":"Returns instance of a Store with the given name. ..."},{"tagname":"method","name":"getView","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Controller.js","linenr":824}],"doc":"<p>Returns a View class with the given name.  To create an instance of the view,\nyou can use it like it's used by Application to create the Viewport:</p>\n\n<pre><code>this.getView('Viewport').create();\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"view","doc":"\n","html_type":"String"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>a view class.</p>\n","properties":null,"html_type":"Ext.Base"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getView","owner":"Ext.app.Controller","short_doc":"Returns a View class with the given name. ..."},{"tagname":"method","name":"getViewportName","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":434}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":434,"params":[],"chainable":false,"fires":[],"method_calls":["getAutoCreateViewport"],"id":"method-getViewportName","owner":"Ext.app.Application","short_doc":" ..."},{"tagname":"method","name":"hasRef","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Controller.js","linenr":748}],"doc":"<p>Returns <code>true</code> if a <a href=\"#!/api/Ext.app.Controller-cfg-refs\" rel=\"Ext.app.Controller-cfg-refs\" class=\"docClass\">reference</a> is registered.</p>\n","params":[{"tagname":"params","type":"String","name":"ref","doc":"<p>The name of the ref to check for.</p>\n","html_type":"String"}],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-hasRef","owner":"Ext.app.Controller","short_doc":"Returns true if a reference is registered. ..."},{"tagname":"method","name":"init","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Controller.js","linenr":634}],"doc":"<p>A template method that is called when your application boots. It is called before the\n<a href=\"#!/api/Ext.app.Application\" rel=\"Ext.app.Application\" class=\"docClass\">Application</a>'s launch function is executed so gives a hook point\nto run any code before your Viewport is created.</p>\n","params":[{"tagname":"params","type":"Ext.app.Application","name":"application","doc":"\n","html_type":"<a href=\"#!/api/Ext.app.Application\" rel=\"Ext.app.Application\" class=\"docClass\">Ext.app.Application</a>"}],"template":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-init","owner":"Ext.app.Controller","short_doc":"A template method that is called when your application boots. ..."},{"tagname":"method","name":"initAutoGetters","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Controller.js","linenr":597}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":597,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-initAutoGetters","owner":"Ext.app.Controller","short_doc":" ..."},{"tagname":"method","name":"initControllers","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":357}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":357,"params":[],"chainable":false,"fires":[],"method_calls":["getController"],"id":"method-initControllers","owner":"Ext.app.Application","short_doc":" ..."},{"tagname":"method","name":"initNamespace","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":330}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":330,"params":[],"chainable":false,"fires":[],"method_calls":["getAppProperty","getName"],"id":"method-initNamespace","owner":"Ext.app.Application","short_doc":" ..."},{"tagname":"method","name":"initQuickTips","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":445}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":445,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-initQuickTips","owner":"Ext.app.Application","short_doc":" ..."},{"tagname":"method","name":"initViewport","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":449}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":449,"params":[],"chainable":false,"fires":[],"method_calls":["getView","getViewportName"],"id":"method-initViewport","owner":"Ext.app.Application","short_doc":" ..."},{"tagname":"method","name":"isActive","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Controller.js","linenr":675}],"doc":"<p>Checks if this controller is active. See <a href=\"#!/api/Ext.app.Controller-method-activate\" rel=\"Ext.app.Controller-method-activate\" class=\"docClass\">activate</a> &amp;\n<a href=\"#!/api/Ext.app.Controller-method-deactivate\" rel=\"Ext.app.Controller-method-deactivate\" class=\"docClass\">deactivate</a>.</p>\n","return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if this controller is active.</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getActive"],"id":"method-isActive","owner":"Ext.app.Controller","overrides":[{"name":"isActive","owner":"Ext.app.BaseController","link":"<a href=\"#!/api/Ext.app.BaseController-method-isActive\" rel=\"Ext.app.BaseController-method-isActive\" class=\"docClass\">Ext.app.BaseController.isActive</a>"}],"short_doc":"Checks if this controller is active. ..."},{"tagname":"method","name":"launch","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":379}],"doc":"<p>Called automatically when the page has completely loaded. This is an empty function that should be\noverridden by each application that needs to take action on page load.</p>\n","template":true,"params":[{"tagname":"params","type":"String","name":"profile","doc":"<p>The detected application profile</p>\n","html_type":"String"}],"return":{"type":"Boolean","name":"return","doc":"<p>By default, the Application will dispatch to the configured startup controller and\naction immediately after running the launch function. Return false to prevent this behavior.</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-launch","owner":"Ext.app.Application","short_doc":"Called automatically when the page has completely loaded. ..."},{"tagname":"method","name":"listen","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":447}],"doc":"<p>Adds listeners to different event sources (also called \"event domains\"). The\nprimary event domain is that of components, but there are also other event domains:\n<a href=\"#!/api/Ext.app.domain.Global\" rel=\"Ext.app.domain.Global\" class=\"docClass\">Global</a> domain that intercepts events fired from\nExt.GlobalEvents Observable instance, <a href=\"#!/api/Ext.app.domain.Controller\" rel=\"Ext.app.domain.Controller\" class=\"docClass\">Controller</a>\ndomain can be used to listen to events fired by other Controllers,\n<a href=\"#!/api/Ext.app.domain.Store\" rel=\"Ext.app.domain.Store\" class=\"docClass\">Store</a> domain gives access to Store events, and\n<a href=\"#!/api/Ext.app.domain.Direct\" rel=\"Ext.app.domain.Direct\" class=\"docClass\">Direct</a> domain can be used with Ext.Direct Providers\nto listen to their events.</p>\n\n<p>To listen to \"bar\" events fired by a controller with id=\"foo\":</p>\n\n<pre><code> Ext.define('AM.controller.Users', {\n     init: function() {\n         this.listen({\n             controller: {\n                 '#foo': {\n                    bar: this.onFooBar\n                 }\n             }\n         });\n     },\n     ...\n });\n</code></pre>\n\n<p>To listen to \"bar\" events fired by any controller, and \"baz\" events\nfired by Store with storeId=\"baz\":</p>\n\n<pre><code> Ext.define('AM.controller.Users', {\n     init: function() {\n         this.listen({\n             controller: {\n                 '*': {\n                    bar: this.onAnyControllerBar\n                 }\n             },\n             store: {\n                 '#baz': {\n                     baz: this.onStoreBaz\n                 }\n             }\n         });\n     },\n     ...\n });\n</code></pre>\n\n<p>To listen to \"idle\" events fired by Ext.GlobalEvents when other event\nprocessing is complete and Ext JS is about to return control to the browser:</p>\n\n<pre><code> Ext.define('AM.controller.Users', {\n     init: function() {\n         this.listen({\n             global: {               // Global events are always fired\n                 idle: this.onIdle   // from the same object, so there\n             }                       // are no selectors\n         });\n     }\n });\n</code></pre>\n\n<p>As this relates to components, the following example:</p>\n\n<pre><code> Ext.define('AM.controller.Users', {\n     init: function() {\n         this.listen({\n             component: {\n                 'useredit button[action=save]': {\n                    click: this.updateUser\n                 }\n             }\n         });\n     },\n     ...\n });\n</code></pre>\n\n<p>Is equivalent to:</p>\n\n<pre><code> Ext.define('AM.controller.Users', {\n     init: function() {\n         this.control({\n             'useredit button[action=save]': {\n                click: this.updateUser\n             }\n         });\n     },\n     ...\n });\n</code></pre>\n\n<p>Of course, these can all be combined in a single call and used instead of\n<code>control</code>, like so:</p>\n\n<pre><code> Ext.define('AM.controller.Users', {\n     init: function() {\n         this.listen({\n             global: {\n                 idle: this.onIdle\n             },\n             controller: {\n                 '*': {\n                    foobar: this.onAnyFooBar\n                 },\n                 '#foo': {\n                    bar: this.onFooBar\n                 }\n             },\n             component: {\n                 'useredit button[action=save]': {\n                    click: this.updateUser\n                 }\n             },\n             store: {\n                 '#qux': {\n                     load: this.onQuxLoad\n                 }\n             }\n         });\n     },\n     ...\n });\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"to","doc":"<p>Config object containing domains, selectors and listeners.</p>\n","html_type":"Object"},{"tagname":"params","type":"Ext.app.Controller","name":"controller","optional":true,"doc":"<p>The controller to add the listeners to. Defaults to the current controller.</p>\n","html_type":"<a href=\"#!/api/Ext.app.Controller\" rel=\"Ext.app.Controller\" class=\"docClass\">Ext.app.Controller</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-listen","owner":"Ext.app.BaseController","short_doc":"Adds listeners to different event sources (also called \"event domains\"). ..."},{"tagname":"method","name":"normalizeRefs","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Controller.js","linenr":521}],"doc":"<p>Takes either an object and transforms it into an array. The following are valid refs values:</p>\n\n<pre><code>refs: {\n    myComponent: 'container'\n}\n\nrefs: {\n    myComponent: {\n        selector: 'container'\n    }\n}\n\nrefs: [\n    {\n        ref: 'myComponent',\n        selector: 'container'\n    }\n]\n</code></pre>\n","private":true,"params":[{"tagname":"params","type":"Array|Object","name":"refs","doc":"<p>The refs to normalize</p>\n","html_type":"Array|Object"},{"tagname":"params","type":"Array","name":"newRefs","doc":"<p>An array to place the normalized refs on to</p>\n","html_type":"Array"}],"return":{"type":"Array","name":"return","doc":"<p>The normalized array of refs</p>\n","properties":null,"html_type":"Array"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["normalizeRefs"],"id":"method-normalizeRefs","owner":"Ext.app.Controller","short_doc":"Takes either an object and transforms it into an array. ..."},{"tagname":"method","name":"onBeforeLaunch","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":390}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":["launch"],"method_calls":["fireEvent","getAutoCreateViewport","getDefaultToken","getEnableQuickTips","initQuickTips","initViewport","redirectTo"],"id":"method-onBeforeLaunch","owner":"Ext.app.Application","short_doc":" ..."},{"tagname":"method","name":"onClassExtended","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":233}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":233,"params":[{"name":"cls","type":"Object","html_type":"Object"},{"name":"data","type":"Object","html_type":"Object"},{"name":"hooks","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-onClassExtended","owner":"Ext.app.Application","return":null,"throws":null,"properties":null,"type":null,"overrides":[{"name":"onClassExtended","owner":"Ext.app.Controller","link":"<a href=\"#!/api/Ext.app.Controller-method-onClassExtended\" rel=\"Ext.app.Controller-method-onClassExtended\" class=\"docClass\">Ext.app.Controller.onClassExtended</a>"}],"short_doc":" ..."},{"tagname":"method","name":"onLaunch","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Controller.js","linenr":645}],"doc":"<p>A template method like <a href=\"#!/api/Ext.app.Controller-method-init\" rel=\"Ext.app.Controller-method-init\" class=\"docClass\">init</a>, but called after the viewport is created.\nThis is called after the <a href=\"#!/api/Ext.app.Application-method-launch\" rel=\"Ext.app.Application-method-launch\" class=\"docClass\">launch</a> method of Application\nis executed.</p>\n","params":[{"tagname":"params","type":"Ext.app.Application","name":"application","doc":"\n","html_type":"<a href=\"#!/api/Ext.app.Application\" rel=\"Ext.app.Application\" class=\"docClass\">Ext.app.Application</a>"}],"template":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-onLaunch","owner":"Ext.app.Controller","short_doc":"A template method like init, but called after the viewport is created. ..."},{"tagname":"method","name":"redirectTo","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":584}],"doc":"<p>Update the hash. By default, it will not execute the routes if the current token and the\ntoken passed are the same.</p>\n","params":[{"tagname":"params","type":"String","name":"token","doc":"<p>The token to update.</p>\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"force","doc":"<p>Force the update of the hash regardless of the current token.</p>\n","html_type":"Boolean"}],"return":{"type":"Boolean","name":"return","doc":"<p>Will return a<code>true</code> if the token was updated.</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-redirectTo","owner":"Ext.app.BaseController","short_doc":"Update the hash. ..."},{"tagname":"method","name":"ref","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Controller.js","linenr":684}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":684,"params":[{"name":"refs","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-ref","owner":"Ext.app.Controller","short_doc":" ..."},{"tagname":"method","name":"setActive","doc":"<p>Sets the value of <a href=\"#!/api/Ext.app.Controller-cfg-active\" rel=\"Ext.app.Controller-cfg-active\" class=\"docClass\">active</a>.</p>\n","params":[{"type":"Boolean","name":"active","doc":"<p>The new value.</p>\n","html_type":"Boolean"}],"id":"method-setActive","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Controller.js","linenr":458}],"static":null,"private":null,"inheritable":null,"linenr":458,"owner":"Ext.app.Controller","short_doc":"Sets the value of active. ..."},{"tagname":"method","name":"setAppProperty","doc":"<p>Sets the value of <a href=\"#!/api/Ext.app.Application-cfg-appProperty\" rel=\"Ext.app.Application-cfg-appProperty\" class=\"docClass\">appProperty</a>.</p>\n","params":[{"type":"String","name":"appProperty","doc":"<p>The new value.</p>\n","html_type":"String"}],"id":"method-setAppProperty","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":191}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.app.Application","short_doc":"Sets the value of appProperty. ..."},{"tagname":"method","name":"setApplication","doc":"<p>Sets the value of <a href=\"#!/api/Ext.app.Controller-cfg-application\" rel=\"Ext.app.Controller-cfg-application\" class=\"docClass\">application</a>.</p>\n","params":[{"type":"Ext.app.Application","name":"application","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Ext.app.Application\" rel=\"Ext.app.Application\" class=\"docClass\">Ext.app.Application</a>"}],"id":"method-setApplication","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Controller.js","linenr":398}],"properties":null,"readonly":true,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.app.Controller","short_doc":"Sets the value of application. ..."},{"tagname":"method","name":"setAutoCreateViewport","doc":"<p>Sets the value of <a href=\"#!/api/Ext.app.Application-cfg-autoCreateViewport\" rel=\"Ext.app.Application-cfg-autoCreateViewport\" class=\"docClass\">autoCreateViewport</a>.</p>\n","params":[{"type":"Boolean/String","name":"autoCreateViewport","doc":"<p>The new value.</p>\n","html_type":"Boolean/String"}],"id":"method-setAutoCreateViewport","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":208}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.app.Application","short_doc":"Sets the value of autoCreateViewport. ..."},{"tagname":"method","name":"setBefore","doc":"<p>Sets the value of <a href=\"#!/api/Ext.app.BaseController-cfg-before\" rel=\"Ext.app.BaseController-cfg-before\" class=\"docClass\">before</a>.</p>\n","params":[{"type":"Object","name":"before","doc":"<p>The new value.</p>\n","html_type":"Object"}],"id":"method-setBefore","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":296}],"static":null,"private":null,"inheritable":null,"linenr":296,"owner":"Ext.app.BaseController","short_doc":"Sets the value of before. ..."},{"tagname":"method","name":"setControl","doc":"<p>Sets the value of <a href=\"#!/api/Ext.app.BaseController-cfg-control\" rel=\"Ext.app.BaseController-cfg-control\" class=\"docClass\">control</a>.</p>\n","params":[{"type":"Object","name":"control","doc":"<p>The new value.</p>\n","html_type":"Object"}],"id":"method-setControl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":30}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.app.BaseController","short_doc":"Sets the value of control. ..."},{"tagname":"method","name":"setDefaultToken","doc":"<p>Sets the value of <a href=\"#!/api/Ext.app.Application-cfg-defaultToken\" rel=\"Ext.app.Application-cfg-defaultToken\" class=\"docClass\">defaultToken</a>.</p>\n","params":[{"type":"String","name":"defaultToken","doc":"<p>The new value.</p>\n","html_type":"String"}],"id":"method-setDefaultToken","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":219}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.app.Application","short_doc":"Sets the value of defaultToken. ..."},{"tagname":"method","name":"setEnableQuickTips","doc":"<p>Sets the value of <a href=\"#!/api/Ext.app.Application-cfg-enableQuickTips\" rel=\"Ext.app.Application-cfg-enableQuickTips\" class=\"docClass\">enableQuickTips</a>.</p>\n","params":[{"type":"Boolean","name":"enableQuickTips","doc":"<p>The new value.</p>\n","html_type":"Boolean"}],"id":"method-setEnableQuickTips","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":185}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.app.Application","short_doc":"Sets the value of enableQuickTips. ..."},{"tagname":"method","name":"setGlyphFontFamily","doc":"<p>Sets the value of <a href=\"#!/api/Ext.app.Application-cfg-glyphFontFamily\" rel=\"Ext.app.Application-cfg-glyphFontFamily\" class=\"docClass\">glyphFontFamily</a>.</p>\n","params":[{"type":"String","name":"glyphFontFamily","doc":"<p>The new value.</p>\n","html_type":"String"}],"id":"method-setGlyphFontFamily","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":225}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.app.Application","short_doc":"Sets the value of glyphFontFamily. ..."},{"tagname":"method","name":"setId","doc":"<p>Sets the value of <a href=\"#!/api/Ext.app.BaseController-cfg-id\" rel=\"Ext.app.BaseController-cfg-id\" class=\"docClass\">id</a>.</p>\n","params":[{"type":"String","name":"id","doc":"<p>The new value.</p>\n","html_type":"String"}],"id":"method-setId","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":24}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.app.BaseController","short_doc":"Sets the value of id. ..."},{"tagname":"method","name":"setListen","doc":"<p>Sets the value of <a href=\"#!/api/Ext.app.BaseController-cfg-listen\" rel=\"Ext.app.BaseController-cfg-listen\" class=\"docClass\">listen</a>.</p>\n","params":[{"type":"Object","name":"listen","doc":"<p>The new value.</p>\n","html_type":"Object"}],"id":"method-setListen","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":64}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.app.BaseController","short_doc":"Sets the value of listen. ..."},{"tagname":"method","name":"setModuleClassName","doc":"<p>Sets the value of <a href=\"#!/api/Ext.app.Controller-cfg-moduleClassName\" rel=\"Ext.app.Controller-cfg-moduleClassName\" class=\"docClass\">moduleClassName</a>.</p>\n","params":[{"type":"Object","name":"moduleClassName","doc":"<p>The new value.</p>\n","html_type":"Object"}],"id":"method-setModuleClassName","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Controller.js","linenr":460}],"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.app.Controller","short_doc":"Sets the value of moduleClassName. ..."},{"tagname":"method","name":"setName","doc":"<p>Sets the value of <a href=\"#!/api/Ext.app.Application-cfg-name\" rel=\"Ext.app.Application-cfg-name\" class=\"docClass\">name</a>.</p>\n","params":[{"type":"String","name":"name","doc":"<p>The new value.</p>\n","html_type":"String"}],"id":"method-setName","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":177}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.app.Application","short_doc":"Sets the value of name. ..."},{"tagname":"method","name":"setRefs","doc":"<p>Sets the value of <a href=\"#!/api/Ext.app.Controller-cfg-refs\" rel=\"Ext.app.Controller-cfg-refs\" class=\"docClass\">refs</a>.</p>\n","params":[{"type":"Object[]","name":"refs","doc":"<p>The new value.</p>\n","html_type":"Object[]"}],"id":"method-setRefs","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Controller.js","linenr":405}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.app.Controller","short_doc":"Sets the value of refs. ..."},{"tagname":"method","name":"setRoutes","doc":"<p>Sets the value of <a href=\"#!/api/Ext.app.BaseController-cfg-routes\" rel=\"Ext.app.BaseController-cfg-routes\" class=\"docClass\">routes</a>.</p>\n","params":[{"type":"Object","name":"routes","doc":"<p>The new value.</p>\n","html_type":"Object"}],"id":"method-setRoutes","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":195}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.app.BaseController","short_doc":"Sets the value of routes. ..."},{"tagname":"method","name":"unregister","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":527}],"doc":"<p>Unregister a controller from the application.</p>\n","private":true,"params":[{"tagname":"params","type":"Ext.app.Controller","name":"controller","doc":"<p>The controller to unregister</p>\n","html_type":"<a href=\"#!/api/Ext.app.Controller\" rel=\"Ext.app.Controller\" class=\"docClass\">Ext.app.Controller</a>"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-unregister","owner":"Ext.app.Application","short_doc":"Unregister a controller from the application. ..."},{"tagname":"method","name":"updateControl","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":333}],"doc":"\n","params":[{"tagname":"params","type":"Object","name":"control","doc":"<p>The object to pass to the <a href=\"#!/api/Ext.app.BaseController-method-control\" rel=\"Ext.app.BaseController-method-control\" class=\"docClass\">control</a> method</p>\n","html_type":"Object"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["control","ensureId"],"id":"method-updateControl","owner":"Ext.app.BaseController","short_doc":" ..."},{"tagname":"method","name":"updateGlyphFontFamily","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Application.js","linenr":564}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":564,"params":[{"name":"fontFamily","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-updateGlyphFontFamily","owner":"Ext.app.Application","short_doc":" ..."},{"tagname":"method","name":"updateListen","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":344}],"doc":"\n","params":[{"tagname":"params","type":"Object","name":"listen","doc":"<p>The object to pass to the <a href=\"#!/api/Ext.app.BaseController-method-listen\" rel=\"Ext.app.BaseController-method-listen\" class=\"docClass\">listen</a> method</p>\n","html_type":"Object"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["ensureId","listen"],"id":"method-updateListen","owner":"Ext.app.BaseController","short_doc":" ..."},{"tagname":"method","name":"updateRefs","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/Controller.js","linenr":587}],"doc":"\n","params":[{"tagname":"params","type":"Object","name":"refs","doc":"<p>The refs to pass to the <a href=\"#!/api/Ext.app.Controller-method-ref\" rel=\"Ext.app.Controller-method-ref\" class=\"docClass\">ref</a> method.</p>\n","html_type":"Object"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["ref"],"id":"method-updateRefs","owner":"Ext.app.Controller","short_doc":" ..."},{"tagname":"method","name":"updateRoutes","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":355}],"doc":"\n","params":[{"tagname":"params","type":"Object","name":"routes","doc":"<p>The routes to connect to the <a href=\"#!/api/Ext.app.route.Router\" rel=\"Ext.app.route.Router\" class=\"docClass\">Ext.app.route.Router</a></p>\n","html_type":"Object"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getBefore"],"id":"method-updateRoutes","owner":"Ext.app.BaseController","short_doc":" ..."}],"code_type":"ext_define","id":"class-Ext.app.Application","short_doc":"Represents an Ext JS application, which is typically a single page app using a\nViewport. ..."}