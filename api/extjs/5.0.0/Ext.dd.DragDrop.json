{"tagname":"class","name":"Ext.dd.DragDrop","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":10}],"doc":"<p>Defines the interface and base operation of items that that can be\ndragged or can be drop targets.  It was designed to be extended, overriding\nthe event handlers for startDrag, onDrag, onDragOver and onDragOut.\nUp to three html elements can be associated with a DragDrop instance:</p>\n\n<ul>\n<li><p>linked element: the element that is passed into the constructor.\nThis is the element which defines the boundaries for interaction with\nother DragDrop objects.</p></li>\n<li><p>handle element(s): The drag operation only occurs if the element that\nwas clicked matches a handle element.  By default this is the linked\nelement, but there are times that you will want only a portion of the\nlinked element to initiate the drag operation, and the setHandleElId()\nmethod provides a way to define this.</p></li>\n<li><p>drag element: this represents the element that would be moved along\nwith the cursor during a drag operation.  By default, this is the linked\nelement itself as in <a href=\"#!/api/Ext.dd.DD\" rel=\"Ext.dd.DD\" class=\"docClass\">Ext.dd.DD</a>.  setDragElId() lets you define\na separate element that would be moved, as in <a href=\"#!/api/Ext.dd.DDProxy\" rel=\"Ext.dd.DDProxy\" class=\"docClass\">Ext.dd.DDProxy</a>.</p></li>\n</ul>\n\n\n<p>This class should not be instantiated until the onload event to ensure that\nthe associated elements are available.\nThe following would define a DragDrop obj that would interact with any\nother DragDrop obj in the \"group1\" group:</p>\n\n<pre><code>dd = new <a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a>(\"div1\", \"group1\");\n</code></pre>\n\n<p>Since none of the event handlers have been implemented, nothing would\nactually happen if you were to run the code above.  Normally you would\noverride this class or one of the default implementations, but you can\nalso override the methods you want on an instance of the class...</p>\n\n<pre><code>dd.onDragDrop = function(e, id) {\n    alert(\"dd was dropped on \" + id);\n}\n</code></pre>\n","aliases":{},"alternateClassNames":[],"extends":"Ext.Base","mixins":[],"requires":["Ext.dd.DragDropManager"],"uses":[],"members":[{"tagname":"property","name":"__ygDragDrop","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":218}],"doc":"<p>Internal typeof flag</p>\n","default":"true","properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"Boolean","readonly":null,"id":"property-__ygDragDrop","owner":"Ext.dd.DragDrop","short_doc":"Internal typeof flag ...","html_type":"Boolean"},{"tagname":"property","name":"_domRef","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":211}],"doc":"<p>Cached reference to the linked element</p>\n","default":null,"properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"Object","readonly":null,"id":"property-_domRef","owner":"Ext.dd.DragDrop","html_type":"Object"},{"tagname":"property","name":"available","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":300}],"doc":"<p>The available property is false until the linked dom element is accessible.</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-available","owner":"Ext.dd.DragDrop","short_doc":"The available property is false until the linked dom element is accessible. ...","html_type":"Boolean"},{"tagname":"property","name":"config","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":85}],"doc":"<p>Configuration attributes passed into the constructor</p>\n","type":"Object","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-config","owner":"Ext.dd.DragDrop","html_type":"Object"},{"tagname":"property","name":"constrainX","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":225}],"doc":"<p>Set to true when horizontal contraints are applied</p>\n","type":"Boolean","default":"false","properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-constrainX","owner":"Ext.dd.DragDrop","short_doc":"Set to true when horizontal contraints are applied ...","html_type":"Boolean"},{"tagname":"property","name":"constrainY","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":232}],"doc":"<p>Set to true when vertical contraints are applied</p>\n","type":"Boolean","default":"false","properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-constrainY","owner":"Ext.dd.DragDrop","short_doc":"Set to true when vertical contraints are applied ...","html_type":"Boolean"},{"tagname":"property","name":"defaultPadding","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":447}],"doc":"<p>Provides default constraint padding to \"constrainTo\" elements.</p>\n","type":"Object","default":"{left: 0, right: 0, top: 0, bottom: 0}","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-defaultPadding","owner":"Ext.dd.DragDrop","short_doc":"Provides default constraint padding to \"constrainTo\" elements. ...","html_type":"Object"},{"tagname":"property","name":"dragElId","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":91}],"doc":"<p>The id of the element that will be dragged.  By default this is same\nas the linked element, but could be changed to another element. Ex:\n<a href=\"#!/api/Ext.dd.DDProxy\" rel=\"Ext.dd.DDProxy\" class=\"docClass\">Ext.dd.DDProxy</a></p>\n","type":"String","default":null,"properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-dragElId","owner":"Ext.dd.DragDrop","short_doc":"The id of the element that will be dragged. ...","html_type":"String"},{"tagname":"property","name":"groups","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":156}],"doc":"<p>The group defines a logical collection of DragDrop objects that are\nrelated.  Instances only get events when interacting with other\nDragDrop object in the same group.  This lets us define multiple\ngroups using a single DragDrop subclass if we want.</p>\n\n<p>An object in the format {'group1':true, 'group2':true}</p>\n","type":"Object","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-groups","owner":"Ext.dd.DragDrop","short_doc":"The group defines a logical collection of DragDrop objects that are\nrelated. ...","html_type":"Object"},{"tagname":"property","name":"handleElId","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":100}],"doc":"<p>The ID of the element that initiates the drag operation.  By default\nthis is the linked element, but could be changed to be a child of this\nelement.  This lets us do things like only starting the drag when the\nheader element within the linked html element is clicked.</p>\n","type":"String","default":null,"properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-handleElId","owner":"Ext.dd.DragDrop","short_doc":"The ID of the element that initiates the drag operation. ...","html_type":"String"},{"tagname":"property","name":"hasOuterHandles","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":306}],"doc":"<p>By default, drags can only be initiated if the mousedown occurs in the\nregion the linked element is.  This is done in part to work around a\nbug in some browsers that mis-report the mousedown if the previous\nmouseup happened outside of the window.  This property is set to true\nif outer handles are defined. Defaults to false.</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-hasOuterHandles","owner":"Ext.dd.DragDrop","short_doc":"By default, drags can only be initiated if the mousedown occurs in the\nregion the linked element is. ...","html_type":"Boolean"},{"tagname":"property","name":"id","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":76}],"doc":"<p>The id of the element associated with this object.  This is what we\nrefer to as the \"linked element\" because the size and position of\nthis element is used to determine when the drag and drop objects have\ninteracted.</p>\n","type":"String","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-id","owner":"Ext.dd.DragDrop","short_doc":"The id of the element associated with this object. ...","html_type":"String"},{"tagname":"property","name":"ignoreSelf","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":69}],"doc":"<p>Set to false to enable a DragDrop object to fire drag events while dragging\nover its own Element. Defaults to true - DragDrop objects do not by default\nfire drag events to themselves.</p>\n","type":"Boolean","default":null,"properties":null,"id":"property-ignoreSelf","owner":"Ext.dd.DragDrop","short_doc":"Set to false to enable a DragDrop object to fire drag events while dragging\nover its own Element. ...","html_type":"Boolean"},{"tagname":"property","name":"invalidHandleClasses","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":134}],"doc":"<p>An Array of CSS class names for elements to be considered in valid as drag handles.</p>\n","type":"String[]","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-invalidHandleClasses","owner":"Ext.dd.DragDrop","html_type":"String[]"},{"tagname":"property","name":"invalidHandleIds","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":122}],"doc":"<p>An object who's property names identify the IDs of elements to be considered invalid as drag handles.\nA non-null property value identifies the ID as invalid. For example, to prevent\ndragging from being initiated on element ID \"foo\", use:</p>\n\n<pre><code>{\n    foo: true\n}\n</code></pre>\n","type":"Object","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-invalidHandleIds","owner":"Ext.dd.DragDrop","short_doc":"An object who's property names identify the IDs of elements to be considered invalid as drag handles. ...","html_type":"Object"},{"tagname":"property","name":"invalidHandleTypes","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":110}],"doc":"<p>An object who's property names identify HTML tags to be considered invalid as drag handles.\nA non-null property value identifies the tag as invalid. Defaults to the\nfollowing value which prevents drag operations from being initiated by <code>&lt;a&gt;</code> elements:</p>\n\n<pre><code>{\n    A: \"A\"\n}\n</code></pre>\n","type":"Object","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-invalidHandleTypes","owner":"Ext.dd.DragDrop","short_doc":"An object who's property names identify HTML tags to be considered invalid as drag handles. ...","html_type":"Object"},{"tagname":"property","name":"isTarget","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":196}],"doc":"<p>By default, all instances can be a drop target.  This can be disabled by\nsetting isTarget to false.</p>\n","type":"Boolean","default":"true","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-isTarget","owner":"Ext.dd.DragDrop","short_doc":"By default, all instances can be a drop target. ...","html_type":"Boolean"},{"tagname":"property","name":"locked","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":167}],"doc":"<p>Individual drag/drop instances can be locked.  This will prevent\nonmousedown start drag.</p>\n","type":"Boolean","default":"false","properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-locked","owner":"Ext.dd.DragDrop","short_doc":"Individual drag/drop instances can be locked. ...","html_type":"Boolean"},{"tagname":"property","name":"maintainOffset","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":267}],"doc":"<p>Maintain offsets when we resetconstraints.  Set to true when you want\nthe position of the element relative to its parent to stay the same\nwhen the page changes</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-maintainOffset","owner":"Ext.dd.DragDrop","short_doc":"Maintain offsets when we resetconstraints. ...","html_type":"Boolean"},{"tagname":"property","name":"maxX","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":246}],"doc":"<p>The right constraint</p>\n","type":"Number","default":"0","properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-maxX","owner":"Ext.dd.DragDrop","short_doc":"The right constraint ...","html_type":"Number"},{"tagname":"property","name":"maxY","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":260}],"doc":"<p>The down constraint</p>\n","type":"Number","default":"0","properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-maxY","owner":"Ext.dd.DragDrop","short_doc":"The down constraint ...","html_type":"Number"},{"tagname":"property","name":"minX","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":239}],"doc":"<p>The left constraint</p>\n","type":"Number","default":"0","properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-minX","owner":"Ext.dd.DragDrop","short_doc":"The left constraint ...","html_type":"Number"},{"tagname":"property","name":"minY","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":253}],"doc":"<p>The up constraint</p>\n","type":"Number","default":"0","properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-minY","owner":"Ext.dd.DragDrop","short_doc":"The up constraint ...","html_type":"Number"},{"tagname":"property","name":"moveOnly","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":182}],"doc":"<p>When set to true, other DD objects in cooperating DDGroups do not receive\nnotification events when this DD object is dragged over them.</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-moveOnly","owner":"Ext.dd.DragDrop","short_doc":"When set to true, other DD objects in cooperating DDGroups do not receive\nnotification events when this DD object is ...","html_type":"Boolean"},{"tagname":"property","name":"padding","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":203}],"doc":"<p>The padding configured for this drag and drop object for calculating\nthe drop zone intersection with this object.\nAn array containing the 4 padding values: [top, right, bottom, left]</p>\n","type":"Number[]","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-padding","owner":"Ext.dd.DragDrop","short_doc":"The padding configured for this drag and drop object for calculating\nthe drop zone intersection with this object. ...","html_type":"Number[]"},{"tagname":"property","name":"primaryButtonOnly","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":291}],"doc":"<p>By default the drag and drop instance will only respond to the primary\nbutton click (left button for a right-handed mouse).  Set to true to\nallow drag and drop to start with any mouse click that is propogated\nby the browser</p>\n","type":"Boolean","default":"true","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-primaryButtonOnly","owner":"Ext.dd.DragDrop","short_doc":"By default the drag and drop instance will only respond to the primary\nbutton click (left button for a right-handed m...","html_type":"Boolean"},{"tagname":"property","name":"startPageX","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":140}],"doc":"<p>The linked element's absolute X position at the time the drag was\nstarted</p>\n","type":"Number","default":"0","properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-startPageX","owner":"Ext.dd.DragDrop","short_doc":"The linked element's absolute X position at the time the drag was\nstarted ...","html_type":"Number"},{"tagname":"property","name":"startPageY","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":148}],"doc":"<p>The linked element's absolute X position at the time the drag was\nstarted</p>\n","type":"Number","default":"0","properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-startPageY","owner":"Ext.dd.DragDrop","short_doc":"The linked element's absolute X position at the time the drag was\nstarted ...","html_type":"Number"},{"tagname":"property","name":"triggerEvent","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":316}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":316,"type":"String","default":"'mousedown'","readonly":null,"id":"property-triggerEvent","owner":"Ext.dd.DragDrop","short_doc":" ...","html_type":"String"},{"tagname":"property","name":"xTicks","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":275}],"doc":"<p>Array of pixel locations the element will snap to if we specified a\nhorizontal graduation/interval.  This array is generated automatically\nwhen you define a tick interval.</p>\n","type":"Number[]","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-xTicks","owner":"Ext.dd.DragDrop","short_doc":"Array of pixel locations the element will snap to if we specified a\nhorizontal graduation/interval. ...","html_type":"Number[]"},{"tagname":"property","name":"yTicks","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":283}],"doc":"<p>Array of pixel locations the element will snap to if we specified a\nvertical graduation/interval.  This array is generated automatically\nwhen you define a tick interval.</p>\n","type":"Number[]","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-yTicks","owner":"Ext.dd.DragDrop","short_doc":"Array of pixel locations the element will snap to if we specified a\nvertical graduation/interval. ...","html_type":"Number[]"},{"tagname":"method","name":"constructor","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":51}],"doc":"<p>Creates new DragDrop.</p>\n","params":[{"tagname":"params","type":"String","name":"id","doc":"<p>of the element that is linked to this instance</p>\n","html_type":"String"},{"tagname":"params","type":"String","name":"sGroup","doc":"<p>the group of related DragDrop objects</p>\n","html_type":"String"},{"tagname":"params","type":"Object","name":"config","doc":"<p>an object containing configurable attributes.\nValid properties for DragDrop:</p>\n\n<ul>\n<li>padding</li>\n<li>isTarget</li>\n<li>maintainOffset</li>\n<li>primaryButtonOnly</li>\n</ul>\n\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["init"],"id":"method-constructor","owner":"Ext.dd.DragDrop","return":{"type":"Ext.dd.DragDrop","doc":"\n","html_type":"<a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a>"},"short_doc":"Creates new DragDrop. ..."},{"tagname":"method","name":"addInvalidHandleClass","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":852}],"doc":"<p>Lets you specify a css class of elements that will not initiate a drag</p>\n","params":[{"tagname":"params","type":"String","name":"cssClass","doc":"<p>the class of the elements you wish to ignore</p>\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-addInvalidHandleClass","owner":"Ext.dd.DragDrop","short_doc":"Lets you specify a css class of elements that will not initiate a drag ..."},{"tagname":"method","name":"addInvalidHandleId","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":839}],"doc":"<p>Lets you to specify an element id for a child of a drag handle\nthat should not initiate a drag</p>\n","params":[{"tagname":"params","type":"String","name":"id","doc":"<p>the element id of the element you wish to ignore</p>\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-addInvalidHandleId","owner":"Ext.dd.DragDrop","short_doc":"Lets you to specify an element id for a child of a drag handle\nthat should not initiate a drag ..."},{"tagname":"method","name":"addInvalidHandleType","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":827}],"doc":"<p>Allows you to specify a tag name that should not start a drag operation\nwhen clicked.  This is designed to facilitate embedding links within a\ndrag handle that do something other than start the drag.</p>\n","params":[{"tagname":"params","type":"String","name":"tagName","doc":"<p>the type of element to exclude</p>\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-addInvalidHandleType","owner":"Ext.dd.DragDrop","short_doc":"Allows you to specify a tag name that should not start a drag operation\nwhen clicked. ..."},{"tagname":"method","name":"addToGroup","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":691}],"doc":"<p>Adds this instance to a group of related drag/drop objects.  All\ninstances belong to at least one group, and can belong to as many\ngroups as needed.</p>\n","params":[{"tagname":"params","type":"String","name":"sGroup","doc":"<p>the name of the group</p>\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-addToGroup","owner":"Ext.dd.DragDrop","short_doc":"Adds this instance to a group of related drag/drop objects. ..."},{"tagname":"method","name":"applyConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":601}],"doc":"<p>Applies the configuration parameters that were passed into the constructor.\nThis is supposed to happen at each level through the inheritance chain.  So\na DDProxy implentation will execute apply config on DDProxy, DD, and\nDragDrop in order to get all of the parameters that are available in\neach object.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-applyConfig","owner":"Ext.dd.DragDrop","short_doc":"Applies the configuration parameters that were passed into the constructor. ..."},{"tagname":"method","name":"b4Drag","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":332}],"doc":"<p>Code that executes immediately before the onDrag event</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"e","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-b4Drag","owner":"Ext.dd.DragDrop","short_doc":"Code that executes immediately before the onDrag event ..."},{"tagname":"method","name":"b4DragDrop","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":386}],"doc":"<p>Code that executes immediately before the onDragDrop event</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"e","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-b4DragDrop","owner":"Ext.dd.DragDrop","short_doc":"Code that executes immediately before the onDragDrop event ..."},{"tagname":"method","name":"b4DragOut","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":371}],"doc":"<p>Code that executes immediately before the onDragOut event</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"e","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-b4DragOut","owner":"Ext.dd.DragDrop","short_doc":"Code that executes immediately before the onDragOut event ..."},{"tagname":"method","name":"b4DragOver","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":355}],"doc":"<p>Code that executes immediately before the onDragOver event</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"e","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-b4DragOver","owner":"Ext.dd.DragDrop","short_doc":"Code that executes immediately before the onDragOver event ..."},{"tagname":"method","name":"b4EndDrag","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":409}],"doc":"<p>Code that executes immediately before the endDrag event</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"e","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-b4EndDrag","owner":"Ext.dd.DragDrop","short_doc":"Code that executes immediately before the endDrag event ..."},{"tagname":"method","name":"b4MouseDown","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":421}],"doc":"<p>Code executed immediately before the onMouseDown event</p>\n","params":[{"tagname":"params","type":"Event","name":"e","doc":"<p>the mousedown event</p>\n","html_type":"Event"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-b4MouseDown","owner":"Ext.dd.DragDrop","short_doc":"Code executed immediately before the onMouseDown event ..."},{"tagname":"method","name":"b4StartDrag","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":318}],"doc":"<p>Code that executes immediately before the startDrag event</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"x","type":"Object","html_type":"Object"},{"name":"y","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-b4StartDrag","owner":"Ext.dd.DragDrop","short_doc":"Code that executes immediately before the startDrag event ..."},{"tagname":"method","name":"clearConstraints","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":1001}],"doc":"<p>Clears any constraints applied to this instance.  Also clears ticks\nsince they can't exist independent of a constraint at this time.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["clearTicks"],"id":"method-clearConstraints","owner":"Ext.dd.DragDrop","short_doc":"Clears any constraints applied to this instance. ..."},{"tagname":"method","name":"clearTicks","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":1011}],"doc":"<p>Clears any tick interval defined for this instance</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-clearTicks","owner":"Ext.dd.DragDrop","short_doc":"Clears any tick interval defined for this instance ..."},{"tagname":"method","name":"clickValidator","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":820}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":820,"params":[{"name":"e","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["isValidHandleChild"],"id":"method-clickValidator","owner":"Ext.dd.DragDrop","short_doc":" ..."},{"tagname":"method","name":"constrainTo","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":458}],"doc":"<p>Initializes the drag drop object's constraints to restrict movement to a certain element.</p>\n\n<p>Usage:</p>\n\n<pre><code>var dd = new <a href=\"#!/api/Ext.dd.DDProxy\" rel=\"Ext.dd.DDProxy\" class=\"docClass\">Ext.dd.DDProxy</a>(\"dragDiv1\", \"proxytest\",\n               { dragElId: \"existingProxyDiv\" });\ndd.startDrag = function(){\n    this.constrainTo(\"parent-id\");\n};\n</code></pre>\n\n<p>Or you can initalize it using the Ext.dom.Element object:</p>\n\n<pre><code>Ext.get(\"dragDiv1\").initDDProxy(\"proxytest\", {dragElId: \"existingProxyDiv\"}, {\n    startDrag : function(){\n        this.constrainTo(\"parent-id\");\n    }\n});\n</code></pre>\n","params":[{"tagname":"params","type":"String/HTMLElement/Ext.dom.Element","name":"constrainTo","doc":"<p>The element or element ID to constrain to.</p>\n","html_type":"String/HTMLElement/Ext.dom.Element"},{"tagname":"params","type":"Object/Number","name":"pad","optional":true,"doc":"<p>Pad provides a way to specify \"padding\" of the constraints,\nand can be either a number for symmetrical padding (4 would be equal to <code>{left:4, right:4, top:4, bottom:4}</code>) or\nan object containing the sides to pad. For example: <code>{right:10, bottom:10}</code></p>\n","html_type":"Object/Number"},{"tagname":"params","type":"Boolean","name":"inContent","optional":true,"doc":"<p>Constrain the draggable in the content box of the element (inside padding and borders)</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getEl","resetConstraints","setXConstraint","setYConstraint"],"id":"method-constrainTo","owner":"Ext.dd.DragDrop","short_doc":"Initializes the drag drop object's constraints to restrict movement to a certain element. ..."},{"tagname":"method","name":"destroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":773}],"doc":"<p>Destroy this DragDrop instance</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["unreg"],"id":"method-destroy","owner":"Ext.dd.DragDrop","short_doc":"Destroy this DragDrop instance ..."},{"tagname":"method","name":"endDrag","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":415}],"doc":"<p>Called when we are done dragging the object</p>\n","params":[{"tagname":"params","type":"Event","name":"e","doc":"<p>the mouseup event</p>\n","html_type":"Event"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-endDrag","owner":"Ext.dd.DragDrop","short_doc":"Called when we are done dragging the object ..."},{"tagname":"method","name":"getDragEl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":530}],"doc":"<p>Returns a reference to the actual element to drag.  By default this is\nthe same as the html element, but it can be assigned to another\nelement. An example of this can be found in <a href=\"#!/api/Ext.dd.DDProxy\" rel=\"Ext.dd.DDProxy\" class=\"docClass\">Ext.dd.DDProxy</a></p>\n","return":{"type":"HTMLElement","name":"return","doc":"<p>the html element</p>\n\n","properties":null,"html_type":"HTMLElement"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getDragEl","owner":"Ext.dd.DragDrop","short_doc":"Returns a reference to the actual element to drag. ..."},{"tagname":"method","name":"getEl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":518}],"doc":"<p>Returns a reference to the linked element</p>\n","return":{"type":"HTMLElement","name":"return","doc":"<p>the html element</p>\n","properties":null,"html_type":"HTMLElement"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getEl","owner":"Ext.dd.DragDrop","short_doc":"Returns a reference to the linked element ..."},{"tagname":"method","name":"getTick","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":1073}],"doc":"<p>Normally the drag element is moved pixel by pixel, but we can specify\nthat it move a number of pixels at a time.  This method resolves the\nlocation when we have it set up like this.</p>\n","params":[{"tagname":"params","type":"Number","name":"val","doc":"<p>where we want to place the object</p>\n","html_type":"Number"},{"tagname":"params","type":"Number[]","name":"tickArray","doc":"<p>sorted array of valid points</p>\n","html_type":"Number[]"}],"return":{"type":"Number","name":"return","doc":"<p>the closest tick</p>\n","properties":null,"html_type":"Number"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getTick","owner":"Ext.dd.DragDrop","short_doc":"Normally the drag element is moved pixel by pixel, but we can specify\nthat it move a number of pixels at a time. ..."},{"tagname":"method","name":"handleMouseDown","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":791}],"doc":"<p>Called when this object is clicked</p>\n","params":[{"tagname":"params","type":"Event","name":"e","doc":"\n","html_type":"Event"},{"tagname":"params","type":"Ext.dd.DragDrop","name":"oDD","doc":"<p>the clicked dd object (this dd obj)</p>\n\n","html_type":"<a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a>"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["b4MouseDown","clickValidator","isLocked","onMouseDown","setStartPosition"],"id":"method-handleMouseDown","owner":"Ext.dd.DragDrop","short_doc":"Called when this object is clicked ..."},{"tagname":"method","name":"handleOnAvailable","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":618}],"doc":"<p>Executed when the linked element is available</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["onAvailable","resetConstraints"],"id":"method-handleOnAvailable","owner":"Ext.dd.DragDrop","short_doc":"Executed when the linked element is available ..."},{"tagname":"method","name":"init","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":540}],"doc":"<p>Sets up the DragDrop object.  Must be called in the constructor of any\n<a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a> subclass</p>\n","params":[{"tagname":"params","type":"String","name":"id","doc":"<p>the id of the linked element</p>\n","html_type":"String"},{"tagname":"params","type":"String","name":"sGroup","doc":"<p>the group of related items</p>\n","html_type":"String"},{"tagname":"params","type":"Object","name":"config","doc":"<p>configuration attributes</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["initTarget"],"id":"method-init","owner":"Ext.dd.DragDrop","short_doc":"Sets up the DragDrop object. ..."},{"tagname":"method","name":"initTarget","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":556}],"doc":"<p>Initializes Targeting functionality only... the object does not\nget a mousedown handler.</p>\n","params":[{"tagname":"params","type":"String","name":"id","doc":"<p>the id of the linked element</p>\n","html_type":"String"},{"tagname":"params","type":"String","name":"sGroup","doc":"<p>the group of related items</p>\n","html_type":"String"},{"tagname":"params","type":"Object","name":"config","doc":"<p>configuration attributes</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["addToGroup","applyConfig","handleOnAvailable","setDragElId"],"id":"method-initTarget","owner":"Ext.dd.DragDrop","short_doc":"Initializes Targeting functionality only... ..."},{"tagname":"method","name":"isLocked","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":781}],"doc":"<p>Returns true if this instance is locked, or the drag drop mgr is locked\n(meaning that all drag/drop is disabled on the page.)</p>\n","return":{"type":"Boolean","name":"return","doc":"<p>true if this obj or all drag/drop is locked, else\nfalse</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-isLocked","owner":"Ext.dd.DragDrop","short_doc":"Returns true if this instance is locked, or the drag drop mgr is locked\n(meaning that all drag/drop is disabled on th..."},{"tagname":"method","name":"isValidHandleChild","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":894}],"doc":"<p>Checks the tag exclusion list to see if this click should be ignored</p>\n","params":[{"tagname":"params","type":"HTMLElement","name":"node","doc":"<p>the HTMLElement to evaluate</p>\n","html_type":"HTMLElement"}],"return":{"type":"Boolean","name":"return","doc":"<p>true if this is a valid tag type, false if not</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-isValidHandleChild","owner":"Ext.dd.DragDrop","short_doc":"Checks the tag exclusion list to see if this click should be ignored ..."},{"tagname":"method","name":"lock","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":175}],"doc":"<p>Locks this instance</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-lock","owner":"Ext.dd.DragDrop","short_doc":"Locks this instance ..."},{"tagname":"method","name":"onAvailable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":440}],"doc":"<p>Override the onAvailable method to do what is needed after the initial\nposition was determined.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-onAvailable","owner":"Ext.dd.DragDrop","short_doc":"Override the onAvailable method to do what is needed after the initial\nposition was determined. ..."},{"tagname":"method","name":"onDrag","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":338}],"doc":"<p>Abstract method called during the onMouseMove event while dragging an\nobject.</p>\n","params":[{"tagname":"params","type":"Event","name":"e","doc":"<p>the mousemove event</p>\n","html_type":"Event"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-onDrag","owner":"Ext.dd.DragDrop","short_doc":"Abstract method called during the onMouseMove event while dragging an\nobject. ..."},{"tagname":"method","name":"onDragDrop","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":392}],"doc":"<p>Abstract method called when this item is dropped on another DragDrop\nobj</p>\n","params":[{"tagname":"params","type":"Event","name":"e","doc":"<p>the mouseup event</p>\n","html_type":"Event"},{"tagname":"params","type":"String/Ext.dd.DragDrop[]","name":"id","doc":"<p>In POINT mode, the element\nid this was dropped on.  In INTERSECT mode, an array of dd items this\nwas dropped on.</p>\n","html_type":"String/<a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a>[]"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-onDragDrop","owner":"Ext.dd.DragDrop","short_doc":"Abstract method called when this item is dropped on another DragDrop\nobj ..."},{"tagname":"method","name":"onDragEnter","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":345}],"doc":"<p>Abstract method called when this element fist begins hovering over\nanother DragDrop obj</p>\n","params":[{"tagname":"params","type":"Event","name":"e","doc":"<p>the mousemove event</p>\n","html_type":"Event"},{"tagname":"params","type":"String/Ext.dd.DragDrop[]","name":"id","doc":"<p>In POINT mode, the element\nid this is hovering over.  In INTERSECT mode, an array of one or more\ndragdrop items being hovered over.</p>\n","html_type":"String/<a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a>[]"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-onDragEnter","owner":"Ext.dd.DragDrop","short_doc":"Abstract method called when this element fist begins hovering over\nanother DragDrop obj ..."},{"tagname":"method","name":"onDragOut","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":377}],"doc":"<p>Abstract method called when we are no longer hovering over an element</p>\n","params":[{"tagname":"params","type":"Event","name":"e","doc":"<p>the mousemove event</p>\n","html_type":"Event"},{"tagname":"params","type":"String/Ext.dd.DragDrop[]","name":"id","doc":"<p>In POINT mode, the element\nid this was hovering over.  In INTERSECT mode, an array of dd items\nthat the mouse is no longer over.</p>\n","html_type":"String/<a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a>[]"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-onDragOut","owner":"Ext.dd.DragDrop","short_doc":"Abstract method called when we are no longer hovering over an element ..."},{"tagname":"method","name":"onDragOver","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":361}],"doc":"<p>Abstract method called when this element is hovering over another\nDragDrop obj</p>\n","params":[{"tagname":"params","type":"Event","name":"e","doc":"<p>the mousemove event</p>\n","html_type":"Event"},{"tagname":"params","type":"String/Ext.dd.DragDrop[]","name":"id","doc":"<p>In POINT mode, the element\nid this is hovering over.  In INTERSECT mode, an array of dd items\nbeing hovered over.</p>\n","html_type":"String/<a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a>[]"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-onDragOver","owner":"Ext.dd.DragDrop","short_doc":"Abstract method called when this element is hovering over another\nDragDrop obj ..."},{"tagname":"method","name":"onInvalidDrop","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":402}],"doc":"<p>Abstract method called when this item is dropped on an area with no\ndrop target</p>\n","params":[{"tagname":"params","type":"Event","name":"e","doc":"<p>the mouseup event</p>\n","html_type":"Event"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-onInvalidDrop","owner":"Ext.dd.DragDrop","short_doc":"Abstract method called when this item is dropped on an area with no\ndrop target ..."},{"tagname":"method","name":"onMouseDown","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":428}],"doc":"<p>Called when a drag/drop obj gets a mousedown</p>\n","params":[{"tagname":"params","type":"Event","name":"e","doc":"<p>the mousedown event</p>\n","html_type":"Event"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-onMouseDown","owner":"Ext.dd.DragDrop","short_doc":"Called when a drag/drop obj gets a mousedown ..."},{"tagname":"method","name":"onMouseUp","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":434}],"doc":"<p>Called when a drag/drop obj gets a mouseup</p>\n","params":[{"tagname":"params","type":"Event","name":"e","doc":"<p>the mouseup event</p>\n","html_type":"Event"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-onMouseUp","owner":"Ext.dd.DragDrop","short_doc":"Called when a drag/drop obj gets a mouseup ..."},{"tagname":"method","name":"removeFromGroup","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":702}],"doc":"<p>Removes this instance from the supplied interaction group</p>\n","params":[{"tagname":"params","type":"String","name":"sGroup","doc":"<p>The group to drop</p>\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-removeFromGroup","owner":"Ext.dd.DragDrop","short_doc":"Removes this instance from the supplied interaction group ..."},{"tagname":"method","name":"removeInvalidHandleClass","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":881}],"doc":"<p>Unsets an invalid css class</p>\n","params":[{"tagname":"params","type":"String","name":"cssClass","doc":"<p>the class of the element(s) you wish to\nre-enable</p>\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-removeInvalidHandleClass","owner":"Ext.dd.DragDrop","short_doc":"Unsets an invalid css class ..."},{"tagname":"method","name":"removeInvalidHandleId","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":870}],"doc":"<p>Unsets an invalid handle id</p>\n","params":[{"tagname":"params","type":"String","name":"id","doc":"<p>the id of the element to re-enable</p>\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-removeInvalidHandleId","owner":"Ext.dd.DragDrop","short_doc":"Unsets an invalid handle id ..."},{"tagname":"method","name":"removeInvalidHandleType","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":860}],"doc":"<p>Unsets an excluded tag name set by addInvalidHandleType</p>\n","params":[{"tagname":"params","type":"String","name":"tagName","doc":"<p>the type of element to unexclude</p>\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-removeInvalidHandleType","owner":"Ext.dd.DragDrop","short_doc":"Unsets an excluded tag name set by addInvalidHandleType ..."},{"tagname":"method","name":"resetConstraints","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":1042}],"doc":"<p>Must be called if you manually reposition a dd element.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"maintainOffset","doc":"\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["setInitPosition","setXConstraint","setYConstraint"],"id":"method-resetConstraints","owner":"Ext.dd.DragDrop","short_doc":"Must be called if you manually reposition a dd element. ..."},{"tagname":"method","name":"setDragElId","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":714}],"doc":"<p>Allows you to specify that an element other than the linked element\nwill be moved with the cursor during a drag</p>\n","params":[{"tagname":"params","type":"String","name":"id","doc":"<p>the id of the element that will be used to initiate the drag</p>\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-setDragElId","owner":"Ext.dd.DragDrop","short_doc":"Allows you to specify that an element other than the linked element\nwill be moved with the cursor during a drag ..."},{"tagname":"method","name":"setHandleElId","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":723}],"doc":"<p>Allows you to specify a child of the linked element that should be\nused to initiate the drag operation.  An example of this would be if\nyou have a content div with text and links.  Clicking anywhere in the\ncontent area would normally start the drag operation.  Use this method\nto specify that an element inside of the content div is the element\nthat starts the drag operation.</p>\n","params":[{"tagname":"params","type":"String","name":"id","doc":"<p>the id of the element that will be used to\ninitiate the drag.</p>\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-setHandleElId","owner":"Ext.dd.DragDrop","short_doc":"Allows you to specify a child of the linked element that should be\nused to initiate the drag operation. ..."},{"tagname":"method","name":"setInitPosition","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":650}],"doc":"<p>Stores the initial placement of the linked element.</p>\n","params":[{"tagname":"params","type":"Number","name":"diffX","doc":"<p>the X offset, default 0</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"diffY","doc":"<p>the Y offset, default 0</p>\n","html_type":"Number"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getEl","setStartPosition"],"id":"method-setInitPosition","owner":"Ext.dd.DragDrop","short_doc":"Stores the initial placement of the linked element. ..."},{"tagname":"method","name":"setOuterHandleElId","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":741}],"doc":"<p>Allows you to set an element outside of the linked element as a drag\nhandle</p>\n","params":[{"tagname":"params","type":"String","name":"id","doc":"<p>the id of the element that will be used to initiate the drag</p>\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["setHandleElId"],"id":"method-setOuterHandleElId","owner":"Ext.dd.DragDrop","short_doc":"Allows you to set an element outside of the linked element as a drag\nhandle ..."},{"tagname":"method","name":"setPadding","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":628}],"doc":"<p>Configures the padding for the target zone in px.  Effectively expands\n(or reduces) the virtual object size for targeting calculations.\nSupports css-style shorthand; if only one parameter is passed, all sides\nwill have that padding, and if only two are passed, the top and bottom\nwill have the first param, the left and right the second.</p>\n","params":[{"tagname":"params","type":"Number","name":"iTop","doc":"<p>Top pad</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"iRight","doc":"<p>Right pad</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"iBot","doc":"<p>Bot pad</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"iLeft","doc":"<p>Left pad</p>\n","html_type":"Number"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-setPadding","owner":"Ext.dd.DragDrop","short_doc":"Configures the padding for the target zone in px. ..."},{"tagname":"method","name":"setStartPosition","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":677}],"doc":"<p>Sets the start position of the element.  This is set when the obj\nis initialized, the reset when a drag is started.</p>\n","params":[{"tagname":"params","name":"pos","doc":"<p>current position (from previous lookup)</p>\n","type":"Object","html_type":"Object"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getEl"],"id":"method-setStartPosition","owner":"Ext.dd.DragDrop","short_doc":"Sets the start position of the element. ..."},{"tagname":"method","name":"setXConstraint","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":980}],"doc":"<p>By default, the element can be dragged any place on the screen.  Use\nthis method to limit the horizontal travel of the element.  Pass in\n0,0 for the parameters if you want to lock the drag to the y axis.</p>\n","params":[{"tagname":"params","type":"Number","name":"iLeft","doc":"<p>the number of pixels the element can move to the left</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"iRight","doc":"<p>the number of pixels the element can move to the\nright</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"iTickSize","optional":true,"doc":"<p>parameter for specifying that the\nelement should move iTickSize pixels at a time.</p>\n","html_type":"Number"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["setXTicks"],"id":"method-setXConstraint","owner":"Ext.dd.DragDrop","short_doc":"By default, the element can be dragged any place on the screen. ..."},{"tagname":"method","name":"setXTicks","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":922}],"doc":"<p>Creates the array of horizontal tick marks if an interval was specified\nin setXConstraint().</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"iStartX","type":"Object","html_type":"Object"},{"name":"iTickSize","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-setXTicks","owner":"Ext.dd.DragDrop","short_doc":"Creates the array of horizontal tick marks if an interval was specified\nin setXConstraint(). ..."},{"tagname":"method","name":"setYConstraint","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":1021}],"doc":"<p>By default, the element can be dragged any place on the screen.  Set\nthis to limit the vertical travel of the element.  Pass in 0,0 for the\nparameters if you want to lock the drag to the x axis.</p>\n","params":[{"tagname":"params","type":"Number","name":"iUp","doc":"<p>the number of pixels the element can move up</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"iDown","doc":"<p>the number of pixels the element can move down</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"iTickSize","optional":true,"doc":"<p>parameter for specifying that the\nelement should move iTickSize pixels at a time.</p>\n","html_type":"Number"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["setYTicks"],"id":"method-setYConstraint","owner":"Ext.dd.DragDrop","short_doc":"By default, the element can be dragged any place on the screen. ..."},{"tagname":"method","name":"setYTicks","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":951}],"doc":"<p>Creates the array of vertical tick marks if an interval was specified in\nsetYConstraint().</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"iStartY","type":"Object","html_type":"Object"},{"name":"iTickSize","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-setYTicks","owner":"Ext.dd.DragDrop","short_doc":"Creates the array of vertical tick marks if an interval was specified in\nsetYConstraint(). ..."},{"tagname":"method","name":"startDrag","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":324}],"doc":"<p>Abstract method called after a drag/drop object is clicked\nand the drag or mousedown time thresholds have beeen met.</p>\n","params":[{"tagname":"params","type":"Number","name":"x","doc":"<p>X click location</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"y","doc":"<p>Y click location</p>\n","html_type":"Number"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-startDrag","owner":"Ext.dd.DragDrop","short_doc":"Abstract method called after a drag/drop object is clicked\nand the drag or mousedown time thresholds have beeen met. ..."},{"tagname":"method","name":"toString","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":1108}],"doc":"<p>toString method</p>\n","return":{"type":"String","name":"return","doc":"<p>string representation of the dd obj</p>\n\n\n\n","properties":null,"html_type":"String"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-toString","owner":"Ext.dd.DragDrop","short_doc":"toString method ..."},{"tagname":"method","name":"unlock","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":189}],"doc":"<p>Unlocks this instace</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-unlock","owner":"Ext.dd.DragDrop","short_doc":"Unlocks this instace ..."},{"tagname":"method","name":"unreg","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":756}],"doc":"<p>Removes all drag and drop hooks for this element</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-unreg","owner":"Ext.dd.DragDrop","short_doc":"Removes all drag and drop hooks for this element ..."}],"code_type":"ext_define","id":"class-Ext.dd.DragDrop","short_doc":"Defines the interface and base operation of items that that can be\ndragged or can be drop targets. ..."}