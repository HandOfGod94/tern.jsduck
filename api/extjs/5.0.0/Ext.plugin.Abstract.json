{"tagname":"class","name":"Ext.plugin.Abstract","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/plugin/Abstract.js","linenr":1}],"doc":"<p>The AbstractPlugin class is the base class from which user-implemented plugins should inherit.</p>\n\n<p>This class defines the essential API of plugins as used by Components by defining the following methods:</p>\n\n<ul>\n<li><p><code>init</code> : The plugin initialization method which the owning Component calls at Component initialization time.</p>\n\n<p>The Component passes itself as the sole parameter.</p>\n\n<p>Subclasses should set up bidirectional links between the plugin and its client Component here.</p></li>\n<li><p><code>destroy</code> : The plugin cleanup method which the owning Component calls at Component destruction time.</p>\n\n<p>Use this method to break links between the plugin and the Component and to free any allocated resources.</p></li>\n<li><p><code>enable</code> : The base implementation just sets the plugin's <code>disabled</code> flag to <code>false</code></p></li>\n<li><p><code>disable</code> : The base implementation just sets the plugin's <code>disabled</code> flag to <code>true</code></p></li>\n</ul>\n\n","aliases":{},"alternateClassNames":["Ext.AbstractPlugin"],"extends":"Ext.Base","mixins":[],"requires":[],"uses":[],"members":[{"tagname":"cfg","name":"pluginId","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/plugin/Abstract.js","linenr":70}],"doc":"<p>A name for the plugin that can be set at creation time to then retrieve the plugin\nthrough <a href=\"#!/api/Ext.Component-method-getPlugin\" rel=\"Ext.Component-method-getPlugin\" class=\"docClass\">getPlugin</a> method.  For example:</p>\n\n<pre><code>var grid = Ext.create('<a href=\"#!/api/Ext.grid.Panel\" rel=\"Ext.grid.Panel\" class=\"docClass\">Ext.grid.Panel</a>', {\n    plugins: [{\n        ptype: 'cellediting',\n        clicksToEdit: 2,\n        pluginId: 'cellplugin'\n    }]\n});\n\n// later on:\nvar plugin = grid.getPlugin('cellplugin');\n</code></pre>\n","type":"String","default":null,"properties":null,"id":"cfg-pluginId","owner":"Ext.plugin.Abstract","short_doc":"A name for the plugin that can be set at creation time to then retrieve the plugin\nthrough getPlugin method. ...","html_type":"String"},{"tagname":"cfg","name":"stateEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/plugin/Abstract.js","linenr":31}],"doc":"<p>The configured list of stateEvents used to (optionally) participate in Owner Component's state management.</p>\n","type":"String|Array","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-stateEvents","owner":"Ext.plugin.Abstract","html_type":"String|Array"},{"tagname":"property","name":"disabled","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/plugin/Abstract.js","linenr":23}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":23,"type":"Boolean","default":"false","readonly":null,"id":"property-disabled","owner":"Ext.plugin.Abstract","short_doc":" ...","html_type":"Boolean"},{"tagname":"property","name":"isPlugin","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/plugin/Abstract.js","linenr":25}],"doc":"<p><code>true</code> in this class to identify an object as an instantiated Plugin, or subclass thereof.</p>\n","type":"Boolean","default":"true","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-isPlugin","owner":"Ext.plugin.Abstract","short_doc":"true in this class to identify an object as an instantiated Plugin, or subclass thereof. ...","html_type":"Boolean"},{"tagname":"method","name":"constructor","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/plugin/Abstract.js","linenr":37}],"doc":"<p>Instantiates the plugin.</p>\n","params":[{"tagname":"params","type":"Object","name":"config","optional":true,"doc":"<p>Configuration object.</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-constructor","owner":"Ext.plugin.Abstract","return":{"type":"Ext.plugin.Abstract","doc":"\n","html_type":"<a href=\"#!/api/Ext.plugin.Abstract\" rel=\"Ext.plugin.Abstract\" class=\"docClass\">Ext.plugin.Abstract</a>"},"short_doc":"Instantiates the plugin. ..."},{"tagname":"method","name":"applyState","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/plugin/Abstract.js","linenr":107}],"doc":"<p>The applyState method is invoked by the client Component's State mixin after initComponent method has been run for the client.</p>\n\n<p>The supplied implementation is empty. If plugin Subclasses are to (optionally) participate in the client Component's\nstate management, implementers should provide a suitable method to utilize it.</p>\n","params":[{"tagname":"params","type":"Object","name":"state","doc":"<p>The current plugin state object to be applied.</p>\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"allState","doc":"<p>The current aggregate state of the Component and all plugins.</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-applyState","owner":"Ext.plugin.Abstract","short_doc":"The applyState method is invoked by the client Component's State mixin after initComponent method has been run for th..."},{"tagname":"method","name":"clonePlugin","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/plugin/Abstract.js","linenr":46}],"doc":"<p>Creates clone of the plugin.</p>\n","params":[{"tagname":"params","type":"Object","name":"overrideCfg","optional":true,"doc":"<p>Additional config for the derived plugin.</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-clonePlugin","owner":"Ext.plugin.Abstract","short_doc":"Creates clone of the plugin. ..."},{"tagname":"method","name":"destroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/plugin/Abstract.js","linenr":118}],"doc":"<p>The destroy method is invoked by the owning Component at the time the Component is being destroyed.</p>\n\n<p>The supplied implementation is empty. Subclasses should perform plugin cleanup in their own implementation of\nthis method.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-destroy","owner":"Ext.plugin.Abstract","short_doc":"The destroy method is invoked by the owning Component at the time the Component is being destroyed. ..."},{"tagname":"method","name":"disable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/plugin/Abstract.js","linenr":136}],"doc":"<p>The base implementation just sets the plugin's <code>disabled</code> flag to <code>true</code></p>\n\n<p>Plugin subclasses which need more complex processing may implement an overriding implementation.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-disable","owner":"Ext.plugin.Abstract","short_doc":"The base implementation just sets the plugin's disabled flag to true\n\nPlugin subclasses which need more complex proce..."},{"tagname":"method","name":"enable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/plugin/Abstract.js","linenr":127}],"doc":"<p>The base implementation just sets the plugin's <code>disabled</code> flag to <code>false</code></p>\n\n<p>Plugin subclasses which need more complex processing may implement an overriding implementation.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-enable","owner":"Ext.plugin.Abstract","short_doc":"The base implementation just sets the plugin's disabled flag to false\n\nPlugin subclasses which need more complex proc..."},{"tagname":"method","name":"getCmp","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/plugin/Abstract.js","linenr":62}],"doc":"<p>Returns the component to which this plugin is attached.</p>\n","return":{"type":"Ext.Component","name":"return","doc":"<p>Owner component.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getCmp","owner":"Ext.plugin.Abstract","short_doc":"Returns the component to which this plugin is attached. ..."},{"tagname":"method","name":"getState","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/plugin/Abstract.js","linenr":97}],"doc":"<p>The getState method is invoked by the client Component's State mixin when one or more of the the specified <a href=\"#!/api/Ext.plugin.Abstract-cfg-stateEvents\" rel=\"Ext.plugin.Abstract-cfg-stateEvents\" class=\"docClass\">stateEvents</a> are raised.</p>\n\n<p>The supplied implementation is empty. If plugin Subclasses are to (optionally) participate in the client Component's\nstate management, implementers should provide a suitable method which returns a state object.</p>\n","return":{"type":"Object","name":"return","doc":"<p>state</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-getState","owner":"Ext.plugin.Abstract","short_doc":"The getState method is invoked by the client Component's State mixin when one or more of the the specified stateEvent..."},{"tagname":"method","name":"init","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/plugin/Abstract.js","linenr":87}],"doc":"<p>The init method is invoked after initComponent method has been run for the client Component.</p>\n\n<p>The supplied implementation is empty. Subclasses should perform plugin initialization, and set up bidirectional\nlinks between the plugin and its client Component in their own implementation of this method.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"client","doc":"<p>The client Component which owns this plugin.</p>\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-init","owner":"Ext.plugin.Abstract","short_doc":"The init method is invoked after initComponent method has been run for the client Component. ..."},{"tagname":"method","name":"onClassExtended","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/plugin/Abstract.js","linenr":145}],"doc":"<p>Private.\nInject a ptype property so that Component.findPlugin(ptype) works.</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[{"name":"cls","type":"Object","html_type":"Object"},{"name":"data","type":"Object","html_type":"Object"},{"name":"hooks","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-onClassExtended","owner":"Ext.plugin.Abstract","short_doc":"Private. ..."},{"tagname":"method","name":"setCmp","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/plugin/Abstract.js","linenr":54}],"doc":"<p>Sets the component to which this plugin is attached.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"cmp","doc":"<p>Owner component.</p>\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-setCmp","owner":"Ext.plugin.Abstract","short_doc":"Sets the component to which this plugin is attached. ..."}],"code_type":"ext_define","id":"class-Ext.plugin.Abstract","short_doc":"The AbstractPlugin class is the base class from which user-implemented plugins should inherit. ..."}