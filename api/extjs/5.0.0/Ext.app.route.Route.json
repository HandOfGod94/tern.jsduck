{"tagname":"class","name":"Ext.app.route.Route","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/route/Route.js","linenr":1}],"doc":"<p>Represents a mapping between a url and a controller/action pair. May also contain\nadditional params.</p>\n\n<p>This is a private internal class that should not need to be used by end-developer code.\nIts API and existence are subject to change so use at your own risk.</p>\n","author":[{"tagname":"author","name":"Mitchell Simoens","email":null}],"private":true,"aliases":{},"alternateClassNames":[],"extends":"Ext.Base","mixins":[],"requires":[],"uses":[],"members":[{"tagname":"cfg","name":"action","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/route/Route.js","linenr":12}],"doc":"<p>The name of the action that will be called on the\n<a href=\"#!/api/Ext.app.route.Route-cfg-controller\" rel=\"Ext.app.route.Route-cfg-controller\" class=\"docClass\">controller</a> if this route is matched.</p>\n","type":"String","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-action","owner":"Ext.app.route.Route","html_type":"String"},{"tagname":"cfg","name":"allowInactive","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/route/Route.js","linenr":38}],"doc":"<p><code>true</code> to allow this route to be triggered on\na controller that is not active.</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-allowInactive","owner":"Ext.app.route.Route","short_doc":"true to allow this route to be triggered on\na controller that is not active. ...","html_type":"Boolean"},{"tagname":"cfg","name":"before","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/route/Route.js","linenr":49}],"doc":"<p>An optional function to use to intercept the <a href=\"#!/api/Ext.app.route.Route-cfg-action\" rel=\"Ext.app.route.Route-cfg-action\" class=\"docClass\">action</a>\nto do extra means and possibly stop the execution. An example is if the route is\nfor editing a user and you need to verify the current user has permission you can\nsend an Ext.Ajax request to a server or some arbitrary code.</p>\n","type":"Function","default":null,"properties":null,"params":[{"tagname":"params","type":"Function","name":"callback","doc":"<p>A function that MUST be executed passing in a Boolean\nvalue to allow execution of the configured action on this <a href=\"#!/api/Ext.app.route.Route\" rel=\"Ext.app.route.Route\" class=\"docClass\">Ext.app.route.Route</a>.</p>\n\n<p>Defaults to <code>null</code></p>\n","html_type":"Function"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-before","owner":"Ext.app.route.Route","short_doc":"An optional function to use to intercept the action\nto do extra means and possibly stop the execution. ...","html_type":"Function"},{"tagname":"cfg","name":"caseInsensitive","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/route/Route.js","linenr":62}],"doc":"<p><code>true</code> to allow the tokens to be matched with\ncase-insensitive. Defaults to <code>false</code> which will force case matching.</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-caseInsensitive","owner":"Ext.app.route.Route","short_doc":"true to allow the tokens to be matched with\ncase-insensitive. ...","html_type":"Boolean"},{"tagname":"cfg","name":"conditions","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/route/Route.js","linenr":18}],"doc":"<p>Optional set of conditions for each token in the url\nstring. Each key should be one of the tokens, each value should be a regex that the\ntoken should accept. For example, if you have a Route with a url like\n<code>\"files/:fileName\"</code> and you want it to match urls like \"files/someImage.jpg\" then\nyou can set these conditions to allow the :fileName token to accept strings\ncontaining a period (\".\"):</p>\n\n<pre><code>conditions: {\n    ':fileName': \"[0-9a-zA-Z\\.]+\"\n}\n</code></pre>\n","type":"Object","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-conditions","owner":"Ext.app.route.Route","short_doc":"Optional set of conditions for each token in the url\nstring. ...","html_type":"Object"},{"tagname":"cfg","name":"controller","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/route/Route.js","linenr":32}],"doc":"<p>The name of the Controller whose <a href=\"#!/api/Ext.app.route.Route-cfg-action\" rel=\"Ext.app.route.Route-cfg-action\" class=\"docClass\">action</a> will be\ncalled if this route is matched.</p>\n","type":"String","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-controller","owner":"Ext.app.route.Route","html_type":"String"},{"tagname":"cfg","name":"url","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/route/Route.js","linenr":44}],"doc":"<p>The url regex to match against.</p>\n","type":"String","default":null,"required":true,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-url","owner":"Ext.app.route.Route","html_type":"String"},{"tagname":"property","name":"matcherRegex","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/route/Route.js","linenr":68}],"doc":"<p>A regular expression to match the token to the configured <a href=\"#!/api/Ext.app.route.Route-cfg-url\" rel=\"Ext.app.route.Route-cfg-url\" class=\"docClass\">url</a>.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"Object","default":null,"readonly":null,"id":"property-matcherRegex","owner":"Ext.app.route.Route","html_type":"Object"},{"tagname":"property","name":"paramMatchingRegex","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/route/Route.js","linenr":75}],"doc":"<p>A regular expression to check if there are parameters in the configured <a href=\"#!/api/Ext.app.route.Route-cfg-url\" rel=\"Ext.app.route.Route-cfg-url\" class=\"docClass\">url</a>.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"Object","default":null,"readonly":null,"id":"property-paramMatchingRegex","owner":"Ext.app.route.Route","html_type":"Object"},{"tagname":"property","name":"paramsInMatchString","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/route/Route.js","linenr":82}],"doc":"<p>An array of parameters in the configured <a href=\"#!/api/Ext.app.route.Route-cfg-url\" rel=\"Ext.app.route.Route-cfg-url\" class=\"docClass\">url</a>.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"Object","default":null,"readonly":null,"id":"property-paramsInMatchString","owner":"Ext.app.route.Route","html_type":"Object"},{"tagname":"method","name":"constructor","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/route/Route.js","linenr":89}],"doc":"\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":89,"params":[{"name":"config","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["createMatcherRegex"],"id":"method-constructor","owner":"Ext.app.route.Route","return":{"type":"Ext.app.route.Route","doc":"\n","html_type":"<a href=\"#!/api/Ext.app.route.Route\" rel=\"Ext.app.route.Route\" class=\"docClass\">Ext.app.route.Route</a>"},"short_doc":" ..."},{"tagname":"method","name":"createCallback","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/route/Route.js","linenr":244}],"doc":"<p>Creates the callback function to execute in the configured <a href=\"#!/api/Ext.app.route.Route-cfg-before\" rel=\"Ext.app.route.Route-cfg-before\" class=\"docClass\">before</a> function.</p>\n","private":true,"params":[{"tagname":"params","type":"Object","name":"args","doc":"<p>The arguments found from the <a href=\"#!/api/Ext.app.route.Route\" rel=\"Ext.app.route.Route\" class=\"docClass\">Ext.app.route.Route</a>'s\nrecognize call.</p>\n","html_type":"Object"},{"tagname":"params","type":"Function","name":"callback","doc":"<p>The function to be executed after the <a href=\"#!/api/Ext.app.route.Route-cfg-action\" rel=\"Ext.app.route.Route-cfg-action\" class=\"docClass\">action</a>\nhas been executed.</p>\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope to execute on the callback function, defaults to\nthe <a href=\"#!/api/Ext.app.route.Route\" rel=\"Ext.app.route.Route\" class=\"docClass\">Ext.app.route.Route</a>.</p>\n","html_type":"Object"}],"return":{"type":"Object","name":"return","doc":"<p>An object with the <code>resume</code> and <code>stop</code> methods on it to control to continue\nwith the action or not.</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-createCallback","owner":"Ext.app.route.Route","short_doc":"Creates the callback function to execute in the configured before function. ..."},{"tagname":"method","name":"createMatcherRegex","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/route/Route.js","linenr":212}],"doc":"<p>Takes the configured url string including wildcards and returns a regex that can be\nused to match against a url.</p>\n","private":true,"params":[{"tagname":"params","type":"String","name":"url","doc":"<p>The url string.</p>\n","html_type":"String"}],"return":{"type":"RegExp","name":"return","doc":"<p>The matcher regex.</p>\n","properties":null,"html_type":"RegExp"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-createMatcherRegex","owner":"Ext.app.route.Route","short_doc":"Takes the configured url string including wildcards and returns a regex that can be\nused to match against a url. ..."},{"tagname":"method","name":"execute","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/route/Route.js","linenr":146}],"doc":"<p>The method to execute the action using the configured before function which will\nkick off the actual <a href=\"#!/api/Ext.app.route.Route-cfg-action\" rel=\"Ext.app.route.Route-cfg-action\" class=\"docClass\">action</a> on the <a href=\"#!/api/Ext.app.route.Route-cfg-controller\" rel=\"Ext.app.route.Route-cfg-controller\" class=\"docClass\">controller</a>.</p>\n","private":true,"params":[{"tagname":"params","type":"String","name":"token","doc":"<p>The hash to execute with.</p>\n","html_type":"String"},{"tagname":"params","type":"Object","name":"argConfig","doc":"<p>The object from the <a href=\"#!/api/Ext.app.route.Route\" rel=\"Ext.app.route.Route\" class=\"docClass\">Ext.app.route.Route</a>'s\nrecognize method call.</p>\n","html_type":"Object"},{"tagname":"params","type":"Function","name":"callback","doc":"<p>An optional callback function to execute after the\n<a href=\"#!/api/Ext.app.route.Route-cfg-action\" rel=\"Ext.app.route.Route-cfg-action\" class=\"docClass\">action</a> is executed.</p>\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope to execute the callback with, defaults to this\n<a href=\"#!/api/Ext.app.route.Route\" rel=\"Ext.app.route.Route\" class=\"docClass\">Ext.app.route.Route</a>.</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["createCallback"],"id":"method-execute","owner":"Ext.app.route.Route","short_doc":"The method to execute the action using the configured before function which will\nkick off the actual action on the co..."},{"tagname":"method","name":"matchesFor","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/route/Route.js","linenr":188}],"doc":"<p>Returns a hash of matching url segments for the given url.</p>\n","private":true,"params":[{"tagname":"params","type":"String","name":"url","doc":"<p>The url to extract matches for</p>\n","html_type":"String"}],"return":{"type":"Object","name":"return","doc":"<p>matching url segments</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-matchesFor","owner":"Ext.app.route.Route","short_doc":"Returns a hash of matching url segments for the given url. ..."},{"tagname":"method","name":"recognize","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/route/Route.js","linenr":104}],"doc":"<p>Attempts to recognize a given url string and return controller/action pair for it.</p>\n","params":[{"tagname":"params","type":"String","name":"url","doc":"<p>The url to recognize.</p>\n","html_type":"String"}],"return":{"type":"Object/Boolean","name":"return","doc":"<p>The matched data, or <code>false</code> if no match.</p>\n","properties":null,"html_type":"Object/Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["matchesFor","recognizes"],"id":"method-recognize","owner":"Ext.app.route.Route","short_doc":"Attempts to recognize a given url string and return controller/action pair for it. ..."},{"tagname":"method","name":"recognizes","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/route/Route.js","linenr":135}],"doc":"<p>Returns true if this <a href=\"#!/api/Ext.app.route.Route\" rel=\"Ext.app.route.Route\" class=\"docClass\">Ext.app.route.Route</a> matches the given url string.</p>\n","private":true,"params":[{"tagname":"params","type":"String","name":"url","doc":"<p>The url to test.</p>\n","html_type":"String"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if this <a href=\"#!/api/Ext.app.route.Route\" rel=\"Ext.app.route.Route\" class=\"docClass\">Ext.app.route.Route</a> recognizes the url.</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-recognizes","owner":"Ext.app.route.Route","short_doc":"Returns true if this Ext.app.route.Route matches the given url string. ..."}],"code_type":"ext_define","id":"class-Ext.app.route.Route","short_doc":"Represents a mapping between a url and a controller/action pair. ..."}