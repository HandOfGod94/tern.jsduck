{"tagname":"class","name":"Ext.form.Labelable","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":1}],"doc":"<p>A mixin which allows a component to be configured and decorated with a label and/or error message as is\ncommon for form fields. This is used by e.g. <a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a> and <a href=\"#!/api/Ext.form.FieldContainer\" rel=\"Ext.form.FieldContainer\" class=\"docClass\">Ext.form.FieldContainer</a>\nto let them be managed by the Field layout.</p>\n\n<p>NOTE: This mixin is mainly for internal library use and most users should not need to use it directly. It\nis more likely you will want to use one of the component classes that import this mixin, such as\n<a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a> or <a href=\"#!/api/Ext.form.FieldContainer\" rel=\"Ext.form.FieldContainer\" class=\"docClass\">Ext.form.FieldContainer</a>.</p>\n\n<p>Use of this mixin does not make a component a field in the logical sense, meaning it does not provide any\nlogic or state related to values or validation; that is handled by the related <a href=\"#!/api/Ext.form.field.Field\" rel=\"Ext.form.field.Field\" class=\"docClass\">Ext.form.field.Field</a>\nmixin. These two mixins may be used separately (for example <a href=\"#!/api/Ext.form.FieldContainer\" rel=\"Ext.form.FieldContainer\" class=\"docClass\">Ext.form.FieldContainer</a> is Labelable but not a\nField), or in combination (for example <a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a> implements both and has logic for connecting the\ntwo.)</p>\n\n<p>Component classes which use this mixin should use the Field layout\nor a derivation thereof to properly size and position the label and message according to the component config.\nThey must also call the <a href=\"#!/api/Ext.form.Labelable-method-initLabelable\" rel=\"Ext.form.Labelable-method-initLabelable\" class=\"docClass\">initLabelable</a> method during component initialization to ensure the mixin gets\nset up correctly.</p>\n","docauthor":[{"tagname":"docauthor","name":"Jason Johnston","email":"jason@sencha.com"}],"aliases":{},"alternateClassNames":[],"extends":"Ext.Mixin","mixins":[],"requires":["Ext.XTemplate","Ext.overrides.dom.Element"],"uses":[],"members":[{"tagname":"cfg","name":"activeError","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":318}],"doc":"<p>If specified, then the component will be displayed with this value as its active error when first rendered. Use\n<a href=\"#!/api/Ext.form.Labelable-method-setActiveError\" rel=\"Ext.form.Labelable-method-setActiveError\" class=\"docClass\">setActiveError</a> or <a href=\"#!/api/Ext.form.Labelable-method-unsetActiveError\" rel=\"Ext.form.Labelable-method-unsetActiveError\" class=\"docClass\">unsetActiveError</a> to change it after component creation.</p>\n","type":"String","default":null,"properties":null,"id":"cfg-activeError","owner":"Ext.form.Labelable","short_doc":"If specified, then the component will be displayed with this value as its active error when first rendered. ...","html_type":"String"},{"tagname":"cfg","name":"activeErrorsTpl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":114}],"doc":"<p>The template used to format the Array of error messages passed to <a href=\"#!/api/Ext.form.Labelable-method-setActiveErrors\" rel=\"Ext.form.Labelable-method-setActiveErrors\" class=\"docClass\">setActiveErrors</a> into a single HTML\nstring. if the <a href=\"#!/api/Ext.form.Labelable-cfg-msgTarget\" rel=\"Ext.form.Labelable-cfg-msgTarget\" class=\"docClass\">msgTarget</a> is title, it defaults to a list separated by new lines. Otherwise, it\nrenders each message as an item in an unordered list.</p>\n","type":"String/String[]/Ext.XTemplate","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-activeErrorsTpl","owner":"Ext.form.Labelable","short_doc":"The template used to format the Array of error messages passed to setActiveErrors into a single HTML\nstring. ...","html_type":"String/String[]/Ext.XTemplate"},{"tagname":"cfg","name":"afterBodyEl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":340}],"doc":"<p>An optional string or <code>XTemplate</code> configuration to insert in the field markup\nat the end of the input containing element. If an <code>XTemplate</code> is used, the component's <a href=\"#!/api/Ext.Component-cfg-renderData\" rel=\"Ext.Component-cfg-renderData\" class=\"docClass\">render data</a>\nserves as the context.</p>\n","type":"String/Array/Ext.XTemplate","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-afterBodyEl","owner":"Ext.form.Labelable","short_doc":"An optional string or XTemplate configuration to insert in the field markup\nat the end of the input containing element. ...","html_type":"String/Array/Ext.XTemplate"},{"tagname":"cfg","name":"afterLabelTextTpl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":388}],"doc":"<p>An optional string or <code>XTemplate</code> configuration to insert in the field markup\nafter the label text. If an <code>XTemplate</code> is used, the component's <a href=\"#!/api/Ext.Component-cfg-renderData\" rel=\"Ext.Component-cfg-renderData\" class=\"docClass\">render data</a>\nserves as the context.</p>\n","type":"String/Array/Ext.XTemplate","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-afterLabelTextTpl","owner":"Ext.form.Labelable","short_doc":"An optional string or XTemplate configuration to insert in the field markup\nafter the label text. ...","html_type":"String/Array/Ext.XTemplate"},{"tagname":"cfg","name":"afterLabelTpl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":356}],"doc":"<p>An optional string or <code>XTemplate</code> configuration to insert in the field markup\nafter the label element. If an <code>XTemplate</code> is used, the component's <a href=\"#!/api/Ext.Component-cfg-renderData\" rel=\"Ext.Component-cfg-renderData\" class=\"docClass\">render data</a>\nserves as the context.</p>\n","type":"String/Array/Ext.XTemplate","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-afterLabelTpl","owner":"Ext.form.Labelable","short_doc":"An optional string or XTemplate configuration to insert in the field markup\nafter the label element. ...","html_type":"String/Array/Ext.XTemplate"},{"tagname":"cfg","name":"afterSubTpl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":372}],"doc":"<p>An optional string or <code>XTemplate</code> configuration to insert in the field markup\nafter the <a href=\"#!/api/Ext.form.Labelable-method-getSubTplMarkup\" rel=\"Ext.form.Labelable-method-getSubTplMarkup\" class=\"docClass\">subTpl markup</a>. If an <code>XTemplate</code> is used, the\ncomponent's <a href=\"#!/api/Ext.Component-cfg-renderData\" rel=\"Ext.Component-cfg-renderData\" class=\"docClass\">render data</a> serves as the context.</p>\n","type":"String/Array/Ext.XTemplate","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-afterSubTpl","owner":"Ext.form.Labelable","short_doc":"An optional string or XTemplate configuration to insert in the field markup\nafter the subTpl markup. ...","html_type":"String/Array/Ext.XTemplate"},{"tagname":"cfg","name":"autoFitErrors","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":284}],"doc":"<p>Whether to adjust the component's body width to make room for 'side'\n<a href=\"#!/api/Ext.form.Labelable-cfg-msgTarget\" rel=\"Ext.form.Labelable-cfg-msgTarget\" class=\"docClass\">error messages</a>.</p>\n","type":"Boolean","default":"true","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-autoFitErrors","owner":"Ext.form.Labelable","short_doc":"Whether to adjust the component's body width to make room for 'side'\nerror messages. ...","html_type":"Boolean"},{"tagname":"cfg","name":"baseBodyCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":184}],"doc":"<p>The CSS class to be applied to the body content element.</p>\n","type":"String","default":"Ext.baseCSSPrefix + 'form-item-body'","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-baseBodyCls","owner":"Ext.form.Labelable","short_doc":"The CSS class to be applied to the body content element. ...","html_type":"String"},{"tagname":"cfg","name":"beforeBodyEl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":332}],"doc":"<p>An optional string or <code>XTemplate</code> configuration to insert in the field markup\nat the beginning of the input containing element. If an <code>XTemplate</code> is used, the component's <a href=\"#!/api/Ext.Component-cfg-renderData\" rel=\"Ext.Component-cfg-renderData\" class=\"docClass\">render data</a>\nserves as the context.</p>\n","type":"String/Array/Ext.XTemplate","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-beforeBodyEl","owner":"Ext.form.Labelable","short_doc":"An optional string or XTemplate configuration to insert in the field markup\nat the beginning of the input containing ...","html_type":"String/Array/Ext.XTemplate"},{"tagname":"cfg","name":"beforeLabelTextTpl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":380}],"doc":"<p>An optional string or <code>XTemplate</code> configuration to insert in the field markup\nbefore the label text. If an <code>XTemplate</code> is used, the component's <a href=\"#!/api/Ext.Component-cfg-renderData\" rel=\"Ext.Component-cfg-renderData\" class=\"docClass\">render data</a>\nserves as the context.</p>\n","type":"String/Array/Ext.XTemplate","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-beforeLabelTextTpl","owner":"Ext.form.Labelable","short_doc":"An optional string or XTemplate configuration to insert in the field markup\nbefore the label text. ...","html_type":"String/Array/Ext.XTemplate"},{"tagname":"cfg","name":"beforeLabelTpl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":348}],"doc":"<p>An optional string or <code>XTemplate</code> configuration to insert in the field markup\nbefore the label element. If an <code>XTemplate</code> is used, the component's <a href=\"#!/api/Ext.Component-cfg-renderData\" rel=\"Ext.Component-cfg-renderData\" class=\"docClass\">render data</a>\nserves as the context.</p>\n","type":"String/Array/Ext.XTemplate","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-beforeLabelTpl","owner":"Ext.form.Labelable","short_doc":"An optional string or XTemplate configuration to insert in the field markup\nbefore the label element. ...","html_type":"String/Array/Ext.XTemplate"},{"tagname":"cfg","name":"beforeSubTpl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":364}],"doc":"<p>An optional string or <code>XTemplate</code> configuration to insert in the field markup\nbefore the <a href=\"#!/api/Ext.form.Labelable-method-getSubTplMarkup\" rel=\"Ext.form.Labelable-method-getSubTplMarkup\" class=\"docClass\">subTpl markup</a>. If an <code>XTemplate</code> is used, the\ncomponent's <a href=\"#!/api/Ext.Component-cfg-renderData\" rel=\"Ext.Component-cfg-renderData\" class=\"docClass\">render data</a> serves as the context.</p>\n","type":"String/Array/Ext.XTemplate","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-beforeSubTpl","owner":"Ext.form.Labelable","short_doc":"An optional string or XTemplate configuration to insert in the field markup\nbefore the subTpl markup. ...","html_type":"String/Array/Ext.XTemplate"},{"tagname":"cfg","name":"childEls","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":43}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":43,"type":"Array","default":"['labelEl', 'bodyEl', 'errorEl', 'errorWrapEl']","accessor":true,"evented":null,"id":"cfg-childEls","owner":"Ext.form.Labelable","overrides":[{"name":"childEls","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-cfg-childEls\" rel=\"Ext.Component-cfg-childEls\" class=\"docClass\">Ext.Component.childEls</a>"}],"short_doc":" ...","html_type":"Array"},{"tagname":"cfg","name":"errorMsgCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":173}],"doc":"<p>The CSS class to be applied to the error message element.</p>\n","type":"String","default":"Ext.baseCSSPrefix + 'form-error-msg'","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-errorMsgCls","owner":"Ext.form.Labelable","short_doc":"The CSS class to be applied to the error message element. ...","html_type":"String"},{"tagname":"cfg","name":"fieldBodyCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":194}],"doc":"<p>An extra CSS class to be applied to the body content element in addition to <a href=\"#!/api/Ext.form.Labelable-cfg-baseBodyCls\" rel=\"Ext.form.Labelable-cfg-baseBodyCls\" class=\"docClass\">baseBodyCls</a>.</p>\n","type":"String","default":"''","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-fieldBodyCls","owner":"Ext.form.Labelable","short_doc":"An extra CSS class to be applied to the body content element in addition to baseBodyCls. ...","html_type":"String"},{"tagname":"cfg","name":"fieldLabel","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":206}],"doc":"<p>The label for the field. It gets appended with the <a href=\"#!/api/Ext.form.Labelable-cfg-labelSeparator\" rel=\"Ext.form.Labelable-cfg-labelSeparator\" class=\"docClass\">labelSeparator</a>, and its position and sizing is\ndetermined by the <a href=\"#!/api/Ext.form.Labelable-cfg-labelAlign\" rel=\"Ext.form.Labelable-cfg-labelAlign\" class=\"docClass\">labelAlign</a> and <a href=\"#!/api/Ext.form.Labelable-cfg-labelWidth\" rel=\"Ext.form.Labelable-cfg-labelWidth\" class=\"docClass\">labelWidth</a> configs.</p>\n","type":"String","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-fieldLabel","owner":"Ext.form.Labelable","short_doc":"The label for the field. ...","html_type":"String"},{"tagname":"cfg","name":"formItemCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":148}],"doc":"<p>A CSS class to be applied to the outermost element to denote that it is participating in the form field layout.</p>\n","type":"String","default":"Ext.baseCSSPrefix + 'form-item'","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-formItemCls","owner":"Ext.form.Labelable","short_doc":"A CSS class to be applied to the outermost element to denote that it is participating in the form field layout. ...","html_type":"String"},{"tagname":"cfg","name":"hideEmptyLabel","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":266}],"doc":"<p>When set to true, the label element (<a href=\"#!/api/Ext.form.Labelable-cfg-fieldLabel\" rel=\"Ext.form.Labelable-cfg-fieldLabel\" class=\"docClass\">fieldLabel</a> and <a href=\"#!/api/Ext.form.Labelable-cfg-labelSeparator\" rel=\"Ext.form.Labelable-cfg-labelSeparator\" class=\"docClass\">labelSeparator</a>) will be automatically\nhidden if the <a href=\"#!/api/Ext.form.Labelable-cfg-fieldLabel\" rel=\"Ext.form.Labelable-cfg-fieldLabel\" class=\"docClass\">fieldLabel</a> is empty. Setting this to false will cause the empty label element to be\nrendered and space to be reserved for it; this is useful if you want a field without a label to line up with\nother labeled fields in the same form.</p>\n\n<p>If you wish to unconditionall hide the label even if a non-empty fieldLabel is configured, then set the\n<a href=\"#!/api/Ext.form.Labelable-cfg-hideLabel\" rel=\"Ext.form.Labelable-cfg-hideLabel\" class=\"docClass\">hideLabel</a> config to true.</p>\n","type":"Boolean","default":"true","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-hideEmptyLabel","owner":"Ext.form.Labelable","short_doc":"When set to true, the label element (fieldLabel and labelSeparator) will be automatically\nhidden if the fieldLabel is...","html_type":"Boolean"},{"tagname":"cfg","name":"hideLabel","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":259}],"doc":"<p>Set to true to completely hide the label element (<a href=\"#!/api/Ext.form.Labelable-cfg-fieldLabel\" rel=\"Ext.form.Labelable-cfg-fieldLabel\" class=\"docClass\">fieldLabel</a> and <a href=\"#!/api/Ext.form.Labelable-cfg-labelSeparator\" rel=\"Ext.form.Labelable-cfg-labelSeparator\" class=\"docClass\">labelSeparator</a>). Also see\n<a href=\"#!/api/Ext.form.Labelable-cfg-hideEmptyLabel\" rel=\"Ext.form.Labelable-cfg-hideEmptyLabel\" class=\"docClass\">hideEmptyLabel</a>, which controls whether space will be reserved for an empty fieldLabel.</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-hideLabel","owner":"Ext.form.Labelable","short_doc":"Set to true to completely hide the label element (fieldLabel and labelSeparator). ...","html_type":"Boolean"},{"tagname":"cfg","name":"invalidCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":200}],"doc":"<p>The CSS class to use when marking the component invalid.</p>\n","type":"String","default":"Ext.baseCSSPrefix + 'form-invalid'","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-invalidCls","owner":"Ext.form.Labelable","short_doc":"The CSS class to use when marking the component invalid. ...","html_type":"String"},{"tagname":"cfg","name":"labelAlign","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":213}],"doc":"<p>Controls the position and alignment of the <a href=\"#!/api/Ext.form.Labelable-cfg-fieldLabel\" rel=\"Ext.form.Labelable-cfg-fieldLabel\" class=\"docClass\">fieldLabel</a>. Valid values are:</p>\n\n<ul>\n<li>\"left\" (the default) - The label is positioned to the left of the field, with its text aligned to the left.\nIts width is determined by the <a href=\"#!/api/Ext.form.Labelable-cfg-labelWidth\" rel=\"Ext.form.Labelable-cfg-labelWidth\" class=\"docClass\">labelWidth</a> config.</li>\n<li>\"top\" - The label is positioned above the field.</li>\n<li>\"right\" - The label is positioned to the left of the field, with its text aligned to the right.\nIts width is determined by the <a href=\"#!/api/Ext.form.Labelable-cfg-labelWidth\" rel=\"Ext.form.Labelable-cfg-labelWidth\" class=\"docClass\">labelWidth</a> config.</li>\n</ul>\n\n","type":"String","default":"'left'","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-labelAlign","owner":"Ext.form.Labelable","short_doc":"Controls the position and alignment of the fieldLabel. ...","html_type":"String"},{"tagname":"cfg","name":"labelAttrTpl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":396}],"doc":"<p>An optional string or <code>XTemplate</code> configuration to insert in the field markup\ninside the label element (as attributes). If an <code>XTemplate</code> is used, the component's\n<a href=\"#!/api/Ext.Component-cfg-renderData\" rel=\"Ext.Component-cfg-renderData\" class=\"docClass\">render data</a> serves as the context.</p>\n","type":"String/Array/Ext.XTemplate","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-labelAttrTpl","owner":"Ext.form.Labelable","short_doc":"An optional string or XTemplate configuration to insert in the field markup\ninside the label element (as attributes). ...","html_type":"String/Array/Ext.XTemplate"},{"tagname":"cfg","name":"labelCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":154}],"doc":"<p>The CSS class to be applied to the label element. This (single) CSS class is used to formulate the renderSelector\nand drives the field layout where it is concatenated with a hyphen ('-') and <a href=\"#!/api/Ext.form.Labelable-cfg-labelAlign\" rel=\"Ext.form.Labelable-cfg-labelAlign\" class=\"docClass\">labelAlign</a>. To add\nadditional classes, use <a href=\"#!/api/Ext.form.Labelable-cfg-labelClsExtra\" rel=\"Ext.form.Labelable-cfg-labelClsExtra\" class=\"docClass\">labelClsExtra</a>.</p>\n","type":"String","default":"Ext.baseCSSPrefix + 'form-item-label'","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-labelCls","owner":"Ext.form.Labelable","short_doc":"The CSS class to be applied to the label element. ...","html_type":"String"},{"tagname":"cfg","name":"labelClsExtra","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":168}],"doc":"<p>An optional string of one or more additional CSS classes to add to the label element. Defaults to empty.</p>\n","type":"String","default":null,"properties":null,"id":"cfg-labelClsExtra","owner":"Ext.form.Labelable","short_doc":"An optional string of one or more additional CSS classes to add to the label element. ...","html_type":"String"},{"tagname":"cfg","name":"labelPad","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":232}],"doc":"<p>The amount of space in pixels between the <a href=\"#!/api/Ext.form.Labelable-cfg-fieldLabel\" rel=\"Ext.form.Labelable-cfg-fieldLabel\" class=\"docClass\">fieldLabel</a> and the field body.\nThis defaults to <code>5</code> for compatibility with Ext JS 4, however, as of Ext JS 5\nthe space between the label and the body can optionally be determined by the theme\nusing the $form-label-horizontal-spacing (for side-aligned labels) and\n$form-label-vertical-spacing (for top-aligned labels) SASS variables.\nIn order for the stylesheet values as to take effect, you must use a labelPad value\nof <code>null</code>.</p>\n","type":"Number","default":"5","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-labelPad","owner":"Ext.form.Labelable","short_doc":"The amount of space in pixels between the fieldLabel and the field body. ...","html_type":"Number"},{"tagname":"cfg","name":"labelSeparator","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":245}],"doc":"<p>Character(s) to be inserted at the end of the <a href=\"#!/api/Ext.form.Labelable-cfg-fieldLabel\" rel=\"Ext.form.Labelable-cfg-fieldLabel\" class=\"docClass\">label text</a>.</p>\n\n<p>Set to empty string to hide the separator completely.</p>\n","type":"String","default":"':'","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-labelSeparator","owner":"Ext.form.Labelable","short_doc":"Character(s) to be inserted at the end of the label text. ...","html_type":"String"},{"tagname":"cfg","name":"labelStyle","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":254}],"doc":"<p>A CSS style specification string to apply directly to this field's label.</p>\n","type":"String","default":null,"properties":null,"id":"cfg-labelStyle","owner":"Ext.form.Labelable","html_type":"String"},{"tagname":"cfg","name":"labelWidth","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":225}],"doc":"<p>The width of the <a href=\"#!/api/Ext.form.Labelable-cfg-fieldLabel\" rel=\"Ext.form.Labelable-cfg-fieldLabel\" class=\"docClass\">fieldLabel</a> in pixels. Only applicable if <a href=\"#!/api/Ext.form.Labelable-cfg-labelAlign\" rel=\"Ext.form.Labelable-cfg-labelAlign\" class=\"docClass\">labelAlign</a>\nis set to \"left\" or \"right\".</p>\n","type":"Number","default":"100","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-labelWidth","owner":"Ext.form.Labelable","short_doc":"The width of the fieldLabel in pixels. ...","html_type":"Number"},{"tagname":"cfg","name":"labelableRenderTpl","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":68}],"doc":"<p>The rendering template for the field decorations. Component classes using this mixin\nshould include logic to use this as their <a href=\"#!/api/Ext.Component-cfg-renderTpl\" rel=\"Ext.Component-cfg-renderTpl\" class=\"docClass\">renderTpl</a>,\nand implement the <a href=\"#!/api/Ext.form.Labelable-method-getSubTplMarkup\" rel=\"Ext.form.Labelable-method-getSubTplMarkup\" class=\"docClass\">getSubTplMarkup</a> method to generate the field body content.</p>\n","type":"String/String[]/Ext.XTemplate","default":"['{beforeLabelTpl}', '<label id=\"{id}-labelEl\" data-ref=\"labelEl\" class=\"{labelCls} {labelCls}-{ui} {labelClsExtra} ', '{unselectableCls}\" style=\"{labelStyle}\"<tpl if=\"inputId\">', ' for=\"{inputId}\"</tpl> {labelAttrTpl}>', '<span class=\"{labelInnerCls} {labelInnerCls}-{ui}\" style=\"{labelInnerStyle}\">', '{beforeLabelTextTpl}', '<tpl if=\"fieldLabel\">{fieldLabel}', '<tpl if=\"labelSeparator\">', '<span role=\"separator\">{labelSeparator}</span>', '</tpl>', '</tpl>', '{afterLabelTextTpl}', '</span>', '</label>', '{afterLabelTpl}', '<div id=\"{id}-bodyEl\" data-ref=\"bodyEl\" class=\"{baseBodyCls} {baseBodyCls}-{ui}<tpl if=\"fieldBodyCls\">', ' {fieldBodyCls} {fieldBodyCls}-{ui}</tpl> {growCls} {extraFieldBodyCls}\"', '<tpl if=\"bodyStyle\"> style=\"{bodyStyle}\"</tpl>>', '{beforeBodyEl}', '{beforeSubTpl}', '{[values.$comp.getSubTplMarkup(values)]}', '{afterSubTpl}', '{afterBodyEl}', '</div>', '<tpl if=\"renderError\">', '<div id=\"{id}-errorWrapEl\" data-ref=\"errorWrapEl\" class=\"{errorWrapCls} {errorWrapCls}-{ui}', ' {errorWrapExtraCls}\" style=\"{errorWrapStyle}\">', '<div role=\"alert\" aria-live=\"polite\" id=\"{id}-errorEl\" data-ref=\"errorEl\" ', 'class=\"{errorMsgCls} {invalidMsgCls} {invalidMsgCls}-{ui}\" ', 'data-anchorTarget=\"{id}-inputEl\">', '</div>', '</div>', '</tpl>', {disableFormats: true}]","properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-labelableRenderTpl","owner":"Ext.form.Labelable","short_doc":"The rendering template for the field decorations. ...","html_type":"String/String[]/Ext.XTemplate"},{"tagname":"cfg","name":"msgTarget","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":291}],"doc":"<p>The location where the error message text should display. Must be one of the following values:</p>\n\n<ul>\n<li><p><code>qtip</code> Display a quick tip containing the message when the user hovers over the field.\nThis is the default.</p>\n\n<p><strong><a href=\"#!/api/Ext.tip.QuickTipManager-method-init\" rel=\"Ext.tip.QuickTipManager-method-init\" class=\"docClass\">Ext.tip.QuickTipManager.init</a> must have been called for this setting to work.</strong></p></li>\n<li><p><code>title</code> Display the message in a default browser title attribute popup.</p></li>\n<li><code>under</code> Add a block div beneath the field containing the error message.</li>\n<li><code>side</code> Add an error icon to the right of the field, displaying the message in a popup on hover.</li>\n<li><code>none</code> Don't display any error message. This might be useful if you are implementing custom error display.</li>\n<li><code>[element id]</code> Add the error message directly to the innerHTML of the specified element.</li>\n</ul>\n\n","type":"String","default":"'qtip'","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-msgTarget","owner":"Ext.form.Labelable","short_doc":"The location where the error message text should display. ...","html_type":"String"},{"tagname":"cfg","name":"preventMark","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":278}],"doc":"<p>true to disable displaying any <a href=\"#!/api/Ext.form.Labelable-method-setActiveError\" rel=\"Ext.form.Labelable-method-setActiveError\" class=\"docClass\">error message</a> set on this object.</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-preventMark","owner":"Ext.form.Labelable","short_doc":"true to disable displaying any error message set on this object. ...","html_type":"Boolean"},{"tagname":"property","name":"bodyEl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":50}],"doc":"<p>The div Element wrapping the component's contents. Only available after the component has been rendered.</p>\n","type":"Ext.dom.Element","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-bodyEl","owner":"Ext.form.Labelable","short_doc":"The div Element wrapping the component's contents. ...","html_type":"Ext.dom.Element"},{"tagname":"property","name":"errorEl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":56}],"doc":"<p>The div Element that will contain the component's error message(s). Note that depending on the configured\n<a href=\"#!/api/Ext.form.Labelable-cfg-msgTarget\" rel=\"Ext.form.Labelable-cfg-msgTarget\" class=\"docClass\">msgTarget</a>, this element may be hidden in favor of some other form of presentation, but will always\nbe present in the DOM for use by assistive technologies.</p>\n","type":"Ext.dom.Element","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-errorEl","owner":"Ext.form.Labelable","short_doc":"The div Element that will contain the component's error message(s). ...","html_type":"Ext.dom.Element"},{"tagname":"property","name":"errorWrapCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":179}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":179,"type":"String","default":"Ext.baseCSSPrefix + 'form-error-wrap'","readonly":null,"id":"property-errorWrapCls","owner":"Ext.form.Labelable","short_doc":" ...","html_type":"String"},{"tagname":"property","name":"errorWrapSideCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":180}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":180,"type":"String","default":"Ext.baseCSSPrefix + 'form-error-wrap-side'","readonly":null,"id":"property-errorWrapSideCls","owner":"Ext.form.Labelable","short_doc":" ...","html_type":"String"},{"tagname":"property","name":"errorWrapUnderCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":181}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":181,"type":"String","default":"Ext.baseCSSPrefix + 'form-error-wrap-under'","readonly":null,"id":"property-errorWrapUnderCls","owner":"Ext.form.Labelable","short_doc":" ...","html_type":"String"},{"tagname":"property","name":"errorWrapUnderSideLabelCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":182}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":182,"type":"String","default":"Ext.baseCSSPrefix + 'form-error-wrap-under-side-label'","readonly":null,"id":"property-errorWrapUnderSideLabelCls","owner":"Ext.form.Labelable","short_doc":" ...","html_type":"String"},{"tagname":"property","name":"htmlActiveErrorsTpl","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":122}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":122,"type":"Array","default":"['<tpl if=\"errors && errors.length\">', '<ul class=\"{listCls}\">', '<tpl if=\"Ext.enableAria\">', '<tpl if=\"fieldLabel\"><div>{fieldLabel}</div></tpl>', '</tpl>', '<tpl for=\"errors\"><li>{.}</li></tpl>', '</ul>', '</tpl>']","readonly":null,"id":"property-htmlActiveErrorsTpl","owner":"Ext.form.Labelable","short_doc":" ...","html_type":"Array"},{"tagname":"property","name":"invalidIconCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":190}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":190,"type":"String","default":"Ext.baseCSSPrefix + 'form-invalid-icon'","readonly":null,"id":"property-invalidIconCls","owner":"Ext.form.Labelable","short_doc":" ...","html_type":"String"},{"tagname":"property","name":"invalidUnderCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":192}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":192,"type":"String","default":"Ext.baseCSSPrefix + 'form-invalid-under'","readonly":null,"id":"property-invalidUnderCls","owner":"Ext.form.Labelable","short_doc":" ...","html_type":"String"},{"tagname":"property","name":"isFieldLabelable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":142}],"doc":"<p>Flag denoting that this object is labelable as a field. Always true.</p>\n","type":"Boolean","default":"true","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-isFieldLabelable","owner":"Ext.form.Labelable","short_doc":"Flag denoting that this object is labelable as a field. ...","html_type":"Boolean"},{"tagname":"property","name":"isLabelable","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":31}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":31,"type":"Boolean","default":"true","readonly":null,"id":"property-isLabelable","owner":"Ext.form.Labelable","short_doc":" ...","html_type":"Boolean"},{"tagname":"property","name":"labelEl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":44}],"doc":"<p>The label Element for this component. Only available after the component has been rendered.</p>\n","type":"Ext.dom.Element","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-labelEl","owner":"Ext.form.Labelable","short_doc":"The label Element for this component. ...","html_type":"Ext.dom.Element"},{"tagname":"property","name":"labelInnerCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":165}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":165,"type":"String","default":"Ext.baseCSSPrefix + 'form-item-label-inner'","readonly":null,"id":"property-labelInnerCls","owner":"Ext.form.Labelable","short_doc":" ...","html_type":"String"},{"tagname":"property","name":"labelableInsertions","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":330}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":330,"type":"Array","default":"['beforeBodyEl', 'afterBodyEl', 'beforeLabelTpl', 'afterLabelTpl', 'beforeSubTpl', 'afterSubTpl', 'beforeLabelTextTpl', 'afterLabelTextTpl', 'labelAttrTpl']","readonly":null,"id":"property-labelableInsertions","owner":"Ext.form.Labelable","short_doc":" ...","html_type":"Array"},{"tagname":"property","name":"mixinConfig","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":33}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":33,"type":"Object","default":"{id: 'labelable', on: {beforeRender: 'beforeLabelRender', onRender: 'onLabelRender'}}","readonly":null,"id":"property-mixinConfig","owner":"Ext.form.Labelable","short_doc":" ...","html_type":"Object"},{"tagname":"property","name":"msgTargets","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":308}],"doc":"<p>private map for msg target lookup, if target is not in this map it is assumed\nto be an element id</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"type":"Object","default":"{qtip: 1, title: 1, under: 1, side: 1, none: 1}","readonly":null,"id":"property-msgTargets","owner":"Ext.form.Labelable","short_doc":"private map for msg target lookup, if target is not in this map it is assumed\nto be an element id ...","html_type":"Object"},{"tagname":"property","name":"noWrap","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":324}],"doc":"<p>Tells the layout system that the height can be measured immediately because the width does not need setting.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"Boolean","default":"true","readonly":null,"id":"property-noWrap","owner":"Ext.form.Labelable","short_doc":"Tells the layout system that the height can be measured immediately because the width does not need setting. ...","html_type":"Boolean"},{"tagname":"property","name":"plaintextActiveErrorsTpl","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":133}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":133,"type":"Array","default":"['<tpl if=\"errors && errors.length\">', '<tpl if=\"Ext.enableAria\">', '<tpl if=\"fieldLabel\">{fieldLabel}\\n</tpl>', '</tpl>', '<tpl for=\"errors\"><tpl if=\"xindex &gt; 1\">\\n</tpl>{.}</tpl>', '</tpl>']","readonly":null,"id":"property-plaintextActiveErrorsTpl","owner":"Ext.form.Labelable","short_doc":" ...","html_type":"Array"},{"tagname":"property","name":"rightLabelCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":164}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":164,"type":"String","default":"Ext.baseCSSPrefix + 'form-item-label-right'","readonly":null,"id":"property-rightLabelCls","owner":"Ext.form.Labelable","short_doc":" ...","html_type":"String"},{"tagname":"property","name":"topLabelCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":162}],"doc":"<p>private</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"type":"String","default":"Ext.baseCSSPrefix + 'form-item-label-top'","readonly":null,"id":"property-topLabelCls","owner":"Ext.form.Labelable","short_doc":"private ...","html_type":"String"},{"tagname":"property","name":"topLabelSideErrorCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":166}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":166,"type":"String","default":"Ext.baseCSSPrefix + 'form-item-label-top-side-error'","readonly":null,"id":"property-topLabelSideErrorCls","owner":"Ext.form.Labelable","short_doc":" ...","html_type":"String"},{"tagname":"method","name":"beforeLabelRender","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":666}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":666,"params":[],"chainable":false,"fires":[],"method_calls":["addCls","getInherited","setFieldDefaults"],"id":"method-beforeLabelRender","owner":"Ext.form.Labelable","short_doc":" ..."},{"tagname":"method","name":"getActiveError","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":727}],"doc":"<p>Gets the active error message for this component, if any. This does not trigger validation on its own, it merely\nreturns any message that the component may already hold.</p>\n","return":{"type":"String","name":"return","doc":"<p>The active error message on the component; if there is no error, an empty string is returned.</p>\n","properties":null,"html_type":"String"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getActiveError","owner":"Ext.form.Labelable","short_doc":"Gets the active error message for this component, if any. ..."},{"tagname":"method","name":"getActiveErrors","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":757}],"doc":"<p>Gets an Array of any active error messages currently applied to the field. This does not trigger validation on\nits own, it merely returns any messages that the component may already hold.</p>\n","return":{"type":"String[]","name":"return","doc":"<p>The active error messages on the component; if there are no errors, an empty Array is\nreturned.</p>\n","properties":null,"html_type":"String[]"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getActiveErrors","owner":"Ext.form.Labelable","short_doc":"Gets an Array of any active error messages currently applied to the field. ..."},{"tagname":"method","name":"getChildEls","doc":"<p>Returns the value of <a href=\"#!/api/Ext.form.Labelable-cfg-childEls\" rel=\"Ext.form.Labelable-cfg-childEls\" class=\"docClass\">childEls</a>.</p>\n","params":[],"return":{"type":"Array","doc":"\n","html_type":"Array"},"id":"method-getChildEls","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":43}],"static":null,"private":null,"inheritable":null,"linenr":43,"owner":"Ext.form.Labelable","overrides":[{"name":"getChildEls","owner":"Ext.util.ElementContainer","link":"<a href=\"#!/api/Ext.util.ElementContainer-method-getChildEls\" rel=\"Ext.util.ElementContainer-method-getChildEls\" class=\"docClass\">Ext.util.ElementContainer.getChildEls</a>"}],"short_doc":"Returns the value of childEls. ..."},{"tagname":"method","name":"getFieldLabel","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":499}],"doc":"<p>Returns the label for the field. Defaults to simply returning the <a href=\"#!/api/Ext.form.Labelable-cfg-fieldLabel\" rel=\"Ext.form.Labelable-cfg-fieldLabel\" class=\"docClass\">fieldLabel</a> config. Can be overridden\nto provide a custom generated label.</p>\n","template":true,"return":{"type":"String","name":"return","doc":"<p>The configured field label, or empty string if not defined</p>\n","properties":null,"html_type":"String"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["trimLabelSeparator"],"id":"method-getFieldLabel","owner":"Ext.form.Labelable","short_doc":"Returns the label for the field. ..."},{"tagname":"method","name":"getHorizontalPaddingStyle","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":661}],"doc":"<p>hook for rtl</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getHorizontalPaddingStyle","owner":"Ext.form.Labelable","short_doc":"hook for rtl ..."},{"tagname":"method","name":"getInputId","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":718}],"doc":"<p>Get the input id, if any, for this component. This is used as the \"for\" attribute on the label element.\nImplementing subclasses may also use this as e.g. the id for their own input element.</p>\n","return":{"type":"String","name":"return","doc":"<p>The input id</p>\n","properties":null,"html_type":"String"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getInputId","owner":"Ext.form.Labelable","short_doc":"Get the input id, if any, for this component. ..."},{"tagname":"method","name":"getInsertionRenderData","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":545}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":545,"params":[{"name":"data","type":"Object","html_type":"Object"},{"name":"names","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-getInsertionRenderData","owner":"Ext.form.Labelable","short_doc":" ..."},{"tagname":"method","name":"getLabelableRenderData","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":568}],"doc":"<p>Generates the arguments for the field decorations <a href=\"#!/api/Ext.form.Labelable-cfg-labelableRenderTpl\" rel=\"Ext.form.Labelable-cfg-labelableRenderTpl\" class=\"docClass\">rendering template</a>.</p>\n","params":[{"tagname":"params","type":"Object","name":"data","doc":"<p>optional object to use as the base data object.  If provided,\nthis method will add properties to the base object instead of creating a new one.</p>\n","html_type":"Object"}],"return":{"type":"Object","name":"return","doc":"<p>The template arguments</p>\n","properties":null,"html_type":"Object"},"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getFieldLabel","getHorizontalPaddingStyle","getInputId","getInsertionRenderData","hasVisibleLabel"],"id":"method-getLabelableRenderData","owner":"Ext.form.Labelable","short_doc":"Generates the arguments for the field decorations rendering template. ..."},{"tagname":"method","name":"getSubTplMarkup","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":708}],"doc":"<p>Gets the markup to be inserted into the outer template's bodyEl. Defaults to empty string, should be implemented\nby classes including this mixin as needed.</p>\n","return":{"type":"String","name":"return","doc":"<p>The markup to be inserted</p>\n\n","properties":null,"html_type":"String"},"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getSubTplMarkup","owner":"Ext.form.Labelable","short_doc":"Gets the markup to be inserted into the outer template's bodyEl. ..."},{"tagname":"method","name":"hasActiveError","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":736}],"doc":"<p>Tells whether the field currently has an active error message. This does not trigger validation on its own, it\nmerely looks for any message that the component may already hold.</p>\n","return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getActiveError"],"id":"method-hasActiveError","owner":"Ext.form.Labelable","short_doc":"Tells whether the field currently has an active error message. ..."},{"tagname":"method","name":"hasVisibleLabel","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":697}],"doc":"<p>Checks if the field has a visible label</p>\n","return":{"type":"Boolean","name":"return","doc":"<p>True if the field has a visible label</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getFieldLabel"],"id":"method-hasVisibleLabel","owner":"Ext.form.Labelable","short_doc":"Checks if the field has a visible label ..."},{"tagname":"method","name":"initLabelable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":452}],"doc":"<p>Performs initialization of this mixin. Component classes using this mixin should call this method during their\nown initialization.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["addCls","enableBubble"],"id":"method-initLabelable","owner":"Ext.form.Labelable","short_doc":"Performs initialization of this mixin. ..."},{"tagname":"method","name":"onLabelRender","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":674}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":674,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-onLabelRender","owner":"Ext.form.Labelable","short_doc":" ..."},{"tagname":"method","name":"renderActiveError","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":866}],"doc":"<p>Updates the rendered DOM to match the current activeError. This only updates the content and\nattributes, you'll have to call doComponentLayout to actually update the display.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":["<a href=\"#!/api/Ext.form.Labelable-event-errorchange\" rel=\"Ext.form.Labelable-event-errorchange\" class=\"docClass\">errorchange</a>"],"method_calls":["fireEvent","getActiveError","toggleInvalidCls"],"id":"method-renderActiveError","owner":"Ext.form.Labelable","short_doc":"Updates the rendered DOM to match the current activeError. ..."},{"tagname":"method","name":"setActiveError","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":745}],"doc":"<p>Sets the active error message to the given string. This replaces the entire error message contents with the given\nstring. Also see <a href=\"#!/api/Ext.form.Labelable-method-setActiveErrors\" rel=\"Ext.form.Labelable-method-setActiveErrors\" class=\"docClass\">setActiveErrors</a> which accepts an Array of messages and formats them according to the\n<a href=\"#!/api/Ext.form.Labelable-cfg-activeErrorsTpl\" rel=\"Ext.form.Labelable-cfg-activeErrorsTpl\" class=\"docClass\">activeErrorsTpl</a>. Note that this only updates the error message element's text and attributes, you'll\nhave to call doComponentLayout to actually update the field's layout to match. If the field extends <a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a> you should call <a href=\"#!/api/Ext.form.field.Base-method-markInvalid\" rel=\"Ext.form.field.Base-method-markInvalid\" class=\"docClass\">markInvalid</a> instead.</p>\n","params":[{"tagname":"params","type":"String","name":"msg","doc":"<p>The error message</p>\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":["<a href=\"#!/api/Ext.form.Labelable-event-errorchange\" rel=\"Ext.form.Labelable-event-errorchange\" class=\"docClass\">errorchange</a>"],"method_calls":["setActiveErrors"],"id":"method-setActiveError","owner":"Ext.form.Labelable","short_doc":"Sets the active error message to the given string. ..."},{"tagname":"method","name":"setActiveErrors","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":767}],"doc":"<p>Set the active error message to an Array of error messages. The messages are formatted into a single message\nstring using the <a href=\"#!/api/Ext.form.Labelable-cfg-activeErrorsTpl\" rel=\"Ext.form.Labelable-cfg-activeErrorsTpl\" class=\"docClass\">activeErrorsTpl</a>. Also see <a href=\"#!/api/Ext.form.Labelable-method-setActiveError\" rel=\"Ext.form.Labelable-method-setActiveError\" class=\"docClass\">setActiveError</a> which allows setting the entire error\ncontents with a single string. Note that this only updates the error message element's text and attributes,\nyou'll have to call doComponentLayout to actually update the field's layout to match. If the field extends\n<a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a> you should call <a href=\"#!/api/Ext.form.field.Base-method-markInvalid\" rel=\"Ext.form.field.Base-method-markInvalid\" class=\"docClass\">markInvalid</a> instead.</p>\n","params":[{"tagname":"params","type":"String[]","name":"errors","doc":"<p>The error messages</p>\n","html_type":"String[]"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":["<a href=\"#!/api/Ext.form.Labelable-event-errorchange\" rel=\"Ext.form.Labelable-event-errorchange\" class=\"docClass\">errorchange</a>"],"method_calls":["getActionEl","getTpl","renderActiveError","updateLayout"],"id":"method-setActiveErrors","owner":"Ext.form.Labelable","short_doc":"Set the active error message to an Array of error messages. ..."},{"tagname":"method","name":"setChildEls","doc":"<p>Sets the value of <a href=\"#!/api/Ext.form.Labelable-cfg-childEls\" rel=\"Ext.form.Labelable-cfg-childEls\" class=\"docClass\">childEls</a>.</p>\n","params":[{"type":"Array","name":"childEls","doc":"<p>The new value.</p>\n","html_type":"Array"}],"id":"method-setChildEls","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":43}],"static":null,"private":null,"inheritable":null,"linenr":43,"owner":"Ext.form.Labelable","overrides":[{"name":"setChildEls","owner":"Ext.util.ElementContainer","link":"<a href=\"#!/api/Ext.util.ElementContainer-method-setChildEls\" rel=\"Ext.util.ElementContainer-method-setChildEls\" class=\"docClass\">Ext.util.ElementContainer.setChildEls</a>"}],"short_doc":"Sets the value of childEls. ..."},{"tagname":"method","name":"setFieldDefaults","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":899}],"doc":"<p>Applies a set of default configuration values to this Labelable instance. For each of the properties in the given\nobject, check if this component hasOwnProperty that config; if not then it's inheriting a default value from its\nprototype and we should apply the default value.</p>\n","params":[{"tagname":"params","type":"Object","name":"defaults","doc":"<p>The defaults to apply to the object.</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["hasOwnProperty"],"id":"method-setFieldDefaults","owner":"Ext.form.Labelable","short_doc":"Applies a set of default configuration values to this Labelable instance. ..."},{"tagname":"method","name":"setFieldLabel","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":509}],"doc":"<p>Set the label of this field.</p>\n","params":[{"tagname":"params","type":"String","name":"label","doc":"<p>The new label. The <a href=\"#!/api/Ext.form.Labelable-cfg-labelSeparator\" rel=\"Ext.form.Labelable-cfg-labelSeparator\" class=\"docClass\">labelSeparator</a> will be automatically appended to the label\nstring.</p>\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["trimLabelSeparator","updateLayout"],"id":"method-setFieldLabel","owner":"Ext.form.Labelable","short_doc":"Set the label of this field. ..."},{"tagname":"method","name":"toggleInvalidCls","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":890}],"doc":"<p>Add/remove invalid class(es)</p>\n","private":true,"params":[{"tagname":"params","type":"Boolean","name":"hasError","doc":"\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-toggleInvalidCls","owner":"Ext.form.Labelable","short_doc":"Add/remove invalid class(es) ..."},{"tagname":"method","name":"trimLabelSeparator","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":485}],"doc":"<p>Returns the trimmed label by slicing off the label separator character. Can be overridden.</p>\n","return":{"type":"String","name":"return","doc":"<p>The trimmed field label, or empty string if not defined</p>\n","properties":null,"html_type":"String"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-trimLabelSeparator","owner":"Ext.form.Labelable","short_doc":"Returns the trimmed label by slicing off the label separator character. ..."},{"tagname":"method","name":"unsetActiveError","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":826}],"doc":"<p>Clears the active error message(s). Note that this only clears the error message element's text and attributes,\nyou'll have to call doComponentLayout to actually update the field's layout to match. If the field extends <a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a> you should call <a href=\"#!/api/Ext.form.field.Base-method-clearInvalid\" rel=\"Ext.form.field.Base-method-clearInvalid\" class=\"docClass\">clearInvalid</a> instead.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":["<a href=\"#!/api/Ext.form.Labelable-event-errorchange\" rel=\"Ext.form.Labelable-event-errorchange\" class=\"docClass\">errorchange</a>"],"method_calls":["getActionEl","renderActiveError","updateLayout"],"id":"method-unsetActiveError","owner":"Ext.form.Labelable","short_doc":"Clears the active error message(s). ..."},{"tagname":"method","name":"initTip","autodetected":{"inheritdoc":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":406}],"doc":"<p>Use a custom QuickTip instance separate from the main QuickTips singleton, so that we\ncan give it a custom frame style. Responds to errorqtip rather than the qtip property.</p>\n","static":true,"private":true,"inheritdoc":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-initTip","owner":"Ext.form.Labelable","short_doc":"Use a custom QuickTip instance separate from the main QuickTips singleton, so that we\ncan give it a custom frame style. ..."},{"tagname":"event","name":"errorchange","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/form/Labelable.js","linenr":445}],"doc":"<p>Fires when the active error message is changed via <a href=\"#!/api/Ext.form.Labelable-method-setActiveError\" rel=\"Ext.form.Labelable-method-setActiveError\" class=\"docClass\">setActiveError</a>.</p>\n","params":[{"tagname":"params","type":"Ext.form.Labelable","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.form.Labelable\" rel=\"Ext.form.Labelable\" class=\"docClass\">Ext.form.Labelable</a>"},{"tagname":"params","type":"String","name":"error","doc":"<p>The active error message</p>\n","html_type":"String"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-errorchange","owner":"Ext.form.Labelable","short_doc":"Fires when the active error message is changed via setActiveError. ..."}],"code_type":"ext_define","id":"class-Ext.form.Labelable","short_doc":"A mixin which allows a component to be configured and decorated with a label and/or error message as is\ncommon for fo..."}