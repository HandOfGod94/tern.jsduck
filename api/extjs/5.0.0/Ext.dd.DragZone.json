{"tagname":"class","name":"Ext.dd.DragZone","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragZone.js","linenr":1}],"doc":"<p>This class provides a container DD instance that allows dragging of multiple child source nodes.</p>\n\n<p>This class does not move the drag target nodes, but a proxy element which may contain any DOM structure you wish. The\nDOM element to show in the proxy is provided by either a provided implementation of <a href=\"#!/api/Ext.dd.DragZone-method-getDragData\" rel=\"Ext.dd.DragZone-method-getDragData\" class=\"docClass\">getDragData</a>, or by\nregistered draggables registered with <a href=\"#!/api/Ext.dd.Registry\" rel=\"Ext.dd.Registry\" class=\"docClass\">Ext.dd.Registry</a></p>\n\n<p>If you wish to provide draggability for an arbitrary number of DOM nodes, each of which represent some application\nobject (For example nodes in a <a href=\"#!/api/Ext.view.View\" rel=\"Ext.view.View\" class=\"docClass\">DataView</a>) then use of this class is the most efficient way to\n\"activate\" those nodes.</p>\n\n<p>By default, this class requires that draggable child nodes are registered with <a href=\"#!/api/Ext.dd.Registry\" rel=\"Ext.dd.Registry\" class=\"docClass\">Ext.dd.Registry</a>. However a\nsimpler way to allow a DragZone to manage any number of draggable elements is to configure the DragZone with an\nimplementation of the <a href=\"#!/api/Ext.dd.DragZone-method-getDragData\" rel=\"Ext.dd.DragZone-method-getDragData\" class=\"docClass\">getDragData</a> method which interrogates the passed mouse event to see if it has taken\nplace within an element, or class of elements. This is easily done by using the event's getTarget method to identify a node based on a CSS selector. For example,\nto make the nodes of a DataView draggable, use the following technique. Knowledge of the use of the DataView is\nrequired:</p>\n\n<pre><code>myDataView.on('render', function(v) {\n    myDataView.dragZone = new <a href=\"#!/api/Ext.dd.DragZone\" rel=\"Ext.dd.DragZone\" class=\"docClass\">Ext.dd.DragZone</a>(v.getEl(), {\n\n//      On receipt of a mousedown event, see if it is within a DataView node.\n//      Return a drag data object if so.\n        getDragData: function(e) {\n\n//          Use the DataView's own itemSelector (a mandatory property) to\n//          test if the mousedown is within one of the DataView's nodes.\n            var sourceEl = e.getTarget(v.itemSelector, 10);\n\n//          If the mousedown is within a DataView node, clone the node to produce\n//          a ddel element for use by the drag proxy. Also add application data\n//          to the returned data object.\n            if (sourceEl) {\n                d = sourceEl.cloneNode(true);\n                d.id = Ext.id();\n                return {\n                    ddel: d,\n                    sourceEl: sourceEl,\n                    repairXY: Ext.fly(sourceEl).getXY(),\n                    sourceStore: v.store,\n                    draggedRecord: v.<a href=\"#!/api/Ext.view.View-method-getRecord\" rel=\"Ext.view.View-method-getRecord\" class=\"docClass\">getRecord</a>(sourceEl)\n                }\n            }\n        },\n\n//      Provide coordinates for the proxy to slide back to on failed drag.\n//      This is the original XY coordinates of the draggable element captured\n//      in the getDragData method.\n        getRepairXY: function() {\n            return this.dragData.repairXY;\n        }\n    });\n});\n</code></pre>\n\n<p>See the <a href=\"#!/api/Ext.dd.DropZone\" rel=\"Ext.dd.DropZone\" class=\"docClass\">DropZone</a> documentation for details about building a DropZone which cooperates with\nthis DragZone.</p>\n","aliases":{},"alternateClassNames":[],"extends":"Ext.dd.DragSource","mixins":[],"requires":[],"uses":[],"members":[{"tagname":"cfg","name":"animRepair","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragSource.js","linenr":35}],"doc":"<p>If true, animates the proxy element back to the position of the handle element used to trigger the drag.</p>\n","type":"Boolean","default":"true","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-animRepair","owner":"Ext.dd.DragSource","short_doc":"If true, animates the proxy element back to the position of the handle element used to trigger the drag. ...","html_type":"Boolean"},{"tagname":"cfg","name":"containerScroll","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragZone.js","linenr":82}],"doc":"<p>True to register this container with the Scrollmanager for auto scrolling during drag operations.\nA <a href=\"#!/api/Ext.dd.ScrollManager\" rel=\"Ext.dd.ScrollManager\" class=\"docClass\">Ext.dd.ScrollManager</a> configuration may also be passed.</p>\n","type":"Object/Boolean","default":null,"properties":null,"id":"cfg-containerScroll","owner":"Ext.dd.DragZone","short_doc":"True to register this container with the Scrollmanager for auto scrolling during drag operations. ...","html_type":"Object/Boolean"},{"tagname":"cfg","name":"ddGroup","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragSource.js","linenr":11}],"doc":"<p>A named drag drop group to which this object belongs.  If a group is specified, then this object will only\ninteract with other drag drop objects in the same group.</p>\n","type":"String","default":null,"properties":null,"id":"cfg-ddGroup","owner":"Ext.dd.DragSource","short_doc":"A named drag drop group to which this object belongs. ...","html_type":"String"},{"tagname":"cfg","name":"dropAllowed","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragSource.js","linenr":24}],"doc":"<p>The CSS class returned to the drag source when drop is allowed.</p>\n","type":"String","default":"Ext.baseCSSPrefix + 'dd-drop-ok'","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-dropAllowed","owner":"Ext.dd.DragSource","short_doc":"The CSS class returned to the drag source when drop is allowed. ...","html_type":"String"},{"tagname":"cfg","name":"dropNotAllowed","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragSource.js","linenr":29}],"doc":"<p>The CSS class returned to the drag source when drop is not allowed.</p>\n","type":"String","default":"Ext.baseCSSPrefix + 'dd-drop-nodrop'","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-dropNotAllowed","owner":"Ext.dd.DragSource","short_doc":"The CSS class returned to the drag source when drop is not allowed. ...","html_type":"String"},{"tagname":"cfg","name":"repairHighlightColor","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragSource.js","linenr":41}],"doc":"<p>The color to use when visually highlighting the drag source in the afterRepair\nmethod after a failed drop (defaults to light blue). The color must be a 6 digit hex value, without\na preceding '#'.</p>\n","type":"String","default":"'c3daf9'","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-repairHighlightColor","owner":"Ext.dd.DragSource","short_doc":"The color to use when visually highlighting the drag source in the afterRepair\nmethod after a failed drop (defaults t...","html_type":"String"},{"tagname":"cfg","name":"scrollEl","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragZone.js","linenr":88}],"doc":"<p>An element to register with the ScrollManager if <a href=\"#!/api/Ext.dd.DragZone-cfg-containerScroll\" rel=\"Ext.dd.DragZone-cfg-containerScroll\" class=\"docClass\">containerScroll</a>\nis set. Defaults to the drag element.</p>\n","type":"String/HTMLElement/Ext.dom.Element","default":null,"properties":null,"id":"cfg-scrollEl","owner":"Ext.dd.DragZone","short_doc":"An element to register with the ScrollManager if containerScroll\nis set. ...","html_type":"String/HTMLElement/Ext.dom.Element"},{"tagname":"property","name":"__ygDragDrop","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":218}],"doc":"<p>Internal typeof flag</p>\n","default":"true","properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"Boolean","readonly":null,"id":"property-__ygDragDrop","owner":"Ext.dd.DragDrop","short_doc":"Internal typeof flag ...","html_type":"Boolean"},{"tagname":"property","name":"_domRef","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":211}],"doc":"<p>Cached reference to the linked element</p>\n","default":null,"properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"Object","readonly":null,"id":"property-_domRef","owner":"Ext.dd.DragDrop","html_type":"Object"},{"tagname":"property","name":"available","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":300}],"doc":"<p>The available property is false until the linked dom element is accessible.</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-available","owner":"Ext.dd.DragDrop","short_doc":"The available property is false until the linked dom element is accessible. ...","html_type":"Boolean"},{"tagname":"property","name":"centerFrame","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DDProxy.js","linenr":56}],"doc":"<p>By default the frame is positioned exactly where the drag element is, so\nwe use the cursor offset provided by <a href=\"#!/api/Ext.dd.DD\" rel=\"Ext.dd.DD\" class=\"docClass\">Ext.dd.DD</a>.  Another option that works only if\nyou do not have constraints on the obj is to have the drag frame centered\naround the cursor.  Set centerFrame to true for this effect.</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-centerFrame","owner":"Ext.dd.DDProxy","short_doc":"By default the frame is positioned exactly where the drag element is, so\nwe use the cursor offset provided by Ext.dd.DD. ...","html_type":"Boolean"},{"tagname":"property","name":"config","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":85}],"doc":"<p>Configuration attributes passed into the constructor</p>\n","type":"Object","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-config","owner":"Ext.dd.DragDrop","html_type":"Object"},{"tagname":"property","name":"constrainX","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":225}],"doc":"<p>Set to true when horizontal contraints are applied</p>\n","type":"Boolean","default":"false","properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-constrainX","owner":"Ext.dd.DragDrop","short_doc":"Set to true when horizontal contraints are applied ...","html_type":"Boolean"},{"tagname":"property","name":"constrainY","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":232}],"doc":"<p>Set to true when vertical contraints are applied</p>\n","type":"Boolean","default":"false","properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-constrainY","owner":"Ext.dd.DragDrop","short_doc":"Set to true when vertical contraints are applied ...","html_type":"Boolean"},{"tagname":"property","name":"defaultPadding","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":447}],"doc":"<p>Provides default constraint padding to \"constrainTo\" elements.</p>\n","type":"Object","default":"{left: 0, right: 0, top: 0, bottom: 0}","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-defaultPadding","owner":"Ext.dd.DragDrop","short_doc":"Provides default constraint padding to \"constrainTo\" elements. ...","html_type":"Object"},{"tagname":"property","name":"dragData","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragSource.js","linenr":17}],"doc":"<p>This property contains the data representing the dragged object. This data is set up by the implementation of the\n<a href=\"#!/api/Ext.dd.DragSource-method-getDragData\" rel=\"Ext.dd.DragSource-method-getDragData\" class=\"docClass\">getDragData</a> method. It must contain a ddel property, but can contain any other data according to the\napplication's needs.</p>\n","type":"Object","default":null,"properties":null,"id":"property-dragData","owner":"Ext.dd.DragSource","short_doc":"This property contains the data representing the dragged object. ...","html_type":"Object"},{"tagname":"property","name":"dragElId","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":91}],"doc":"<p>The id of the element that will be dragged.  By default this is same\nas the linked element, but could be changed to another element. Ex:\n<a href=\"#!/api/Ext.dd.DDProxy\" rel=\"Ext.dd.DDProxy\" class=\"docClass\">Ext.dd.DDProxy</a></p>\n","type":"String","default":null,"properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-dragElId","owner":"Ext.dd.DragDrop","short_doc":"The id of the element that will be dragged. ...","html_type":"String"},{"tagname":"property","name":"groups","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":156}],"doc":"<p>The group defines a logical collection of DragDrop objects that are\nrelated.  Instances only get events when interacting with other\nDragDrop object in the same group.  This lets us define multiple\ngroups using a single DragDrop subclass if we want.</p>\n\n<p>An object in the format {'group1':true, 'group2':true}</p>\n","type":"Object","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-groups","owner":"Ext.dd.DragDrop","short_doc":"The group defines a logical collection of DragDrop objects that are\nrelated. ...","html_type":"Object"},{"tagname":"property","name":"handleElId","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":100}],"doc":"<p>The ID of the element that initiates the drag operation.  By default\nthis is the linked element, but could be changed to be a child of this\nelement.  This lets us do things like only starting the drag when the\nheader element within the linked html element is clicked.</p>\n","type":"String","default":null,"properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-handleElId","owner":"Ext.dd.DragDrop","short_doc":"The ID of the element that initiates the drag operation. ...","html_type":"String"},{"tagname":"property","name":"hasOuterHandles","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":306}],"doc":"<p>By default, drags can only be initiated if the mousedown occurs in the\nregion the linked element is.  This is done in part to work around a\nbug in some browsers that mis-report the mousedown if the previous\nmouseup happened outside of the window.  This property is set to true\nif outer handles are defined. Defaults to false.</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-hasOuterHandles","owner":"Ext.dd.DragDrop","short_doc":"By default, drags can only be initiated if the mousedown occurs in the\nregion the linked element is. ...","html_type":"Boolean"},{"tagname":"property","name":"id","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":76}],"doc":"<p>The id of the element associated with this object.  This is what we\nrefer to as the \"linked element\" because the size and position of\nthis element is used to determine when the drag and drop objects have\ninteracted.</p>\n","type":"String","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-id","owner":"Ext.dd.DragDrop","short_doc":"The id of the element associated with this object. ...","html_type":"String"},{"tagname":"property","name":"ignoreSelf","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":69}],"doc":"<p>Set to false to enable a DragDrop object to fire drag events while dragging\nover its own Element. Defaults to true - DragDrop objects do not by default\nfire drag events to themselves.</p>\n","type":"Boolean","default":null,"properties":null,"id":"property-ignoreSelf","owner":"Ext.dd.DragDrop","short_doc":"Set to false to enable a DragDrop object to fire drag events while dragging\nover its own Element. ...","html_type":"Boolean"},{"tagname":"property","name":"invalidHandleClasses","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":134}],"doc":"<p>An Array of CSS class names for elements to be considered in valid as drag handles.</p>\n","type":"String[]","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-invalidHandleClasses","owner":"Ext.dd.DragDrop","html_type":"String[]"},{"tagname":"property","name":"invalidHandleIds","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":122}],"doc":"<p>An object who's property names identify the IDs of elements to be considered invalid as drag handles.\nA non-null property value identifies the ID as invalid. For example, to prevent\ndragging from being initiated on element ID \"foo\", use:</p>\n\n<pre><code>{\n    foo: true\n}\n</code></pre>\n","type":"Object","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-invalidHandleIds","owner":"Ext.dd.DragDrop","short_doc":"An object who's property names identify the IDs of elements to be considered invalid as drag handles. ...","html_type":"Object"},{"tagname":"property","name":"invalidHandleTypes","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":110}],"doc":"<p>An object who's property names identify HTML tags to be considered invalid as drag handles.\nA non-null property value identifies the tag as invalid. Defaults to the\nfollowing value which prevents drag operations from being initiated by <code>&lt;a&gt;</code> elements:</p>\n\n<pre><code>{\n    A: \"A\"\n}\n</code></pre>\n","type":"Object","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-invalidHandleTypes","owner":"Ext.dd.DragDrop","short_doc":"An object who's property names identify HTML tags to be considered invalid as drag handles. ...","html_type":"Object"},{"tagname":"property","name":"isTarget","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":196}],"doc":"<p>By default, all instances can be a drop target.  This can be disabled by\nsetting isTarget to false.</p>\n","type":"Boolean","default":"true","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-isTarget","owner":"Ext.dd.DragDrop","short_doc":"By default, all instances can be a drop target. ...","html_type":"Boolean"},{"tagname":"property","name":"locked","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":167}],"doc":"<p>Individual drag/drop instances can be locked.  This will prevent\nonmousedown start drag.</p>\n","type":"Boolean","default":"false","properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-locked","owner":"Ext.dd.DragDrop","short_doc":"Individual drag/drop instances can be locked. ...","html_type":"Boolean"},{"tagname":"property","name":"maintainOffset","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":267}],"doc":"<p>Maintain offsets when we resetconstraints.  Set to true when you want\nthe position of the element relative to its parent to stay the same\nwhen the page changes</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-maintainOffset","owner":"Ext.dd.DragDrop","short_doc":"Maintain offsets when we resetconstraints. ...","html_type":"Boolean"},{"tagname":"property","name":"maxX","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":246}],"doc":"<p>The right constraint</p>\n","type":"Number","default":"0","properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-maxX","owner":"Ext.dd.DragDrop","short_doc":"The right constraint ...","html_type":"Number"},{"tagname":"property","name":"maxY","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":260}],"doc":"<p>The down constraint</p>\n","type":"Number","default":"0","properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-maxY","owner":"Ext.dd.DragDrop","short_doc":"The down constraint ...","html_type":"Number"},{"tagname":"property","name":"minX","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":239}],"doc":"<p>The left constraint</p>\n","type":"Number","default":"0","properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-minX","owner":"Ext.dd.DragDrop","short_doc":"The left constraint ...","html_type":"Number"},{"tagname":"property","name":"minY","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":253}],"doc":"<p>The up constraint</p>\n","type":"Number","default":"0","properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-minY","owner":"Ext.dd.DragDrop","short_doc":"The up constraint ...","html_type":"Number"},{"tagname":"property","name":"moveOnly","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":182}],"doc":"<p>When set to true, other DD objects in cooperating DDGroups do not receive\nnotification events when this DD object is dragged over them.</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-moveOnly","owner":"Ext.dd.DragDrop","short_doc":"When set to true, other DD objects in cooperating DDGroups do not receive\nnotification events when this DD object is ...","html_type":"Boolean"},{"tagname":"property","name":"padding","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":203}],"doc":"<p>The padding configured for this drag and drop object for calculating\nthe drop zone intersection with this object.\nAn array containing the 4 padding values: [top, right, bottom, left]</p>\n","type":"Number[]","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-padding","owner":"Ext.dd.DragDrop","short_doc":"The padding configured for this drag and drop object for calculating\nthe drop zone intersection with this object. ...","html_type":"Number[]"},{"tagname":"property","name":"primaryButtonOnly","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":291}],"doc":"<p>By default the drag and drop instance will only respond to the primary\nbutton click (left button for a right-handed mouse).  Set to true to\nallow drag and drop to start with any mouse click that is propogated\nby the browser</p>\n","type":"Boolean","default":"true","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-primaryButtonOnly","owner":"Ext.dd.DragDrop","short_doc":"By default the drag and drop instance will only respond to the primary\nbutton click (left button for a right-handed m...","html_type":"Boolean"},{"tagname":"property","name":"resizeFrame","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DDProxy.js","linenr":48}],"doc":"<p>By default we resize the drag frame to be the same size as the element\nwe want to drag (this is to get the frame effect).  We can turn it off\nif we want a different behavior.</p>\n","type":"Boolean","default":"true","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-resizeFrame","owner":"Ext.dd.DDProxy","short_doc":"By default we resize the drag frame to be the same size as the element\nwe want to drag (this is to get the frame effe...","html_type":"Boolean"},{"tagname":"property","name":"scroll","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DD.js","linenr":31}],"doc":"<p>When set to true, the utility automatically tries to scroll the browser\nwindow when a drag and drop element is dragged near the viewport boundary.</p>\n","type":"Boolean","default":"true","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-scroll","owner":"Ext.dd.DD","short_doc":"When set to true, the utility automatically tries to scroll the browser\nwindow when a drag and drop element is dragge...","html_type":"Boolean"},{"tagname":"property","name":"startPageX","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":140}],"doc":"<p>The linked element's absolute X position at the time the drag was\nstarted</p>\n","type":"Number","default":"0","properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-startPageX","owner":"Ext.dd.DragDrop","short_doc":"The linked element's absolute X position at the time the drag was\nstarted ...","html_type":"Number"},{"tagname":"property","name":"startPageY","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":148}],"doc":"<p>The linked element's absolute X position at the time the drag was\nstarted</p>\n","type":"Number","default":"0","properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-startPageY","owner":"Ext.dd.DragDrop","short_doc":"The linked element's absolute X position at the time the drag was\nstarted ...","html_type":"Number"},{"tagname":"property","name":"triggerEvent","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":316}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":316,"type":"String","default":"'mousedown'","readonly":null,"id":"property-triggerEvent","owner":"Ext.dd.DragDrop","short_doc":" ...","html_type":"String"},{"tagname":"property","name":"xTicks","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":275}],"doc":"<p>Array of pixel locations the element will snap to if we specified a\nhorizontal graduation/interval.  This array is generated automatically\nwhen you define a tick interval.</p>\n","type":"Number[]","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-xTicks","owner":"Ext.dd.DragDrop","short_doc":"Array of pixel locations the element will snap to if we specified a\nhorizontal graduation/interval. ...","html_type":"Number[]"},{"tagname":"property","name":"yTicks","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":283}],"doc":"<p>Array of pixel locations the element will snap to if we specified a\nvertical graduation/interval.  This array is generated automatically\nwhen you define a tick interval.</p>\n","type":"Number[]","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-yTicks","owner":"Ext.dd.DragDrop","short_doc":"Array of pixel locations the element will snap to if we specified a\nvertical graduation/interval. ...","html_type":"Number[]"},{"tagname":"method","name":"constructor","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragZone.js","linenr":62}],"doc":"<p>Creates new DragZone.</p>\n","params":[{"tagname":"params","type":"String/HTMLElement/Ext.dom.Element","name":"el","doc":"<p>The container element or ID of it.</p>\n","html_type":"String/HTMLElement/Ext.dom.Element"},{"tagname":"params","type":"Object","name":"config","doc":"\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["callParent"],"id":"method-constructor","owner":"Ext.dd.DragZone","overrides":[{"name":"constructor","owner":"Ext.dd.DragSource","link":"<a href=\"#!/api/Ext.dd.DragSource-method-constructor\" rel=\"Ext.dd.DragSource-method-constructor\" class=\"docClass\">Ext.dd.DragSource.constructor</a>"}],"return":{"type":"Ext.dd.DragZone","doc":"\n","html_type":"<a href=\"#!/api/Ext.dd.DragZone\" rel=\"Ext.dd.DragZone\" class=\"docClass\">Ext.dd.DragZone</a>"},"short_doc":"Creates new DragZone. ..."},{"tagname":"method","name":"_resizeProxy","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DDProxy.js","linenr":140}],"doc":"<p>The proxy is automatically resized to the dimensions of the linked\nelement when a drag is initiated, unless resizeFrame is set to false</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getDragEl","getEl"],"id":"method-_resizeProxy","owner":"Ext.dd.DDProxy","short_doc":"The proxy is automatically resized to the dimensions of the linked\nelement when a drag is initiated, unless resizeFra..."},{"tagname":"method","name":"addInvalidHandleClass","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":852}],"doc":"<p>Lets you specify a css class of elements that will not initiate a drag</p>\n","params":[{"tagname":"params","type":"String","name":"cssClass","doc":"<p>the class of the elements you wish to ignore</p>\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-addInvalidHandleClass","owner":"Ext.dd.DragDrop","short_doc":"Lets you specify a css class of elements that will not initiate a drag ..."},{"tagname":"method","name":"addInvalidHandleId","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":839}],"doc":"<p>Lets you to specify an element id for a child of a drag handle\nthat should not initiate a drag</p>\n","params":[{"tagname":"params","type":"String","name":"id","doc":"<p>the element id of the element you wish to ignore</p>\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-addInvalidHandleId","owner":"Ext.dd.DragDrop","short_doc":"Lets you to specify an element id for a child of a drag handle\nthat should not initiate a drag ..."},{"tagname":"method","name":"addInvalidHandleType","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":827}],"doc":"<p>Allows you to specify a tag name that should not start a drag operation\nwhen clicked.  This is designed to facilitate embedding links within a\ndrag handle that do something other than start the drag.</p>\n","params":[{"tagname":"params","type":"String","name":"tagName","doc":"<p>the type of element to exclude</p>\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-addInvalidHandleType","owner":"Ext.dd.DragDrop","short_doc":"Allows you to specify a tag name that should not start a drag operation\nwhen clicked. ..."},{"tagname":"method","name":"addToGroup","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":691}],"doc":"<p>Adds this instance to a group of related drag/drop objects.  All\ninstances belong to at least one group, and can belong to as many\ngroups as needed.</p>\n","params":[{"tagname":"params","type":"String","name":"sGroup","doc":"<p>the name of the group</p>\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-addToGroup","owner":"Ext.dd.DragDrop","short_doc":"Adds this instance to a group of related drag/drop objects. ..."},{"tagname":"method","name":"afterDrag","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DDProxy.js","linenr":199}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":199,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-afterDrag","owner":"Ext.dd.DDProxy","short_doc":" ..."},{"tagname":"method","name":"afterDragDrop","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragSource.js","linenr":210}],"doc":"<p>An empty function by default, but provided so that you can perform a custom action\nafter a valid drag drop has occurred by providing an implementation.</p>\n","params":[{"tagname":"params","type":"Ext.dd.DragDrop","name":"target","doc":"<p>The drop target</p>\n","html_type":"<a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a>"},{"tagname":"params","type":"Event","name":"e","doc":"<p>The event object</p>\n","html_type":"Event"},{"tagname":"params","type":"String","name":"id","doc":"<p>The id of the dropped element</p>\n","html_type":"String"}],"id":"method-afterDragDrop","owner":"Ext.dd.DragSource","short_doc":"An empty function by default, but provided so that you can perform a custom action\nafter a valid drag drop has occurr..."},{"tagname":"method","name":"afterDragEnter","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragSource.js","linenr":96}],"doc":"<p>An empty function by default, but provided so that you can perform a custom action\nwhen the dragged item enters the drop target by providing an implementation.</p>\n","params":[{"tagname":"params","type":"Ext.dd.DragDrop","name":"target","doc":"<p>The drop target</p>\n","html_type":"<a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a>"},{"tagname":"params","type":"Event","name":"e","doc":"<p>The event object</p>\n","html_type":"Event"},{"tagname":"params","type":"String","name":"id","doc":"<p>The id of the dragged element</p>\n","html_type":"String"}],"id":"method-afterDragEnter","owner":"Ext.dd.DragSource","short_doc":"An empty function by default, but provided so that you can perform a custom action\nwhen the dragged item enters the d..."},{"tagname":"method","name":"afterDragOut","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragSource.js","linenr":168}],"doc":"<p>An empty function by default, but provided so that you can perform a custom action\nafter the dragged item is dragged out of the target without dropping.</p>\n","params":[{"tagname":"params","type":"Ext.dd.DragDrop","name":"target","doc":"<p>The drop target</p>\n","html_type":"<a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a>"},{"tagname":"params","type":"Event","name":"e","doc":"<p>The event object</p>\n","html_type":"Event"},{"tagname":"params","type":"String","name":"id","doc":"<p>The id of the dragged element</p>\n","html_type":"String"}],"id":"method-afterDragOut","owner":"Ext.dd.DragSource","short_doc":"An empty function by default, but provided so that you can perform a custom action\nafter the dragged item is dragged ..."},{"tagname":"method","name":"afterDragOver","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragSource.js","linenr":133}],"doc":"<p>An empty function by default, but provided so that you can perform a custom action\nwhile the dragged item is over the drop target by providing an implementation.</p>\n","params":[{"tagname":"params","type":"Ext.dd.DragDrop","name":"target","doc":"<p>The drop target</p>\n","html_type":"<a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a>"},{"tagname":"params","type":"Event","name":"e","doc":"<p>The event object</p>\n","html_type":"Event"},{"tagname":"params","type":"String","name":"id","doc":"<p>The id of the dragged element</p>\n","html_type":"String"}],"id":"method-afterDragOver","owner":"Ext.dd.DragSource","short_doc":"An empty function by default, but provided so that you can perform a custom action\nwhile the dragged item is over the..."},{"tagname":"method","name":"afterInvalidDrop","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragSource.js","linenr":280}],"doc":"<p>An empty function by default, but provided so that you can perform a custom action\nafter an invalid drop has occurred by providing an implementation.</p>\n","params":[{"tagname":"params","type":"Event","name":"e","doc":"<p>The event object</p>\n","html_type":"Event"},{"tagname":"params","type":"String","name":"id","doc":"<p>The id of the dropped element</p>\n","html_type":"String"}],"id":"method-afterInvalidDrop","owner":"Ext.dd.DragSource","short_doc":"An empty function by default, but provided so that you can perform a custom action\nafter an invalid drop has occurred..."},{"tagname":"method","name":"afterRepair","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragSource.js","linenr":292}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-afterRepair","owner":"Ext.dd.DragSource","short_doc":" ..."},{"tagname":"method","name":"afterValidDrop","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragSource.js","linenr":241}],"doc":"<p>An empty function by default, but provided so that you can perform a custom action\nafter a valid drop has occurred by providing an implementation.</p>\n","params":[{"tagname":"params","type":"Object","name":"target","doc":"<p>The target DD</p>\n","html_type":"Object"},{"tagname":"params","type":"Event","name":"e","doc":"<p>The event object</p>\n","html_type":"Event"},{"tagname":"params","type":"String","name":"id","doc":"<p>The id of the dropped element</p>\n","html_type":"String"}],"id":"method-afterValidDrop","owner":"Ext.dd.DragSource","short_doc":"An empty function by default, but provided so that you can perform a custom action\nafter a valid drop has occurred by..."},{"tagname":"method","name":"alignElWithMouse","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragSource.js","linenr":349}],"doc":"<p>Sets the element to the location of the mousedown or click event,\nmaintaining the cursor location relative to the location on the element\nthat was clicked.  Override this if you want to place the element in a\nlocation other than where the cursor is.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":349,"params":[],"chainable":false,"fires":[],"method_calls":["callParent"],"id":"method-alignElWithMouse","owner":"Ext.dd.DragSource","overrides":[{"name":"alignElWithMouse","owner":"Ext.dd.DD","link":"<a href=\"#!/api/Ext.dd.DD-method-alignElWithMouse\" rel=\"Ext.dd.DD-method-alignElWithMouse\" class=\"docClass\">Ext.dd.DD.alignElWithMouse</a>"}],"short_doc":"Sets the element to the location of the mousedown or click event,\nmaintaining the cursor location relative to the loc..."},{"tagname":"method","name":"applyConfig","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DDProxy.js","linenr":108}],"doc":"<p>Sets up config options specific to this class. Overrides\n<a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a>, but all versions of this method through the\ninheritance chain are called</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":108,"params":[],"chainable":false,"fires":[],"method_calls":["callParent","setDragElId"],"id":"method-applyConfig","owner":"Ext.dd.DDProxy","overrides":[{"name":"applyConfig","owner":"Ext.dd.DD","link":"<a href=\"#!/api/Ext.dd.DD-method-applyConfig\" rel=\"Ext.dd.DD-method-applyConfig\" class=\"docClass\">Ext.dd.DD.applyConfig</a>"}],"short_doc":"Sets up config options specific to this class. ..."},{"tagname":"method","name":"autoOffset","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragSource.js","linenr":408}],"doc":"<p>Sets the pointer offset to the distance between the linked element's top\nleft corner and the location the element was clicked.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"x","type":"Object","html_type":"Object"},{"name":"y","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["setDelta"],"id":"method-autoOffset","owner":"Ext.dd.DragSource","overrides":[{"name":"autoOffset","owner":"Ext.dd.DD","link":"<a href=\"#!/api/Ext.dd.DD-method-autoOffset\" rel=\"Ext.dd.DD-method-autoOffset\" class=\"docClass\">Ext.dd.DD.autoOffset</a>"}],"short_doc":"Sets the pointer offset to the distance between the linked element's top\nleft corner and the location the element was..."},{"tagname":"method","name":"autoScroll","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DD.js","linenr":142}],"doc":"<p>Auto-scroll the window if the dragged object has been moved beyond the\nvisible window boundary.</p>\n","params":[{"tagname":"params","type":"Number","name":"x","doc":"<p>the drag element's x position</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"y","doc":"<p>the drag element's y position</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"h","doc":"<p>the height of the drag element</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"w","doc":"<p>the width of the drag element</p>\n","html_type":"Number"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-autoScroll","owner":"Ext.dd.DD","short_doc":"Auto-scroll the window if the dragged object has been moved beyond the\nvisible window boundary. ..."},{"tagname":"method","name":"b4Drag","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DD.js","linenr":265}],"doc":"<p>Event that fires prior to the onDrag event.  Overrides\n<a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"name":"e","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["setDragElPos"],"id":"method-b4Drag","owner":"Ext.dd.DD","overrides":[{"name":"b4Drag","owner":"Ext.dd.DragDrop","link":"<a href=\"#!/api/Ext.dd.DragDrop-method-b4Drag\" rel=\"Ext.dd.DragDrop-method-b4Drag\" class=\"docClass\">Ext.dd.DragDrop.b4Drag</a>"}],"short_doc":"Event that fires prior to the onDrag event. ..."},{"tagname":"method","name":"b4DragDrop","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":386}],"doc":"<p>Code that executes immediately before the onDragDrop event</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"e","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-b4DragDrop","owner":"Ext.dd.DragDrop","short_doc":"Code that executes immediately before the onDragDrop event ..."},{"tagname":"method","name":"b4DragOut","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":371}],"doc":"<p>Code that executes immediately before the onDragOut event</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"e","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-b4DragOut","owner":"Ext.dd.DragDrop","short_doc":"Code that executes immediately before the onDragOut event ..."},{"tagname":"method","name":"b4DragOver","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":355}],"doc":"<p>Code that executes immediately before the onDragOver event</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"e","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-b4DragOver","owner":"Ext.dd.DragDrop","short_doc":"Code that executes immediately before the onDragOver event ..."},{"tagname":"method","name":"b4EndDrag","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragSource.js","linenr":395}],"doc":"<p>overrides <a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a></p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"e","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-b4EndDrag","owner":"Ext.dd.DragSource","return":null,"throws":null,"properties":null,"type":null,"overrides":[{"name":"b4EndDrag","owner":"Ext.dd.DDProxy","link":"<a href=\"#!/api/Ext.dd.DDProxy-method-b4EndDrag\" rel=\"Ext.dd.DDProxy-method-b4EndDrag\" class=\"docClass\">Ext.dd.DDProxy.b4EndDrag</a>"}],"short_doc":"overrides Ext.dd.DragDrop ..."},{"tagname":"method","name":"b4MouseDown","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DDProxy.js","linenr":152}],"doc":"<p>overrides <a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a></p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"name":"e","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["autoOffset","setDragElPos"],"id":"method-b4MouseDown","owner":"Ext.dd.DDProxy","overrides":[{"name":"b4MouseDown","owner":"Ext.dd.DD","link":"<a href=\"#!/api/Ext.dd.DD-method-b4MouseDown\" rel=\"Ext.dd.DD-method-b4MouseDown\" class=\"docClass\">Ext.dd.DD.b4MouseDown</a>"}],"short_doc":"overrides Ext.dd.DragDrop ..."},{"tagname":"method","name":"b4StartDrag","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DDProxy.js","linenr":162}],"doc":"<p>overrides <a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a></p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[{"name":"x","type":"Object","html_type":"Object"},{"name":"y","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["showFrame"],"id":"method-b4StartDrag","owner":"Ext.dd.DDProxy","return":null,"throws":null,"properties":null,"type":null,"overrides":[{"name":"b4StartDrag","owner":"Ext.dd.DragDrop","link":"<a href=\"#!/api/Ext.dd.DragDrop-method-b4StartDrag\" rel=\"Ext.dd.DragDrop-method-b4StartDrag\" class=\"docClass\">Ext.dd.DragDrop.b4StartDrag</a>"}],"short_doc":"overrides Ext.dd.DragDrop ..."},{"tagname":"method","name":"beforeDragDrop","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragSource.js","linenr":224}],"doc":"<p>An empty function by default, but provided so that you can perform a custom action before the dragged\nitem is dropped onto the target and optionally cancel the onDragDrop.</p>\n","params":[{"tagname":"params","type":"Ext.dd.DragDrop","name":"target","doc":"<p>The drop target</p>\n","html_type":"<a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a>"},{"tagname":"params","type":"Event","name":"e","doc":"<p>The event object</p>\n","html_type":"Event"},{"tagname":"params","type":"String","name":"id","doc":"<p>The id of the dragged element</p>\n","html_type":"String"}],"return":{"type":"Boolean","name":"return","doc":"<p>isValid True if the drag drop event is valid, else false to cancel</p>\n","properties":null,"html_type":"Boolean"},"template":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-beforeDragDrop","owner":"Ext.dd.DragSource","short_doc":"An empty function by default, but provided so that you can perform a custom action before the dragged\nitem is dropped..."},{"tagname":"method","name":"beforeDragEnter","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragSource.js","linenr":109}],"doc":"<p>An empty function by default, but provided so that you can perform a custom action\nbefore the dragged item enters the drop target and optionally cancel the onDragEnter.</p>\n","params":[{"tagname":"params","type":"Ext.dd.DragDrop","name":"target","doc":"<p>The drop target</p>\n","html_type":"<a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a>"},{"tagname":"params","type":"Event","name":"e","doc":"<p>The event object</p>\n","html_type":"Event"},{"tagname":"params","type":"String","name":"id","doc":"<p>The id of the dragged element</p>\n","html_type":"String"}],"return":{"type":"Boolean","name":"return","doc":"<p>isValid True if the drag event is valid, else false to cancel</p>\n","properties":null,"html_type":"Boolean"},"template":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-beforeDragEnter","owner":"Ext.dd.DragSource","short_doc":"An empty function by default, but provided so that you can perform a custom action\nbefore the dragged item enters the..."},{"tagname":"method","name":"beforeDragOut","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragSource.js","linenr":182}],"doc":"<p>An empty function by default, but provided so that you can perform a custom action before the dragged\nitem is dragged out of the target without dropping, and optionally cancel the onDragOut.</p>\n","params":[{"tagname":"params","type":"Ext.dd.DragDrop","name":"target","doc":"<p>The drop target</p>\n","html_type":"<a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a>"},{"tagname":"params","type":"Event","name":"e","doc":"<p>The event object</p>\n","html_type":"Event"},{"tagname":"params","type":"String","name":"id","doc":"<p>The id of the dragged element</p>\n","html_type":"String"}],"return":{"type":"Boolean","name":"return","doc":"<p>isValid True if the drag event is valid, else false to cancel</p>\n","properties":null,"html_type":"Boolean"},"template":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-beforeDragOut","owner":"Ext.dd.DragSource","short_doc":"An empty function by default, but provided so that you can perform a custom action before the dragged\nitem is dragged..."},{"tagname":"method","name":"beforeDragOver","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragSource.js","linenr":146}],"doc":"<p>An empty function by default, but provided so that you can perform a custom action\nwhile the dragged item is over the drop target and optionally cancel the onDragOver.</p>\n","params":[{"tagname":"params","type":"Ext.dd.DragDrop","name":"target","doc":"<p>The drop target</p>\n","html_type":"<a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a>"},{"tagname":"params","type":"Event","name":"e","doc":"<p>The event object</p>\n","html_type":"Event"},{"tagname":"params","type":"String","name":"id","doc":"<p>The id of the dragged element</p>\n","html_type":"String"}],"return":{"type":"Boolean","name":"return","doc":"<p>isValid True if the drag event is valid, else false to cancel</p>\n","properties":null,"html_type":"Boolean"},"template":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-beforeDragOver","owner":"Ext.dd.DragSource","short_doc":"An empty function by default, but provided so that you can perform a custom action\nwhile the dragged item is over the..."},{"tagname":"method","name":"beforeInvalidDrop","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragSource.js","linenr":301}],"doc":"<p>An empty function by default, but provided so that you can perform a custom action after an invalid\ndrop has occurred.</p>\n","params":[{"tagname":"params","type":"Ext.dd.DragDrop","name":"target","doc":"<p>The drop target</p>\n","html_type":"<a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a>"},{"tagname":"params","type":"Event","name":"e","doc":"<p>The event object</p>\n","html_type":"Event"},{"tagname":"params","type":"String","name":"id","doc":"<p>The id of the dragged element</p>\n","html_type":"String"}],"return":{"type":"Boolean","name":"return","doc":"<p>isValid True if the invalid drop should proceed, else false to cancel</p>\n","properties":null,"html_type":"Boolean"},"template":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-beforeInvalidDrop","owner":"Ext.dd.DragSource","short_doc":"An empty function by default, but provided so that you can perform a custom action after an invalid\ndrop has occurred. ..."},{"tagname":"method","name":"beforeMove","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DDProxy.js","linenr":195}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":195,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-beforeMove","owner":"Ext.dd.DDProxy","short_doc":" ..."},{"tagname":"method","name":"cachePosition","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DD.js","linenr":121}],"doc":"<p>Saves the most recent position so that we can reset the constraints and\ntick marks on-demand.  We need to know this so that we can calculate the\nnumber of pixels the element is offset from its original position.</p>\n","params":[{"tagname":"params","type":"Number","name":"iPageX","optional":true,"doc":"<p>the current x position (this just makes it so we\ndon't have to look it up again)</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"iPageY","optional":true,"doc":"<p>the current y position (this just makes it so we\ndon't have to look it up again)</p>\n","html_type":"Number"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getEl"],"id":"method-cachePosition","owner":"Ext.dd.DD","short_doc":"Saves the most recent position so that we can reset the constraints and\ntick marks on-demand. ..."},{"tagname":"method","name":"clearConstraints","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":1001}],"doc":"<p>Clears any constraints applied to this instance.  Also clears ticks\nsince they can't exist independent of a constraint at this time.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["clearTicks"],"id":"method-clearConstraints","owner":"Ext.dd.DragDrop","short_doc":"Clears any constraints applied to this instance. ..."},{"tagname":"method","name":"clearTicks","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":1011}],"doc":"<p>Clears any tick interval defined for this instance</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-clearTicks","owner":"Ext.dd.DragDrop","short_doc":"Clears any tick interval defined for this instance ..."},{"tagname":"method","name":"clickValidator","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":820}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":820,"params":[{"name":"e","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["isValidHandleChild"],"id":"method-clickValidator","owner":"Ext.dd.DragDrop","short_doc":" ..."},{"tagname":"method","name":"constrainTo","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":458}],"doc":"<p>Initializes the drag drop object's constraints to restrict movement to a certain element.</p>\n\n<p>Usage:</p>\n\n<pre><code>var dd = new <a href=\"#!/api/Ext.dd.DDProxy\" rel=\"Ext.dd.DDProxy\" class=\"docClass\">Ext.dd.DDProxy</a>(\"dragDiv1\", \"proxytest\",\n               { dragElId: \"existingProxyDiv\" });\ndd.startDrag = function(){\n    this.constrainTo(\"parent-id\");\n};\n</code></pre>\n\n<p>Or you can initalize it using the Ext.dom.Element object:</p>\n\n<pre><code>Ext.get(\"dragDiv1\").initDDProxy(\"proxytest\", {dragElId: \"existingProxyDiv\"}, {\n    startDrag : function(){\n        this.constrainTo(\"parent-id\");\n    }\n});\n</code></pre>\n","params":[{"tagname":"params","type":"String/HTMLElement/Ext.dom.Element","name":"constrainTo","doc":"<p>The element or element ID to constrain to.</p>\n","html_type":"String/HTMLElement/Ext.dom.Element"},{"tagname":"params","type":"Object/Number","name":"pad","optional":true,"doc":"<p>Pad provides a way to specify \"padding\" of the constraints,\nand can be either a number for symmetrical padding (4 would be equal to <code>{left:4, right:4, top:4, bottom:4}</code>) or\nan object containing the sides to pad. For example: <code>{right:10, bottom:10}</code></p>\n","html_type":"Object/Number"},{"tagname":"params","type":"Boolean","name":"inContent","optional":true,"doc":"<p>Constrain the draggable in the content box of the element (inside padding and borders)</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getEl","resetConstraints","setXConstraint","setYConstraint"],"id":"method-constrainTo","owner":"Ext.dd.DragDrop","short_doc":"Initializes the drag drop object's constraints to restrict movement to a certain element. ..."},{"tagname":"method","name":"createFrame","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DDProxy.js","linenr":65}],"doc":"<p>Creates the proxy element if it does not yet exist</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["createFrame","getDragEl"],"id":"method-createFrame","owner":"Ext.dd.DDProxy","short_doc":"Creates the proxy element if it does not yet exist ..."},{"tagname":"method","name":"destroy","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragZone.js","linenr":130}],"doc":"<p>Destroy this DragDrop instance</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":130,"params":[],"chainable":false,"fires":[],"method_calls":["callParent"],"id":"method-destroy","owner":"Ext.dd.DragZone","overrides":[{"name":"destroy","owner":"Ext.dd.DragSource","link":"<a href=\"#!/api/Ext.dd.DragSource-method-destroy\" rel=\"Ext.dd.DragSource-method-destroy\" class=\"docClass\">Ext.dd.DragSource.destroy</a>"}],"short_doc":"Destroy this DragDrop instance ..."},{"tagname":"method","name":"endDrag","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragSource.js","linenr":399}],"doc":"<p>overrides <a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a>\nBy default we try to move the element to the last location of the frame.\nThis is so that the default behavior mirrors that of <a href=\"#!/api/Ext.dd.DD\" rel=\"Ext.dd.DD\" class=\"docClass\">Ext.dd.DD</a>.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"e","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["onEndDrag"],"id":"method-endDrag","owner":"Ext.dd.DragSource","overrides":[{"name":"endDrag","owner":"Ext.dd.DDProxy","link":"<a href=\"#!/api/Ext.dd.DDProxy-method-endDrag\" rel=\"Ext.dd.DDProxy-method-endDrag\" class=\"docClass\">Ext.dd.DDProxy.endDrag</a>"}],"short_doc":"overrides Ext.dd.DragDrop\nBy default we try to move the element to the last location of the frame. ..."},{"tagname":"method","name":"getDragData","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragZone.js","linenr":94}],"doc":"<p>Called when a mousedown occurs in this container. Looks in <a href=\"#!/api/Ext.dd.Registry\" rel=\"Ext.dd.Registry\" class=\"docClass\">Ext.dd.Registry</a> for a valid target to drag\nbased on the mouse down. Override this method to provide your own lookup logic (e.g. finding a child by class\nname). Make sure your returned object has a \"ddel\" attribute (with an HTML Element) for other functions to work.</p>\n","params":[{"tagname":"params","type":"Event","name":"e","doc":"<p>The mouse down event</p>\n","html_type":"Event"}],"return":{"type":"Object","name":"return","doc":"<p>The dragData</p>\n\n\n\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getDragData","owner":"Ext.dd.DragZone","overrides":[{"name":"getDragData","owner":"Ext.dd.DragSource","link":"<a href=\"#!/api/Ext.dd.DragSource-method-getDragData\" rel=\"Ext.dd.DragSource-method-getDragData\" class=\"docClass\">Ext.dd.DragSource.getDragData</a>"}],"short_doc":"Called when a mousedown occurs in this container. ..."},{"tagname":"method","name":"getDragEl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":530}],"doc":"<p>Returns a reference to the actual element to drag.  By default this is\nthe same as the html element, but it can be assigned to another\nelement. An example of this can be found in <a href=\"#!/api/Ext.dd.DDProxy\" rel=\"Ext.dd.DDProxy\" class=\"docClass\">Ext.dd.DDProxy</a></p>\n","return":{"type":"HTMLElement","name":"return","doc":"<p>the html element</p>\n\n","properties":null,"html_type":"HTMLElement"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getDragEl","owner":"Ext.dd.DragDrop","short_doc":"Returns a reference to the actual element to drag. ..."},{"tagname":"method","name":"getEl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":518}],"doc":"<p>Returns a reference to the linked element</p>\n","return":{"type":"HTMLElement","name":"return","doc":"<p>the html element</p>\n","properties":null,"html_type":"HTMLElement"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getEl","owner":"Ext.dd.DragDrop","short_doc":"Returns a reference to the linked element ..."},{"tagname":"method","name":"getLocalX","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DD.js","linenr":278}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":278,"params":[{"name":"el","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-getLocalX","owner":"Ext.dd.DD","short_doc":" ..."},{"tagname":"method","name":"getProxy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragSource.js","linenr":373}],"doc":"<p>Returns the drag source's underlying <a href=\"#!/api/Ext.dd.StatusProxy\" rel=\"Ext.dd.StatusProxy\" class=\"docClass\">Ext.dd.StatusProxy</a></p>\n","return":{"type":"Ext.dd.StatusProxy","name":"return","doc":"<p>proxy The StatusProxy</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dd.StatusProxy\" rel=\"Ext.dd.StatusProxy\" class=\"docClass\">Ext.dd.StatusProxy</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getProxy","owner":"Ext.dd.DragSource","short_doc":"Returns the drag source's underlying Ext.dd.StatusProxy ..."},{"tagname":"method","name":"getRepairXY","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragZone.js","linenr":119}],"doc":"<p>Called before a repair of an invalid drop to get the XY to animate to. By default returns the XY of\nthis.dragData.ddel</p>\n","params":[{"tagname":"params","type":"Event","name":"e","doc":"<p>The mouse up event</p>\n","html_type":"Event"}],"return":{"type":"Number[]","name":"return","doc":"<p>The xy location (e.g. <code>[100, 200]</code>)</p>\n\n\n\n","properties":null,"html_type":"Number[]"},"template":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getRepairXY","owner":"Ext.dd.DragZone","overrides":[{"name":"getRepairXY","owner":"Ext.dd.DragSource","link":"<a href=\"#!/api/Ext.dd.DragSource-method-getRepairXY\" rel=\"Ext.dd.DragSource-method-getRepairXY\" class=\"docClass\">Ext.dd.DragSource.getRepairXY</a>"}],"short_doc":"Called before a repair of an invalid drop to get the XY to animate to. ..."},{"tagname":"method","name":"getTargetCoord","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DD.js","linenr":206}],"doc":"<p>Finds the location the element should be placed if we want to move\nit to where the mouse location less the click offset would place us.</p>\n","params":[{"tagname":"params","type":"Number","name":"iPageX","doc":"<p>the X coordinate of the click</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"iPageY","doc":"<p>the Y coordinate of the click</p>\n","html_type":"Number"}],"return":{"type":"Object","name":"return","doc":"<p>An object that contains the coordinates (Object.x and Object.y)</p>\n","properties":[{"tagname":"return","type":"Number","name":"x","doc":"\n","html_type":"Number"},{"tagname":"return","type":"Number","name":"y","doc":"\n","html_type":"Number"}],"html_type":"Object"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getTick"],"id":"method-getTargetCoord","owner":"Ext.dd.DD","short_doc":"Finds the location the element should be placed if we want to move\nit to where the mouse location less the click offs..."},{"tagname":"method","name":"getTick","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":1073}],"doc":"<p>Normally the drag element is moved pixel by pixel, but we can specify\nthat it move a number of pixels at a time.  This method resolves the\nlocation when we have it set up like this.</p>\n","params":[{"tagname":"params","type":"Number","name":"val","doc":"<p>where we want to place the object</p>\n","html_type":"Number"},{"tagname":"params","type":"Number[]","name":"tickArray","doc":"<p>sorted array of valid points</p>\n","html_type":"Number[]"}],"return":{"type":"Number","name":"return","doc":"<p>the closest tick</p>\n","properties":null,"html_type":"Number"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getTick","owner":"Ext.dd.DragDrop","short_doc":"Normally the drag element is moved pixel by pixel, but we can specify\nthat it move a number of pixels at a time. ..."},{"tagname":"method","name":"handleMouseDown","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragSource.js","linenr":314}],"doc":"<p>Called when this object is clicked</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"Event","name":"e","doc":"\n","html_type":"Event"},{"tagname":"params","type":"Ext.dd.DragDrop","name":"oDD","doc":"<p>the clicked dd object (this dd obj)</p>\n\n","html_type":"<a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a>"}],"chainable":false,"fires":[],"method_calls":["callParent","getDragData","onBeforeDrag"],"id":"method-handleMouseDown","owner":"Ext.dd.DragSource","return":null,"throws":null,"properties":null,"type":null,"overrides":[{"name":"handleMouseDown","owner":"Ext.dd.DragDrop","link":"<a href=\"#!/api/Ext.dd.DragDrop-method-handleMouseDown\" rel=\"Ext.dd.DragDrop-method-handleMouseDown\" class=\"docClass\">Ext.dd.DragDrop.handleMouseDown</a>"}],"short_doc":"Called when this object is clicked ..."},{"tagname":"method","name":"handleOnAvailable","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":618}],"doc":"<p>Executed when the linked element is available</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["onAvailable","resetConstraints"],"id":"method-handleOnAvailable","owner":"Ext.dd.DragDrop","short_doc":"Executed when the linked element is available ..."},{"tagname":"method","name":"hideProxy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragSource.js","linenr":381}],"doc":"<p>Hides the drag source's <a href=\"#!/api/Ext.dd.StatusProxy\" rel=\"Ext.dd.StatusProxy\" class=\"docClass\">Ext.dd.StatusProxy</a></p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-hideProxy","owner":"Ext.dd.DragSource","short_doc":"Hides the drag source's Ext.dd.StatusProxy ..."},{"tagname":"method","name":"init","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":540}],"doc":"<p>Sets up the DragDrop object.  Must be called in the constructor of any\n<a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a> subclass</p>\n","params":[{"tagname":"params","type":"String","name":"id","doc":"<p>the id of the linked element</p>\n","html_type":"String"},{"tagname":"params","type":"String","name":"sGroup","doc":"<p>the group of related items</p>\n","html_type":"String"},{"tagname":"params","type":"Object","name":"config","doc":"<p>configuration attributes</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["initTarget"],"id":"method-init","owner":"Ext.dd.DragDrop","short_doc":"Sets up the DragDrop object. ..."},{"tagname":"method","name":"initFrame","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DDProxy.js","linenr":100}],"doc":"<p>Initialization for the drag frame element.  Must be called in the\nconstructor of all subclasses</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["createFrame"],"id":"method-initFrame","owner":"Ext.dd.DDProxy","short_doc":"Initialization for the drag frame element. ..."},{"tagname":"method","name":"initTarget","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":556}],"doc":"<p>Initializes Targeting functionality only... the object does not\nget a mousedown handler.</p>\n","params":[{"tagname":"params","type":"String","name":"id","doc":"<p>the id of the linked element</p>\n","html_type":"String"},{"tagname":"params","type":"String","name":"sGroup","doc":"<p>the group of related items</p>\n","html_type":"String"},{"tagname":"params","type":"Object","name":"config","doc":"<p>configuration attributes</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["addToGroup","applyConfig","handleOnAvailable","setDragElId"],"id":"method-initTarget","owner":"Ext.dd.DragDrop","short_doc":"Initializes Targeting functionality only... ..."},{"tagname":"method","name":"isLocked","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":781}],"doc":"<p>Returns true if this instance is locked, or the drag drop mgr is locked\n(meaning that all drag/drop is disabled on the page.)</p>\n","return":{"type":"Boolean","name":"return","doc":"<p>true if this obj or all drag/drop is locked, else\nfalse</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-isLocked","owner":"Ext.dd.DragDrop","short_doc":"Returns true if this instance is locked, or the drag drop mgr is locked\n(meaning that all drag/drop is disabled on th..."},{"tagname":"method","name":"isValidHandleChild","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":894}],"doc":"<p>Checks the tag exclusion list to see if this click should be ignored</p>\n","params":[{"tagname":"params","type":"HTMLElement","name":"node","doc":"<p>the HTMLElement to evaluate</p>\n","html_type":"HTMLElement"}],"return":{"type":"Boolean","name":"return","doc":"<p>true if this is a valid tag type, false if not</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-isValidHandleChild","owner":"Ext.dd.DragDrop","short_doc":"Checks the tag exclusion list to see if this click should be ignored ..."},{"tagname":"method","name":"lock","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":175}],"doc":"<p>Locks this instance</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-lock","owner":"Ext.dd.DragDrop","short_doc":"Locks this instance ..."},{"tagname":"method","name":"onAvailable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":440}],"doc":"<p>Override the onAvailable method to do what is needed after the initial\nposition was determined.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-onAvailable","owner":"Ext.dd.DragDrop","short_doc":"Override the onAvailable method to do what is needed after the initial\nposition was determined. ..."},{"tagname":"method","name":"onBeforeDrag","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragSource.js","linenr":327}],"doc":"<p>An empty function by default, but provided so that you can perform a custom action before the initial\ndrag event begins and optionally cancel it.</p>\n","params":[{"tagname":"params","type":"Object","name":"data","doc":"<p>An object containing arbitrary data to be shared with drop targets</p>\n","html_type":"Object"},{"tagname":"params","type":"Event","name":"e","doc":"<p>The event object</p>\n","html_type":"Event"}],"return":{"type":"Boolean","name":"return","doc":"<p>isValid True if the drag event is valid, else false to cancel</p>\n\n","properties":null,"html_type":"Boolean"},"template":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-onBeforeDrag","owner":"Ext.dd.DragSource","short_doc":"An empty function by default, but provided so that you can perform a custom action before the initial\ndrag event begi..."},{"tagname":"method","name":"onDrag","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":338}],"doc":"<p>Abstract method called during the onMouseMove event while dragging an\nobject.</p>\n","params":[{"tagname":"params","type":"Event","name":"e","doc":"<p>the mousemove event</p>\n","html_type":"Event"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-onDrag","owner":"Ext.dd.DragDrop","short_doc":"Abstract method called during the onMouseMove event while dragging an\nobject. ..."},{"tagname":"method","name":"onDragDrop","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragSource.js","linenr":195}],"doc":"<p>Abstract method called when this item is dropped on another DragDrop\nobj</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"e","type":"Object","html_type":"Object"},{"name":"id","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["afterDragDrop","beforeDragDrop","onInvalidDrop","onValidDrop"],"id":"method-onDragDrop","owner":"Ext.dd.DragSource","overrides":[{"name":"onDragDrop","owner":"Ext.dd.DragDrop","link":"<a href=\"#!/api/Ext.dd.DragDrop-method-onDragDrop\" rel=\"Ext.dd.DragDrop-method-onDragDrop\" class=\"docClass\">Ext.dd.DragDrop.onDragDrop</a>"}],"short_doc":"Abstract method called when this item is dropped on another DragDrop\nobj ..."},{"tagname":"method","name":"onDragEnter","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragSource.js","linenr":82}],"doc":"<p>Abstract method called when this element fist begins hovering over\nanother DragDrop obj</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"e","type":"Object","html_type":"Object"},{"name":"id","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["afterDragEnter","beforeDragEnter"],"id":"method-onDragEnter","owner":"Ext.dd.DragSource","overrides":[{"name":"onDragEnter","owner":"Ext.dd.DragDrop","link":"<a href=\"#!/api/Ext.dd.DragDrop-method-onDragEnter\" rel=\"Ext.dd.DragDrop-method-onDragEnter\" class=\"docClass\">Ext.dd.DragDrop.onDragEnter</a>"}],"short_doc":"Abstract method called when this element fist begins hovering over\nanother DragDrop obj ..."},{"tagname":"method","name":"onDragOut","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragSource.js","linenr":159}],"doc":"<p>Abstract method called when we are no longer hovering over an element</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"e","type":"Object","html_type":"Object"},{"name":"id","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["afterDragOut","beforeDragOut"],"id":"method-onDragOut","owner":"Ext.dd.DragSource","overrides":[{"name":"onDragOut","owner":"Ext.dd.DragDrop","link":"<a href=\"#!/api/Ext.dd.DragDrop-method-onDragOut\" rel=\"Ext.dd.DragDrop-method-onDragOut\" class=\"docClass\">Ext.dd.DragDrop.onDragOut</a>"}],"short_doc":"Abstract method called when we are no longer hovering over an element ..."},{"tagname":"method","name":"onDragOver","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragSource.js","linenr":122}],"doc":"<p>Abstract method called when this element is hovering over another\nDragDrop obj</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"e","type":"Object","html_type":"Object"},{"name":"id","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["afterDragOver","beforeDragOver"],"id":"method-onDragOver","owner":"Ext.dd.DragSource","overrides":[{"name":"onDragOver","owner":"Ext.dd.DragDrop","link":"<a href=\"#!/api/Ext.dd.DragDrop-method-onDragOver\" rel=\"Ext.dd.DragDrop-method-onDragOver\" class=\"docClass\">Ext.dd.DragDrop.onDragOver</a>"}],"short_doc":"Abstract method called when this element is hovering over another\nDragDrop obj ..."},{"tagname":"method","name":"onEndDrag","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragSource.js","linenr":404}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"data","type":"Object","html_type":"Object"},{"name":"e","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-onEndDrag","owner":"Ext.dd.DragSource","short_doc":" ..."},{"tagname":"method","name":"onInitDrag","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragZone.js","linenr":105}],"doc":"<p>Called once drag threshold has been reached to initialize the proxy element. By default, it clones the\nthis.dragData.ddel</p>\n","params":[{"tagname":"params","type":"Number","name":"x","doc":"<p>The x position of the click on the dragged object</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"y","doc":"<p>The y position of the click on the dragged object</p>\n","html_type":"Number"}],"return":{"type":"Boolean","name":"return","doc":"<p>true to continue the drag, false to cancel</p>\n\n\n\n","properties":null,"html_type":"Boolean"},"template":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["onStartDrag"],"id":"method-onInitDrag","owner":"Ext.dd.DragZone","overrides":[{"name":"onInitDrag","owner":"Ext.dd.DragSource","link":"<a href=\"#!/api/Ext.dd.DragSource-method-onInitDrag\" rel=\"Ext.dd.DragSource-method-onInitDrag\" class=\"docClass\">Ext.dd.DragSource.onInitDrag</a>"}],"short_doc":"Called once drag threshold has been reached to initialize the proxy element. ..."},{"tagname":"method","name":"onInvalidDrop","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragSource.js","linenr":258}],"doc":"<p>Abstract method called when this item is dropped on an area with no\ndrop target</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"target","type":"Object","html_type":"Object"},{"name":"e","type":"Object","html_type":"Object"},{"name":"id","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["afterInvalidDrop","beforeInvalidDrop","getRepairXY"],"id":"method-onInvalidDrop","owner":"Ext.dd.DragSource","overrides":[{"name":"onInvalidDrop","owner":"Ext.dd.DragDrop","link":"<a href=\"#!/api/Ext.dd.DragDrop-method-onInvalidDrop\" rel=\"Ext.dd.DragDrop-method-onInvalidDrop\" class=\"docClass\">Ext.dd.DragDrop.onInvalidDrop</a>"}],"short_doc":"Abstract method called when this item is dropped on an area with no\ndrop target ..."},{"tagname":"method","name":"onMouseDown","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":428}],"doc":"<p>Called when a drag/drop obj gets a mousedown</p>\n","params":[{"tagname":"params","type":"Event","name":"e","doc":"<p>the mousedown event</p>\n","html_type":"Event"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-onMouseDown","owner":"Ext.dd.DragDrop","short_doc":"Called when a drag/drop obj gets a mousedown ..."},{"tagname":"method","name":"onMouseUp","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":434}],"doc":"<p>Called when a drag/drop obj gets a mouseup</p>\n","params":[{"tagname":"params","type":"Event","name":"e","doc":"<p>the mouseup event</p>\n","html_type":"Event"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-onMouseUp","owner":"Ext.dd.DragDrop","short_doc":"Called when a drag/drop obj gets a mouseup ..."},{"tagname":"method","name":"onStartDrag","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragSource.js","linenr":339}],"doc":"<p>An empty function by default, but provided so that you can perform a custom action once the initial\ndrag event has begun.  The drag cannot be canceled from this function.</p>\n","params":[{"tagname":"params","type":"Number","name":"x","doc":"<p>The x position of the click on the dragged object</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"y","doc":"<p>The y position of the click on the dragged object</p>\n","html_type":"Number"}],"template":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-onStartDrag","owner":"Ext.dd.DragSource","short_doc":"An empty function by default, but provided so that you can perform a custom action once the initial\ndrag event has be..."},{"tagname":"method","name":"onValidDrop","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragSource.js","linenr":237}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"target","type":"Object","html_type":"Object"},{"name":"e","type":"Object","html_type":"Object"},{"name":"id","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["afterValidDrop","hideProxy"],"id":"method-onValidDrop","owner":"Ext.dd.DragSource","short_doc":" ..."},{"tagname":"method","name":"removeFromGroup","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":702}],"doc":"<p>Removes this instance from the supplied interaction group</p>\n","params":[{"tagname":"params","type":"String","name":"sGroup","doc":"<p>The group to drop</p>\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-removeFromGroup","owner":"Ext.dd.DragDrop","short_doc":"Removes this instance from the supplied interaction group ..."},{"tagname":"method","name":"removeInvalidHandleClass","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":881}],"doc":"<p>Unsets an invalid css class</p>\n","params":[{"tagname":"params","type":"String","name":"cssClass","doc":"<p>the class of the element(s) you wish to\nre-enable</p>\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-removeInvalidHandleClass","owner":"Ext.dd.DragDrop","short_doc":"Unsets an invalid css class ..."},{"tagname":"method","name":"removeInvalidHandleId","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":870}],"doc":"<p>Unsets an invalid handle id</p>\n","params":[{"tagname":"params","type":"String","name":"id","doc":"<p>the id of the element to re-enable</p>\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-removeInvalidHandleId","owner":"Ext.dd.DragDrop","short_doc":"Unsets an invalid handle id ..."},{"tagname":"method","name":"removeInvalidHandleType","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":860}],"doc":"<p>Unsets an excluded tag name set by addInvalidHandleType</p>\n","params":[{"tagname":"params","type":"String","name":"tagName","doc":"<p>the type of element to unexclude</p>\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-removeInvalidHandleType","owner":"Ext.dd.DragDrop","short_doc":"Unsets an excluded tag name set by addInvalidHandleType ..."},{"tagname":"method","name":"resetConstraints","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":1042}],"doc":"<p>Must be called if you manually reposition a dd element.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"maintainOffset","doc":"\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["setInitPosition","setXConstraint","setYConstraint"],"id":"method-resetConstraints","owner":"Ext.dd.DragDrop","short_doc":"Must be called if you manually reposition a dd element. ..."},{"tagname":"method","name":"setDelta","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DD.js","linenr":50}],"doc":"<p>Sets the pointer offset.  You can call this directly to force the\noffset to be in a particular location (e.g., pass in 0,0 to set it\nto the center of the object)</p>\n","params":[{"tagname":"params","type":"Number","name":"iDeltaX","doc":"<p>the distance from the left</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"iDeltaY","doc":"<p>the distance from the top</p>\n","html_type":"Number"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-setDelta","owner":"Ext.dd.DD","short_doc":"Sets the pointer offset. ..."},{"tagname":"method","name":"setDragElId","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":714}],"doc":"<p>Allows you to specify that an element other than the linked element\nwill be moved with the cursor during a drag</p>\n","params":[{"tagname":"params","type":"String","name":"id","doc":"<p>the id of the element that will be used to initiate the drag</p>\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-setDragElId","owner":"Ext.dd.DragDrop","short_doc":"Allows you to specify that an element other than the linked element\nwill be moved with the cursor during a drag ..."},{"tagname":"method","name":"setDragElPos","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DD.js","linenr":62}],"doc":"<p>Sets the drag element to the location of the mousedown or click event,\nmaintaining the cursor location relative to the location on the element\nthat was clicked.  Override this if you want to place the element in a\nlocation other than where the cursor is.</p>\n","params":[{"tagname":"params","type":"Number","name":"iPageX","doc":"<p>the X coordinate of the mousedown or drag event</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"iPageY","doc":"<p>the Y coordinate of the mousedown or drag event</p>\n","html_type":"Number"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["alignElWithMouse","getDragEl"],"id":"method-setDragElPos","owner":"Ext.dd.DD","short_doc":"Sets the drag element to the location of the mousedown or click event,\nmaintaining the cursor location relative to th..."},{"tagname":"method","name":"setHandleElId","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":723}],"doc":"<p>Allows you to specify a child of the linked element that should be\nused to initiate the drag operation.  An example of this would be if\nyou have a content div with text and links.  Clicking anywhere in the\ncontent area would normally start the drag operation.  Use this method\nto specify that an element inside of the content div is the element\nthat starts the drag operation.</p>\n","params":[{"tagname":"params","type":"String","name":"id","doc":"<p>the id of the element that will be used to\ninitiate the drag.</p>\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-setHandleElId","owner":"Ext.dd.DragDrop","short_doc":"Allows you to specify a child of the linked element that should be\nused to initiate the drag operation. ..."},{"tagname":"method","name":"setInitPosition","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":650}],"doc":"<p>Stores the initial placement of the linked element.</p>\n","params":[{"tagname":"params","type":"Number","name":"diffX","doc":"<p>the X offset, default 0</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"diffY","doc":"<p>the Y offset, default 0</p>\n","html_type":"Number"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getEl","setStartPosition"],"id":"method-setInitPosition","owner":"Ext.dd.DragDrop","short_doc":"Stores the initial placement of the linked element. ..."},{"tagname":"method","name":"setLocalXY","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DD.js","linenr":282}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":282,"params":[{"name":"el","type":"Object","html_type":"Object"},{"name":"x","type":"Object","html_type":"Object"},{"name":"y","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-setLocalXY","owner":"Ext.dd.DD","short_doc":" ..."},{"tagname":"method","name":"setOuterHandleElId","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":741}],"doc":"<p>Allows you to set an element outside of the linked element as a drag\nhandle</p>\n","params":[{"tagname":"params","type":"String","name":"id","doc":"<p>the id of the element that will be used to initiate the drag</p>\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["setHandleElId"],"id":"method-setOuterHandleElId","owner":"Ext.dd.DragDrop","short_doc":"Allows you to set an element outside of the linked element as a drag\nhandle ..."},{"tagname":"method","name":"setPadding","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":628}],"doc":"<p>Configures the padding for the target zone in px.  Effectively expands\n(or reduces) the virtual object size for targeting calculations.\nSupports css-style shorthand; if only one parameter is passed, all sides\nwill have that padding, and if only two are passed, the top and bottom\nwill have the first param, the left and right the second.</p>\n","params":[{"tagname":"params","type":"Number","name":"iTop","doc":"<p>Top pad</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"iRight","doc":"<p>Right pad</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"iBot","doc":"<p>Bot pad</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"iLeft","doc":"<p>Left pad</p>\n","html_type":"Number"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-setPadding","owner":"Ext.dd.DragDrop","short_doc":"Configures the padding for the target zone in px. ..."},{"tagname":"method","name":"setStartPosition","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":677}],"doc":"<p>Sets the start position of the element.  This is set when the obj\nis initialized, the reset when a drag is started.</p>\n","params":[{"tagname":"params","name":"pos","doc":"<p>current position (from previous lookup)</p>\n","type":"Object","html_type":"Object"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getEl"],"id":"method-setStartPosition","owner":"Ext.dd.DragDrop","short_doc":"Sets the start position of the element. ..."},{"tagname":"method","name":"setXConstraint","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":980}],"doc":"<p>By default, the element can be dragged any place on the screen.  Use\nthis method to limit the horizontal travel of the element.  Pass in\n0,0 for the parameters if you want to lock the drag to the y axis.</p>\n","params":[{"tagname":"params","type":"Number","name":"iLeft","doc":"<p>the number of pixels the element can move to the left</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"iRight","doc":"<p>the number of pixels the element can move to the\nright</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"iTickSize","optional":true,"doc":"<p>parameter for specifying that the\nelement should move iTickSize pixels at a time.</p>\n","html_type":"Number"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["setXTicks"],"id":"method-setXConstraint","owner":"Ext.dd.DragDrop","short_doc":"By default, the element can be dragged any place on the screen. ..."},{"tagname":"method","name":"setXTicks","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":922}],"doc":"<p>Creates the array of horizontal tick marks if an interval was specified\nin setXConstraint().</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"iStartX","type":"Object","html_type":"Object"},{"name":"iTickSize","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-setXTicks","owner":"Ext.dd.DragDrop","short_doc":"Creates the array of horizontal tick marks if an interval was specified\nin setXConstraint(). ..."},{"tagname":"method","name":"setYConstraint","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":1021}],"doc":"<p>By default, the element can be dragged any place on the screen.  Set\nthis to limit the vertical travel of the element.  Pass in 0,0 for the\nparameters if you want to lock the drag to the x axis.</p>\n","params":[{"tagname":"params","type":"Number","name":"iUp","doc":"<p>the number of pixels the element can move up</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"iDown","doc":"<p>the number of pixels the element can move down</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"iTickSize","optional":true,"doc":"<p>parameter for specifying that the\nelement should move iTickSize pixels at a time.</p>\n","html_type":"Number"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["setYTicks"],"id":"method-setYConstraint","owner":"Ext.dd.DragDrop","short_doc":"By default, the element can be dragged any place on the screen. ..."},{"tagname":"method","name":"setYTicks","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":951}],"doc":"<p>Creates the array of vertical tick marks if an interval was specified in\nsetYConstraint().</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"iStartY","type":"Object","html_type":"Object"},{"name":"iTickSize","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-setYTicks","owner":"Ext.dd.DragDrop","short_doc":"Creates the array of vertical tick marks if an interval was specified in\nsetYConstraint(). ..."},{"tagname":"method","name":"showFrame","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DDProxy.js","linenr":116}],"doc":"<p>Resizes the drag frame to the dimensions of the clicked object, positions\nit over the object, and finally displays it</p>\n","params":[{"tagname":"params","type":"Number","name":"iPageX","doc":"<p>X click position</p>\n\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"iPageY","doc":"<p>Y click position</p>\n\n","html_type":"Number"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["_resizeProxy","getDragEl","getEl","setDelta","setDragElPos"],"id":"method-showFrame","owner":"Ext.dd.DDProxy","short_doc":"Resizes the drag frame to the dimensions of the clicked object, positions\nit over the object, and finally displays it ..."},{"tagname":"method","name":"startDrag","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragSource.js","linenr":354}],"doc":"<p>Abstract method called after a drag/drop object is clicked\nand the drag or mousedown time thresholds have beeen met.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"x","type":"Object","html_type":"Object"},{"name":"y","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["onInitDrag"],"id":"method-startDrag","owner":"Ext.dd.DragSource","overrides":[{"name":"startDrag","owner":"Ext.dd.DragDrop","link":"<a href=\"#!/api/Ext.dd.DragDrop-method-startDrag\" rel=\"Ext.dd.DragDrop-method-startDrag\" class=\"docClass\">Ext.dd.DragDrop.startDrag</a>"}],"short_doc":"Abstract method called after a drag/drop object is clicked\nand the drag or mousedown time thresholds have beeen met. ..."},{"tagname":"method","name":"toString","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DDProxy.js","linenr":203}],"doc":"<p>toString method</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":203,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-toString","owner":"Ext.dd.DDProxy","return":{"type":"String","name":"return","doc":"<p>string representation of the dd obj</p>\n\n\n\n","properties":null,"html_type":"String"},"overrides":[{"name":"toString","owner":"Ext.dd.DD","link":"<a href=\"#!/api/Ext.dd.DD-method-toString\" rel=\"Ext.dd.DD-method-toString\" class=\"docClass\">Ext.dd.DD.toString</a>"}],"short_doc":"toString method ..."},{"tagname":"method","name":"triggerCacheRefresh","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragSource.js","linenr":390}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-triggerCacheRefresh","owner":"Ext.dd.DragSource","short_doc":" ..."},{"tagname":"method","name":"unlock","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":189}],"doc":"<p>Unlocks this instace</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-unlock","owner":"Ext.dd.DragDrop","short_doc":"Unlocks this instace ..."},{"tagname":"method","name":"unreg","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragDrop.js","linenr":756}],"doc":"<p>Removes all drag and drop hooks for this element</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-unreg","owner":"Ext.dd.DragDrop","short_doc":"Removes all drag and drop hooks for this element ..."}],"code_type":"ext_define","id":"class-Ext.dd.DragZone","short_doc":"This class provides a container DD instance that allows dragging of multiple child source nodes. ..."}