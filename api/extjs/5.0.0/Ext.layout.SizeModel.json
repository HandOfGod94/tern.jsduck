{"tagname":"class","name":"Ext.layout.SizeModel","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/SizeModel.js","linenr":1}],"doc":"<p>This class describes a size determination strategy or algorithm used by the layout\nsystem. There are special instances of this class stored as static properties to\navoid needless object instantiation. These instances should be treated as readonly.</p>\n\n<ul>\n<li><code>calculated</code></li>\n<li><code>configured</code></li>\n<li><code>constrainedMax</code></li>\n<li><code>constrainedMin</code></li>\n<li><code>natural</code></li>\n<li><code>shrinkWrap</code></li>\n<li><code>calculatedFromConfigured</code></li>\n<li><code>calculatedFromNatural</code></li>\n<li><code>calculatedFromShrinkWrap</code></li>\n</ul>\n\n\n<p>Using one of these instances is simply:</p>\n\n<pre><code>  var calculated = <a href=\"#!/api/Ext.layout.SizeModel-property-calculated\" rel=\"Ext.layout.SizeModel-property-calculated\" class=\"docClass\">Ext.layout.SizeModel.calculated</a>;\n</code></pre>\n","private":true,"aliases":{},"alternateClassNames":[],"extends":"Ext.Base","mixins":[],"requires":[],"uses":[],"members":[{"tagname":"property","name":"auto","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/SizeModel.js","linenr":65}],"doc":"<p>True if the size is either <code>natural</code> or <code>shrinkWrap</code>, otherwise false.</p>\n","type":"Boolean","default":null,"properties":null,"readonly":true,"id":"property-auto","owner":"Ext.layout.SizeModel","html_type":"Boolean"},{"tagname":"property","name":"calculated","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/SizeModel.js","linenr":71}],"doc":"<p>True if the size is calculated by the <code>ownerLayout</code>.</p>\n","type":"Boolean","default":"false","properties":null,"readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-calculated","owner":"Ext.layout.SizeModel","short_doc":"True if the size is calculated by the ownerLayout. ...","html_type":"Boolean"},{"tagname":"property","name":"calculatedFromConfigured","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/SizeModel.js","linenr":125}],"doc":"<p>True if the size is calculated by the <code>ownerLayout</code> based on a configured size.</p>\n","type":"Boolean","default":"false","properties":null,"readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-calculatedFromConfigured","owner":"Ext.layout.SizeModel","short_doc":"True if the size is calculated by the ownerLayout based on a configured size. ...","html_type":"Boolean"},{"tagname":"property","name":"calculatedFromNatural","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/SizeModel.js","linenr":132}],"doc":"<p>True if the size is calculated by the <code>ownerLayout</code> based on <code>natural</code> size model\nresults.</p>\n","type":"Boolean","default":"false","properties":null,"readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-calculatedFromNatural","owner":"Ext.layout.SizeModel","short_doc":"True if the size is calculated by the ownerLayout based on natural size model\nresults. ...","html_type":"Boolean"},{"tagname":"property","name":"calculatedFromShrinkWrap","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/SizeModel.js","linenr":140}],"doc":"<p>True if the size is calculated by the <code>ownerLayout</code> based on <code>shrinkWrap</code> size model\nresults.</p>\n","type":"Boolean","default":"false","properties":null,"readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-calculatedFromShrinkWrap","owner":"Ext.layout.SizeModel","short_doc":"True if the size is calculated by the ownerLayout based on shrinkWrap size model\nresults. ...","html_type":"Boolean"},{"tagname":"property","name":"configured","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/SizeModel.js","linenr":78}],"doc":"<p>True if the size is configured (e.g., by a <code>width</code> or <code>minWidth</code>). The names of\nconfiguration properties can be found in the <a href=\"#!/api/Ext.layout.SizeModel-property-names\" rel=\"Ext.layout.SizeModel-property-names\" class=\"docClass\">names</a> property.</p>\n","type":"Boolean","default":"false","properties":null,"readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-configured","owner":"Ext.layout.SizeModel","short_doc":"True if the size is configured (e.g., by a width or minWidth). ...","html_type":"Boolean"},{"tagname":"property","name":"constrainedMax","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/SizeModel.js","linenr":86}],"doc":"<p>True if the size is constrained by a <code>maxWidth</code> or <code>maxHeight</code> configuration. This\nis a flavor of <code>configured</code> (since <code>maxWidth</code> and <code>maxHeight</code> are config options).\nIf true, the <a href=\"#!/api/Ext.layout.SizeModel-property-names\" rel=\"Ext.layout.SizeModel-property-names\" class=\"docClass\">names</a> property will be defined as well.</p>\n","type":"Boolean","default":"false","properties":null,"readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-constrainedMax","owner":"Ext.layout.SizeModel","short_doc":"True if the size is constrained by a maxWidth or maxHeight configuration. ...","html_type":"Boolean"},{"tagname":"property","name":"constrainedMin","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/SizeModel.js","linenr":95}],"doc":"<p>True if the size is constrained by a <code>minWidth</code> or <code>minHeight</code> configuration. This\nis a flavor of <code>configured</code> (since <code>minWidth</code> and <code>minHeight</code> are config options).\nIf true, the <a href=\"#!/api/Ext.layout.SizeModel-property-names\" rel=\"Ext.layout.SizeModel-property-names\" class=\"docClass\">names</a> property will be defined as well.</p>\n","type":"Boolean","default":"false","properties":null,"readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-constrainedMin","owner":"Ext.layout.SizeModel","short_doc":"True if the size is constrained by a minWidth or minHeight configuration. ...","html_type":"Boolean"},{"tagname":"property","name":"fixed","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/SizeModel.js","linenr":104}],"doc":"<p>True if the size is either <code>calculated</code> or <code>configured</code>, otherwise false.</p>\n","type":"Boolean","default":null,"properties":null,"readonly":true,"id":"property-fixed","owner":"Ext.layout.SizeModel","html_type":"Boolean"},{"tagname":"property","name":"name","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/SizeModel.js","linenr":59}],"doc":"<p>The name of this size model (e.g., \"calculated\").</p>\n","type":"String","default":null,"properties":null,"readonly":true,"id":"property-name","owner":"Ext.layout.SizeModel","html_type":"String"},{"tagname":"property","name":"names","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/SizeModel.js","linenr":148}],"doc":"<p>An object with the config property names that determine the\nsize.</p>\n","type":"Object","default":null,"properties":[{"tagname":"property","type":"String","name":"width","doc":"<p>The width property name (e.g., 'width').</p>\n","html_type":"String"},{"tagname":"property","type":"String","name":"height","doc":"<p>The height property name (e.g., 'minHeight').</p>\n","html_type":"String"}],"readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-names","owner":"Ext.layout.SizeModel","short_doc":"An object with the config property names that determine the\nsize. ...","html_type":"Object"},{"tagname":"property","name":"natural","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/SizeModel.js","linenr":110}],"doc":"<p>True if the size is determined by CSS and not by content. Such sizes are assumed to\nbe dependent on the container box and measurement occurs on the outer-most element.</p>\n","type":"Boolean","default":"false","properties":null,"readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-natural","owner":"Ext.layout.SizeModel","short_doc":"True if the size is determined by CSS and not by content. ...","html_type":"Boolean"},{"tagname":"property","name":"ordinal","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/SizeModel.js","linenr":35}],"doc":"<p>The 0-based ordinal for this <code>SizeModel</code> instance.</p>\n","type":"Number","default":null,"properties":null,"readonly":true,"id":"property-ordinal","owner":"Ext.layout.SizeModel","html_type":"Number"},{"tagname":"property","name":"pairsByHeightOrdinal","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/SizeModel.js","linenr":227}],"doc":"<p>An array of objects indexed by the <a href=\"#!/api/Ext.layout.SizeModel-property-ordinal\" rel=\"Ext.layout.SizeModel-property-ordinal\" class=\"docClass\">ordinal</a> of a height <code>SizeModel</code> on\na width <code>SizeModel</code> to yield an object describing both height and width size\nmodels.</p>\n\n<p>Used like this:</p>\n\n<pre><code> widthModel.pairsByHeightOrdinal[heightModel.ordinal]\n</code></pre>\n\n<p>This provides a reusable object equivalent to the following:</p>\n\n<pre><code> {\n     width: widthModel,\n     height: heightModel\n }\n</code></pre>\n","type":"Object[]","default":null,"properties":[{"tagname":"property","type":"Ext.layout.SizeModel","name":"width","doc":"<p>The <code>SizeModel</code> for\nthe width.</p>\n","html_type":"<a href=\"#!/api/Ext.layout.SizeModel\" rel=\"Ext.layout.SizeModel\" class=\"docClass\">Ext.layout.SizeModel</a>"},{"tagname":"property","type":"Ext.layout.SizeModel","name":"height","doc":"<p>The <code>SizeModel</code> for\nthe height.</p>\n","html_type":"<a href=\"#!/api/Ext.layout.SizeModel\" rel=\"Ext.layout.SizeModel\" class=\"docClass\">Ext.layout.SizeModel</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-pairsByHeightOrdinal","owner":"Ext.layout.SizeModel","short_doc":"An array of objects indexed by the ordinal of a height SizeModel on\na width SizeModel to yield an object describing b...","html_type":"Object[]"},{"tagname":"property","name":"shrinkWrap","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/SizeModel.js","linenr":118}],"doc":"<p>True if the size is determined by content irrespective of the container box.</p>\n","type":"Boolean","default":"false","properties":null,"readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-shrinkWrap","owner":"Ext.layout.SizeModel","short_doc":"True if the size is determined by content irrespective of the container box. ...","html_type":"Boolean"},{"tagname":"property","name":"sizeModels","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/SizeModel.js","linenr":52}],"doc":"<p>An object containing all SizeModel instances keyed by <code>name</code>.</p>\n","private":true,"inheritdoc":null,"static":true,"inheritable":null,"linenr":null,"type":"Object","default":"{}","readonly":null,"id":"static-property-sizeModels","owner":"Ext.layout.SizeModel","short_doc":"An object containing all SizeModel instances keyed by name. ...","html_type":"Object"},{"tagname":"property","name":"sizeModelsArray","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/SizeModel.js","linenr":46}],"doc":"<p>An array of all SizeModel instances.</p>\n","private":true,"inheritdoc":null,"static":true,"inheritable":null,"linenr":null,"type":"Array","default":"[]","readonly":null,"id":"static-property-sizeModelsArray","owner":"Ext.layout.SizeModel","short_doc":"An array of all SizeModel instances. ...","html_type":"Array"},{"tagname":"method","name":"constructor","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/SizeModel.js","linenr":23}],"doc":"\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":23,"params":[{"name":"config","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-constructor","owner":"Ext.layout.SizeModel","return":{"type":"Ext.layout.SizeModel","doc":"\n","html_type":"<a href=\"#!/api/Ext.layout.SizeModel\" rel=\"Ext.layout.SizeModel\" class=\"docClass\">Ext.layout.SizeModel</a>"},"short_doc":" ..."}],"code_type":"ext_define","id":"class-Ext.layout.SizeModel","short_doc":"This class describes a size determination strategy or algorithm used by the layout\nsystem. ..."}