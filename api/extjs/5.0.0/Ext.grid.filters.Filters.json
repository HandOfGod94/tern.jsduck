{"tagname":"class","name":"Ext.grid.filters.Filters","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/grid/filters/Filters.js","linenr":1}],"doc":"<p>This class is a grid <a href=\"#!/api/Ext.plugin.Abstract\" rel=\"Ext.plugin.Abstract\" class=\"docClass\">plugin</a> that adds a simple and flexible\npresentation for store filters.</p>\n\n<p>Filters can be modified by the end-user using the grid's column header menu. Through\nthis menu users can configure, enable, and disable filters for each column.</p>\n\n<h1>Example Usage</h1>\n\n<pre><code>var grid = Ext.create('<a href=\"#!/api/Ext.grid.Panel\" rel=\"Ext.grid.Panel\" class=\"docClass\">Ext.grid.Panel</a>', {\n     store: {\n         url: 'path/to/data'\n     },\n\n     plugins: 'gridfilters',\n\n     columns: [{\n         dataIndex: 'id',\n         text: 'Id',\n\n         filter: 'number'\n     }, {\n         dataIndex: 'name'\n         text: 'Name',\n\n         filter: {\n             type: 'string',\n             value: 'Ben'\n         }\n     }, {\n         ...\n     }]\n});\n\n// A filters property is added to the grid:\n\nvar plugin = grid.filters;\n</code></pre>\n\n<h1>Features</h1>\n\n<h2>Filtering implementations</h2>\n\n<p>Currently provided filter types are:</p>\n\n<ul>\n<li><code><a href=\"#!/api/Ext.grid.filters.filter.Boolean\" rel=\"Ext.grid.filters.filter.Boolean\" class=\"docClass\">boolean</a></code></li>\n<li><code><a href=\"#!/api/Ext.grid.filters.filter.Date\" rel=\"Ext.grid.filters.filter.Date\" class=\"docClass\">date</a></code></li>\n<li><code><a href=\"#!/api/Ext.grid.filters.filter.List\" rel=\"Ext.grid.filters.filter.List\" class=\"docClass\">list</a></code></li>\n<li><code><a href=\"#!/api/Ext.grid.filters.filter.Number\" rel=\"Ext.grid.filters.filter.Number\" class=\"docClass\">number</a></code></li>\n<li><code><a href=\"#!/api/Ext.grid.filters.filter.String\" rel=\"Ext.grid.filters.filter.String\" class=\"docClass\">string</a></code></li>\n</ul>\n\n\n<h2>Graphical Indicators</h2>\n\n<p>Columns that are filtered have <a href=\"#!/api/Ext.grid.filters.Filters-property-filterCls\" rel=\"Ext.grid.filters.Filters-property-filterCls\" class=\"docClass\">CSS class</a> applied to their column\nheaders. This style can be managed using that CSS class or by setting these Sass\nvariables in your theme or application:</p>\n\n<pre><code> $grid-filters-column-filtered-font-style: italic !default;\n\n $grid-filters-column-filtered-font-weight: bold !default;\n</code></pre>\n\n<h2>Stateful</h2>\n\n<p>Filter information will be persisted across page loads by specifying a <code>stateId</code>\nin the Grid configuration. In actuality this state is saved by the <code>store</code>, but this\nplugin ensures that saved filters are properly identified and reclaimed on subsequent\nvisits to the page.</p>\n\n<h2>Grid Changes</h2>\n\n<ul>\n<li>A <code>filters</code> property is added to the Grid using this plugin.</li>\n</ul>\n\n\n<h1>Upgrading From Ext.ux.grid.FilterFeature</h1>\n\n<p>The biggest change for developers converting from the user extension is most likely the\nconversion to standard store filters. In the\nprocess, the \"like\" and \"in\" operators are now supported by <code>Ext.util.Filter</code>.\nThese filters and all other filters added to the store will be sent in the standard\nway (using the \"filters\" parameter by default).</p>\n\n<p>Since this plugin now uses actual store filters, the <code>onBeforeLoad</code> listener and all\nhelper methods that were used to clean and build the params have been removed. The store\nwill send the filters managed by this plugin along in its normal request.</p>\n","aliases":{"plugin":["gridfilters"]},"alternateClassNames":[],"extends":"Ext.plugin.Abstract","mixins":[],"requires":["Ext.grid.filters.filter.*"],"uses":[],"members":[{"tagname":"cfg","name":"menuFilterText","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/grid/filters/Filters.js","linenr":114}],"doc":"<p>The text for the filters menu.</p>\n","type":"String","default":"\"Filters\"","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-menuFilterText","owner":"Ext.grid.filters.Filters","short_doc":"The text for the filters menu. ...","html_type":"String"},{"tagname":"cfg","name":"pluginId","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/grid/filters/Filters.js","linenr":93}],"doc":"<p>A name for the plugin that can be set at creation time to then retrieve the plugin\nthrough <a href=\"#!/api/Ext.Component-method-getPlugin\" rel=\"Ext.Component-method-getPlugin\" class=\"docClass\">getPlugin</a> method.  For example:</p>\n\n<pre><code>var grid = Ext.create('<a href=\"#!/api/Ext.grid.Panel\" rel=\"Ext.grid.Panel\" class=\"docClass\">Ext.grid.Panel</a>', {\n    plugins: [{\n        ptype: 'cellediting',\n        clicksToEdit: 2,\n        pluginId: 'cellplugin'\n    }]\n});\n\n// later on:\nvar plugin = grid.getPlugin('cellplugin');\n</code></pre>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":93,"type":"String","default":"'gridfilters'","readonly":null,"id":"cfg-pluginId","owner":"Ext.grid.filters.Filters","properties":null,"overrides":[{"name":"pluginId","owner":"Ext.plugin.Abstract","link":"<a href=\"#!/api/Ext.plugin.Abstract-cfg-pluginId\" rel=\"Ext.plugin.Abstract-cfg-pluginId\" class=\"docClass\">Ext.plugin.Abstract.pluginId</a>"}],"short_doc":"A name for the plugin that can be set at creation time to then retrieve the plugin\nthrough getPlugin method. ...","html_type":"String"},{"tagname":"cfg","name":"showMenu","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/grid/filters/Filters.js","linenr":120}],"doc":"<p>Defaults to true, including a filter submenu in the default header menu.</p>\n","type":"Boolean","default":"true","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-showMenu","owner":"Ext.grid.filters.Filters","short_doc":"Defaults to true, including a filter submenu in the default header menu. ...","html_type":"Boolean"},{"tagname":"cfg","name":"stateEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/plugin/Abstract.js","linenr":31}],"doc":"<p>The configured list of stateEvents used to (optionally) participate in Owner Component's state management.</p>\n","type":"String|Array","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-stateEvents","owner":"Ext.plugin.Abstract","html_type":"String|Array"},{"tagname":"cfg","name":"stateId","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/grid/filters/Filters.js","linenr":126}],"doc":"<p>Name of the value to be used to store state information.</p>\n","type":"String","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-stateId","owner":"Ext.grid.filters.Filters","html_type":"String"},{"tagname":"property","name":"defaultFilterTypes","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/grid/filters/Filters.js","linenr":95}],"doc":"<p>This property maps field type to the appropriate\ngrid filter type.</p>\n","type":"Object","default":"{'boolean': 'boolean', 'int': 'number', date: 'date', number: 'number'}","properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-defaultFilterTypes","owner":"Ext.grid.filters.Filters","short_doc":"This property maps field type to the appropriate\ngrid filter type. ...","html_type":"Object"},{"tagname":"property","name":"disabled","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/plugin/Abstract.js","linenr":23}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":23,"type":"Boolean","default":"false","readonly":null,"id":"property-disabled","owner":"Ext.plugin.Abstract","short_doc":" ...","html_type":"Boolean"},{"tagname":"property","name":"filterCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/grid/filters/Filters.js","linenr":108}],"doc":"<p>The CSS applied to column headers with active filters.</p>\n","type":"String","default":"\"x-grid-filters-filtered-column\"","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-filterCls","owner":"Ext.grid.filters.Filters","short_doc":"The CSS applied to column headers with active filters. ...","html_type":"String"},{"tagname":"property","name":"isPlugin","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/plugin/Abstract.js","linenr":25}],"doc":"<p><code>true</code> in this class to identify an object as an instantiated Plugin, or subclass thereof.</p>\n","type":"Boolean","default":"true","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-isPlugin","owner":"Ext.plugin.Abstract","short_doc":"true in this class to identify an object as an instantiated Plugin, or subclass thereof. ...","html_type":"Boolean"},{"tagname":"method","name":"constructor","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/plugin/Abstract.js","linenr":37}],"doc":"<p>Instantiates the plugin.</p>\n","params":[{"tagname":"params","type":"Object","name":"config","optional":true,"doc":"<p>Configuration object.</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-constructor","owner":"Ext.plugin.Abstract","return":{"type":"Ext.plugin.Abstract","doc":"\n","html_type":"<a href=\"#!/api/Ext.plugin.Abstract\" rel=\"Ext.plugin.Abstract\" class=\"docClass\">Ext.plugin.Abstract</a>"},"short_doc":"Instantiates the plugin. ..."},{"tagname":"method","name":"addFilter","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/grid/filters/Filters.js","linenr":385}],"doc":"<p>Adds a filter to the collection and creates a store filter if has a <code>value</code> property.</p>\n","params":[{"tagname":"params","type":"Object/Ext.grid.filter.Filter","name":"filters","doc":"<p>A filter configuration or a filter object.</p>\n","html_type":"Object/Ext.grid.filter.Filter"}],"return":{"type":"Array","name":"return","doc":"<p>The existing or newly created filter instance.</p>\n","properties":null,"html_type":"Array"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["initColumns"],"id":"method-addFilter","owner":"Ext.grid.filters.Filters","short_doc":"Adds a filter to the collection and creates a store filter if has a value property. ..."},{"tagname":"method","name":"addFilters","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/grid/filters/Filters.js","linenr":430}],"doc":"<p>Adds filters to the collection.</p>\n","params":[{"tagname":"params","type":"Array","name":"filters","doc":"<p>An Array of filter configuration objects.</p>\n","html_type":"Array"}],"return":{"type":"Array","name":"return","doc":"<p>The added filter instances.</p>\n","properties":null,"html_type":"Array"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["addFilter"],"id":"method-addFilters","owner":"Ext.grid.filters.Filters","short_doc":"Adds filters to the collection. ..."},{"tagname":"method","name":"applyState","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/plugin/Abstract.js","linenr":107}],"doc":"<p>The applyState method is invoked by the client Component's State mixin after initComponent method has been run for the client.</p>\n\n<p>The supplied implementation is empty. If plugin Subclasses are to (optionally) participate in the client Component's\nstate management, implementers should provide a suitable method to utilize it.</p>\n","params":[{"tagname":"params","type":"Object","name":"state","doc":"<p>The current plugin state object to be applied.</p>\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"allState","doc":"<p>The current aggregate state of the Component and all plugins.</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-applyState","owner":"Ext.plugin.Abstract","short_doc":"The applyState method is invoked by the client Component's State mixin after initComponent method has been run for th..."},{"tagname":"method","name":"bindStore","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/grid/filters/Filters.js","linenr":313}],"doc":"<p>Changes the data store bound to this view and refreshes it.</p>\n","params":[{"tagname":"params","type":"Ext.data.Store","name":"store","doc":"<p>The store to bind to this view</p>\n","html_type":"Ext.data.Store"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-bindStore","owner":"Ext.grid.filters.Filters","short_doc":"Changes the data store bound to this view and refreshes it. ..."},{"tagname":"method","name":"clearFilters","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/grid/filters/Filters.js","linenr":450}],"doc":"<p>Turns all filters off. This does not clear the configuration information.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"autoFilter","doc":"<p>If true, don't fire the deactivate event in\nsetActive.</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-clearFilters","owner":"Ext.grid.filters.Filters","short_doc":"Turns all filters off. ..."},{"tagname":"method","name":"clonePlugin","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/plugin/Abstract.js","linenr":46}],"doc":"<p>Creates clone of the plugin.</p>\n","params":[{"tagname":"params","type":"Object","name":"overrideCfg","optional":true,"doc":"<p>Additional config for the derived plugin.</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-clonePlugin","owner":"Ext.plugin.Abstract","short_doc":"Creates clone of the plugin. ..."},{"tagname":"method","name":"createColumnFilter","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/grid/filters/Filters.js","linenr":205}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":205,"params":[{"name":"column","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-createColumnFilter","owner":"Ext.grid.filters.Filters","short_doc":" ..."},{"tagname":"method","name":"createMenuItem","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/grid/filters/Filters.js","linenr":289}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":289,"params":[{"name":"menu","type":"Object","html_type":"Object"},{"name":"ownerGridId","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-createMenuItem","owner":"Ext.grid.filters.Filters","short_doc":" ..."},{"tagname":"method","name":"destroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/grid/filters/Filters.js","linenr":305}],"doc":"<p>Handler called by the grid 'beforedestroy' event</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["callParent"],"id":"method-destroy","owner":"Ext.grid.filters.Filters","overrides":[{"name":"destroy","owner":"Ext.plugin.Abstract","link":"<a href=\"#!/api/Ext.plugin.Abstract-method-destroy\" rel=\"Ext.plugin.Abstract-method-destroy\" class=\"docClass\">Ext.plugin.Abstract.destroy</a>"}],"short_doc":"Handler called by the grid 'beforedestroy' event ..."},{"tagname":"method","name":"disable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/plugin/Abstract.js","linenr":136}],"doc":"<p>The base implementation just sets the plugin's <code>disabled</code> flag to <code>true</code></p>\n\n<p>Plugin subclasses which need more complex processing may implement an overriding implementation.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-disable","owner":"Ext.plugin.Abstract","short_doc":"The base implementation just sets the plugin's disabled flag to true\n\nPlugin subclasses which need more complex proce..."},{"tagname":"method","name":"enable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/plugin/Abstract.js","linenr":127}],"doc":"<p>The base implementation just sets the plugin's <code>disabled</code> flag to <code>false</code></p>\n\n<p>Plugin subclasses which need more complex processing may implement an overriding implementation.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-enable","owner":"Ext.plugin.Abstract","short_doc":"The base implementation just sets the plugin's disabled flag to false\n\nPlugin subclasses which need more complex proc..."},{"tagname":"method","name":"getCmp","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/plugin/Abstract.js","linenr":62}],"doc":"<p>Returns the component to which this plugin is attached.</p>\n","return":{"type":"Ext.Component","name":"return","doc":"<p>Owner component.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getCmp","owner":"Ext.plugin.Abstract","short_doc":"Returns the component to which this plugin is attached. ..."},{"tagname":"method","name":"getFilter","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/grid/filters/Filters.js","linenr":441}],"doc":"<p>Returns a filter for the given dataIndex, if one exists.</p>\n","params":[{"tagname":"params","type":"String","name":"dataIndex","doc":"<p>The dataIndex of the desired filter object.</p>\n","html_type":"String"}],"return":{"type":"Ext.grid.filter.Filter","name":"return","doc":"\n","properties":null,"html_type":"Ext.grid.filter.Filter"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getFilter","owner":"Ext.grid.filters.Filters","short_doc":"Returns a filter for the given dataIndex, if one exists. ..."},{"tagname":"method","name":"getHeaders","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/grid/filters/Filters.js","linenr":373}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":373,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getHeaders","owner":"Ext.grid.filters.Filters","short_doc":" ..."},{"tagname":"method","name":"getMenuFilter","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/grid/filters/Filters.js","linenr":356}],"doc":"<p>Get the filter menu from the filters MixedCollection based on the clicked header.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"headerCt","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-getMenuFilter","owner":"Ext.grid.filters.Filters","short_doc":"Get the filter menu from the filters MixedCollection based on the clicked header. ..."},{"tagname":"method","name":"getState","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/plugin/Abstract.js","linenr":97}],"doc":"<p>The getState method is invoked by the client Component's State mixin when one or more of the the specified <a href=\"#!/api/Ext.plugin.Abstract-cfg-stateEvents\" rel=\"Ext.plugin.Abstract-cfg-stateEvents\" class=\"docClass\">stateEvents</a> are raised.</p>\n\n<p>The supplied implementation is empty. If plugin Subclasses are to (optionally) participate in the client Component's\nstate management, implementers should provide a suitable method which returns a state object.</p>\n","return":{"type":"Object","name":"return","doc":"<p>state</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-getState","owner":"Ext.plugin.Abstract","short_doc":"The getState method is invoked by the client Component's State mixin when one or more of the the specified stateEvent..."},{"tagname":"method","name":"init","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/grid/filters/Filters.js","linenr":132}],"doc":"<p>The init method is invoked after initComponent method has been run for the client Component.</p>\n\n<p>The supplied implementation is empty. Subclasses should perform plugin initialization, and set up bidirectional\nlinks between the plugin and its client Component in their own implementation of this method.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":132,"params":[{"name":"grid","type":"Object","html_type":"Object"}],"chainable":null,"fires":[],"method_calls":["bindStore","initColumns"],"id":"method-init","owner":"Ext.grid.filters.Filters","overrides":[{"name":"init","owner":"Ext.plugin.Abstract","link":"<a href=\"#!/api/Ext.plugin.Abstract-method-init\" rel=\"Ext.plugin.Abstract-method-init\" class=\"docClass\">Ext.plugin.Abstract.init</a>"}],"short_doc":"The init method is invoked after initComponent method has been run for the client Component. ..."},{"tagname":"method","name":"initColumns","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/grid/filters/Filters.js","linenr":174}],"doc":"<p>Creates the Filter objects for the current configuration.\nReconfigure and on add handlers.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["createColumnFilter"],"id":"method-initColumns","owner":"Ext.grid.filters.Filters","short_doc":"Creates the Filter objects for the current configuration. ..."},{"tagname":"method","name":"isStateful","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/grid/filters/Filters.js","linenr":377}],"doc":"<p>Checks the plugin's grid for statefulness.</p>\n","return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-isStateful","owner":"Ext.grid.filters.Filters","short_doc":"Checks the plugin's grid for statefulness. ..."},{"tagname":"method","name":"onAdd","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/grid/filters/Filters.js","linenr":234}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":234,"params":[{"name":"headerCt","type":"Object","html_type":"Object"},{"name":"column","type":"Object","html_type":"Object"},{"name":"index","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["createColumnFilter"],"id":"method-onAdd","owner":"Ext.grid.filters.Filters","short_doc":" ..."},{"tagname":"method","name":"onBeforeReconfigure","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/grid/filters/Filters.js","linenr":490}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":490,"params":[{"name":"grid","type":"Object","html_type":"Object"},{"name":"store","type":"Object","html_type":"Object"},{"name":"columns","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-onBeforeReconfigure","owner":"Ext.grid.filters.Filters","short_doc":" ..."},{"tagname":"method","name":"onCheckChange","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/grid/filters/Filters.js","linenr":364}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"item","type":"Object","html_type":"Object"},{"name":"value","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["getMenuFilter"],"id":"method-onCheckChange","owner":"Ext.grid.filters.Filters","short_doc":" ..."},{"tagname":"method","name":"onClassExtended","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/plugin/Abstract.js","linenr":145}],"doc":"<p>Private.\nInject a ptype property so that Component.findPlugin(ptype) works.</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[{"name":"cls","type":"Object","html_type":"Object"},{"name":"data","type":"Object","html_type":"Object"},{"name":"hooks","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-onClassExtended","owner":"Ext.plugin.Abstract","short_doc":"Private. ..."},{"tagname":"method","name":"onFilterRemove","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/grid/filters/Filters.js","linenr":335}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":335,"params":[{"name":"filterCollection","type":"Object","html_type":"Object"},{"name":"list","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-onFilterRemove","owner":"Ext.grid.filters.Filters","short_doc":" ..."},{"tagname":"method","name":"onMenuBeforeShow","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/grid/filters/Filters.js","linenr":252}],"doc":"<p>Handle showing of the grid's header menu. Sets up the filter item and menu\nappropriate for the target column.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"menu","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["createMenuItem","getMenuFilter"],"id":"method-onMenuBeforeShow","owner":"Ext.grid.filters.Filters","short_doc":"Handle showing of the grid's header menu. ..."},{"tagname":"method","name":"onMenuCreate","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/grid/filters/Filters.js","linenr":242}],"doc":"<p>Handle creation of the grid's header menu.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"headerCt","type":"Object","html_type":"Object"},{"name":"menu","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-onMenuCreate","owner":"Ext.grid.filters.Filters","short_doc":"Handle creation of the grid's header menu. ..."},{"tagname":"method","name":"onReconfigure","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/grid/filters/Filters.js","linenr":498}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":498,"params":[{"name":"grid","type":"Object","html_type":"Object"},{"name":"store","type":"Object","html_type":"Object"},{"name":"columns","type":"Object","html_type":"Object"},{"name":"oldStore","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["bindStore","initColumns"],"id":"method-onReconfigure","owner":"Ext.grid.filters.Filters","short_doc":" ..."},{"tagname":"method","name":"setCmp","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/plugin/Abstract.js","linenr":54}],"doc":"<p>Sets the component to which this plugin is attached.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"cmp","doc":"<p>Owner component.</p>\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-setCmp","owner":"Ext.plugin.Abstract","short_doc":"Sets the component to which this plugin is attached. ..."}],"code_type":"ext_define","id":"class-Ext.grid.filters.Filters","short_doc":"This class is a grid plugin that adds a simple and flexible\npresentation for store filters. ..."}