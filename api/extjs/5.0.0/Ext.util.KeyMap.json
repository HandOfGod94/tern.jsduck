{"tagname":"class","name":"Ext.util.KeyMap","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/KeyMap.js","linenr":1}],"doc":"<p>Handles mapping key events to handling functions for an element or a Component. One KeyMap can be used for multiple\nactions.</p>\n\n<p>A KeyMap must be configured with a <a href=\"#!/api/Ext.util.KeyMap-cfg-target\" rel=\"Ext.util.KeyMap-cfg-target\" class=\"docClass\">target</a> as an event source which may be an Element or a Component.</p>\n\n<p>If the target is an element, then the <code>keydown</code> event will trigger the invocation of <a href=\"#!/api/Ext.util.KeyMap-cfg-binding\" rel=\"Ext.util.KeyMap-cfg-binding\" class=\"docClass\">binding</a>s.</p>\n\n<p>It is possible to configure the KeyMap with a custom <a href=\"#!/api/Ext.util.KeyMap-cfg-eventName\" rel=\"Ext.util.KeyMap-cfg-eventName\" class=\"docClass\">eventName</a> to listen for. This may be useful when the\n<a href=\"#!/api/Ext.util.KeyMap-cfg-target\" rel=\"Ext.util.KeyMap-cfg-target\" class=\"docClass\">target</a> is a Component.</p>\n\n<p>The KeyMap's event handling requires that the first parameter passed is a key event. So if the Component's event\nsignature is different, specify a <a href=\"#!/api/Ext.util.KeyMap-cfg-processEvent\" rel=\"Ext.util.KeyMap-cfg-processEvent\" class=\"docClass\">processEvent</a> configuration which accepts the event's parameters and\nreturns a key event.</p>\n\n<p>Functions specified in <a href=\"#!/api/Ext.util.KeyMap-cfg-binding\" rel=\"Ext.util.KeyMap-cfg-binding\" class=\"docClass\">binding</a>s are called with this signature : <code>(String key, Ext.event.Event e)</code> (if the\nmatch is a multi-key combination the callback will still be called only once). A KeyMap can also handle a string\nrepresentation of keys. By default KeyMap starts enabled.</p>\n\n<p>Usage:</p>\n\n<pre><code>// map one key by key code\nvar map = new <a href=\"#!/api/Ext.util.KeyMap\" rel=\"Ext.util.KeyMap\" class=\"docClass\">Ext.util.KeyMap</a>({\n    target: \"my-element\",\n    key: 13, // or Ext.event.Event.ENTER\n    fn: myHandler,\n    scope: myObject\n});\n\n// map multiple keys to one action by string\nvar map = new <a href=\"#!/api/Ext.util.KeyMap\" rel=\"Ext.util.KeyMap\" class=\"docClass\">Ext.util.KeyMap</a>({\n    target: \"my-element\",\n    key: \"a\\r\\n\\t\",\n    fn: myHandler,\n    scope: myObject\n});\n\n// map multiple keys to multiple actions by strings and array of codes\nvar map = new <a href=\"#!/api/Ext.util.KeyMap\" rel=\"Ext.util.KeyMap\" class=\"docClass\">Ext.util.KeyMap</a>({\n    target: \"my-element\",\n    binding: [{\n        key: [10,13],\n        fn: function(){ alert(\"Return was pressed\"); }\n    }, {\n        key: \"abc\",\n        fn: function(){ alert('a, b or c was pressed'); }\n    }, {\n        key: \"\\t\",\n        ctrl:true,\n        shift:true,\n        fn: function(){ alert('Control + shift + tab was pressed.'); }\n    }]\n});\n</code></pre>\n\n<p>Since 4.1.0, KeyMaps can bind to Components and process key-based events fired by Components.</p>\n\n<p>To bind to a Component, use the single parameter form of constructor and include the Component event name\nto listen for, and a <code>processEvent</code> implementation which returns the key event for further processing by\nthe KeyMap:</p>\n\n<pre><code>var map = new <a href=\"#!/api/Ext.util.KeyMap\" rel=\"Ext.util.KeyMap\" class=\"docClass\">Ext.util.KeyMap</a>({\n    target: myGridView,\n    eventName: 'itemkeydown',\n    processEvent: function(view, record, node, index, event) {\n\n        // Load the event with the extra information needed by the mappings\n        event.view = view;\n        event.store = view.getStore();\n        event.record = record;\n        event.index = index;\n        return event;\n    },\n    binding: {\n        key: Ext.event.Event.DELETE,\n        fn: function(keyCode, e) {\n            e.store.remove(e.record);\n\n            // Attempt to select the record that's now in its place\n            e.view.getSelectionModel().select(e.index);\n            e.view.el.focus();\n        }\n    }\n});\n</code></pre>\n","aliases":{},"alternateClassNames":["Ext.KeyMap"],"extends":"Ext.Base","mixins":[],"requires":[],"uses":[],"members":[{"tagname":"cfg","name":"binding","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/KeyMap.js","linenr":93}],"doc":"<p>Either a single object describing a handling function for s specified key (or set of keys), or\nan array of such objects.</p>\n","type":"Object/Object[][]","default":null,"properties":[{"tagname":"cfg","type":"String/String[]","name":"key","doc":"<p>A single keycode or an array of keycodes to handle</p>\n","html_type":"String/String[]"},{"tagname":"cfg","type":"Boolean","name":"shift","doc":"<p>True to handle key only when shift is pressed, False to handle the\n key only when shift is not pressed (defaults to undefined)</p>\n","html_type":"Boolean"},{"tagname":"cfg","type":"Boolean","name":"ctrl","doc":"<p>True to handle key only when ctrl is pressed, False to handle the\n key only when ctrl is not pressed (defaults to undefined)</p>\n","html_type":"Boolean"},{"tagname":"cfg","type":"Boolean","name":"alt","doc":"<p>True to handle key only when alt is pressed, False to handle the key\n only when alt is not pressed (defaults to undefined)</p>\n","html_type":"Boolean"},{"tagname":"cfg","type":"Function","name":"handler","doc":"<p>The function to call when KeyMap finds the expected key combination</p>\n","html_type":"Function"},{"tagname":"cfg","type":"Function","name":"fn","doc":"<p>Alias of handler (for backwards-compatibility)</p>\n","html_type":"Function"},{"tagname":"cfg","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> context) in which the handler function is executed.</p>\n","html_type":"Object"},{"tagname":"cfg","type":"String","name":"defaultEventAction","doc":"<p>A default action to apply to the event <em>when the handler returns <code>true</code></em>. Possible values\n are: stopEvent, stopPropagation, preventDefault. If no value is set no action is performed.</p>\n","html_type":"String"}],"id":"cfg-binding","owner":"Ext.util.KeyMap","short_doc":"Either a single object describing a handling function for s specified key (or set of keys), or\nan array of such objects. ...","html_type":"Object/Object[][]"},{"tagname":"cfg","name":"eventName","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/KeyMap.js","linenr":122}],"doc":"<p>The event to listen for to pick up key events.</p>\n","type":"String","default":"'keydown'","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-eventName","owner":"Ext.util.KeyMap","short_doc":"The event to listen for to pick up key events. ...","html_type":"String"},{"tagname":"cfg","name":"ignoreInputFields","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/KeyMap.js","linenr":116}],"doc":"<p>Configure this as <code>true</code> if there are any input fields within the <a href=\"#!/api/Ext.util.KeyMap-cfg-target\" rel=\"Ext.util.KeyMap-cfg-target\" class=\"docClass\">target</a>, and this KeyNav\nshould not process events from input fields, (<code>&amp;lt;input&gt;, &amp;lt;textarea&gt; and elements with</code>contentEditable=\"true\"`)</p>\n","type":"Boolean","default":"false","properties":null,"id":"cfg-ignoreInputFields","owner":"Ext.util.KeyMap","short_doc":"Configure this as true if there are any input fields within the target, and this KeyNav\nshould not process events fro...","html_type":"Boolean"},{"tagname":"cfg","name":"processEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/KeyMap.js","linenr":338}],"doc":"<p>An optional event processor function which accepts the argument list provided by the\n<a href=\"#!/api/Ext.util.KeyMap-cfg-eventName\" rel=\"Ext.util.KeyMap-cfg-eventName\" class=\"docClass\">configured event</a> of the <a href=\"#!/api/Ext.util.KeyMap-cfg-target\" rel=\"Ext.util.KeyMap-cfg-target\" class=\"docClass\">target</a>, and returns a keyEvent for processing by the KeyMap.</p>\n\n<p>This may be useful when the <a href=\"#!/api/Ext.util.KeyMap-cfg-target\" rel=\"Ext.util.KeyMap-cfg-target\" class=\"docClass\">target</a> is a Component with a complex event signature, where the event is not\nthe first parameter. Extra information from the event arguments may be injected into the event for use by the handler\nfunctions before returning it.</p>\n","type":"Function","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-processEvent","owner":"Ext.util.KeyMap","short_doc":"An optional event processor function which accepts the argument list provided by the\nconfigured event of the target, ...","html_type":"Function"},{"tagname":"cfg","name":"processEventScope","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/KeyMap.js","linenr":111}],"doc":"<p>The scope (<code>this</code> context) in which the <a href=\"#!/api/Ext.util.KeyMap-cfg-processEvent\" rel=\"Ext.util.KeyMap-cfg-processEvent\" class=\"docClass\">processEvent</a> method is executed.</p>\n","type":"Object","default":"this","properties":null,"id":"cfg-processEventScope","owner":"Ext.util.KeyMap","short_doc":"The scope (this context) in which the processEvent method is executed. ...","html_type":"Object"},{"tagname":"cfg","name":"target","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/KeyMap.js","linenr":88}],"doc":"<p>The object on which to listen for the event specified by the <a href=\"#!/api/Ext.util.KeyMap-cfg-eventName\" rel=\"Ext.util.KeyMap-cfg-eventName\" class=\"docClass\">eventName</a> config option.</p>\n","type":"Ext.Component/Ext.dom.Element/HTMLElement/String","default":null,"properties":null,"id":"cfg-target","owner":"Ext.util.KeyMap","html_type":"Ext.Component/Ext.dom.Element/HTMLElement/String"},{"tagname":"method","name":"constructor","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/KeyMap.js","linenr":128}],"doc":"\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":128,"params":[{"name":"config","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["addBinding","enable"],"id":"method-constructor","owner":"Ext.util.KeyMap","return":{"type":"Ext.util.KeyMap","doc":"\n","html_type":"<a href=\"#!/api/Ext.util.KeyMap\" rel=\"Ext.util.KeyMap\" class=\"docClass\">Ext.util.KeyMap</a>"},"short_doc":" ..."},{"tagname":"method","name":"addBinding","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/KeyMap.js","linenr":174}],"doc":"<p>Add a new binding to this KeyMap.</p>\n\n<p>Usage:</p>\n\n<pre><code>// Create a KeyMap\nvar map = new <a href=\"#!/api/Ext.util.KeyMap\" rel=\"Ext.util.KeyMap\" class=\"docClass\">Ext.util.KeyMap</a>(document, {\n    key: Ext.event.Event.ENTER,\n    fn: handleKey,\n    scope: this\n});\n\n//Add a new binding to the existing KeyMap later\nmap.addBinding({\n    key: 'abc',\n    shift: true,\n    fn: handleKey,\n    scope: this\n});\n</code></pre>\n","params":[{"tagname":"params","type":"Object/Object[]","name":"binding","doc":"<p>A single KeyMap config or an array of configs.\nThe following config object properties are supported:</p>\n","properties":[{"tagname":"params","type":"String/Array","name":"key","doc":"<p>A single keycode or an array of keycodes to handle.</p>\n","html_type":"String/Array"},{"tagname":"params","type":"Boolean","name":"shift","doc":"<p>True to handle key only when shift is pressed,\nFalse to handle the keyonly when shift is not pressed (defaults to undefined).</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"ctrl","doc":"<p>True to handle key only when ctrl is pressed,\nFalse to handle the key only when ctrl is not pressed (defaults to undefined).</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"alt","doc":"<p>True to handle key only when alt is pressed,\nFalse to handle the key only when alt is not pressed (defaults to undefined).</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Function","name":"handler","doc":"<p>The function to call when KeyMap finds the\nexpected key combination.</p>\n","html_type":"Function"},{"tagname":"params","type":"Function","name":"fn","doc":"<p>Alias of handler (for backwards-compatibility).</p>\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> context) in which the handler function is executed.</p>\n","html_type":"Object"},{"tagname":"params","type":"String","name":"defaultEventAction","doc":"<p>A default action to apply to the event <em>when the handler returns <code>true</code></em>.\nPossible values are: stopEvent, stopPropagation, preventDefault. If no value is\nset no action is performed..</p>\n","html_type":"String"}],"html_type":"Object/Object[]"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["addBinding","processKeys"],"id":"method-addBinding","owner":"Ext.util.KeyMap","short_doc":"Add a new binding to this KeyMap. ..."},{"tagname":"method","name":"checkModifiers","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/KeyMap.js","linenr":377}],"doc":"<p>Check if the modifiers on the event match those on the binding</p>\n","private":true,"params":[{"tagname":"params","type":"Object","name":"binding","doc":"\n","html_type":"Object"},{"tagname":"params","type":"Ext.event.Event","name":"event","doc":"\n","html_type":"Ext.event.Event"}],"return":{"type":"Boolean","name":"return","doc":"<p>True if the event matches the binding</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-checkModifiers","owner":"Ext.util.KeyMap","short_doc":"Check if the modifiers on the event match those on the binding ..."},{"tagname":"method","name":"destroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/KeyMap.js","linenr":502}],"doc":"<p>Destroys the KeyMap instance and removes all handlers.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"removeTarget","doc":"<p>True to also remove the <a href=\"#!/api/Ext.util.KeyMap-cfg-target\" rel=\"Ext.util.KeyMap-cfg-target\" class=\"docClass\">target</a></p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["disable"],"id":"method-destroy","owner":"Ext.util.KeyMap","short_doc":"Destroys the KeyMap instance and removes all handlers. ..."},{"tagname":"method","name":"disable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/KeyMap.js","linenr":478}],"doc":"<p>Disable this KeyMap</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-disable","owner":"Ext.util.KeyMap","short_doc":"Disable this KeyMap ..."},{"tagname":"method","name":"enable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/KeyMap.js","linenr":466}],"doc":"<p>Enables this KeyMap</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-enable","owner":"Ext.util.KeyMap","short_doc":"Enables this KeyMap ..."},{"tagname":"method","name":"handleTargetEvent","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/KeyMap.js","linenr":291}],"doc":"<p>Process the <a href=\"#!/api/Ext.util.KeyMap-cfg-eventName\" rel=\"Ext.util.KeyMap-cfg-eventName\" class=\"docClass\">event</a> from the <a href=\"#!/api/Ext.util.KeyMap-cfg-target\" rel=\"Ext.util.KeyMap-cfg-target\" class=\"docClass\">target</a>.</p>\n","private":true,"params":[{"tagname":"params","type":"Ext.event.Event","name":"event","doc":"\n","html_type":"Ext.event.Event"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-handleTargetEvent","owner":"Ext.util.KeyMap","short_doc":"Process the event from the target. ..."},{"tagname":"method","name":"isEnabled","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/KeyMap.js","linenr":458}],"doc":"<p>Returns true if this KeyMap is enabled</p>\n","return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-isEnabled","owner":"Ext.util.KeyMap","short_doc":"Returns true if this KeyMap is enabled ..."},{"tagname":"method","name":"legacyConstructor","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/KeyMap.js","linenr":153}],"doc":"<p>Old constructor signature</p>\n","private":true,"params":[{"tagname":"params","type":"String/HTMLElement/Ext.dom.Element/Ext.Component","name":"el","doc":"<p>The element or its ID, or Component to bind to</p>\n","html_type":"String/HTMLElement/Ext.dom.Element/Ext.Component"},{"tagname":"params","type":"Object","name":"binding","doc":"<p>The binding (see <a href=\"#!/api/Ext.util.KeyMap-method-addBinding\" rel=\"Ext.util.KeyMap-method-addBinding\" class=\"docClass\">addBinding</a>)</p>\n","html_type":"Object"},{"tagname":"params","type":"String","name":"eventName","default":"\"keydown\"","optional":true,"doc":"<p>The event to bind to</p>\n","html_type":"String"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["addBinding","enable"],"id":"method-legacyConstructor","owner":"Ext.util.KeyMap","short_doc":"Old constructor signature ..."},{"tagname":"method","name":"on","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/KeyMap.js","linenr":400}],"doc":"<p>Shorthand for adding a single key listener.</p>\n","params":[{"tagname":"params","type":"Number/Number[]/Object","name":"key","doc":"<p>Either the numeric key code, array of key codes or an object with the\nfollowing options: <code>{key: (number or array), shift: (true/false), ctrl: (true/false), alt: (true/false)}</code></p>\n","html_type":"Number/Number[]/Object"},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The function to call</p>\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (<code>this</code> reference) in which the function is executed.\nDefaults to the browser window.</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["addBinding"],"id":"method-on","owner":"Ext.util.KeyMap","short_doc":"Shorthand for adding a single key listener. ..."},{"tagname":"method","name":"processBinding","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/KeyMap.js","linenr":349}],"doc":"<p>Process a particular binding and fire the handler if necessary.</p>\n","private":true,"params":[{"tagname":"params","type":"Object","name":"binding","doc":"<p>The binding information</p>\n","html_type":"Object"},{"tagname":"params","type":"Ext.event.Event","name":"event","doc":"\n","html_type":"Ext.event.Event"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["checkModifiers"],"id":"method-processBinding","owner":"Ext.util.KeyMap","short_doc":"Process a particular binding and fire the handler if necessary. ..."},{"tagname":"method","name":"processKeys","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/KeyMap.js","linenr":261}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":261,"params":[{"name":"keyCode","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-processKeys","owner":"Ext.util.KeyMap","short_doc":" ..."},{"tagname":"method","name":"removeBinding","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/KeyMap.js","linenr":233}],"doc":"<p>Remove a binding from this KeyMap.</p>\n","params":[{"tagname":"params","type":"Object","name":"binding","doc":"<p>See <a href=\"#!/api/Ext.util.KeyMap-method-addBinding\" rel=\"Ext.util.KeyMap-method-addBinding\" class=\"docClass\">for options</a></p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["processKeys"],"id":"method-removeBinding","owner":"Ext.util.KeyMap","short_doc":"Remove a binding from this KeyMap. ..."},{"tagname":"method","name":"setDisabled","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/KeyMap.js","linenr":490}],"doc":"<p>Convenience function for setting disabled/enabled by boolean.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"disabled","doc":"\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["disable","enable"],"id":"method-setDisabled","owner":"Ext.util.KeyMap","short_doc":"Convenience function for setting disabled/enabled by boolean. ..."},{"tagname":"method","name":"un","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/KeyMap.js","linenr":429}],"doc":"<p>Shorthand for removing a single key listener.</p>\n","params":[{"tagname":"params","type":"Number/Number[]/Object","name":"key","doc":"<p>Either the numeric key code, array of key codes or an object with the\nfollowing options: <code>{key: (number or array), shift: (true/false), ctrl: (true/false), alt: (true/false)}</code></p>\n","html_type":"Number/Number[]/Object"},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The function to call</p>\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (<code>this</code> reference) in which the function is executed.\nDefaults to the browser window.</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["removeBinding"],"id":"method-un","owner":"Ext.util.KeyMap","short_doc":"Shorthand for removing a single key listener. ..."}],"code_type":"ext_define","id":"class-Ext.util.KeyMap","short_doc":"Handles mapping key events to handling functions for an element or a Component. ..."}