{"tagname":"class","name":"Ext.layout.container.SplitColumn","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/SplitColumn.js","linenr":1}],"doc":"<p>This layout extends <code><a href=\"#!/api/Ext.layout.container.Column\" rel=\"Ext.layout.container.Column\" class=\"docClass\">Ext.layout.container.Column</a></code> and adds splitters between adjacent\ncolumns allowing the user to resize them.</p>\n","private":true,"aliases":{"layout":["split-column"]},"alternateClassNames":[],"extends":"Ext.layout.container.Column","mixins":[],"requires":["Ext.layout.container.ColumnSplitter"],"uses":[],"members":[{"tagname":"cfg","name":"childEls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Auto.js","linenr":42}],"doc":"<p>The canonical form of <code>childEls</code> is an object keyed by child's property name\nwith values that are objects with the following properties.</p>\n\n<ul>\n<li><code>itemId</code> - The id to combine with the Component's id that is the id of the\nchild element.</li>\n<li><code>id</code> - The id of the child element.</li>\n<li><code>leaf</code> - Set to <code>true</code> to ignore content when scanning for childEls. This\nshould be set on things like the generated content for an <code><a href=\"#!/api/Ext.view.View\" rel=\"Ext.view.View\" class=\"docClass\">Ext.view.View</a></code>.</li>\n<li><code>select</code>: A selector that will be passed to Ext.dom.Element.select.</li>\n<li><code>selectNode</code>: A selector that will be passed to Ext.dom.Element.selectNode.</li>\n</ul>\n\n\n<p>For example:</p>\n\n<pre><code> childEls: {\n     button: true,\n     buttonText: 'text',\n     buttonImage: {\n         itemId: 'image'\n     }\n }\n</code></pre>\n\n<p>The above is translated into the following complete form:</p>\n\n<pre><code> childEls: {\n     button: {\n         name: 'button',\n         itemId: 'button'\n     },\n     buttonText: {\n         name: 'buttonText',\n         itemId: 'text'\n     },\n     buttonImage: {\n         name: 'buttonImage',\n         itemId: 'image'\n     }\n }\n</code></pre>\n\n<p>The above can be provided as an array like so:</p>\n\n<pre><code> childEls: [\n     'button',\n     { name: 'buttonText', itemId: 'text' },\n     { name: 'buttonImage', itemId: 'image' }\n }\n</code></pre>\n\n<p>For example, a Component which renders a title and body text:</p>\n\n<pre class='inline-example '><code>Ext.create('<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>', {\n    renderTo: Ext.getBody(),\n    renderTpl: [\n        '&lt;h1 id=\"{id}-title\"&gt;{title}&lt;/h1&gt;',\n        '&lt;p&gt;{msg}&lt;/p&gt;',\n    ],\n    renderData: {\n        title: \"Error\",\n        msg: \"Something went wrong\"\n    },\n    childEls: [\"title\"],\n    listeners: {\n        afterrender: function(cmp){\n            // After rendering the component will have a title property\n            cmp.title.setStyle({color: \"red\"});\n        }\n    }\n});\n</code></pre>\n\n<p>When using <code>select</code>, the property will be an instance of Ext.CompositeElement.\nIn all other cases, the property will be an Ext.dom.Element or <code>null</code>\nif not found.</p>\n\n<p>Care should be taken when using <code>select</code> or <code>selectNode</code> to find child elements.\nThe following issues should be considered:</p>\n\n<ul>\n<li>Performance: using selectors can be 10x slower than id lookup.</li>\n<li>Over-selecting: selectors are applied after the DOM elements for all children\nhave been rendered, so selectors can match elements from child components\n(including nested versions of the same component) accidentally.</li>\n</ul>\n\n\n<p>This above issues are most important when using <code>select</code> since it returns multiple\nelements.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":42,"type":"Object/String[]/Object[]","default":"['outerCt', 'innerCt']","readonly":null,"id":"cfg-childEls","owner":"Ext.layout.container.Auto","properties":null,"accessor":true,"evented":null,"overrides":[{"name":"childEls","owner":"Ext.util.ElementContainer","link":"<a href=\"#!/api/Ext.util.ElementContainer-cfg-childEls\" rel=\"Ext.util.ElementContainer-cfg-childEls\" class=\"docClass\">Ext.util.ElementContainer.childEls</a>"}],"short_doc":"The canonical form of childEls is an object keyed by child's property name\nwith values that are objects with the foll...","html_type":"Object/String[]/Object[]"},{"tagname":"cfg","name":"itemCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Column.js","linenr":75}],"doc":"<p>An optional extra CSS class that will be added to the container. This can be useful for\nadding customized styles to the container or any of its children using standard CSS\nrules. See <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>.<a href=\"#!/api/Ext.Component-cfg-componentCls\" rel=\"Ext.Component-cfg-componentCls\" class=\"docClass\">componentCls</a> also.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":75,"type":"String","default":"Ext.baseCSSPrefix + 'column'","readonly":null,"id":"cfg-itemCls","owner":"Ext.layout.container.Column","properties":null,"overrides":[{"name":"itemCls","owner":"Ext.layout.container.Container","link":"<a href=\"#!/api/Ext.layout.container.Container-cfg-itemCls\" rel=\"Ext.layout.container.Container-cfg-itemCls\" class=\"docClass\">Ext.layout.container.Container.itemCls</a>"}],"short_doc":"An optional extra CSS class that will be added to the container. ...","html_type":"String"},{"tagname":"cfg","name":"reserveScrollbar","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Auto.js","linenr":47}],"doc":"<p>Set to <code>true</code> to leave space for a vertical scrollbar (if the OS shows space-consuming scrollbars) regardless\nof whether a scrollbar is needed.</p>\n\n<p>This is useful if content height changes during application usage, but you do not want the calculated width\nof child items to change when a scrollbar appears or disappears. The scrollbar will appear in the reserved space,\nand the calculated width of child Components will not change.</p>\n\n<pre class='inline-example '><code>Ext.define('Employee', {\n    extend: 'Ext.data.Model',\n    fields: [\n       {name: 'rating', type: 'int'},\n       {name: 'salary', type: 'float'},\n       {name: 'name'}\n    ]\n});\n\nfunction createFakeData(count) {\n    var firstNames   = ['Ed', 'Tommy', 'Aaron', 'Abe', 'Jamie', 'Adam', 'Dave', 'David', 'Jay', 'Nicolas', 'Nige'],\n        lastNames    = ['Spencer', 'Maintz', 'Conran', 'Elias', 'Avins', 'Mishcon', 'Kaneda', 'Davis', 'Robinson', 'Ferrero', 'White'],\n        ratings      = [1, 2, 3, 4, 5],\n        salaries     = [100, 400, 900, 1500, 1000000];\n\n    var data = [];\n    for (var i = 0; i &lt; (count || 25); i++) {\n        var ratingId    = Math.floor(Math.random() * ratings.length),\n            salaryId    = Math.floor(Math.random() * salaries.length),\n            firstNameId = Math.floor(Math.random() * firstNames.length),\n            lastNameId  = Math.floor(Math.random() * lastNames.length),\n\n            rating      = ratings[ratingId],\n            salary      = salaries[salaryId],\n            name        = Ext.String.format(\"{0} {1}\", firstNames[firstNameId], lastNames[lastNameId]);\n\n        data.push({\n            rating: rating,\n            salary: salary,\n            name: name\n        });\n    }\n    store.loadData(data);\n}\n\n// create the Data Store\nvar store = Ext.create('Ext.data.Store', {\n    id: 'store',\n    model: 'Employee',\n    proxy: {\n        type: 'memory'\n    }\n});\ncreateFakeData(10);\n\nvar grid = Ext.create('<a href=\"#!/api/Ext.grid.Panel\" rel=\"Ext.grid.Panel\" class=\"docClass\">Ext.grid.Panel</a>', {\n    title: 'Grid loaded with varying number of records',\n    anchor: '100%',\n    store: store,\n    columns: [{\n        xtype: 'rownumberer',\n        width: 40,\n        sortable: false\n    },{\n        text: 'Name',\n        flex: 1,\n        sortable: true,\n        dataIndex: 'name'\n    },{\n        text: 'Rating',\n        width: 125,\n        sortable: true,\n        dataIndex: 'rating'\n    },{\n        text: 'Salary',\n        width: 125,\n        sortable: true,\n        dataIndex: 'salary',\n        align: 'right',\n        renderer: Ext.util.Format.usMoney\n    }]\n});\n\nExt.create('<a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>', {\n    renderTo: document.body,\n    width: 800,\n    height: 600,\n    layout: {\n        type: 'anchor',\n        reserveScrollbar: true // There will be a gap even when there's no scrollbar\n    },\n    autoScroll: true,\n    items: grid,\n    tbar: {\n        defaults: {\n            handler: function(b) {\n                createFakeData(b.count);\n            }\n        },\n        items: [{\n             text: '10 Items',\n             count: 10\n        },{\n             text: '100 Items',\n             count: 100\n        },{\n             text: '300 Items',\n             count: 300\n        },{\n             text: '1000 Items',\n             count: 1000\n        },{\n             text: '5000 Items',\n             count: 5000\n        }]\n    }\n});\n</code></pre>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-reserveScrollbar","owner":"Ext.layout.container.Auto","short_doc":"Set to true to leave space for a vertical scrollbar (if the OS shows space-consuming scrollbars) regardless\nof whethe...","html_type":"Boolean"},{"tagname":"property","name":"$configPrefixed","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/Layout.js","linenr":58}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":58,"type":"Boolean","default":"false","readonly":null,"id":"property-S-configPrefixed","owner":"Ext.layout.Layout","short_doc":" ...","html_type":"Boolean"},{"tagname":"property","name":"$configStrict","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/Layout.js","linenr":59}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":59,"type":"Boolean","default":"false","readonly":null,"id":"property-S-configStrict","owner":"Ext.layout.Layout","short_doc":" ...","html_type":"Boolean"},{"tagname":"property","name":"activeItemCount","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Container.js","linenr":59}],"doc":"<p>tracks the number of child items that do not use \"liquid\" CSS layout</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"Number","default":"0","readonly":null,"id":"property-activeItemCount","owner":"Ext.layout.container.Container","short_doc":"tracks the number of child items that do not use \"liquid\" CSS layout ...","html_type":"Number"},{"tagname":"property","name":"animatePolicy","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Container.js","linenr":45}],"doc":"<p>An object which contains boolean properties specifying which properties are to be\nanimated upon flush of child Component ContextItems. For example, Accordion would\nhave:</p>\n\n<pre><code> {\n     y: true,\n     height: true\n }\n</code></pre>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"Object","default":null,"readonly":null,"id":"property-animatePolicy","owner":"Ext.layout.container.Container","short_doc":"An object which contains boolean properties specifying which properties are to be\nanimated upon flush of child Compon...","html_type":"Object"},{"tagname":"property","name":"autoSizePolicy","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/Layout.js","linenr":51}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":51,"type":"Object","default":"{readsWidth: 1, readsHeight: 1, setsWidth: 0, setsHeight: 0}","readonly":null,"id":"property-autoSizePolicy","owner":"Ext.layout.Layout","short_doc":" ...","html_type":"Object"},{"tagname":"property","name":"columnWidthSizePolicy","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Column.js","linenr":79}],"doc":"<p>Columns with a columnWidth have their width managed.</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"type":"Object","default":"{readsWidth: 0, readsHeight: 1, setsWidth: 1, setsHeight: 0}","readonly":null,"id":"property-columnWidthSizePolicy","owner":"Ext.layout.container.Column","short_doc":"Columns with a columnWidth have their width managed. ...","html_type":"Object"},{"tagname":"property","name":"createsInnerCt","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Column.js","linenr":87}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":87,"type":"Boolean","default":"true","readonly":null,"id":"property-createsInnerCt","owner":"Ext.layout.container.Column","short_doc":" ...","html_type":"Boolean"},{"tagname":"property","name":"done","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/Layout.js","linenr":74}],"doc":"<p>Used only during a layout run, this value indicates that a\nlayout has finished its calculations. This flag is set to true prior to the call to\n<a href=\"#!/api/Ext.layout.Layout-method-calculate\" rel=\"Ext.layout.Layout-method-calculate\" class=\"docClass\">calculate</a> and should be set to false if this layout has more work to do.</p>\n","type":"Boolean","default":null,"properties":null,"id":"property-done","owner":"Ext.layout.Layout","short_doc":"Used only during a layout run, this value indicates that a\nlayout has finished its calculations. ...","html_type":"Boolean"},{"tagname":"property","name":"factoryConfig","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/Layout.js","linenr":17}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":17,"type":"Object","default":"{type: 'layout'}","readonly":null,"id":"property-factoryConfig","owner":"Ext.layout.Layout","short_doc":" ...","html_type":"Object"},{"tagname":"property","name":"firstColumnCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/SplitColumn.js","linenr":16}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":16,"type":"String","default":"Ext.baseCSSPrefix + 'split-column-first'","readonly":null,"id":"property-firstColumnCls","owner":"Ext.layout.container.SplitColumn","short_doc":" ...","html_type":"String"},{"tagname":"property","name":"initialized","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/Layout.js","linenr":27}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":27,"type":"Boolean","default":"false","readonly":null,"id":"property-initialized","owner":"Ext.layout.Layout","short_doc":" ...","html_type":"Boolean"},{"tagname":"property","name":"innerCtCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Auto.js","linenr":205}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":205,"type":"String","default":"Ext.baseCSSPrefix + 'autocontainer-innerCt'","readonly":null,"id":"property-innerCtCls","owner":"Ext.layout.container.Auto","short_doc":" ...","html_type":"String"},{"tagname":"property","name":"isLayout","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/Layout.js","linenr":21}],"doc":"<p><code>true</code> in this class to identify an object as an instantiated Layout, or subclass thereof.</p>\n","type":"Boolean","default":"true","properties":null,"readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-isLayout","owner":"Ext.layout.Layout","short_doc":"true in this class to identify an object as an instantiated Layout, or subclass thereof. ...","html_type":"Boolean"},{"tagname":"property","name":"lastColumnCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/SplitColumn.js","linenr":18}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":18,"type":"String","default":"Ext.baseCSSPrefix + 'split-column-last'","readonly":null,"id":"property-lastColumnCls","owner":"Ext.layout.container.SplitColumn","short_doc":" ...","html_type":"String"},{"tagname":"property","name":"lastOverflowAdjust","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Auto.js","linenr":198}],"doc":"<p>Begin with no previous adjustments</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"type":"Object","default":"{width: 0, height: 0}","readonly":null,"id":"property-lastOverflowAdjust","owner":"Ext.layout.container.Auto","short_doc":"Begin with no previous adjustments ...","html_type":"Object"},{"tagname":"property","name":"manageOverflow","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Column.js","linenr":89}],"doc":"<p>true to rerun the layout if scrollbars are needed.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":89,"type":"Boolean","default":"true","readonly":null,"id":"property-manageOverflow","owner":"Ext.layout.container.Column","properties":null,"overrides":[{"name":"manageOverflow","owner":"Ext.layout.container.Auto","link":"<a href=\"#!/api/Ext.layout.container.Auto-property-manageOverflow\" rel=\"Ext.layout.container.Auto-property-manageOverflow\" class=\"docClass\">Ext.layout.container.Auto.manageOverflow</a>"}],"short_doc":"true to rerun the layout if scrollbars are needed. ...","html_type":"Boolean"},{"tagname":"property","name":"managePadding","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Auto.js","linenr":168}],"doc":"<p>indicates that this layout will correct cross browser padding differences when the\ncontainer has overflow.</p>\n\n<p>In some browsers the right and/or bottom padding of a container is lost when\nthe container has overflow.  If managePadding is true the layout will apply the\npadding to an inner wrapping element instead of the container element that has the\noverflow so that paddding will be included in the scrollable area.\nNote: padding will not be managed if it is configured on the container using\na style config or css class.  In order to be managed, padding must be added to the\ncontainer using the appropriate <a href=\"#!/api/Ext.Component-property-contentPaddingProperty\" rel=\"Ext.Component-property-contentPaddingProperty\" class=\"docClass\">contentPaddingProperty</a>.  For <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Panels</a> use\n<a href=\"#!/api/Ext.panel.Panel-cfg-bodyPadding\" rel=\"Ext.panel.Panel-cfg-bodyPadding\" class=\"docClass\">Ext.panel.Panel.bodyPadding</a>, and for\n<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Containers</a>, use\n<a href=\"#!/api/Ext.Component-cfg-padding\" rel=\"Ext.Component-cfg-padding\" class=\"docClass\">padding</a></p>\n","type":"Boolean","default":"true","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-managePadding","owner":"Ext.layout.container.Auto","short_doc":"indicates that this layout will correct cross browser padding differences when the\ncontainer has overflow. ...","html_type":"Boolean"},{"tagname":"property","name":"mixinId","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/ElementContainer.js","linenr":66}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":66,"type":"String","default":"'elementCt'","readonly":null,"id":"property-mixinId","owner":"Ext.util.ElementContainer","overrides":[{"name":"mixinId","owner":"Ext.util.Animate","link":"<a href=\"#!/api/Ext.util.Animate-property-mixinId\" rel=\"Ext.util.Animate-property-mixinId\" class=\"docClass\">Ext.util.Animate.mixinId</a>"}],"short_doc":" ...","html_type":"String"},{"tagname":"property","name":"needsItemSize","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Auto.js","linenr":193}],"doc":"<p>auto layout does not care about the dimensions of individual child items since\nit does not size them, and it measures them as a whole when in shrinkWrap mode.</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"type":"Boolean","default":"false","readonly":null,"id":"property-needsItemSize","owner":"Ext.layout.container.Auto","overrides":[{"name":"needsItemSize","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-property-needsItemSize\" rel=\"Ext.layout.Layout-property-needsItemSize\" class=\"docClass\">Ext.layout.Layout.needsItemSize</a>"}],"params":null,"return":null,"throws":null,"properties":null,"short_doc":"auto layout does not care about the dimensions of individual child items since\nit does not size them, and it measures...","html_type":"Boolean"},{"tagname":"property","name":"outerCtCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Auto.js","linenr":204}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":204,"type":"String","default":"Ext.baseCSSPrefix + 'autocontainer-outerCt'","readonly":null,"id":"property-outerCtCls","owner":"Ext.layout.container.Auto","short_doc":" ...","html_type":"String"},{"tagname":"property","name":"privates","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/ElementContainer.js","linenr":222}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":222,"type":"Object","default":null,"readonly":null,"id":"property-privates","owner":"Ext.util.ElementContainer","html_type":"Object"},{"tagname":"property","name":"renderTpl","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Auto.js","linenr":207}],"doc":"<p>Auto layout's renderTpl wraps the content in an outerCt which is used to accomplish\nthe following 3 goals:</p>\n\n<ol>\n<li>When the container has a shrink wrapped width and/or height, the outerCt is used\nto measure the size of the content.</li>\n<li>When the container has overflow some browsers lose the container's right and/or\nbottom padding.  To fix this, the padding is rendered to the outerCt instead of\nthe container target element.  This ensures that the padding is included in the\ncontainer's scrollWidth/scrollHeight. In Old IE when a table is used, the padding\nis rendered to the innerCt td element.</li>\n<li>The outerCt contains the margins of its children, that is to say, it prevents\nthem from collapsing.</li>\n</ol>\n\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"type":"Array","default":"['<div id=\"{ownerId}-outerCt\" data-ref=\"outerCt\" class=\"{outerCtCls}\" role=\"presentation\">', '<div id=\"{ownerId}-innerCt\" data-ref=\"innerCt\" style=\"{%this.renderPadding(out, values)%}\" ', 'class=\"{innerCtCls}\" role=\"presentation\">', '{%this.renderBody(out,values)%}', '</div>', '</div>']","readonly":null,"id":"property-renderTpl","owner":"Ext.layout.container.Auto","overrides":[{"name":"renderTpl","owner":"Ext.layout.container.Container","link":"<a href=\"#!/api/Ext.layout.container.Container-property-renderTpl\" rel=\"Ext.layout.container.Container-property-renderTpl\" class=\"docClass\">Ext.layout.container.Container.renderTpl</a>"}],"params":null,"return":null,"throws":null,"properties":null,"short_doc":"Auto layout's renderTpl wraps the content in an outerCt which is used to accomplish\nthe following 3 goals:\n\n\nWhen the...","html_type":"Array"},{"tagname":"property","name":"running","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/Layout.js","linenr":28}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":28,"type":"Boolean","default":"false","readonly":null,"id":"property-running","owner":"Ext.layout.Layout","short_doc":" ...","html_type":"Boolean"},{"tagname":"property","name":"setsItemSize","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Column.js","linenr":91}],"doc":"<p>Column layout does not read the size of individual items in the shrink-wrapping\ndimension(s) because, as a subclass of autocontainer, it measures them as a whole\nusing an outer element.  However, column layout may set the size of its items in\nnon-shrink-wrapping dimension(s).</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"type":"Boolean","default":"true","readonly":null,"id":"property-setsItemSize","owner":"Ext.layout.container.Column","params":null,"return":null,"throws":null,"properties":null,"overrides":[{"name":"setsItemSize","owner":"Ext.layout.container.Auto","link":"<a href=\"#!/api/Ext.layout.container.Auto-property-setsItemSize\" rel=\"Ext.layout.container.Auto-property-setsItemSize\" class=\"docClass\">Ext.layout.container.Auto.setsItemSize</a>"}],"short_doc":"Column layout does not read the size of individual items in the shrink-wrapping\ndimension(s) because, as a subclass o...","html_type":"Boolean"},{"tagname":"property","name":"targetCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Column.js","linenr":77}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":77,"type":"String","default":"Ext.baseCSSPrefix + 'column-layout-ct'","readonly":null,"id":"property-targetCls","owner":"Ext.layout.container.Column","short_doc":" ...","html_type":"String"},{"tagname":"property","name":"type","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/SplitColumn.js","linenr":14}],"doc":"<p>End Definitions</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":14,"type":"String","default":"'split-column'","readonly":null,"id":"property-type","owner":"Ext.layout.container.SplitColumn","params":null,"return":null,"throws":null,"properties":null,"overrides":[{"name":"type","owner":"Ext.layout.container.Column","link":"<a href=\"#!/api/Ext.layout.container.Column-property-type\" rel=\"Ext.layout.container.Column-property-type\" class=\"docClass\">Ext.layout.container.Column.type</a>"}],"short_doc":"End Definitions ...","html_type":"String"},{"tagname":"property","name":"usesContainerHeight","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Container.js","linenr":69}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":69,"type":"Boolean","default":"true","readonly":null,"id":"property-usesContainerHeight","owner":"Ext.layout.container.Container","short_doc":" ...","html_type":"Boolean"},{"tagname":"property","name":"usesContainerWidth","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Container.js","linenr":70}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":70,"type":"Boolean","default":"true","readonly":null,"id":"property-usesContainerWidth","owner":"Ext.layout.container.Container","short_doc":" ...","html_type":"Boolean"},{"tagname":"property","name":"usesHeight","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Container.js","linenr":71}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":71,"type":"Boolean","default":"true","readonly":null,"id":"property-usesHeight","owner":"Ext.layout.container.Container","short_doc":" ...","html_type":"Boolean"},{"tagname":"property","name":"usesWidth","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Container.js","linenr":72}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":72,"type":"Boolean","default":"true","readonly":null,"id":"property-usesWidth","owner":"Ext.layout.container.Container","short_doc":" ...","html_type":"Boolean"},{"tagname":"method","name":"constructor","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Container.js","linenr":74}],"doc":"\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":74,"params":[],"chainable":false,"fires":[],"method_calls":["callParent"],"id":"method-constructor","owner":"Ext.layout.container.Container","overrides":[{"name":"constructor","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-constructor\" rel=\"Ext.layout.Layout-method-constructor\" class=\"docClass\">Ext.layout.Layout.constructor</a>"}],"return":{"type":"Ext.layout.container.Container","doc":"\n","html_type":"<a href=\"#!/api/Ext.layout.container.Container\" rel=\"Ext.layout.container.Container\" class=\"docClass\">Ext.layout.container.Container</a>"},"short_doc":" ..."},{"tagname":"method","name":"afterClassMixedIn","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/ElementContainer.js","linenr":223}],"doc":"<p>Called after the mixin is applied. We need to see if <code>childEls</code> were used by\nthe <code>targetClass</code> and apply them to the config.</p>\n","params":[{"tagname":"params","type":"Ext.Class","name":"targetClass","doc":"\n","html_type":"Ext.Class"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-afterClassMixedIn","owner":"Ext.util.ElementContainer","short_doc":"Called after the mixin is applied. ..."},{"tagname":"method","name":"afterRemove","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/Layout.js","linenr":522}],"doc":"<p>Removes layout's itemCls and owning Container's itemCls.\nClears the managed dimensions flags</p>\n","protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"name":"item","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-afterRemove","owner":"Ext.layout.Layout","short_doc":"Removes layout's itemCls and owning Container's itemCls. ..."},{"tagname":"method","name":"attachChildEls","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/ElementContainer.js","linenr":243}],"doc":"<p>Sets references to elements inside the component.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"el","type":"Object","html_type":"Object"},{"name":"owner","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["getChildEls"],"id":"method-attachChildEls","owner":"Ext.util.ElementContainer","short_doc":"Sets references to elements inside the component. ..."},{"tagname":"method","name":"beforeLayoutCycle","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/SplitColumn.js","linenr":99}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":99,"params":[{"name":"ownerContext","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["callParent","syncFirstLast","syncSplitters"],"id":"method-beforeLayoutCycle","owner":"Ext.layout.container.SplitColumn","return":null,"throws":null,"properties":null,"type":null,"overrides":[{"name":"beforeLayoutCycle","owner":"Ext.layout.container.Auto","link":"<a href=\"#!/api/Ext.layout.container.Auto-method-beforeLayoutCycle\" rel=\"Ext.layout.container.Auto-method-beforeLayoutCycle\" class=\"docClass\">Ext.layout.container.Auto.beforeLayoutCycle</a>"}],"short_doc":" ..."},{"tagname":"method","name":"beginCollapse","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Container.js","linenr":31}],"doc":"<p>Called by an owning Panel before the Panel begins its collapse process.\nMost layouts will not need to override the default Ext.emptyFn implementation.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-beginCollapse","owner":"Ext.layout.container.Container","short_doc":"Called by an owning Panel before the Panel begins its collapse process. ..."},{"tagname":"method","name":"beginExpand","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Container.js","linenr":38}],"doc":"<p>Called by an owning Panel before the Panel begins its expand process.\nMost layouts will not need to override the default Ext.emptyFn implementation.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-beginExpand","owner":"Ext.layout.container.Container","short_doc":"Called by an owning Panel before the Panel begins its expand process. ..."},{"tagname":"method","name":"beginLayout","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/SplitColumn.js","linenr":55}],"doc":"<p>In addition to work done by our base classes, containers benefit from some extra\ncached data. The following properties are added to the ownerContext:</p>\n\n<ul>\n<li>visibleItems: the result of <a href=\"#!/api/Ext.layout.container.SplitColumn-method-getVisibleItems\" rel=\"Ext.layout.container.SplitColumn-method-getVisibleItems\" class=\"docClass\">getVisibleItems</a></li>\n<li>childItems: the ContextItem[] for each visible item</li>\n<li>targetContext: the ContextItem for the <a href=\"#!/api/Ext.layout.container.SplitColumn-method-getTarget\" rel=\"Ext.layout.container.SplitColumn-method-getTarget\" class=\"docClass\">getTarget</a> element</li>\n</ul>\n\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":55,"params":[{"name":"ownerContext","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["callParent"],"id":"method-beginLayout","owner":"Ext.layout.container.SplitColumn","overrides":[{"name":"beginLayout","owner":"Ext.layout.container.Auto","link":"<a href=\"#!/api/Ext.layout.container.Auto-method-beginLayout\" rel=\"Ext.layout.container.Auto-method-beginLayout\" class=\"docClass\">Ext.layout.container.Auto.beginLayout</a>"}],"short_doc":"In addition to work done by our base classes, containers benefit from some extra\ncached data. ..."},{"tagname":"method","name":"beginLayoutCycle","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Auto.js","linenr":252}],"doc":"<p>Called before any calculation cycles to reset DOM values and prepare for calculation.</p>\n\n<p>This is a write phase and DOM reads should be strictly avoided when overridding\nthis method.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":252,"params":[{"name":"ownerContext","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["callParent","getOverflowXStyle"],"id":"method-beginLayoutCycle","owner":"Ext.layout.container.Auto","overrides":[{"name":"beginLayoutCycle","owner":"Ext.layout.container.Container","link":"<a href=\"#!/api/Ext.layout.container.Container-method-beginLayoutCycle\" rel=\"Ext.layout.container.Container-method-beginLayoutCycle\" class=\"docClass\">Ext.layout.container.Container.beginLayoutCycle</a>"}],"short_doc":"Called before any calculation cycles to reset DOM values and prepare for calculation. ..."},{"tagname":"method","name":"cacheChildItems","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Container.js","linenr":115}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":115,"params":[{"name":"ownerContext","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["getVisibleItems"],"id":"method-cacheChildItems","owner":"Ext.layout.container.Container","short_doc":" ..."},{"tagname":"method","name":"cacheElements","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Container.js","linenr":133}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":133,"params":[],"chainable":false,"fires":[],"method_calls":["attachChildEls"],"id":"method-cacheElements","owner":"Ext.layout.container.Container","short_doc":" ..."},{"tagname":"method","name":"calculate","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Auto.js","linenr":328}],"doc":"<p>Called to perform the calculations for this layout. This method will be called at\nleast once and may be called repeatedly if the <a href=\"#!/api/Ext.layout.container.Auto-property-done\" rel=\"Ext.layout.container.Auto-property-done\" class=\"docClass\">done</a> property is cleared\nbefore return to indicate that this layout is not yet done. The <a href=\"#!/api/Ext.layout.container.Auto-property-done\" rel=\"Ext.layout.container.Auto-property-done\" class=\"docClass\">done</a> property\nis always set to <code>true</code> before entering this method.</p>\n\n<p>This is a read phase and DOM writes should be strictly avoided in derived classes.\nInstead, DOM writes need to be written to <a href=\"#!/api/Ext.layout.ContextItem\" rel=\"Ext.layout.ContextItem\" class=\"docClass\">Ext.layout.ContextItem</a> objects to\n be flushed at the next opportunity.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":328,"params":[{"name":"ownerContext","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["calculateContentSize","calculateItems","calculateOverflow","getContainerSize","setCtSizeIfNeeded"],"id":"method-calculate","owner":"Ext.layout.container.Auto","overrides":[{"name":"calculate","owner":"Ext.layout.container.Container","link":"<a href=\"#!/api/Ext.layout.container.Container-method-calculate\" rel=\"Ext.layout.container.Container-method-calculate\" class=\"docClass\">Ext.layout.container.Container.calculate</a>"}],"abstract":true,"short_doc":"Called to perform the calculations for this layout. ..."},{"tagname":"method","name":"calculateContentSize","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Auto.js","linenr":354}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":354,"params":[{"name":"ownerContext","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["measureContentHeight","measureContentWidth"],"id":"method-calculateContentSize","owner":"Ext.layout.container.Auto","short_doc":" ..."},{"tagname":"method","name":"calculateItems","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Column.js","linenr":114}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":114,"params":[{"name":"ownerContext","type":"Object","html_type":"Object"},{"name":"containerSize","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-calculateItems","owner":"Ext.layout.container.Column","short_doc":" ..."},{"tagname":"method","name":"calculateOverflow","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Auto.js","linenr":394}],"doc":"<p>Handles overflow processing for a container.  In addition to the ownerContext\npassed to the <a href=\"#!/api/Ext.layout.container.Auto-method-calculate\" rel=\"Ext.layout.container.Auto-method-calculate\" class=\"docClass\">calculate</a> method, this method also needs the containerSize\n(the object returned by <a href=\"#!/api/Ext.layout.container.Auto-method-getContainerSize\" rel=\"Ext.layout.container.Auto-method-getContainerSize\" class=\"docClass\">getContainerSize</a>).</p>\n","protected":true,"params":[{"tagname":"params","type":"Ext.layout.ContextItem","name":"ownerContext","doc":"\n","html_type":"<a href=\"#!/api/Ext.layout.ContextItem\" rel=\"Ext.layout.ContextItem\" class=\"docClass\">Ext.layout.ContextItem</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getOverflowXStyle","getOverflowYStyle"],"id":"method-calculateOverflow","owner":"Ext.layout.container.Auto","short_doc":"Handles overflow processing for a container. ..."},{"tagname":"method","name":"completeLayout","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Auto.js","linenr":448}],"doc":"<p>This method (if implemented) is called at the end of the cycle in which this layout\ncompletes (by not setting <a href=\"#!/api/Ext.layout.container.Auto-property-done\" rel=\"Ext.layout.container.Auto-property-done\" class=\"docClass\">done</a> to <code>false</code> in <a href=\"#!/api/Ext.layout.container.Auto-method-calculate\" rel=\"Ext.layout.container.Auto-method-calculate\" class=\"docClass\">calculate</a>). It is\npossible for the layout to complete and yet become invalid before the end of the cycle,\nin which case, this method will not be called. It is also possible for this method to\nbe called and then later the layout becomes invalidated. This will result in\n<a href=\"#!/api/Ext.layout.container.Auto-method-calculate\" rel=\"Ext.layout.container.Auto-method-calculate\" class=\"docClass\">calculate</a> being called again, followed by another call to this method.</p>\n\n<p>This is a read phase and DOM writes should be strictly avoided in derived classes.\nInstead, DOM writes need to be written to <a href=\"#!/api/Ext.layout.ContextItem\" rel=\"Ext.layout.ContextItem\" class=\"docClass\">Ext.layout.ContextItem</a> objects to\nbe flushed at the next opportunity.</p>\n\n<p>This method need not be implemented by derived classes and, in fact, should only be\nimplemented when needed.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":448,"params":[{"name":"ownerContext","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-completeLayout","owner":"Ext.layout.container.Auto","overrides":[{"name":"completeLayout","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-completeLayout\" rel=\"Ext.layout.Layout-method-completeLayout\" class=\"docClass\">Ext.layout.Layout.completeLayout</a>"}],"short_doc":"This method (if implemented) is called at the end of the cycle in which this layout\ncompletes (by not setting done to..."},{"tagname":"method","name":"configureItem","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Container.js","linenr":152}],"doc":"<p>Adds layout's itemCls and owning Container's itemCls</p>\n","protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"name":"item","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-configureItem","owner":"Ext.layout.container.Container","overrides":[{"name":"configureItem","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-configureItem\" rel=\"Ext.layout.Layout-method-configureItem\" class=\"docClass\">Ext.layout.Layout.configureItem</a>"}],"short_doc":"Adds layout's itemCls and owning Container's itemCls ..."},{"tagname":"method","name":"destroy","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Container.js","linenr":79}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":79,"params":[],"chainable":false,"fires":[],"method_calls":["callParent"],"id":"method-destroy","owner":"Ext.layout.container.Container","overrides":[{"name":"destroy","owner":"Ext.util.ElementContainer","link":"<a href=\"#!/api/Ext.util.ElementContainer-method-destroy\" rel=\"Ext.util.ElementContainer-method-destroy\" class=\"docClass\">Ext.util.ElementContainer.destroy</a>"}],"return":null,"throws":null,"properties":null,"type":null,"short_doc":" ..."},{"tagname":"method","name":"doRenderBody","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Auto.js","linenr":452}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":452,"params":[{"name":"out","type":"Object","html_type":"Object"},{"name":"renderData","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["renderContent","renderItems"],"id":"method-doRenderBody","owner":"Ext.layout.container.Auto","overrides":[{"name":"doRenderBody","owner":"Ext.layout.container.Container","link":"<a href=\"#!/api/Ext.layout.container.Container-method-doRenderBody\" rel=\"Ext.layout.container.Container-method-doRenderBody\" class=\"docClass\">Ext.layout.container.Container.doRenderBody</a>"}],"return":null,"throws":null,"properties":null,"type":null,"short_doc":" ..."},{"tagname":"method","name":"doRenderContainer","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Container.js","linenr":195}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":195,"params":[{"name":"out","type":"Object","html_type":"Object"},{"name":"renderData","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-doRenderContainer","owner":"Ext.layout.container.Container","short_doc":" ..."},{"tagname":"method","name":"doRenderItems","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Container.js","linenr":206}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":206,"params":[{"name":"out","type":"Object","html_type":"Object"},{"name":"renderData","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-doRenderItems","owner":"Ext.layout.container.Container","short_doc":" ..."},{"tagname":"method","name":"doRenderPadding","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Auto.js","linenr":470}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":470,"params":[{"name":"out","type":"Object","html_type":"Object"},{"name":"renderData","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-doRenderPadding","owner":"Ext.layout.container.Auto","short_doc":" ..."},{"tagname":"method","name":"finalizeLayout","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/Layout.js","linenr":164}],"doc":"<p>This method (if implemented) is called after all layouts have completed. In most\nways this is similar to <a href=\"#!/api/Ext.layout.Layout-method-completeLayout\" rel=\"Ext.layout.Layout-method-completeLayout\" class=\"docClass\">completeLayout</a>. This call can cause this (or any\nlayout) to be become invalid (see <a href=\"#!/api/Ext.layout.Context-method-invalidate\" rel=\"Ext.layout.Context-method-invalidate\" class=\"docClass\">Ext.layout.Context.invalidate</a>), but this\nis best avoided. This method is intended to be where final reads are made and so it\nis best to avoid invalidating layouts at this point whenever possible. Even so, this\nmethod can be used to perform final checks that may require all other layouts to be\ncomplete and then invalidate some results.</p>\n\n<p>This is a read phase and DOM writes should be strictly avoided in derived classes.\nInstead, DOM writes need to be written to <a href=\"#!/api/Ext.layout.ContextItem\" rel=\"Ext.layout.ContextItem\" class=\"docClass\">Ext.layout.ContextItem</a> objects to\nbe flushed at the next opportunity.</p>\n\n<p>This method need not be implemented by derived classes and, in fact, should only be\nimplemented when needed.</p>\n","params":[{"tagname":"params","type":"Ext.layout.ContextItem","name":"ownerContext","doc":"<p>The context item for the layout's owner\ncomponent.</p>\n","html_type":"<a href=\"#!/api/Ext.layout.ContextItem\" rel=\"Ext.layout.ContextItem\" class=\"docClass\">Ext.layout.ContextItem</a>"}],"id":"method-finalizeLayout","owner":"Ext.layout.Layout","short_doc":"This method (if implemented) is called after all layouts have completed. ..."},{"tagname":"method","name":"finishRender","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Container.js","linenr":218}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":218,"params":[],"chainable":false,"fires":[],"method_calls":["cacheElements","callParent","finishRenderItems","getLayoutItems","getRenderTarget","getTarget"],"id":"method-finishRender","owner":"Ext.layout.container.Container","overrides":[{"name":"finishRender","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-finishRender\" rel=\"Ext.layout.Layout-method-finishRender\" class=\"docClass\">Ext.layout.Layout.finishRender</a>"}],"return":null,"throws":null,"properties":null,"type":null,"short_doc":" ..."},{"tagname":"method","name":"finishRenderItems","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/Layout.js","linenr":343}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":343,"params":[{"name":"target","type":"Object","html_type":"Object"},{"name":"items","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-finishRenderItems","owner":"Ext.layout.Layout","short_doc":" ..."},{"tagname":"method","name":"finishedLayout","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/SplitColumn.js","linenr":116}],"doc":"<p>This method is called after all layouts are complete and their calculations flushed\nto the DOM. No further layouts will be run and this method is only called once per\nlayout run. The base component layout caches <code>lastComponentSize</code>.</p>\n\n<p>This is a write phase and DOM reads should be avoided if possible when overridding\nthis method.</p>\n\n<p>This method need not be implemented by derived classes and, in fact, should only be\nimplemented when needed.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":116,"params":[{"name":"ownerContext","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["callParent"],"id":"method-finishedLayout","owner":"Ext.layout.container.SplitColumn","overrides":[{"name":"finishedLayout","owner":"Ext.layout.container.Auto","link":"<a href=\"#!/api/Ext.layout.container.Auto-method-finishedLayout\" rel=\"Ext.layout.container.Auto-method-finishedLayout\" class=\"docClass\">Ext.layout.container.Auto.finishedLayout</a>"}],"short_doc":"This method is called after all layouts are complete and their calculations flushed\nto the DOM. ..."},{"tagname":"method","name":"getAnimatePolicy","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/Layout.js","linenr":227}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":227,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getAnimatePolicy","owner":"Ext.layout.Layout","short_doc":" ..."},{"tagname":"method","name":"getChildEls","doc":"<p>Returns the value of <a href=\"#!/api/Ext.util.ElementContainer-cfg-childEls\" rel=\"Ext.util.ElementContainer-cfg-childEls\" class=\"docClass\">childEls</a>.</p>\n","params":[],"return":{"type":"Object/String[]/Object[]","doc":"\n","html_type":"Object/String[]/Object[]"},"id":"method-getChildEls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/ElementContainer.js","linenr":69}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.ElementContainer","short_doc":"Returns the value of childEls. ..."},{"tagname":"method","name":"getContainerSize","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Auto.js","linenr":503}],"doc":"<p>Returns the container size (that of the target). Only the fixed-sized dimensions can\nbe returned because the shrinkWrap dimensions are based on the contentWidth/Height\nas determined by the container layout.</p>\n\n<p>If the <a href=\"#!/api/Ext.layout.container.Auto-method-calculateOverflow\" rel=\"Ext.layout.container.Auto-method-calculateOverflow\" class=\"docClass\">calculateOverflow</a> method is used and if <a href=\"#!/api/Ext.layout.container.Auto-property-manageOverflow\" rel=\"Ext.layout.container.Auto-property-manageOverflow\" class=\"docClass\">manageOverflow</a> is\ntrue, this will adjust the width/height by the size of scrollbars.</p>\n","params":[{"tagname":"params","type":"Ext.layout.ContextItem","name":"ownerContext","doc":"<p>The owner's context item.</p>\n","html_type":"<a href=\"#!/api/Ext.layout.ContextItem\" rel=\"Ext.layout.ContextItem\" class=\"docClass\">Ext.layout.ContextItem</a>"},{"tagname":"params","type":"Boolean","name":"inDom","default":"false","optional":true,"doc":"<p>True if the container size must be in the DOM.</p>\n","html_type":"Boolean"}],"return":{"type":"Object","name":"return","doc":"<p>The size</p>\n","properties":[{"tagname":"return","type":"Number","name":"width","doc":"<p>The width</p>\n","html_type":"Number"},{"tagname":"return","type":"Number","name":"height","doc":"<p>The height</p>\n","html_type":"Number"}],"html_type":"Object"},"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["callParent"],"id":"method-getContainerSize","owner":"Ext.layout.container.Auto","overrides":[{"name":"getContainerSize","owner":"Ext.layout.container.Container","link":"<a href=\"#!/api/Ext.layout.container.Container-method-getContainerSize\" rel=\"Ext.layout.container.Container-method-getContainerSize\" class=\"docClass\">Ext.layout.container.Container.getContainerSize</a>"}],"short_doc":"Returns the container size (that of the target). ..."},{"tagname":"method","name":"getContentTarget","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Auto.js","linenr":749}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":749,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getContentTarget","owner":"Ext.layout.container.Auto","overrides":[{"name":"getContentTarget","owner":"Ext.layout.container.Container","link":"<a href=\"#!/api/Ext.layout.container.Container-method-getContentTarget\" rel=\"Ext.layout.container.Container-method-getContentTarget\" class=\"docClass\">Ext.layout.container.Container.getContentTarget</a>"}],"return":null,"throws":null,"properties":null,"type":null,"short_doc":" ..."},{"tagname":"method","name":"getElementTarget","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Auto.js","linenr":552}],"doc":"<p>Overridden method from <a href=\"#!/api/Ext.layout.container.Container\" rel=\"Ext.layout.container.Container\" class=\"docClass\">Ext.layout.container.Container</a>.\nUsed by Container classes to insert special DOM elements which must exist in addition to the child components</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getRenderTarget"],"id":"method-getElementTarget","owner":"Ext.layout.container.Auto","overrides":[{"name":"getElementTarget","owner":"Ext.layout.container.Container","link":"<a href=\"#!/api/Ext.layout.container.Container-method-getElementTarget\" rel=\"Ext.layout.container.Container-method-getElementTarget\" class=\"docClass\">Ext.layout.container.Container.getElementTarget</a>"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"\n","properties":null,"html_type":"Ext.dom.Element"},"short_doc":"Overridden method from Ext.layout.container.Container. ..."},{"tagname":"method","name":"getItemLayoutEl","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/Layout.js","linenr":415}],"doc":"<p>For a given item, returns the element that participates in the childNodes array\nof the layout's target element.  This is usually the component's \"el\", but can\nalso be a wrapper</p>\n","private":true,"params":[{"tagname":"params","type":"Ext.Component","name":"item","doc":"\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"}],"return":{"type":"HTMLElement","name":"return","doc":"\n","properties":null,"html_type":"HTMLElement"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getItemLayoutEl","owner":"Ext.layout.Layout","short_doc":"For a given item, returns the element that participates in the childNodes array\nof the layout's target element. ..."},{"tagname":"method","name":"getItemSizePolicy","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Column.js","linenr":101}],"doc":"<p>Returns an object describing how this layout manages the size of the given component.\nThis method must be implemented by any layout that manages components.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":101,"params":[{"name":"item","type":"Object","html_type":"Object"},{"name":"ownerSizeModel","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-getItemSizePolicy","owner":"Ext.layout.container.Column","return":{"type":"Ext.layout.SizePolicy","name":"return","doc":"<p>An object describing the sizing done by the layout\nfor this item.</p>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.layout.SizePolicy\" rel=\"Ext.layout.SizePolicy\" class=\"docClass\">Ext.layout.SizePolicy</a>"},"protected":true,"overrides":[{"name":"getItemSizePolicy","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-getItemSizePolicy\" rel=\"Ext.layout.Layout-method-getItemSizePolicy\" class=\"docClass\">Ext.layout.Layout.getItemSizePolicy</a>"}],"short_doc":"Returns an object describing how this layout manages the size of the given component. ..."},{"tagname":"method","name":"getItemsRenderTree","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/Layout.js","linenr":299}],"doc":"<hr />\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[{"name":"items","type":"Object","html_type":"Object"},{"name":"renderCfgs","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["configureItem"],"id":"method-getItemsRenderTree","owner":"Ext.layout.Layout","short_doc":" ..."},{"tagname":"method","name":"getLayoutItems","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Container.js","linenr":335}],"doc":"<p>Returns an array of child components either for a render phase (Performed in the beforeLayout\nmethod of the layout's base class), or the layout phase (onLayout).</p>\n","return":{"type":"Ext.Component[]","name":"return","doc":"<p>of child components</p>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>[]"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getLayoutItems","owner":"Ext.layout.container.Container","overrides":[{"name":"getLayoutItems","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-getLayoutItems\" rel=\"Ext.layout.Layout-method-getLayoutItems\" class=\"docClass\">Ext.layout.Layout.getLayoutItems</a>"}],"short_doc":"Returns an array of child components either for a render phase (Performed in the beforeLayout\nmethod of the layout's ..."},{"tagname":"method","name":"getMoveAfterIndex","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Container.js","linenr":504}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":504,"params":[{"name":"after","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-getMoveAfterIndex","owner":"Ext.layout.container.Container","short_doc":" ..."},{"tagname":"method","name":"getOverflowXStyle","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Auto.js","linenr":558}],"doc":"<p>Returns the overflow-x style of the render target.\nNote: If overflow is configured on a container using style or css class this method\nwill read the dom the first time it is called. It is therefore preferable for\nperformance reasons to use the autoScroll or overflowX config when horizontal\noverflow is desired.</p>\n","protected":true,"params":[{"tagname":"params","type":"Ext.layout.ContextItem","name":"ownerContext","doc":"\n","html_type":"<a href=\"#!/api/Ext.layout.ContextItem\" rel=\"Ext.layout.ContextItem\" class=\"docClass\">Ext.layout.ContextItem</a>"}],"return":{"type":"String","name":"return","doc":"\n","properties":null,"html_type":"String"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getOverflowXStyle","owner":"Ext.layout.container.Auto","short_doc":"Returns the overflow-x style of the render target. ..."},{"tagname":"method","name":"getOverflowYStyle","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Auto.js","linenr":573}],"doc":"<p>Returns the overflow-y style of the render target.\nNote: If overflow is configured on a container using style or css class this method\nwill read the dom the first time it is called. It is therefore preferable for\nperformance reasons to use the autoScroll or overflowY config when vertical\noverflow is desired.</p>\n","protected":true,"params":[{"tagname":"params","type":"Ext.layout.ContextItem","name":"ownerContext","doc":"\n","html_type":"<a href=\"#!/api/Ext.layout.ContextItem\" rel=\"Ext.layout.ContextItem\" class=\"docClass\">Ext.layout.ContextItem</a>"}],"return":{"type":"String","name":"return","doc":"\n","properties":null,"html_type":"String"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getOverflowYStyle","owner":"Ext.layout.container.Auto","short_doc":"Returns the overflow-y style of the render target. ..."},{"tagname":"method","name":"getPositionOffset","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Container.js","linenr":317}],"doc":"<p>This method is used to offset the DOM position when checking\nwhether the element is a certain child of the target. This is\nrequired in cases where the extra elements prepended to the target\nbefore any of the items. An example of this is when using labelAlign: 'top'\non a field. The label appears first in the DOM before any child items are\ncreated, so when we check the position we need to add an extra offset.\nContainers that create an innerCt are exempt because this new element\npreserves the order</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[{"name":"position","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-getPositionOffset","owner":"Ext.layout.container.Container","overrides":[{"name":"getPositionOffset","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-getPositionOffset\" rel=\"Ext.layout.Layout-method-getPositionOffset\" class=\"docClass\">Ext.layout.Layout.getPositionOffset</a>"}],"return":null,"throws":null,"properties":null,"type":null,"short_doc":"This method is used to offset the DOM position when checking\nwhether the element is a certain child of the target. ..."},{"tagname":"method","name":"getRenderData","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Auto.js","linenr":536}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":536,"params":[],"chainable":false,"fires":[],"method_calls":["callParent"],"id":"method-getRenderData","owner":"Ext.layout.container.Auto","overrides":[{"name":"getRenderData","owner":"Ext.layout.container.Container","link":"<a href=\"#!/api/Ext.layout.container.Container-method-getRenderData\" rel=\"Ext.layout.container.Container-method-getRenderData\" class=\"docClass\">Ext.layout.container.Container.getRenderData</a>"}],"return":null,"throws":null,"properties":null,"type":null,"short_doc":" ..."},{"tagname":"method","name":"getRenderTarget","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Auto.js","linenr":546}],"doc":"<p>Overridden method from <a href=\"#!/api/Ext.layout.container.Container\" rel=\"Ext.layout.container.Container\" class=\"docClass\">Ext.layout.container.Container</a>.\nUsed in the beforeLayout method to render all items into.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getRenderTarget","owner":"Ext.layout.container.Auto","overrides":[{"name":"getRenderTarget","owner":"Ext.layout.container.Container","link":"<a href=\"#!/api/Ext.layout.container.Container-method-getRenderTarget\" rel=\"Ext.layout.container.Container-method-getRenderTarget\" class=\"docClass\">Ext.layout.container.Container.getRenderTarget</a>"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"\n","properties":null,"html_type":"Ext.dom.Element"},"short_doc":"Overridden method from Ext.layout.container.Container. ..."},{"tagname":"method","name":"getRenderTpl","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Container.js","linenr":403}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":403,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getRenderTpl","owner":"Ext.layout.container.Container","short_doc":" ..."},{"tagname":"method","name":"getRenderTree","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Container.js","linenr":416}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":416,"params":[],"chainable":false,"fires":[],"method_calls":["getItemsRenderTree","getLayoutItems"],"id":"method-getRenderTree","owner":"Ext.layout.container.Container","short_doc":" ..."},{"tagname":"method","name":"getRenderedItems","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Container.js","linenr":357}],"doc":"<p>Returns all items that are rendered</p>\n","protected":true,"return":{"type":"Array","name":"return","doc":"<p>All matching items</p>\n","properties":null,"html_type":"Array"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getLayoutItems","getRenderTarget","isValidParent"],"id":"method-getRenderedItems","owner":"Ext.layout.container.Container","short_doc":"Returns all items that are rendered ..."},{"tagname":"method","name":"getScrollbarsNeeded","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Container.js","linenr":445}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":445,"params":[{"name":"width","type":"Object","html_type":"Object"},{"name":"height","type":"Object","html_type":"Object"},{"name":"contentWidth","type":"Object","html_type":"Object"},{"name":"contentHeight","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-getScrollbarsNeeded","owner":"Ext.layout.container.Container","short_doc":" ..."},{"tagname":"method","name":"getScrollerEl","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Auto.js","linenr":753}],"doc":"<p>Returns the element that wraps the contents for the purposes of touch scrolling.\nOnly applicable when the layout adds the scroller element as part of its renderTpl\n(e.g. autocontainer and box)</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":753,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getScrollerEl","owner":"Ext.layout.container.Auto","overrides":[{"name":"getScrollerEl","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-getScrollerEl\" rel=\"Ext.layout.Layout-method-getScrollerEl\" class=\"docClass\">Ext.layout.Layout.getScrollerEl</a>"}],"return":null,"throws":null,"properties":null,"type":null,"short_doc":"Returns the element that wraps the contents for the purposes of touch scrolling. ..."},{"tagname":"method","name":"getSplitterConfig","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/SplitColumn.js","linenr":20}],"doc":"<p>The geometry of a Column layout with splitters between respective items:</p>\n\n<pre><code>        0        1      2       3        4\n +-----------------------------------------------+\n | +-----------+ || +---------+ || +-----------+ | \\\n | |           | || |         | || |           | |  \\\n | |           | || |         | || |           | |   \\\n | |           | || |         | || |           | |    \\\n | +-----------+ || |         | || |           | |   row[0]\n |               || |         | || |           | |    /\n |               || |         | || |           | |   /\n |               || |         | || +-----------+ |  /\n |               || |         | ||               | /\n |               || +---------+ ||               |\n | +-------------------+ || +------------------+ | \\\n | |                   | || |                  | |  \\\n | |                   | || |                  | |   \\\n | |                   | || |                  | |  row[1]\n | |                   | || |                  | |   /\n | |                   | || +------------------+ |  /\n | +-------------------+ ||                      | /\n +-----------------------------------------------+\n             6           7            8\n</code></pre>\n\n<p>The splitter between 4 and 6 will be hidden but still present in the items. It is\nconsidered part of row[0].</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getSplitterConfig","owner":"Ext.layout.container.SplitColumn","short_doc":"The geometry of a Column layout with splitters between respective items:\n\n        0        1      2       3        4\n..."},{"tagname":"method","name":"getTarget","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Container.js","linenr":474}],"doc":"<p>Returns the owner component's resize element.</p>\n","return":{"type":"Ext.dom.Element","name":"return","doc":"\n","properties":null,"html_type":"Ext.dom.Element"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getTarget","owner":"Ext.layout.container.Container","short_doc":"Returns the owner component's resize element. ..."},{"tagname":"method","name":"getVisibleItems","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Container.js","linenr":482}],"doc":"<p>Returns all items that are both rendered and visible</p>\n","protected":true,"return":{"type":"Array","name":"return","doc":"<p>All matching items</p>\n","properties":null,"html_type":"Array"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getLayoutItems","getRenderTarget","isValidParent"],"id":"method-getVisibleItems","owner":"Ext.layout.container.Container","short_doc":"Returns all items that are both rendered and visible ..."},{"tagname":"method","name":"initContextItems","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Auto.js","linenr":588}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":588,"params":[{"name":"ownerContext","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-initContextItems","owner":"Ext.layout.container.Auto","short_doc":" ..."},{"tagname":"method","name":"initLayout","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Auto.js","linenr":612}],"doc":"<p>A one-time initialization method called just before rendering.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":612,"params":[],"chainable":false,"fires":[],"method_calls":["callParent","hasOwnProperty"],"id":"method-initLayout","owner":"Ext.layout.container.Auto","overrides":[{"name":"initLayout","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-initLayout\" rel=\"Ext.layout.Layout-method-initLayout\" class=\"docClass\">Ext.layout.Layout.initLayout</a>"}],"protected":true,"short_doc":"A one-time initialization method called just before rendering. ..."},{"tagname":"method","name":"isItemBoxParent","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/Layout.js","linenr":252}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":252,"params":[{"name":"itemContext","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-isItemBoxParent","owner":"Ext.layout.Layout","short_doc":" ..."},{"tagname":"method","name":"isItemLayoutRoot","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/Layout.js","linenr":256}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":256,"params":[{"name":"item","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-isItemLayoutRoot","owner":"Ext.layout.Layout","short_doc":" ..."},{"tagname":"method","name":"isItemShrinkWrap","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Column.js","linenr":97}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":97,"params":[{"name":"ownerContext","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-isItemShrinkWrap","owner":"Ext.layout.container.Column","return":null,"throws":null,"properties":null,"type":null,"overrides":[{"name":"isItemShrinkWrap","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-isItemShrinkWrap\" rel=\"Ext.layout.Layout-method-isItemShrinkWrap\" class=\"docClass\">Ext.layout.Layout.isItemShrinkWrap</a>"}],"short_doc":" ..."},{"tagname":"method","name":"isRunning","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/Layout.js","linenr":275}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":275,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-isRunning","owner":"Ext.layout.Layout","short_doc":" ..."},{"tagname":"method","name":"isValidParent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/Layout.js","linenr":395}],"doc":"<p>Validates item is in the proper place in the dom.</p>\n","protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"name":"item","type":"Object","html_type":"Object"},{"name":"target","type":"Object","html_type":"Object"},{"name":"position","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["getItemLayoutEl","getPositionOffset"],"id":"method-isValidParent","owner":"Ext.layout.Layout","short_doc":"Validates item is in the proper place in the dom. ..."},{"tagname":"method","name":"measureContentHeight","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Auto.js","linenr":632}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":632,"params":[{"name":"ownerContext","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-measureContentHeight","owner":"Ext.layout.container.Auto","short_doc":" ..."},{"tagname":"method","name":"measureContentWidth","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Auto.js","linenr":647}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":647,"params":[{"name":"ownerContext","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-measureContentWidth","owner":"Ext.layout.container.Auto","short_doc":" ..."},{"tagname":"method","name":"moveItem","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/Layout.js","linenr":468}],"doc":"<p>Moves Component to the provided target instead.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"item","type":"Object","html_type":"Object"},{"name":"target","type":"Object","html_type":"Object"},{"name":"position","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["configureItem"],"id":"method-moveItem","owner":"Ext.layout.Layout","short_doc":"Moves Component to the provided target instead. ..."},{"tagname":"method","name":"moveItemBefore","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Container.js","linenr":511}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":511,"params":[{"name":"item","type":"Object","html_type":"Object"},{"name":"before","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-moveItemBefore","owner":"Ext.layout.container.Container","short_doc":" ..."},{"tagname":"method","name":"notifyOwner","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Container.js","linenr":238}],"doc":"<p>Called for every layout in the layout context after all the layouts have been finally flushed</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-notifyOwner","owner":"Ext.layout.container.Container","overrides":[{"name":"notifyOwner","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-notifyOwner\" rel=\"Ext.layout.Layout-method-notifyOwner\" class=\"docClass\">Ext.layout.Layout.notifyOwner</a>"}],"short_doc":"Called for every layout in the layout context after all the layouts have been finally flushed ..."},{"tagname":"method","name":"onAdd","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Container.js","linenr":546}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":546,"params":[{"name":"item","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["callParent"],"id":"method-onAdd","owner":"Ext.layout.container.Container","overrides":[{"name":"onAdd","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-onAdd\" rel=\"Ext.layout.Layout-method-onAdd\" class=\"docClass\">Ext.layout.Layout.onAdd</a>"}],"return":null,"throws":null,"properties":null,"type":null,"short_doc":" ..."},{"tagname":"method","name":"onContentChange","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/Layout.js","linenr":482}],"doc":"<p>This method is called when a child item changes in some way. By default this calls\n<a href=\"#!/api/Ext.Component-method-updateLayout\" rel=\"Ext.Component-method-updateLayout\" class=\"docClass\">Ext.Component.updateLayout</a> on this layout's owner.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"child","doc":"<p>The child item that has changed.</p>\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"}],"return":{"type":"Boolean","name":"return","doc":"<p>True if this layout has handled the content change.</p>\n\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-onContentChange","owner":"Ext.layout.Layout","short_doc":"This method is called when a child item changes in some way. ..."},{"tagname":"method","name":"onDestroy","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/Layout.js","linenr":520}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":520,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-onDestroy","owner":"Ext.layout.Layout","short_doc":" ..."},{"tagname":"method","name":"onRemove","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Container.js","linenr":553}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":553,"params":[{"name":"item","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["callParent"],"id":"method-onRemove","owner":"Ext.layout.container.Container","overrides":[{"name":"onRemove","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-onRemove\" rel=\"Ext.layout.Layout-method-onRemove\" class=\"docClass\">Ext.layout.Layout.onRemove</a>"}],"return":null,"throws":null,"properties":null,"type":null,"short_doc":" ..."},{"tagname":"method","name":"renderChildren","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Container.js","linenr":429}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":429,"params":[],"chainable":false,"fires":[],"method_calls":["getLayoutItems","getRenderTarget","renderItems"],"id":"method-renderChildren","owner":"Ext.layout.container.Container","overrides":[{"name":"renderChildren","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-renderChildren\" rel=\"Ext.layout.Layout-method-renderChildren\" class=\"docClass\">Ext.layout.Layout.renderChildren</a>"}],"return":null,"throws":null,"properties":null,"type":null,"short_doc":" ..."},{"tagname":"method","name":"renderItem","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/Layout.js","linenr":451}],"doc":"<p>Renders the given Component into the target Element.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"item","doc":"<p>The Component to render</p>\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},{"tagname":"params","type":"Ext.dom.Element","name":"target","doc":"<p>The target Element</p>\n","html_type":"Ext.dom.Element"},{"tagname":"params","type":"Number","name":"position","doc":"<p>The position within the target to render the item to</p>\n","html_type":"Number"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["configureItem"],"id":"method-renderItem","owner":"Ext.layout.Layout","short_doc":"Renders the given Component into the target Element. ..."},{"tagname":"method","name":"renderItems","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/Layout.js","linenr":367}],"doc":"<p>Iterates over all passed items, ensuring they are rendered.  If the items are already rendered,\nalso determines if the items are in the proper place in the dom.</p>\n","protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"name":"items","type":"Object","html_type":"Object"},{"name":"target","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["configureItem","isValidParent","moveItem","renderItem"],"id":"method-renderItems","owner":"Ext.layout.Layout","short_doc":"Iterates over all passed items, ensuring they are rendered. ..."},{"tagname":"method","name":"setChildEls","doc":"<p>Sets the value of <a href=\"#!/api/Ext.util.ElementContainer-cfg-childEls\" rel=\"Ext.util.ElementContainer-cfg-childEls\" class=\"docClass\">childEls</a>.</p>\n","params":[{"type":"Object/String[]/Object[]","name":"childEls","doc":"<p>The new value.</p>\n","html_type":"Object/String[]/Object[]"}],"id":"method-setChildEls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/ElementContainer.js","linenr":69}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.ElementContainer","short_doc":"Sets the value of childEls. ..."},{"tagname":"method","name":"setCtSizeIfNeeded","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Auto.js","linenr":679}],"doc":"<p>This method sets the height and/or width of the outerCt/innerCt to adjust for the\nfollowing browser-specific issues:</p>\n\n<ol>\n<li><p>In some browsers a percentage-height element ignores the horizontal scrollbar\nof its parent (see Ext.supports.PercentageHeightOverflowBug).  If the browser is\naffected by this bug the outerCt needs a pixel height in order to support\npercentage-height children when not shrink-wrapping height. If the browser is not\naffected by this bug, a height of 100% is assigned to the outerCt (see\nbeginLayoutCycle).</p></li>\n<li><p>IE8 mode has a bug with percentage height children.  if the innerCt has\na height of 100%, has padding, and has a child item with a percentage height, that\nchild item will be sized as a percentage of the parent's height plus padding height.\nIn other words, a child with height:50% would have its height caclulated thusly:\n(parentHeight + parentPaddingHeight) * 0.5\nTo fix this, we have to give the innerCt a pixel height.</p></li>\n</ol>\n\n","protected":true,"params":[{"tagname":"params","type":"Ext.layout.ContextItem","name":"ownerContext","doc":"\n","html_type":"<a href=\"#!/api/Ext.layout.ContextItem\" rel=\"Ext.layout.ContextItem\" class=\"docClass\">Ext.layout.ContextItem</a>"},{"tagname":"params","type":"Object","name":"containerSize","doc":"\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getOverflowXStyle","getTarget"],"id":"method-setCtSizeIfNeeded","owner":"Ext.layout.container.Auto","short_doc":"This method sets the height and/or width of the outerCt/innerCt to adjust for the\nfollowing browser-specific issues:\n..."},{"tagname":"method","name":"setOwner","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/Layout.js","linenr":502}],"doc":"<p>Sets the layout owner</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"owner","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-setOwner","owner":"Ext.layout.Layout","short_doc":"Sets the layout owner ..."},{"tagname":"method","name":"setupRenderTpl","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/Auto.js","linenr":743}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":743,"params":[{"name":"renderTpl","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["callParent"],"id":"method-setupRenderTpl","owner":"Ext.layout.container.Auto","overrides":[{"name":"setupRenderTpl","owner":"Ext.layout.container.Container","link":"<a href=\"#!/api/Ext.layout.container.Container-method-setupRenderTpl\" rel=\"Ext.layout.container.Container-method-setupRenderTpl\" class=\"docClass\">Ext.layout.container.Container.setupRenderTpl</a>"}],"return":null,"throws":null,"properties":null,"type":null,"short_doc":" ..."},{"tagname":"method","name":"sortWeightedItems","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/Layout.js","linenr":573}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":573,"params":[{"name":"items","type":"Object","html_type":"Object"},{"name":"reverseProp","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-sortWeightedItems","owner":"Ext.layout.Layout","short_doc":" ..."},{"tagname":"method","name":"syncFirstLast","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/SplitColumn.js","linenr":204}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":204,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-syncFirstLast","owner":"Ext.layout.container.SplitColumn","short_doc":" ..."},{"tagname":"method","name":"syncSplitters","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/container/SplitColumn.js","linenr":142}],"doc":"<p>This method synchronizes the splitters so that we have exactly one between each\ncolumn.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getSplitterConfig"],"id":"method-syncSplitters","owner":"Ext.layout.container.SplitColumn","short_doc":"This method synchronizes the splitters so that we have exactly one between each\ncolumn. ..."},{"tagname":"method","name":"undoLayout","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/layout/Layout.js","linenr":225}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":225,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-undoLayout","owner":"Ext.layout.Layout","short_doc":" ..."}],"code_type":"ext_define","id":"class-Ext.layout.container.SplitColumn","short_doc":"This layout extends Ext.layout.container.Column and adds splitters between adjacent\ncolumns allowing the user to resi..."}