{"tagname":"class","name":"Ext.util.History","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true,"singleton":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/History.js","linenr":1}],"doc":"<p>History management component that allows you to register arbitrary tokens that signify application\nhistory state on navigation actions.  You can then handle the history <a href=\"#!/api/Ext.util.History-event-change\" rel=\"Ext.util.History-event-change\" class=\"docClass\">change</a> event in order\nto reset your application UI to the appropriate state when the user navigates forward or backward through\nthe browser history stack.</p>\n\n<h2>Initializing</h2>\n\n<p>The <a href=\"#!/api/Ext.util.History-method-init\" rel=\"Ext.util.History-method-init\" class=\"docClass\">init</a> method of the History object must be called before using History. This sets up the internal\nstate and must be the first thing called before using History.</p>\n","aliases":{},"alternateClassNames":["Ext.History"],"extends":"Ext.Base","mixins":["Ext.util.Observable"],"requires":[],"uses":[],"members":[{"tagname":"property","name":"currentToken","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/History.js","linenr":26}],"doc":"<p>The current token.</p>\n","type":"String","default":null,"properties":null,"private":true,"id":"property-currentToken","owner":"Ext.util.History","html_type":"String"},{"tagname":"property","name":"useTopWindow","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/History.js","linenr":19}],"doc":"<p>True to use <code>window.top.location.hash</code> or false to use <code>window.location.hash</code>. Must be set before <a href=\"#!/api/Ext.util.History-method-init\" rel=\"Ext.util.History-method-init\" class=\"docClass\">init</a> is called\nbecause the <code>hashchange</code> event listener is added to the window at initialization time.</p>\n","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"type":"Boolean","readonly":null,"id":"property-useTopWindow","owner":"Ext.util.History","short_doc":"True to use window.top.location.hash or false to use window.location.hash. ...","html_type":"Boolean"},{"tagname":"method","name":"add","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/History.js","linenr":152}],"doc":"<p>Add a new token to the history stack. This can be any arbitrary value, although it would\ncommonly be the concatenation of a component id and another id marking the specific history\nstate of that component. Example usage:</p>\n\n<pre><code>// Handle tab changes on a TabPanel\ntabPanel.on('tabchange', function(tabPanel, tab){\n     <a href=\"#!/api/Ext.util.History-method-add\" rel=\"Ext.util.History-method-add\" class=\"docClass\">Ext.History.add</a>(tabPanel.id + ':' + tab.id);\n});\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"token","doc":"<p>The value that defines a particular application-specific history state</p>\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"preventDuplicates","default":"true","optional":true,"doc":"<p>When true, if the passed token matches the current token\nit will not save a new history step. Set to false if the same state can be saved more than once\nat the same history stack location.</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getToken","setHash"],"id":"method-add","owner":"Ext.util.History","short_doc":"Add a new token to the history stack. ..."},{"tagname":"method","name":"back","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/History.js","linenr":179}],"doc":"<p>Programmatically steps back one step in browser history (equivalent to the user pressing the Back button).</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-back","owner":"Ext.util.History","short_doc":"Programmatically steps back one step in browser history (equivalent to the user pressing the Back button). ..."},{"tagname":"method","name":"forward","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/History.js","linenr":187}],"doc":"<p>Programmatically steps forward one step in browser history (equivalent to the user pressing the Forward button).</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-forward","owner":"Ext.util.History","short_doc":"Programmatically steps forward one step in browser history (equivalent to the user pressing the Forward button). ..."},{"tagname":"method","name":"getHash","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/History.js","linenr":61}],"doc":"<p>Gets the actual hash from the url. This shouldn't need to be used directly but use the\n<a href=\"#!/api/Ext.util.History-method-getToken\" rel=\"Ext.util.History-method-getToken\" class=\"docClass\">getToken</a> method instead.</p>\n","return":{"type":"String","name":"return","doc":"<p>The hash from the window object.</p>\n","properties":null,"html_type":"String"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getHash","owner":"Ext.util.History","short_doc":"Gets the actual hash from the url. ..."},{"tagname":"method","name":"getToken","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/History.js","linenr":195}],"doc":"<p>Retrieves the currently-active history token.</p>\n","return":{"type":"String","name":"return","doc":"<p>The token</p>\n","properties":null,"html_type":"String"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getHash"],"id":"method-getToken","owner":"Ext.util.History","short_doc":"Retrieves the currently-active history token. ..."},{"tagname":"method","name":"handleStateChange","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/History.js","linenr":88}],"doc":"<p>Handles when the hash in the URL has been updated. Will also fired the change event.</p>\n","params":[{"tagname":"params","type":"String","name":"token","doc":"<p>The token that was changed to</p>\n","html_type":"String"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":["<a href=\"#!/api/Ext.util.History-event-change\" rel=\"Ext.util.History-event-change\" class=\"docClass\">change</a>"],"method_calls":["fireEvent"],"id":"method-handleStateChange","owner":"Ext.util.History","short_doc":"Handles when the hash in the URL has been updated. ..."},{"tagname":"method","name":"init","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/History.js","linenr":122}],"doc":"<p>Initializes the global History instance.</p>\n","params":[{"tagname":"params","type":"Function","name":"onReady","optional":true,"doc":"<p>A callback function that will be called once the history\ncomponent is fully initialized.</p>\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (<code>this</code> reference) in which the callback is executed.\nDefaults to the browser window.</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":["<a href=\"#!/api/Ext.util.History-event-ready\" rel=\"Ext.util.History-event-ready\" class=\"docClass\">ready</a>"],"method_calls":["init","on","startUp"],"id":"method-init","owner":"Ext.util.History","short_doc":"Initializes the global History instance. ..."},{"tagname":"method","name":"setHash","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/History.js","linenr":72}],"doc":"<p>Updates the hash on the window. This shouldn't need to be used directly but use the\n<a href=\"#!/api/Ext.util.History-method-add\" rel=\"Ext.util.History-method-add\" class=\"docClass\">add</a> method instead.</p>\n","params":[{"tagname":"params","type":"String","name":"hash","doc":"<p>The hash to use</p>\n","html_type":"String"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-setHash","owner":"Ext.util.History","short_doc":"Updates the hash on the window. ..."},{"tagname":"method","name":"startUp","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/History.js","linenr":99}],"doc":"<p>Bootstraps the initialization the location.hash.\nThis will setup the Ext.TaskManager to poll for hash changes every 50ms.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":["<a href=\"#!/api/Ext.util.History-event-ready\" rel=\"Ext.util.History-event-ready\" class=\"docClass\">ready</a>"],"method_calls":["fireEvent","getHash"],"id":"method-startUp","owner":"Ext.util.History","short_doc":"Bootstraps the initialization the location.hash. ..."},{"tagname":"event","name":"change","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/History.js","linenr":37}],"doc":"<p>Fires when navigation back or forwards within the local page's history occurs.</p>\n","params":[{"tagname":"params","type":"String","name":"token","doc":"<p>An identifier associated with the page state at that point in its history.</p>\n","html_type":"String"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-change","owner":"Ext.util.History","short_doc":"Fires when navigation back or forwards within the local page's history occurs. ..."},{"tagname":"event","name":"ready","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/History.js","linenr":31}],"doc":"<p>Fires when the <a href=\"#!/api/Ext.util.History\" rel=\"Ext.util.History\" class=\"docClass\">Ext.util.History</a> singleton has been initialized and is ready for use.</p>\n","params":[{"tagname":"params","type":"Ext.util.History","name":"The","doc":"<p><a href=\"#!/api/Ext.util.History\" rel=\"Ext.util.History\" class=\"docClass\">Ext.util.History</a> singleton.</p>\n","html_type":"<a href=\"#!/api/Ext.util.History\" rel=\"Ext.util.History\" class=\"docClass\">Ext.util.History</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-ready","owner":"Ext.util.History","short_doc":"Fires when the Ext.util.History singleton has been initialized and is ready for use. ..."}],"code_type":"ext_define","singleton":true,"id":"class-Ext.util.History","short_doc":"History management component that allows you to register arbitrary tokens that signify application\nhistory state on n..."}