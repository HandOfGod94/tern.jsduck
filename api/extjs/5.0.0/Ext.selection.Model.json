{"tagname":"class","name":"Ext.selection.Model","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":1}],"doc":"<p>Tracks what records are currently selected in a databound component.</p>\n\n<p>This is an abstract class and is not meant to be directly used. Databound UI widgets such as\n<a href=\"#!/api/Ext.grid.Panel\" rel=\"Ext.grid.Panel\" class=\"docClass\">Grid</a> and <a href=\"#!/api/Ext.tree.Panel\" rel=\"Ext.tree.Panel\" class=\"docClass\">Tree</a> should subclass <a href=\"#!/api/Ext.selection.Model\" rel=\"Ext.selection.Model\" class=\"docClass\">Ext.selection.Model</a>\nand provide a way to binding to the component.</p>\n\n<p>The abstract methods <code>onSelectChange</code> and <code>onLastFocusChanged</code> should be implemented in these\nsubclasses to update the UI widget.</p>\n","aliases":{},"alternateClassNames":["Ext.AbstractSelectionModel"],"extends":"Ext.util.Observable","mixins":["Ext.util.StoreHolder"],"requires":["Ext.data.StoreManager"],"uses":[],"members":[{"tagname":"cfg","name":"allowDeselect","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":31}],"doc":"<p>Allow users to deselect a record in a DataView, List or Grid.\nOnly applicable when the <a href=\"#!/api/Ext.selection.Model-cfg-mode\" rel=\"Ext.selection.Model-cfg-mode\" class=\"docClass\">mode</a> is 'SINGLE'.</p>\n","type":"Boolean","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-allowDeselect","owner":"Ext.selection.Model","short_doc":"Allow users to deselect a record in a DataView, List or Grid. ...","html_type":"Boolean"},{"tagname":"cfg","name":"mode","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":20}],"doc":"<p>Mode of selection.  Valid values are:</p>\n\n<ul>\n<li><strong>\"SINGLE\"</strong> - Only allows selecting one item at a time.  Use <a href=\"#!/api/Ext.selection.Model-cfg-allowDeselect\" rel=\"Ext.selection.Model-cfg-allowDeselect\" class=\"docClass\">allowDeselect</a> to allow\ndeselecting that item.  Also see <a href=\"#!/api/Ext.selection.Model-cfg-toggleOnClick\" rel=\"Ext.selection.Model-cfg-toggleOnClick\" class=\"docClass\">toggleOnClick</a>. This is the default.</li>\n<li><strong>\"SIMPLE\"</strong> - Allows simple selection of multiple items one-by-one. Each click in grid will either\nselect or deselect an item.</li>\n<li><strong>\"MULTI\"</strong> - Allows complex selection of multiple items using Ctrl and Shift keys.</li>\n</ul>\n\n","type":"\"SINGLE\"/\"SIMPLE\"/\"MULTI\"","default":null,"properties":null,"id":"cfg-mode","owner":"Ext.selection.Model","short_doc":"Mode of selection. ...","html_type":"\"SINGLE\"/\"SIMPLE\"/\"MULTI\""},{"tagname":"cfg","name":"pruneRemoved","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":53}],"doc":"<p>Remove records from the selection when they are removed from the store.</p>\n\n<p><strong>Important:</strong> When using <a href=\"#!/api/Ext.toolbar.Paging\" rel=\"Ext.toolbar.Paging\" class=\"docClass\">paging</a> or a Ext.data.BufferedStore,\nrecords which are cached in the Store's data collection may be removed from the Store when pages change,\nor when rows are scrolled out of view. For this reason <code>pruneRemoved</code> should be set to <code>false</code> when using a buffered Store.</p>\n\n<p>Also, when previously pruned pages are returned to the cache, the records objects in the page will be\n<em>new instances</em>, and will not match the instances in the selection model's collection. For this reason,\nyou MUST ensure that the Model definition's idProperty references a unique\nkey because in this situation, records in the Store have their <strong>IDs</strong> compared to records in the SelectionModel\nin order to re-select a record which is scrolled back into view.</p>\n","type":"Boolean","default":"true","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-pruneRemoved","owner":"Ext.selection.Model","short_doc":"Remove records from the selection when they are removed from the store. ...","html_type":"Boolean"},{"tagname":"cfg","name":"toggleOnClick","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":38}],"doc":"<p><code>true</code> to toggle the selection state of an item when clicked.\nOnly applicable when the <a href=\"#!/api/Ext.selection.Model-cfg-mode\" rel=\"Ext.selection.Model-cfg-mode\" class=\"docClass\">mode</a> is 'SINGLE'.\nOnly applicable when the <a href=\"#!/api/Ext.selection.Model-cfg-allowDeselect\" rel=\"Ext.selection.Model-cfg-allowDeselect\" class=\"docClass\">allowDeselect</a> is 'true'.</p>\n","type":"Boolean","default":"true","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-toggleOnClick","owner":"Ext.selection.Model","short_doc":"true to toggle the selection state of an item when clicked. ...","html_type":"Boolean"},{"tagname":"property","name":"mixinId","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/StoreHolder.js","linenr":12}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":12,"type":"String","default":"'storeholder'","readonly":null,"id":"property-mixinId","owner":"Ext.util.StoreHolder","overrides":[{"name":"mixinId","owner":"Ext.form.field.Field","link":"<a href=\"#!/api/Ext.form.field.Field-property-mixinId\" rel=\"Ext.form.field.Field-property-mixinId\" class=\"docClass\">Ext.form.field.Field.mixinId</a>"},{"name":"mixinId","owner":"Ext.util.Floating","link":"<a href=\"#!/api/Ext.util.Floating-property-mixinId\" rel=\"Ext.util.Floating-property-mixinId\" class=\"docClass\">Ext.util.Floating.mixinId</a>"}],"short_doc":" ...","html_type":"String"},{"tagname":"property","name":"selected","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":46}],"doc":"<p>A MixedCollection that maintains all of the currently selected records.</p>\n","type":"Ext.util.MixedCollection","default":"undefined","properties":null,"readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-selected","owner":"Ext.selection.Model","short_doc":"A MixedCollection that maintains all of the currently selected records. ...","html_type":"Ext.util.MixedCollection"},{"tagname":"property","name":"suspendChange","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":69}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":69,"type":"Number","default":"0","readonly":null,"id":"property-suspendChange","owner":"Ext.selection.Model","short_doc":" ...","html_type":"Number"},{"tagname":"method","name":"afterKeyNavigate","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":284}],"doc":"<p>Private\nCalled after a new record has been navigated to by a keystroke.\nEvent is passed so that shift and ctrl can be handled.</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[{"name":"e","type":"Object","html_type":"Object"},{"name":"record","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.selection.Model-event-focuschange\" rel=\"Ext.selection.Model-event-focuschange\" class=\"docClass\">focuschange</a>","<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"method_calls":["deselectRange","doDeselect","doSelect","isSelected","selectRange","setLastFocused"],"id":"method-afterKeyNavigate","owner":"Ext.selection.Model","short_doc":"Private\nCalled after a new record has been navigated to by a keystroke. ..."},{"tagname":"method","name":"beforeViewRender","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":1117}],"doc":"\n","abstract":true,"inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[{"name":"view","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["bindStore"],"id":"method-beforeViewRender","owner":"Ext.selection.Model","short_doc":" ..."},{"tagname":"method","name":"bindComponent","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":1136}],"doc":"\n","abstract":true,"inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-bindComponent","owner":"Ext.selection.Model","short_doc":" ..."},{"tagname":"method","name":"bindStore","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":107}],"doc":"<p>binds the store to the selModel.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"name":"store","type":"Object","html_type":"Object"},{"name":"initial","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["refresh"],"id":"method-bindStore","owner":"Ext.selection.Model","overrides":[{"name":"bindStore","owner":"Ext.util.StoreHolder","link":"<a href=\"#!/api/Ext.util.StoreHolder-method-bindStore\" rel=\"Ext.util.StoreHolder-method-bindStore\" class=\"docClass\">Ext.util.StoreHolder.bindStore</a>"}],"short_doc":"binds the store to the selModel. ..."},{"tagname":"method","name":"bindStoreListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/StoreHolder.js","linenr":83}],"doc":"<p>Binds listeners for this component to the store. By default it will add\nanything bound by the getStoreListeners method, however it can be overridden\nin a subclass to provide any more complicated handling.</p>\n","protected":true,"params":[{"tagname":"params","type":"Ext.data.AbstractStore","name":"store","doc":"<p>The store to bind to</p>\n","html_type":"Ext.data.AbstractStore"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getStoreListeners"],"id":"method-bindStoreListeners","owner":"Ext.util.StoreHolder","short_doc":"Binds listeners for this component to the store. ..."},{"tagname":"method","name":"clearSelections","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":964}],"doc":"<p>A fast reset of the selections without firing events, updating the ui, etc.\nFor private usage only.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":["<a href=\"#!/api/Ext.selection.Model-event-focuschange\" rel=\"Ext.selection.Model-event-focuschange\" class=\"docClass\">focuschange</a>"],"method_calls":["setLastFocused"],"id":"method-clearSelections","owner":"Ext.selection.Model","short_doc":"A fast reset of the selections without firing events, updating the ui, etc. ..."},{"tagname":"method","name":"deselect","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":538}],"doc":"<p>Deselects a record instance by record instance or index.</p>\n","params":[{"tagname":"params","type":"Ext.data.Model[]/Number","name":"records","doc":"<p>An array of records or an index</p>\n","html_type":"Ext.data.Model[]/Number"},{"tagname":"params","type":"Boolean","name":"suppressEvent","default":"false","optional":true,"doc":"<p>True to not fire a deselect event</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":["<a href=\"#!/api/Ext.selection.Model-event-focuschange\" rel=\"Ext.selection.Model-event-focuschange\" class=\"docClass\">focuschange</a>","<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"method_calls":["doDeselect"],"id":"method-deselect","owner":"Ext.selection.Model","short_doc":"Deselects a record instance by record instance or index. ..."},{"tagname":"method","name":"deselectAll","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":160}],"doc":"<p>Deselects all records in the view.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"suppressEvent","optional":true,"doc":"<p>True to suppress any deselect events</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":["<a href=\"#!/api/Ext.selection.Model-event-focuschange\" rel=\"Ext.selection.Model-event-focuschange\" class=\"docClass\">focuschange</a>","<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"method_calls":["doDeselect","getSelection","maybeFireSelectionChange","resumeChanges","suspendChanges"],"id":"method-deselectAll","owner":"Ext.selection.Model","short_doc":"Deselects all records in the view. ..."},{"tagname":"method","name":"deselectDeletedRecords","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":1005}],"doc":"<p>Called by subclasses to deselect records upon detection of deletion from the store</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"records","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.selection.Model-event-focuschange\" rel=\"Ext.selection.Model-event-focuschange\" class=\"docClass\">focuschange</a>","<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"method_calls":["getLastFocused","maybeFireSelectionChange","setLastFocused"],"id":"method-deselectDeletedRecords","owner":"Ext.selection.Model","short_doc":"Called by subclasses to deselect records upon detection of deletion from the store ..."},{"tagname":"method","name":"deselectDuringSelect","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":613}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":613,"params":[{"name":"toSelect","type":"Object","html_type":"Object"},{"name":"selected","type":"Object","html_type":"Object"},{"name":"suppressEvent","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.selection.Model-event-focuschange\" rel=\"Ext.selection.Model-event-focuschange\" class=\"docClass\">focuschange</a>","<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"method_calls":["doDeselect","resumeChanges","suspendChanges"],"id":"method-deselectDuringSelect","owner":"Ext.selection.Model","short_doc":" ..."},{"tagname":"method","name":"deselectRange","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":471}],"doc":"<p>Deselects a range of rows if the selection model <a href=\"#!/api/Ext.selection.Model-method-isLocked\" rel=\"Ext.selection.Model-method-isLocked\" class=\"docClass\">is not locked</a>.</p>\n","params":[{"tagname":"params","type":"Ext.data.Model/Number","name":"startRow","doc":"<p>The record or index of the first row in the range</p>\n","html_type":"Ext.data.Model/Number"},{"tagname":"params","type":"Ext.data.Model/Number","name":"endRow","doc":"<p>The record or index of the last row in the range</p>\n","html_type":"Ext.data.Model/Number"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":["<a href=\"#!/api/Ext.selection.Model-event-focuschange\" rel=\"Ext.selection.Model-event-focuschange\" class=\"docClass\">focuschange</a>","<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"method_calls":["doDeselect","isLocked","isSelected","normalizeRowRange"],"id":"method-deselectRange","owner":"Ext.selection.Model","short_doc":"Deselects a range of rows if the selection model is not locked. ..."},{"tagname":"method","name":"destroy","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":1043}],"doc":"<p>cleanup.</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":["<a href=\"#!/api/Ext.selection.Model-event-focuschange\" rel=\"Ext.selection.Model-event-focuschange\" class=\"docClass\">focuschange</a>"],"method_calls":["clearListeners","clearSelections"],"id":"method-destroy","owner":"Ext.selection.Model","short_doc":"cleanup. ..."},{"tagname":"method","name":"doDeselect","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":637}],"doc":"<p>records can be an index, a record or an array of records</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[{"name":"records","type":"Object","html_type":"Object"},{"name":"suppressEvent","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.selection.Model-event-focuschange\" rel=\"Ext.selection.Model-event-focuschange\" class=\"docClass\">focuschange</a>","<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"method_calls":["isSelected","maybeFireSelectionChange","onSelectChange","resumeChanges","setLastFocused","suspendChanges"],"id":"method-doDeselect","owner":"Ext.selection.Model","short_doc":"records can be an index, a record or an array of records ..."},{"tagname":"method","name":"doMultiSelect","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":570}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":570,"params":[{"name":"records","type":"Object","html_type":"Object"},{"name":"keepExisting","type":"Object","html_type":"Object"},{"name":"suppressEvent","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.selection.Model-event-focuschange\" rel=\"Ext.selection.Model-event-focuschange\" class=\"docClass\">focuschange</a>","<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"method_calls":["deselectDuringSelect","isSelected","maybeFireSelectionChange","onSelectChange","setLastFocused"],"id":"method-doMultiSelect","owner":"Ext.selection.Model","short_doc":" ..."},{"tagname":"method","name":"doSelect","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":547}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":547,"params":[{"name":"records","type":"Object","html_type":"Object"},{"name":"keepExisting","type":"Object","html_type":"Object"},{"name":"suppressEvent","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.selection.Model-event-focuschange\" rel=\"Ext.selection.Model-event-focuschange\" class=\"docClass\">focuschange</a>","<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"method_calls":["doMultiSelect","doSingleSelect"],"id":"method-doSelect","owner":"Ext.selection.Model","short_doc":" ..."},{"tagname":"method","name":"doSingleSelect","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":690}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":690,"params":[{"name":"record","type":"Object","html_type":"Object"},{"name":"suppressEvent","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.selection.Model-event-focuschange\" rel=\"Ext.selection.Model-event-focuschange\" class=\"docClass\">focuschange</a>","<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"method_calls":["doDeselect","isSelected","maybeFireSelectionChange","onSelectChange","resumeChanges","setLastFocused","suspendChanges"],"id":"method-doSingleSelect","owner":"Ext.selection.Model","short_doc":" ..."},{"tagname":"method","name":"getCount","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":1032}],"doc":"<p>Returns the count of selected records.</p>\n","return":{"type":"Number","name":"return","doc":"<p>The number of selected records</p>\n","properties":null,"html_type":"Number"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getCount","owner":"Ext.selection.Model","short_doc":"Returns the count of selected records. ..."},{"tagname":"method","name":"getLastFocused","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":771}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":771,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getLastFocused","owner":"Ext.selection.Model","short_doc":" ..."},{"tagname":"method","name":"getLastSelected","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":764}],"doc":"\n","return":{"type":"Ext.data.Model","name":"return","doc":"<p>Returns the last selected record.</p>\n","properties":null,"html_type":"Ext.data.Model"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getLastSelected","owner":"Ext.selection.Model","short_doc":" ..."},{"tagname":"method","name":"getSelection","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":775}],"doc":"<p>Returns an array of the currently selected records.</p>\n","return":{"type":"Ext.data.Model[]","name":"return","doc":"<p>The selected records</p>\n\n","properties":null,"html_type":"Ext.data.Model[]"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getSelection","owner":"Ext.selection.Model","short_doc":"Returns an array of the currently selected records. ..."},{"tagname":"method","name":"getSelectionMode","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":783}],"doc":"<p>Returns the current selectionMode.</p>\n","return":{"type":"String","name":"return","doc":"<p>The selectionMode: 'SINGLE', 'MULTI' or 'SIMPLE'.</p>\n","properties":null,"html_type":"String"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getSelectionMode","owner":"Ext.selection.Model","short_doc":"Returns the current selectionMode. ..."},{"tagname":"method","name":"getSelectionStart","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":203}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":203,"params":[],"chainable":false,"fires":[],"method_calls":["setSelectionStart"],"id":"method-getSelectionStart","owner":"Ext.selection.Model","short_doc":" ..."},{"tagname":"method","name":"getStore","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/StoreHolder.js","linenr":51}],"doc":"<p>Gets the current store instance.</p>\n","return":{"type":"Ext.data.AbstractStore","name":"return","doc":"<p>The store, null if one does not exist.</p>\n\n","properties":null,"html_type":"Ext.data.AbstractStore"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getStore","owner":"Ext.util.StoreHolder","short_doc":"Gets the current store instance. ..."},{"tagname":"method","name":"getStoreListeners","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":116}],"doc":"<p>Gets the listeners to bind to a new store.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":116,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-getStoreListeners","owner":"Ext.selection.Model","overrides":[{"name":"getStoreListeners","owner":"Ext.util.StoreHolder","link":"<a href=\"#!/api/Ext.util.StoreHolder-method-getStoreListeners\" rel=\"Ext.util.StoreHolder-method-getStoreListeners\" class=\"docClass\">Ext.util.StoreHolder.getStoreListeners</a>"}],"protected":true,"return":{"type":"Object","name":"return","doc":"<p>The listeners to be bound to the store in object literal form. The scope\nmay be omitted, it is assumed to be the current instance.</p>\n\n\n\n","properties":null,"html_type":"Object"},"short_doc":"Gets the listeners to bind to a new store. ..."},{"tagname":"method","name":"hasSelection","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":852}],"doc":"<p>Returns true if there are any a selected records.</p>\n","return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-hasSelection","owner":"Ext.selection.Model","short_doc":"Returns true if there are any a selected records. ..."},{"tagname":"method","name":"isFocused","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":747}],"doc":"<p>Determines if this record is currently focused.</p>\n","params":[{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"\n","html_type":"Ext.data.Model"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getLastFocused"],"id":"method-isFocused","owner":"Ext.selection.Model","short_doc":"Determines if this record is currently focused. ..."},{"tagname":"method","name":"isLocked","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":802}],"doc":"<p>Returns true if the selections are locked.</p>\n","return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-isLocked","owner":"Ext.selection.Model","short_doc":"Returns true if the selections are locked. ..."},{"tagname":"method","name":"isRangeSelected","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":818}],"doc":"<p>Returns true if the specified row is selected.</p>\n","params":[{"tagname":"params","type":"Ext.data.Model/Number","name":"from","doc":"<p>The start of the range to check.</p>\n","html_type":"Ext.data.Model/Number"},{"tagname":"params","type":"Ext.data.Model/Number","name":"to","doc":"<p>The end of the range to check.</p>\n","html_type":"Ext.data.Model/Number"}],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["isSelected","normalizeRowRange"],"id":"method-isRangeSelected","owner":"Ext.selection.Model","short_doc":"Returns true if the specified row is selected. ..."},{"tagname":"method","name":"isSelected","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":842}],"doc":"<p>Returns true if the specified row is selected.</p>\n","params":[{"tagname":"params","type":"Ext.data.Model/Number","name":"record","doc":"<p>The record or index of the record to check</p>\n","html_type":"Ext.data.Model/Number"}],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-isSelected","owner":"Ext.selection.Model","short_doc":"Returns true if the specified row is selected. ..."},{"tagname":"method","name":"maybeFireSelectionChange","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":755}],"doc":"<p>fire selection change as long as true is not passed\ninto maybeFireSelectionChange</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[{"name":"fireEvent","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"method_calls":["fireEvent","getSelection"],"id":"method-maybeFireSelectionChange","owner":"Ext.selection.Model","short_doc":"fire selection change as long as true is not passed\ninto maybeFireSelectionChange ..."},{"tagname":"method","name":"normalizeRowRange","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":501}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":501,"params":[{"name":"startRow","type":"Object","html_type":"Object"},{"name":"endRow","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-normalizeRowRange","owner":"Ext.selection.Model","short_doc":" ..."},{"tagname":"method","name":"onBindStore","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/StoreHolder.js","linenr":120}],"doc":"<p>Template method, it is called when a new store is bound\nto the current instance.</p>\n","protected":true,"params":[{"tagname":"params","type":"Ext.data.AbstractStore","name":"store","doc":"<p>The store being bound</p>\n","html_type":"Ext.data.AbstractStore"},{"tagname":"params","type":"Boolean","name":"initial","doc":"<p>True if this store is being bound as initialization of the instance.</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-onBindStore","owner":"Ext.util.StoreHolder","short_doc":"Template method, it is called when a new store is bound\nto the current instance. ..."},{"tagname":"method","name":"onEditorKey","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":1114}],"doc":"\n","abstract":true,"inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-onEditorKey","owner":"Ext.selection.Model","short_doc":" ..."},{"tagname":"method","name":"onLastFocusChanged","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":1107}],"doc":"\n","abstract":true,"inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[{"name":"oldFocused","type":"Object","html_type":"Object"},{"name":"newFocused","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.selection.Model-event-focuschange\" rel=\"Ext.selection.Model-event-focuschange\" class=\"docClass\">focuschange</a>"],"method_calls":["fireEvent"],"id":"method-onLastFocusChanged","owner":"Ext.selection.Model","short_doc":" ..."},{"tagname":"method","name":"onPrune","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":886}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":886,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-onPrune","owner":"Ext.selection.Model","short_doc":" ..."},{"tagname":"method","name":"onSelectChange","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":1093}],"doc":"\n","abstract":true,"inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[{"name":"record","type":"Object","html_type":"Object"},{"name":"isSelected","type":"Object","html_type":"Object"},{"name":"suppressEvent","type":"Object","html_type":"Object"},{"name":"commitFn","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["fireEvent"],"id":"method-onSelectChange","owner":"Ext.selection.Model","short_doc":" ..."},{"tagname":"method","name":"onStoreAdd","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":976}],"doc":"<p>when a record is added to a store</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-onStoreAdd","owner":"Ext.selection.Model","short_doc":"when a record is added to a store ..."},{"tagname":"method","name":"onStoreClear","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":979}],"doc":"<p>when a store is cleared remove all selections\n(if there were any)</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":["<a href=\"#!/api/Ext.selection.Model-event-focuschange\" rel=\"Ext.selection.Model-event-focuschange\" class=\"docClass\">focuschange</a>"],"method_calls":["clearSelections","maybeFireSelectionChange"],"id":"method-onStoreClear","owner":"Ext.selection.Model","short_doc":"when a store is cleared remove all selections\n(if there were any) ..."},{"tagname":"method","name":"onStoreLoad","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":1087}],"doc":"\n","abstract":true,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-onStoreLoad","owner":"Ext.selection.Model","short_doc":" ..."},{"tagname":"method","name":"onStoreRefresh","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":1052}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1052,"params":[],"chainable":false,"fires":[],"method_calls":["getStore"],"id":"method-onStoreRefresh","owner":"Ext.selection.Model","short_doc":" ..."},{"tagname":"method","name":"onStoreRemove","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":988}],"doc":"<p>prune records from the SelectionModel if\nthey were selected at the time they were\nremoved.</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[{"name":"store","type":"Object","html_type":"Object"},{"name":"records","type":"Object","html_type":"Object"},{"name":"index","type":"Object","html_type":"Object"},{"name":"isMove","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.selection.Model-event-focuschange\" rel=\"Ext.selection.Model-event-focuschange\" class=\"docClass\">focuschange</a>","<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"method_calls":["deselect"],"id":"method-onStoreRemove","owner":"Ext.selection.Model","short_doc":"prune records from the SelectionModel if\nthey were selected at the time they were\nremoved. ..."},{"tagname":"method","name":"onStoreUpdate","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":1049}],"doc":"<p>if records are updated</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-onStoreUpdate","owner":"Ext.selection.Model","short_doc":"if records are updated ..."},{"tagname":"method","name":"onUnbindStore","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/StoreHolder.js","linenr":111}],"doc":"<p>Template method, it is called when an existing store is unbound\nfrom the current instance.</p>\n","protected":true,"params":[{"tagname":"params","type":"Ext.data.AbstractStore","name":"store","doc":"<p>The store being unbound</p>\n","html_type":"Ext.data.AbstractStore"},{"tagname":"params","type":"Boolean","name":"initial","doc":"<p>True if this store is being bound as initialization of the instance.</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-onUnbindStore","owner":"Ext.util.StoreHolder","short_doc":"Template method, it is called when an existing store is unbound\nfrom the current instance. ..."},{"tagname":"method","name":"onUpdate","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":1040}],"doc":"<p>Called when the contents of the node are updated, perform any processing here.</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-onUpdate","owner":"Ext.selection.Model","short_doc":"Called when the contents of the node are updated, perform any processing here. ..."},{"tagname":"method","name":"onVetoUIEvent","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":1134}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1134,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-onVetoUIEvent","owner":"Ext.selection.Model","short_doc":" ..."},{"tagname":"method","name":"pruneIf","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":860}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":860,"params":[],"chainable":false,"fires":["<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"method_calls":["maybeFireSelectionChange","onPrune"],"id":"method-pruneIf","owner":"Ext.selection.Model","short_doc":" ..."},{"tagname":"method","name":"refresh","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":888}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":888,"params":[],"chainable":false,"fires":["<a href=\"#!/api/Ext.selection.Model-event-focuschange\" rel=\"Ext.selection.Model-event-focuschange\" class=\"docClass\">focuschange</a>","<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"method_calls":["clearSelections","doSelect","getLastFocused","getSelection","maybeFireSelectionChange","setLastFocused"],"id":"method-refresh","owner":"Ext.selection.Model","short_doc":" ..."},{"tagname":"method","name":"resolveListenerScope","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":1124}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1124,"params":[{"name":"defaultScope","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["callParent"],"id":"method-resolveListenerScope","owner":"Ext.selection.Model","short_doc":" ..."},{"tagname":"method","name":"resumeChanges","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":132}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":132,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-resumeChanges","owner":"Ext.selection.Model","short_doc":" ..."},{"tagname":"method","name":"select","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":525}],"doc":"<p>Selects a record instance by record instance or index.</p>\n","params":[{"tagname":"params","type":"Ext.data.Model[]/Number","name":"records","doc":"<p>An array of records or an index</p>\n\n","html_type":"Ext.data.Model[]/Number"},{"tagname":"params","type":"Boolean","name":"keepExisting","default":"false","optional":true,"doc":"<p>True to retain existing selections</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"suppressEvent","default":"false","optional":true,"doc":"<p>True to not fire a select event</p>\n\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":["<a href=\"#!/api/Ext.selection.Model-event-focuschange\" rel=\"Ext.selection.Model-event-focuschange\" class=\"docClass\">focuschange</a>","<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"method_calls":["doSelect"],"id":"method-select","owner":"Ext.selection.Model","short_doc":"Selects a record instance by record instance or index. ..."},{"tagname":"method","name":"selectAll","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":138}],"doc":"<p>Selects all records in the view.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"suppressEvent","doc":"<p>True to suppress any select events</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":["<a href=\"#!/api/Ext.selection.Model-event-focuschange\" rel=\"Ext.selection.Model-event-focuschange\" class=\"docClass\">focuschange</a>","<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"method_calls":["doSelect","getSelection","maybeFireSelectionChange","resumeChanges","suspendChanges"],"id":"method-selectAll","owner":"Ext.selection.Model","short_doc":"Selects all records in the view. ..."},{"tagname":"method","name":"selectRange","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":417}],"doc":"<p>Selects a range of rows if the selection model <a href=\"#!/api/Ext.selection.Model-method-isLocked\" rel=\"Ext.selection.Model-method-isLocked\" class=\"docClass\">is not locked</a>.\nAll rows in between startRow and endRow are also selected.</p>\n","params":[{"tagname":"params","type":"Ext.data.Model/Number","name":"startRow","doc":"<p>The record or index of the first row in the range</p>\n","html_type":"Ext.data.Model/Number"},{"tagname":"params","type":"Ext.data.Model/Number","name":"endRow","doc":"<p>The record or index of the last row in the range</p>\n","html_type":"Ext.data.Model/Number"},{"tagname":"params","type":"Boolean","name":"keepExisting","optional":true,"doc":"<p>True to retain existing selections</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":["<a href=\"#!/api/Ext.selection.Model-event-focuschange\" rel=\"Ext.selection.Model-event-focuschange\" class=\"docClass\">focuschange</a>","<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"method_calls":["doDeselect","doMultiSelect","isLocked","isSelected","maybeFireSelectionChange","normalizeRowRange","resumeChanges","suspendChanges"],"id":"method-selectRange","owner":"Ext.selection.Model","short_doc":"Selects a range of rows if the selection model is not locked. ..."},{"tagname":"method","name":"selectWithEvent","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":215}],"doc":"<p>Provides differentiation of logic between MULTI, SIMPLE and SINGLE\nselection modes. Requires that an event be passed so that we can know\nif user held ctrl or shift.</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[{"name":"record","type":"Object","html_type":"Object"},{"name":"e","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.selection.Model-event-focuschange\" rel=\"Ext.selection.Model-event-focuschange\" class=\"docClass\">focuschange</a>","<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"method_calls":["doDeselect","doSelect","getSelection","getSelectionStart","isSelected","selectRange"],"id":"method-selectWithEvent","owner":"Ext.selection.Model","short_doc":"Provides differentiation of logic between MULTI, SIMPLE and SINGLE\nselection modes. ..."},{"tagname":"method","name":"setLastFocused","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":731}],"doc":"<p>Sets a record as the last focused record. This does NOT mean\nthat the record has been selected.</p>\n","params":[{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"\n","html_type":"Ext.data.Model"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":["<a href=\"#!/api/Ext.selection.Model-event-focuschange\" rel=\"Ext.selection.Model-event-focuschange\" class=\"docClass\">focuschange</a>"],"method_calls":["onLastFocusChanged"],"id":"method-setLastFocused","owner":"Ext.selection.Model","short_doc":"Sets a record as the last focused record. ..."},{"tagname":"method","name":"setLocked","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":810}],"doc":"<p>Locks the current selection and disables any changes from happening to the selection.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"locked","doc":"<p>True to lock, false to unlock.</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-setLocked","owner":"Ext.selection.Model","short_doc":"Locks the current selection and disables any changes from happening to the selection. ..."},{"tagname":"method","name":"setSelectionMode","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":791}],"doc":"<p>Sets the current selectionMode.</p>\n","params":[{"tagname":"params","type":"String","name":"selMode","doc":"<p>'SINGLE', 'MULTI' or 'SIMPLE'.</p>\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-setSelectionMode","owner":"Ext.selection.Model","short_doc":"Sets the current selectionMode. ..."},{"tagname":"method","name":"setSelectionStart","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":211}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":211,"params":[{"name":"selection","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-setSelectionStart","owner":"Ext.selection.Model","short_doc":" ..."},{"tagname":"method","name":"setStore","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/StoreHolder.js","linenr":59}],"doc":"<p>Sets the store to the specified store.</p>\n","params":[{"tagname":"params","name":"store","doc":"\n","type":"Object","html_type":"Object"}],"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":["autosize","change","dirtychange","errorchange","validitychange"],"method_calls":["bindStore"],"id":"method-setStore","owner":"Ext.util.StoreHolder","short_doc":"Sets the store to the specified store. ..."},{"tagname":"method","name":"suspendChanges","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":128}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":128,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-suspendChanges","owner":"Ext.selection.Model","short_doc":" ..."},{"tagname":"method","name":"unbindStoreListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/util/StoreHolder.js","linenr":68}],"doc":"<p>Unbinds listeners from this component to the store. By default it will remove\nanything bound by the bindStoreListeners method, however it can be overridden\nin a subclass to provide any more complicated handling.</p>\n","protected":true,"params":[{"tagname":"params","type":"Ext.data.AbstractStore","name":"store","doc":"<p>The store to unbind from</p>\n","html_type":"Ext.data.AbstractStore"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-unbindStoreListeners","owner":"Ext.util.StoreHolder","short_doc":"Unbinds listeners from this component to the store. ..."},{"tagname":"event","name":"focuschange","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":78}],"doc":"<p>Fired when a row is focused</p>\n","params":[{"tagname":"params","type":"Ext.selection.Model","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.selection.Model\" rel=\"Ext.selection.Model\" class=\"docClass\">Ext.selection.Model</a>"},{"tagname":"params","type":"Ext.data.Model","name":"oldFocused","doc":"<p>The previously focused record</p>\n\n","html_type":"Ext.data.Model"},{"tagname":"params","type":"Ext.data.Model","name":"newFocused","doc":"<p>The newly focused record</p>\n\n","html_type":"Ext.data.Model"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-focuschange","owner":"Ext.selection.Model","short_doc":"Fired when a row is focused ..."},{"tagname":"event","name":"selectionchange","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/selection/Model.js","linenr":71}],"doc":"<p>Fired after a selection change has occurred</p>\n","params":[{"tagname":"params","type":"Ext.selection.Model","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.selection.Model\" rel=\"Ext.selection.Model\" class=\"docClass\">Ext.selection.Model</a>"},{"tagname":"params","type":"Ext.data.Model[]","name":"selected","doc":"<p>The selected records</p>\n\n\n\n","html_type":"Ext.data.Model[]"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-selectionchange","owner":"Ext.selection.Model","short_doc":"Fired after a selection change has occurred ..."}],"code_type":"ext_define","id":"class-Ext.selection.Model","short_doc":"Tracks what records are currently selected in a databound component. ..."}