{"tagname":"class","name":"Ext.app.BaseController","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":1}],"doc":"<p>Base class for Controllers.</p>\n","protected":true,"aliases":{},"alternateClassNames":[],"extends":"Ext.Base","mixins":["Ext.util.Observable"],"requires":["Ext.app.EventBus","Ext.app.domain.Global"],"uses":["Ext.app.domain.Controller"],"members":[{"tagname":"cfg","name":"before","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":296}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":296,"type":"Object","default":null,"accessor":true,"evented":null,"id":"cfg-before","owner":"Ext.app.BaseController","html_type":"Object"},{"tagname":"cfg","name":"control","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":30}],"doc":"<p>Adds listeners to components selected via Ext.ComponentQuery. Accepts an\nobject containing component paths mapped to a hash of listener functions.</p>\n\n<p>In the following example the <code>updateUser</code> function is mapped to to the <code>click</code>\nevent on a button component, which is a child of the <code>useredit</code> component.</p>\n\n<pre><code> Ext.define('MyApp.controller.Users', {\n     extend: '<a href=\"#!/api/Ext.app.Controller\" rel=\"Ext.app.Controller\" class=\"docClass\">Ext.app.Controller</a>',\n\n     config: {\n         control: {\n             'useredit button[action=save]': {\n                 click: 'updateUser'\n             }\n          }\n     },\n\n     updateUser: function(button) {\n         console.log('clicked the Save button');\n     }\n });\n</code></pre>\n\n<p>The method you pass to the listener will automatically be resolved on the controller.\nIn this case, the <code>updateUser</code> method that will get executed on the <code>button</code> <code>click</code>\nevent will resolve to the <code>updateUser</code> method on the controller,</p>\n\n<p>See Ext.ComponentQuery for more information on component selectors.</p>\n","type":"Object","default":null,"properties":null,"accessor":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"evented":null,"id":"cfg-control","owner":"Ext.app.BaseController","short_doc":"Adds listeners to components selected via Ext.ComponentQuery. ...","html_type":"Object"},{"tagname":"cfg","name":"id","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":24}],"doc":"<p>The id of this controller. You can use this id when dispatching.</p>\n","type":"String","default":null,"properties":null,"accessor":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"evented":null,"id":"cfg-id","owner":"Ext.app.BaseController","short_doc":"The id of this controller. ...","html_type":"String"},{"tagname":"cfg","name":"listen","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":64}],"doc":"<p>Adds listeners to different event sources (also called \"event domains\"). The\nprimary event domain is that of components, but there are also other event domains:\n<a href=\"#!/api/Ext.app.domain.Global\" rel=\"Ext.app.domain.Global\" class=\"docClass\">Global</a> domain that intercepts events fired from\nExt.GlobalEvents Observable instance, <a href=\"#!/api/Ext.app.domain.Controller\" rel=\"Ext.app.domain.Controller\" class=\"docClass\">Controller</a>\ndomain can be used to listen to events fired by other Controllers,\n<a href=\"#!/api/Ext.app.domain.Store\" rel=\"Ext.app.domain.Store\" class=\"docClass\">Store</a> domain gives access to Store events, and\n<a href=\"#!/api/Ext.app.domain.Direct\" rel=\"Ext.app.domain.Direct\" class=\"docClass\">Direct</a> domain can be used with Ext.Direct Providers\nto listen to their events.</p>\n\n<p>To listen to \"bar\" events fired by a controller with id=\"foo\":</p>\n\n<pre><code> Ext.define('AM.controller.Users', {\n     extend: '<a href=\"#!/api/Ext.app.Controller\" rel=\"Ext.app.Controller\" class=\"docClass\">Ext.app.Controller</a>',\n\n     config: {\n         listen: {\n             controller: {\n                 '#foo': {\n                    bar: 'onFooBar'\n                 }\n             }\n         }\n     }\n });\n</code></pre>\n\n<p>To listen to \"bar\" events fired by any controller, and \"baz\" events\nfired by Store with storeId=\"baz\":</p>\n\n<pre><code> Ext.define('AM.controller.Users', {\n     extend: '<a href=\"#!/api/Ext.app.Controller\" rel=\"Ext.app.Controller\" class=\"docClass\">Ext.app.Controller</a>',\n\n     config: {\n         listen: {\n             controller: {\n                 '*': {\n                    bar: 'onAnyControllerBar'\n                 }\n             },\n             store: {\n                 '#baz': {\n                     baz: 'onStoreBaz'\n                 }\n             }\n         }\n     }\n });\n</code></pre>\n\n<p>To listen to \"idle\" events fired by Ext.GlobalEvents when other event\nprocessing is complete and Ext JS is about to return control to the browser:</p>\n\n<pre><code> Ext.define('AM.controller.Users', {\n     extend: '<a href=\"#!/api/Ext.app.Controller\" rel=\"Ext.app.Controller\" class=\"docClass\">Ext.app.Controller</a>',\n\n     config: {\n         listen: {\n             global: {            // Global events are always fired\n                 idle: 'onIdle'   // from the same object, so there\n             }                    // are no selectors\n         }\n     }\n });\n</code></pre>\n\n<p>As this relates to components, the following example:</p>\n\n<pre><code> Ext.define('AM.controller.Users', {\n     extend: '<a href=\"#!/api/Ext.app.Controller\" rel=\"Ext.app.Controller\" class=\"docClass\">Ext.app.Controller</a>',\n\n     config: {\n         listen: {\n             component: {\n                 'useredit button[action=save]': {\n                    click: 'updateUser'\n                 }\n             }\n         }\n     }\n });\n</code></pre>\n\n<p>Is equivalent to:</p>\n\n<pre><code> Ext.define('AM.controller.Users', {\n     extend: '<a href=\"#!/api/Ext.app.Controller\" rel=\"Ext.app.Controller\" class=\"docClass\">Ext.app.Controller</a>',\n\n     config: {\n         control: {\n             'useredit button[action=save]': {\n                click: 'updateUser'\n             }\n         }\n     }\n });\n</code></pre>\n\n<p>Of course, these can all be combined in a single call and used instead of\n<code>control</code>, like so:</p>\n\n<pre><code> Ext.define('AM.controller.Users', {\n     extend: '<a href=\"#!/api/Ext.app.Controller\" rel=\"Ext.app.Controller\" class=\"docClass\">Ext.app.Controller</a>',\n\n     config: {\n         listen: {\n             global: {\n                 idle: 'onIdle'\n             },\n             controller: {\n                 '*': {\n                    foobar: 'onAnyFooBar'\n                 },\n                 '#foo': {\n                    bar: 'onFooBar'\n                 }\n             },\n             component: {\n                 'useredit button[action=save]': {\n                    click: 'updateUser'\n                 }\n             },\n             store: {\n                 '#qux': {\n                     load: 'onQuxLoad'\n                 }\n             }\n         }\n     }\n });\n</code></pre>\n","type":"Object","default":null,"properties":null,"accessor":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"evented":null,"id":"cfg-listen","owner":"Ext.app.BaseController","short_doc":"Adds listeners to different event sources (also called \"event domains\"). ...","html_type":"Object"},{"tagname":"cfg","name":"routes","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":195}],"doc":"<p>An object of routes to handle hash changes. A route can be defined in a simple way:</p>\n\n<pre><code>routes : {\n    'foo/bar'  : 'handleFoo',\n    'user/:id' : 'showUser'\n}\n</code></pre>\n\n<p>Where the property is the hash (which can accept a parameter defined by a colon) and the value\nis the method on the controller to execute. The parameters will get sent in the action method.</p>\n\n<p>At the application level, you can define a event that will be executed when no matching\nroutes are found.</p>\n\n<pre><code>Ext.application({\n    name: 'MyApp',\n    listen: {\n        controller: {\n            '#': {\n                unmatchedroute: 'onUnmatchedRoute'\n            }\n        }\n    },\n\n    onUnmatchedRoute: function(hash) {\n        console.log('Unmatched', hash);\n        // Do something...\n    }\n});\n</code></pre>\n\n<p>There is also a complex means of defining a route where you can use a before action and even\nspecify your own RegEx for the parameter:</p>\n\n<pre><code>routes : {\n    'foo/bar'  : {\n        action  : 'handleFoo',\n        before  : 'beforeHandleFoo'\n    },\n    'user/:id' : {\n        action     : 'showUser',\n        before     : 'beforeShowUser',\n        conditions : {\n            ':id' : '([0-9]+)'\n        }\n    }\n}\n</code></pre>\n\n<p>This will only match if the <code>id</code> parameter is a number.</p>\n\n<p>The before action allows you to cancel an action. Every before action will get passed an <code>action</code> argument with\na <code>resume</code> and <code>stop</code> methods as the last argument of the method and you <em>MUST</em> execute either method:</p>\n\n<pre><code>beforeHandleFoo : function(action) {\n    //some logic here\n\n    //this will allow the handleFoo action to be executed\n    action.resume();\n},\nhandleFoo : function() {\n    //will get executed due to true being passed in callback in beforeHandleFoo\n},\nbeforeShowUser : function(id, action) {\n    //allows for async process like an Ajax\n    Ext.Ajax.request({\n        url     : 'foo.php',\n        success : function() {\n            //will not allow the showUser method to be executed but will continue other queued actions.\n            action.stop();\n        },\n        failure : function() {\n            //will not allow the showUser method to be executed and will not allow other queued actions to be executed.\n            action.stop(true);\n        }\n    });\n},\nshowUser : function(id) {\n    //will not get executed due to false being passed in callback in beforeShowUser\n}\n</code></pre>\n\n<p>You <em>MUST</em> execute the <code>resume</code> or <code>stop</code> method on the <code>action</code> argument. Executing <code>action.resume();</code> will continue\nthe action, <code>action.stop();</code> will not allow the action to resume but will allow other queued actions to resume,\n<code>action.stop(true);</code> will not allow the action and any other queued actions to resume.</p>\n\n<p>The default RegEx that will be used is <code>([%a-zA-Z0-9\\\\-\\\\_\\\\s,]+)</code> but you can specify any\nthat may suit what you need to accomplish. An example of an advanced condition may be to make\na parameter optional and case-insensitive:</p>\n\n<pre><code>routes : {\n    'user:id' : {\n        action     : 'showUser',\n        before     : 'beforeShowUser',\n        conditions : {\n            ':id' : '(?:(?:\\/){1}([%a-z0-9_,\\s\\-]+))?'\n        }\n    }\n}\n</code></pre>\n","type":"Object","default":null,"properties":null,"accessor":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"evented":null,"id":"cfg-routes","owner":"Ext.app.BaseController","short_doc":"An object of routes to handle hash changes. ...","html_type":"Object"},{"tagname":"property","name":"isController","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":21}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":21,"type":"Boolean","default":"true","readonly":null,"id":"property-isController","owner":"Ext.app.BaseController","short_doc":" ...","html_type":"Boolean"},{"tagname":"method","name":"constructor","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":299}],"doc":"<p>Creates new Controller.</p>\n","params":[{"tagname":"params","type":"Object","name":"config","optional":true,"doc":"<p>Configuration object.</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["initConfig"],"id":"method-constructor","owner":"Ext.app.BaseController","return":{"type":"Ext.app.BaseController","doc":"\n","html_type":"<a href=\"#!/api/Ext.app.BaseController\" rel=\"Ext.app.BaseController\" class=\"docClass\">Ext.app.BaseController</a>"},"short_doc":"Creates new Controller. ..."},{"tagname":"method","name":"applyControl","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":325}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":325,"params":[{"name":"control","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-applyControl","owner":"Ext.app.BaseController","short_doc":" ..."},{"tagname":"method","name":"applyListen","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":317}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":317,"params":[{"name":"listen","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-applyListen","owner":"Ext.app.BaseController","short_doc":" ..."},{"tagname":"method","name":"control","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":397}],"doc":"<p>Adds listeners to components selected via Ext.ComponentQuery. Accepts an\nobject containing component paths mapped to a hash of listener functions.</p>\n\n<p>In the following example the <code>updateUser</code> function is mapped to to the <code>click</code>\nevent on a button component, which is a child of the <code>useredit</code> component.</p>\n\n<pre><code> Ext.define('AM.controller.Users', {\n     init: function() {\n         this.control({\n             'useredit button[action=save]': {\n                 click: this.updateUser\n             }\n         });\n     },\n\n     updateUser: function(button) {\n         console.log('clicked the Save button');\n     }\n });\n</code></pre>\n\n<p>Or alternatively one call <code>control</code> with two arguments:</p>\n\n<pre><code> this.control('useredit button[action=save]', {\n     click: this.updateUser\n });\n</code></pre>\n\n<p>See Ext.ComponentQuery for more information on component selectors.</p>\n","params":[{"tagname":"params","type":"String/Object","name":"selectors","doc":"<p>If a String, the second argument is used as the\nlisteners, otherwise an object of selectors -> listeners is assumed</p>\n","html_type":"String/Object"},{"tagname":"params","type":"Object","name":"listeners","optional":true,"doc":"<p>Config for listeners.</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-control","owner":"Ext.app.BaseController","short_doc":"Adds listeners to components selected via Ext.ComponentQuery. ..."},{"tagname":"method","name":"destroy","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":573}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":573,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-destroy","owner":"Ext.app.BaseController","short_doc":" ..."},{"tagname":"method","name":"getBefore","doc":"<p>Returns the value of <a href=\"#!/api/Ext.app.BaseController-cfg-before\" rel=\"Ext.app.BaseController-cfg-before\" class=\"docClass\">before</a>.</p>\n","params":[],"return":{"type":"Object","doc":"\n","html_type":"Object"},"id":"method-getBefore","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":296}],"static":null,"private":null,"inheritable":null,"linenr":296,"owner":"Ext.app.BaseController","short_doc":"Returns the value of before. ..."},{"tagname":"method","name":"getControl","doc":"<p>Returns the value of <a href=\"#!/api/Ext.app.BaseController-cfg-control\" rel=\"Ext.app.BaseController-cfg-control\" class=\"docClass\">control</a>.</p>\n","params":[],"return":{"type":"Object","doc":"\n","html_type":"Object"},"id":"method-getControl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":30}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.app.BaseController","short_doc":"Returns the value of control. ..."},{"tagname":"method","name":"getId","doc":"<p>Returns the value of <a href=\"#!/api/Ext.app.BaseController-cfg-id\" rel=\"Ext.app.BaseController-cfg-id\" class=\"docClass\">id</a>.</p>\n","params":[],"return":{"type":"String","doc":"\n","html_type":"String"},"id":"method-getId","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":24}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.app.BaseController","short_doc":"Returns the value of id. ..."},{"tagname":"method","name":"getListen","doc":"<p>Returns the value of <a href=\"#!/api/Ext.app.BaseController-cfg-listen\" rel=\"Ext.app.BaseController-cfg-listen\" class=\"docClass\">listen</a>.</p>\n","params":[],"return":{"type":"Object","doc":"\n","html_type":"Object"},"id":"method-getListen","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":64}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.app.BaseController","short_doc":"Returns the value of listen. ..."},{"tagname":"method","name":"getRoutes","doc":"<p>Returns the value of <a href=\"#!/api/Ext.app.BaseController-cfg-routes\" rel=\"Ext.app.BaseController-cfg-routes\" class=\"docClass\">routes</a>.</p>\n","params":[],"return":{"type":"Object","doc":"\n","html_type":"Object"},"id":"method-getRoutes","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":195}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.app.BaseController","short_doc":"Returns the value of routes. ..."},{"tagname":"method","name":"isActive","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":393}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":393,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-isActive","owner":"Ext.app.BaseController","short_doc":" ..."},{"tagname":"method","name":"listen","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":447}],"doc":"<p>Adds listeners to different event sources (also called \"event domains\"). The\nprimary event domain is that of components, but there are also other event domains:\n<a href=\"#!/api/Ext.app.domain.Global\" rel=\"Ext.app.domain.Global\" class=\"docClass\">Global</a> domain that intercepts events fired from\nExt.GlobalEvents Observable instance, <a href=\"#!/api/Ext.app.domain.Controller\" rel=\"Ext.app.domain.Controller\" class=\"docClass\">Controller</a>\ndomain can be used to listen to events fired by other Controllers,\n<a href=\"#!/api/Ext.app.domain.Store\" rel=\"Ext.app.domain.Store\" class=\"docClass\">Store</a> domain gives access to Store events, and\n<a href=\"#!/api/Ext.app.domain.Direct\" rel=\"Ext.app.domain.Direct\" class=\"docClass\">Direct</a> domain can be used with Ext.Direct Providers\nto listen to their events.</p>\n\n<p>To listen to \"bar\" events fired by a controller with id=\"foo\":</p>\n\n<pre><code> Ext.define('AM.controller.Users', {\n     init: function() {\n         this.listen({\n             controller: {\n                 '#foo': {\n                    bar: this.onFooBar\n                 }\n             }\n         });\n     },\n     ...\n });\n</code></pre>\n\n<p>To listen to \"bar\" events fired by any controller, and \"baz\" events\nfired by Store with storeId=\"baz\":</p>\n\n<pre><code> Ext.define('AM.controller.Users', {\n     init: function() {\n         this.listen({\n             controller: {\n                 '*': {\n                    bar: this.onAnyControllerBar\n                 }\n             },\n             store: {\n                 '#baz': {\n                     baz: this.onStoreBaz\n                 }\n             }\n         });\n     },\n     ...\n });\n</code></pre>\n\n<p>To listen to \"idle\" events fired by Ext.GlobalEvents when other event\nprocessing is complete and Ext JS is about to return control to the browser:</p>\n\n<pre><code> Ext.define('AM.controller.Users', {\n     init: function() {\n         this.listen({\n             global: {               // Global events are always fired\n                 idle: this.onIdle   // from the same object, so there\n             }                       // are no selectors\n         });\n     }\n });\n</code></pre>\n\n<p>As this relates to components, the following example:</p>\n\n<pre><code> Ext.define('AM.controller.Users', {\n     init: function() {\n         this.listen({\n             component: {\n                 'useredit button[action=save]': {\n                    click: this.updateUser\n                 }\n             }\n         });\n     },\n     ...\n });\n</code></pre>\n\n<p>Is equivalent to:</p>\n\n<pre><code> Ext.define('AM.controller.Users', {\n     init: function() {\n         this.control({\n             'useredit button[action=save]': {\n                click: this.updateUser\n             }\n         });\n     },\n     ...\n });\n</code></pre>\n\n<p>Of course, these can all be combined in a single call and used instead of\n<code>control</code>, like so:</p>\n\n<pre><code> Ext.define('AM.controller.Users', {\n     init: function() {\n         this.listen({\n             global: {\n                 idle: this.onIdle\n             },\n             controller: {\n                 '*': {\n                    foobar: this.onAnyFooBar\n                 },\n                 '#foo': {\n                    bar: this.onFooBar\n                 }\n             },\n             component: {\n                 'useredit button[action=save]': {\n                    click: this.updateUser\n                 }\n             },\n             store: {\n                 '#qux': {\n                     load: this.onQuxLoad\n                 }\n             }\n         });\n     },\n     ...\n });\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"to","doc":"<p>Config object containing domains, selectors and listeners.</p>\n","html_type":"Object"},{"tagname":"params","type":"Ext.app.Controller","name":"controller","optional":true,"doc":"<p>The controller to add the listeners to. Defaults to the current controller.</p>\n","html_type":"<a href=\"#!/api/Ext.app.Controller\" rel=\"Ext.app.Controller\" class=\"docClass\">Ext.app.Controller</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-listen","owner":"Ext.app.BaseController","short_doc":"Adds listeners to different event sources (also called \"event domains\"). ..."},{"tagname":"method","name":"redirectTo","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":584}],"doc":"<p>Update the hash. By default, it will not execute the routes if the current token and the\ntoken passed are the same.</p>\n","params":[{"tagname":"params","type":"String","name":"token","doc":"<p>The token to update.</p>\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"force","doc":"<p>Force the update of the hash regardless of the current token.</p>\n","html_type":"Boolean"}],"return":{"type":"Boolean","name":"return","doc":"<p>Will return a<code>true</code> if the token was updated.</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-redirectTo","owner":"Ext.app.BaseController","short_doc":"Update the hash. ..."},{"tagname":"method","name":"setBefore","doc":"<p>Sets the value of <a href=\"#!/api/Ext.app.BaseController-cfg-before\" rel=\"Ext.app.BaseController-cfg-before\" class=\"docClass\">before</a>.</p>\n","params":[{"type":"Object","name":"before","doc":"<p>The new value.</p>\n","html_type":"Object"}],"id":"method-setBefore","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":296}],"static":null,"private":null,"inheritable":null,"linenr":296,"owner":"Ext.app.BaseController","short_doc":"Sets the value of before. ..."},{"tagname":"method","name":"setControl","doc":"<p>Sets the value of <a href=\"#!/api/Ext.app.BaseController-cfg-control\" rel=\"Ext.app.BaseController-cfg-control\" class=\"docClass\">control</a>.</p>\n","params":[{"type":"Object","name":"control","doc":"<p>The new value.</p>\n","html_type":"Object"}],"id":"method-setControl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":30}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.app.BaseController","short_doc":"Sets the value of control. ..."},{"tagname":"method","name":"setId","doc":"<p>Sets the value of <a href=\"#!/api/Ext.app.BaseController-cfg-id\" rel=\"Ext.app.BaseController-cfg-id\" class=\"docClass\">id</a>.</p>\n","params":[{"type":"String","name":"id","doc":"<p>The new value.</p>\n","html_type":"String"}],"id":"method-setId","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":24}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.app.BaseController","short_doc":"Sets the value of id. ..."},{"tagname":"method","name":"setListen","doc":"<p>Sets the value of <a href=\"#!/api/Ext.app.BaseController-cfg-listen\" rel=\"Ext.app.BaseController-cfg-listen\" class=\"docClass\">listen</a>.</p>\n","params":[{"type":"Object","name":"listen","doc":"<p>The new value.</p>\n","html_type":"Object"}],"id":"method-setListen","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":64}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.app.BaseController","short_doc":"Sets the value of listen. ..."},{"tagname":"method","name":"setRoutes","doc":"<p>Sets the value of <a href=\"#!/api/Ext.app.BaseController-cfg-routes\" rel=\"Ext.app.BaseController-cfg-routes\" class=\"docClass\">routes</a>.</p>\n","params":[{"type":"Object","name":"routes","doc":"<p>The new value.</p>\n","html_type":"Object"}],"id":"method-setRoutes","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":195}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.app.BaseController","short_doc":"Sets the value of routes. ..."},{"tagname":"method","name":"updateControl","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":333}],"doc":"\n","params":[{"tagname":"params","type":"Object","name":"control","doc":"<p>The object to pass to the <a href=\"#!/api/Ext.app.BaseController-method-control\" rel=\"Ext.app.BaseController-method-control\" class=\"docClass\">control</a> method</p>\n","html_type":"Object"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["control","ensureId"],"id":"method-updateControl","owner":"Ext.app.BaseController","short_doc":" ..."},{"tagname":"method","name":"updateListen","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":344}],"doc":"\n","params":[{"tagname":"params","type":"Object","name":"listen","doc":"<p>The object to pass to the <a href=\"#!/api/Ext.app.BaseController-method-listen\" rel=\"Ext.app.BaseController-method-listen\" class=\"docClass\">listen</a> method</p>\n","html_type":"Object"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["ensureId","listen"],"id":"method-updateListen","owner":"Ext.app.BaseController","short_doc":" ..."},{"tagname":"method","name":"updateRoutes","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/app/BaseController.js","linenr":355}],"doc":"\n","params":[{"tagname":"params","type":"Object","name":"routes","doc":"<p>The routes to connect to the <a href=\"#!/api/Ext.app.route.Router\" rel=\"Ext.app.route.Router\" class=\"docClass\">Ext.app.route.Router</a></p>\n","html_type":"Object"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getBefore"],"id":"method-updateRoutes","owner":"Ext.app.BaseController","short_doc":" ..."}],"code_type":"ext_define","id":"class-Ext.app.BaseController"}