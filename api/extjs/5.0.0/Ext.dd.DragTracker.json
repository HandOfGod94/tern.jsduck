{"tagname":"class","name":"Ext.dd.DragTracker","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":1}],"doc":"<p>A DragTracker listens for drag events on an Element and fires events at the start and end of the drag,\nas well as during the drag. This is useful for components such as <a href=\"#!/api/Ext.slider.Multi\" rel=\"Ext.slider.Multi\" class=\"docClass\">Ext.slider.Multi</a>, where there is\nan element that can be dragged around to change the Slider's value.</p>\n\n<p>DragTracker provides a series of template methods that should be overridden to provide functionality\nin response to detected drag operations. These are onBeforeStart, onStart, onDrag and onEnd.\nSee <a href=\"#!/api/Ext.slider.Multi\" rel=\"Ext.slider.Multi\" class=\"docClass\">Ext.slider.Multi</a>'s initEvents function for an example implementation.</p>\n","aliases":{},"alternateClassNames":[],"extends":"Ext.Base","mixins":["Ext.util.Observable"],"requires":[],"uses":["Ext.util.Region"],"members":[{"tagname":"cfg","name":"autoStart","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":68}],"doc":"<p>Specify <code>true</code> to defer trigger start by 1000 ms.\nSpecify a Number for the number of milliseconds to defer trigger start.</p>\n","type":"Boolean/Number","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-autoStart","owner":"Ext.dd.DragTracker","short_doc":"Specify true to defer trigger start by 1000 ms. ...","html_type":"Boolean/Number"},{"tagname":"cfg","name":"constrainTo","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":53}],"doc":"<p>A Region (Or an element from which a Region measurement will be read)\nwhich is used to constrain the result of the <a href=\"#!/api/Ext.dd.DragTracker-method-getOffset\" rel=\"Ext.dd.DragTracker-method-getOffset\" class=\"docClass\">getOffset</a> call.</p>\n\n<p>This may be set any time during the DragTracker's lifecycle to set a dynamic constraining region.</p>\n","type":"Ext.util.Region/Ext.dom.Element","default":null,"properties":null,"id":"cfg-constrainTo","owner":"Ext.dd.DragTracker","short_doc":"A Region (Or an element from which a Region measurement will be read)\nwhich is used to constrain the result of the ge...","html_type":"Ext.util.Region/Ext.dom.Element"},{"tagname":"cfg","name":"delegate","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":75}],"doc":"<p>A CSS selector which identifies child elements within the DragTracker's encapsulating\nElement which are the tracked elements. This limits tracking to only begin when the matching elements are mousedowned.</p>\n\n<p>This may also be a specific child element within the DragTracker's encapsulating element to use as the tracked element.</p>\n","type":"String","default":null,"properties":null,"id":"cfg-delegate","owner":"Ext.dd.DragTracker","short_doc":"A CSS selector which identifies child elements within the DragTracker's encapsulating\nElement which are the tracked e...","html_type":"String"},{"tagname":"cfg","name":"overCls","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":45}],"doc":"<p>A CSS class to add to the DragTracker's target element when the element (or, if the <a href=\"#!/api/Ext.dd.DragTracker-cfg-delegate\" rel=\"Ext.dd.DragTracker-cfg-delegate\" class=\"docClass\">delegate</a>\noption is used, when a delegate element) is mouseovered.</p>\n\n<p>If the <a href=\"#!/api/Ext.dd.DragTracker-cfg-delegate\" rel=\"Ext.dd.DragTracker-cfg-delegate\" class=\"docClass\">delegate</a> option is used, these events fire only when a delegate element is entered of left.</p>\n","type":"String","default":null,"properties":null,"id":"cfg-overCls","owner":"Ext.dd.DragTracker","short_doc":"A CSS class to add to the DragTracker's target element when the element (or, if the delegate\noption is used, when a d...","html_type":"String"},{"tagname":"cfg","name":"preventDefault","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":83}],"doc":"<p>Specify <code>false</code> to enable default actions on onMouseDown events.</p>\n","type":"Boolean","default":"true","properties":null,"id":"cfg-preventDefault","owner":"Ext.dd.DragTracker","short_doc":"Specify false to enable default actions on onMouseDown events. ...","html_type":"Boolean"},{"tagname":"cfg","name":"stopEvent","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":88}],"doc":"<p>Specify <code>true</code> to stop the <code>mousedown</code> event from bubbling to outer listeners from the target element (or its delegates).</p>\n","type":"Boolean","default":"false","properties":null,"id":"cfg-stopEvent","owner":"Ext.dd.DragTracker","short_doc":"Specify true to stop the mousedown event from bubbling to outer listeners from the target element (or its delegates). ...","html_type":"Boolean"},{"tagname":"cfg","name":"tolerance","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":61}],"doc":"<p>Number of pixels the drag target must be moved before dragging is\nconsidered to have started.</p>\n","type":"Number","default":"5","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-tolerance","owner":"Ext.dd.DragTracker","short_doc":"Number of pixels the drag target must be moved before dragging is\nconsidered to have started. ...","html_type":"Number"},{"tagname":"cfg","name":"trackOver","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":35}],"doc":"<p>Set to true to fire mouseover and mouseout events when the mouse enters or leaves the target element.</p>\n\n<p>This is implicitly set when an <a href=\"#!/api/Ext.dd.DragTracker-cfg-overCls\" rel=\"Ext.dd.DragTracker-cfg-overCls\" class=\"docClass\">overCls</a> is specified.</p>\n\n<p>If the <a href=\"#!/api/Ext.dd.DragTracker-cfg-delegate\" rel=\"Ext.dd.DragTracker-cfg-delegate\" class=\"docClass\">delegate</a> option is used, these events fire only when a delegate element is entered of left.</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-trackOver","owner":"Ext.dd.DragTracker","short_doc":"Set to true to fire mouseover and mouseout events when the mouse enters or leaves the target element. ...","html_type":"Boolean"},{"tagname":"property","name":"active","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":18}],"doc":"<p>Indicates whether the user is currently dragging this tracker.</p>\n","type":"Boolean","default":"false","properties":null,"readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-active","owner":"Ext.dd.DragTracker","short_doc":"Indicates whether the user is currently dragging this tracker. ...","html_type":"Boolean"},{"tagname":"property","name":"constrainModes","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":572}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":572,"type":"Object","default":null,"readonly":null,"id":"property-constrainModes","owner":"Ext.dd.DragTracker","html_type":"Object"},{"tagname":"property","name":"dragTarget","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":25}],"doc":"<p>The element being dragged.</p>\n\n<p>Only valid during drag operations.</p>\n\n<p>If the <a href=\"#!/api/Ext.dd.DragTracker-cfg-delegate\" rel=\"Ext.dd.DragTracker-cfg-delegate\" class=\"docClass\">delegate</a> option is used, this will be the delegate element which was mousedowned.</p>\n","type":"HTMLElement","default":null,"properties":null,"readonly":true,"id":"property-dragTarget","owner":"Ext.dd.DragTracker","short_doc":"The element being dragged. ...","html_type":"HTMLElement"},{"tagname":"method","name":"clearStart","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":444}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":444,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-clearStart","owner":"Ext.dd.DragTracker","short_doc":" ..."},{"tagname":"method","name":"destroy","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":232}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":232,"params":[],"chainable":false,"fires":["<a href=\"#!/api/Ext.dd.DragTracker-event-dragend\" rel=\"Ext.dd.DragTracker-event-dragend\" class=\"docClass\">dragend</a>"],"method_calls":["clearListeners","endDrag"],"id":"method-destroy","owner":"Ext.dd.DragTracker","short_doc":" ..."},{"tagname":"method","name":"disable","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":224}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":224,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-disable","owner":"Ext.dd.DragTracker","short_doc":" ..."},{"tagname":"method","name":"enable","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":228}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":228,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-enable","owner":"Ext.dd.DragTracker","short_doc":" ..."},{"tagname":"method","name":"endDrag","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":410}],"doc":"<p>Stop the drag operation, and remove active mouse listeners.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"e","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.dd.DragTracker-event-dragend\" rel=\"Ext.dd.DragTracker-event-dragend\" class=\"docClass\">dragend</a>"],"method_calls":["clearStart","fireEvent","onEnd"],"id":"method-endDrag","owner":"Ext.dd.DragTracker","short_doc":"Stop the drag operation, and remove active mouse listeners. ..."},{"tagname":"method","name":"getConstrainRegion","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":516}],"doc":"<p>Return the Region into which the drag operation is constrained.\nEither the XY pointer itself can be constrained, or the dragTarget element\nThe private property _constrainRegion is cached until onMouseUp</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getDragCt"],"id":"method-getConstrainRegion","owner":"Ext.dd.DragTracker","short_doc":"Return the Region into which the drag operation is constrained. ..."},{"tagname":"method","name":"getDragCt","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":508}],"doc":"\n","private":true,"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>The DragTracker's encapsulating element.</p>\n","properties":null,"html_type":"Ext.dom.Element"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getDragCt","owner":"Ext.dd.DragTracker","short_doc":" ..."},{"tagname":"method","name":"getDragTarget","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":496}],"doc":"<p>Returns the drag target. This is usually the DragTracker's encapsulating element.</p>\n\n<p>If the <a href=\"#!/api/Ext.dd.DragTracker-cfg-delegate\" rel=\"Ext.dd.DragTracker-cfg-delegate\" class=\"docClass\">delegate</a> option is being used, this may be a child element which matches the\n<a href=\"#!/api/Ext.dd.DragTracker-cfg-delegate\" rel=\"Ext.dd.DragTracker-cfg-delegate\" class=\"docClass\">delegate</a> selector.</p>\n","return":{"type":"Ext.dom.Element","name":"return","doc":"<p>The element currently being tracked.</p>\n","properties":null,"html_type":"Ext.dom.Element"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getDragTarget","owner":"Ext.dd.DragTracker","short_doc":"Returns the drag target. ..."},{"tagname":"method","name":"getOffset","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":544}],"doc":"<p>Returns the X, Y offset of the current mouse position from the mousedown point.</p>\n\n<p>This method may optionally constrain the real offset values, and returns a point coerced in one\nof two modes:</p>\n\n<ul>\n<li><code>point</code>\nThe current mouse position is coerced into the constrainRegion and the resulting position is returned.</li>\n<li><code>dragTarget</code>\nThe new Region of the <a href=\"#!/api/Ext.dd.DragTracker-method-getDragTarget\" rel=\"Ext.dd.DragTracker-method-getDragTarget\" class=\"docClass\">dragTarget</a> is calculated\nbased upon the current mouse position, and then coerced into the constrainRegion. The returned\nmouse position is then adjusted by the same delta as was used to coerce the region.</li>\n</ul>\n\n","params":[{"tagname":"params","type":"String","name":"constrainMode","optional":true,"doc":"<p>If omitted the true mouse position is returned. May be passed\nas <code>point</code> or <code>dragTarget</code>. See above.</p>\n","html_type":"String"}],"return":{"type":"Number[]","name":"return","doc":"<p>The <code>X, Y</code> offset from the mousedown point, optionally constrained.</p>\n","properties":null,"html_type":"Number[]"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getXY"],"id":"method-getOffset","owner":"Ext.dd.DragTracker","short_doc":"Returns the X, Y offset of the current mouse position from the mousedown point. ..."},{"tagname":"method","name":"getXY","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":540}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":540,"params":[{"name":"constrain","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-getXY","owner":"Ext.dd.DragTracker","short_doc":" ..."},{"tagname":"method","name":"initEl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":182}],"doc":"<p>Initializes the DragTracker on a given element.</p>\n","params":[{"tagname":"params","type":"Ext.dom.Element/HTMLElement","name":"el","doc":"<p>The element</p>\n","html_type":"Ext.dom.Element/HTMLElement"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["mon"],"id":"method-initEl","owner":"Ext.dd.DragTracker","short_doc":"Initializes the DragTracker on a given element. ..."},{"tagname":"method","name":"onBeforeStart","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":457}],"doc":"<p>Template method which should be overridden by each DragTracker instance. Called when the user first clicks and\nholds the mouse button down. Return false to disallow the drag</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The event object</p>\n","html_type":"Ext.event.Event"}],"template":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-onBeforeStart","owner":"Ext.dd.DragTracker","short_doc":"Template method which should be overridden by each DragTracker instance. ..."},{"tagname":"method","name":"onDrag","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":477}],"doc":"<p>Template method which should be overridden by each DragTracker instance. Called whenever a drag has been detected.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The event object</p>\n","html_type":"Ext.event.Event"}],"template":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-onDrag","owner":"Ext.dd.DragTracker","short_doc":"Template method which should be overridden by each DragTracker instance. ..."},{"tagname":"method","name":"onDragStart","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":568}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":568,"params":[{"name":"e","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-onDragStart","owner":"Ext.dd.DragTracker","short_doc":" ..."},{"tagname":"method","name":"onEnd","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":486}],"doc":"<p>Template method which should be overridden by each DragTracker instance. Called when a drag operation has been completed\n(e.g. the user clicked and held the mouse down, dragged the element and then released the mouse button)</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The event object</p>\n","html_type":"Ext.event.Event"}],"template":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-onEnd","owner":"Ext.dd.DragTracker","short_doc":"Template method which should be overridden by each DragTracker instance. ..."},{"tagname":"method","name":"onMouseDown","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":295}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":295,"params":[{"name":"e","type":"Object","html_type":"Object"},{"name":"target","type":"Object","html_type":"Object"}],"chainable":false,"fires":["beforedragstart","<a href=\"#!/api/Ext.dd.DragTracker-event-dragstart\" rel=\"Ext.dd.DragTracker-event-dragstart\" class=\"docClass\">dragstart</a>","<a href=\"#!/api/Ext.dd.DragTracker-event-mousedown\" rel=\"Ext.dd.DragTracker-event-mousedown\" class=\"docClass\">mousedown</a>"],"method_calls":["fireEvent","onBeforeStart","triggerStart"],"id":"method-onMouseDown","owner":"Ext.dd.DragTracker","short_doc":" ..."},{"tagname":"method","name":"onMouseMove","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":350}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":350,"params":[{"name":"e","type":"Object","html_type":"Object"},{"name":"target","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.dd.DragTracker-event-drag\" rel=\"Ext.dd.DragTracker-event-drag\" class=\"docClass\">drag</a>","<a href=\"#!/api/Ext.dd.DragTracker-event-dragend\" rel=\"Ext.dd.DragTracker-event-dragend\" class=\"docClass\">dragend</a>","<a href=\"#!/api/Ext.dd.DragTracker-event-dragstart\" rel=\"Ext.dd.DragTracker-event-dragstart\" class=\"docClass\">dragstart</a>","<a href=\"#!/api/Ext.dd.DragTracker-event-mousemove\" rel=\"Ext.dd.DragTracker-event-mousemove\" class=\"docClass\">mousemove</a>","<a href=\"#!/api/Ext.dd.DragTracker-event-mouseout\" rel=\"Ext.dd.DragTracker-event-mouseout\" class=\"docClass\">mouseout</a>","<a href=\"#!/api/Ext.dd.DragTracker-event-mouseup\" rel=\"Ext.dd.DragTracker-event-mouseup\" class=\"docClass\">mouseup</a>"],"method_calls":["fireEvent","onDrag","onMouseUp","triggerStart"],"id":"method-onMouseMove","owner":"Ext.dd.DragTracker","short_doc":" ..."},{"tagname":"method","name":"onMouseOut","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":275}],"doc":"<p>When the pointer exits a tracking element, fire a mouseout.\nThis is mouseleave functionality, but we cannot use mouseleave because we are using \"delegate\" to filter mouse targets</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[{"name":"e","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.dd.DragTracker-event-mouseout\" rel=\"Ext.dd.DragTracker-event-mouseout\" class=\"docClass\">mouseout</a>"],"method_calls":["fireEvent"],"id":"method-onMouseOut","owner":"Ext.dd.DragTracker","short_doc":"When the pointer exits a tracking element, fire a mouseout. ..."},{"tagname":"method","name":"onMouseOver","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":241}],"doc":"<p>When the pointer enters a tracking element, fire a mouseover if the mouse entered from outside.\nThis is mouseenter functionality, but we cannot use mouseenter because we are using \"delegate\" to filter mouse targets</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[{"name":"e","type":"Object","html_type":"Object"},{"name":"target","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.dd.DragTracker-event-mouseover\" rel=\"Ext.dd.DragTracker-event-mouseover\" class=\"docClass\">mouseover</a>"],"method_calls":["fireEvent"],"id":"method-onMouseOver","owner":"Ext.dd.DragTracker","short_doc":"When the pointer enters a tracking element, fire a mouseover if the mouse entered from outside. ..."},{"tagname":"method","name":"onMouseUp","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":385}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":385,"params":[{"name":"e","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.dd.DragTracker-event-dragend\" rel=\"Ext.dd.DragTracker-event-dragend\" class=\"docClass\">dragend</a>","<a href=\"#!/api/Ext.dd.DragTracker-event-mouseout\" rel=\"Ext.dd.DragTracker-event-mouseout\" class=\"docClass\">mouseout</a>","<a href=\"#!/api/Ext.dd.DragTracker-event-mouseup\" rel=\"Ext.dd.DragTracker-event-mouseup\" class=\"docClass\">mouseup</a>"],"method_calls":["endDrag","fireEvent","onMouseOut"],"id":"method-onMouseUp","owner":"Ext.dd.DragTracker","short_doc":" ..."},{"tagname":"method","name":"onStart","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":467}],"doc":"<p>Template method which should be overridden by each DragTracker instance. Called when a drag operation starts\n(e.g. the user has moved the tracked element beyond the specified tolerance)</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The event object</p>\n","html_type":"Ext.event.Event"}],"template":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-onStart","owner":"Ext.dd.DragTracker","short_doc":"Template method which should be overridden by each DragTracker instance. ..."},{"tagname":"method","name":"stopSelect","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":452}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":452,"params":[{"name":"e","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-stopSelect","owner":"Ext.dd.DragTracker","short_doc":" ..."},{"tagname":"method","name":"triggerStart","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":436}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":436,"params":[{"name":"e","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.dd.DragTracker-event-dragstart\" rel=\"Ext.dd.DragTracker-event-dragstart\" class=\"docClass\">dragstart</a>"],"method_calls":["clearStart","fireEvent","onStart"],"id":"method-triggerStart","owner":"Ext.dd.DragTracker","short_doc":" ..."},{"tagname":"event","name":"beforestart","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":141}],"doc":"\n","params":[{"tagname":"params","type":"Object","name":"this","doc":"\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"e","doc":"<p>event object</p>\n","html_type":"Object"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-beforestart","owner":"Ext.dd.DragTracker","short_doc":" ..."},{"tagname":"event","name":"drag","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":159}],"doc":"\n","params":[{"tagname":"params","type":"Object","name":"this","doc":"\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"e","doc":"<p>event object</p>\n","html_type":"Object"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-drag","owner":"Ext.dd.DragTracker","short_doc":" ..."},{"tagname":"event","name":"dragend","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":153}],"doc":"\n","params":[{"tagname":"params","type":"Object","name":"this","doc":"\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"e","doc":"<p>event object</p>\n","html_type":"Object"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-dragend","owner":"Ext.dd.DragTracker","short_doc":" ..."},{"tagname":"event","name":"dragstart","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":147}],"doc":"\n","params":[{"tagname":"params","type":"Object","name":"this","doc":"\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"e","doc":"<p>event object</p>\n","html_type":"Object"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-dragstart","owner":"Ext.dd.DragTracker","short_doc":" ..."},{"tagname":"event","name":"mousedown","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":116}],"doc":"<p>Fires when the mouse button is pressed down, but before a drag operation begins. The\ndrag operation begins after either the mouse has been moved by <a href=\"#!/api/Ext.dd.DragTracker-cfg-tolerance\" rel=\"Ext.dd.DragTracker-cfg-tolerance\" class=\"docClass\">tolerance</a> pixels,\nor after the <a href=\"#!/api/Ext.dd.DragTracker-cfg-autoStart\" rel=\"Ext.dd.DragTracker-cfg-autoStart\" class=\"docClass\">autoStart</a> timer fires.</p>\n\n<p>Return <code>false</code> to veto the drag operation.</p>\n","params":[{"tagname":"params","type":"Object","name":"this","doc":"\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"e","doc":"<p>event object</p>\n","html_type":"Object"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-mousedown","owner":"Ext.dd.DragTracker","short_doc":"Fires when the mouse button is pressed down, but before a drag operation begins. ..."},{"tagname":"event","name":"mousemove","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":134}],"doc":"<p>Fired when the mouse is moved. Returning false cancels the drag operation.</p>\n","params":[{"tagname":"params","type":"Object","name":"this","doc":"\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"e","doc":"<p>event object</p>\n","html_type":"Object"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-mousemove","owner":"Ext.dd.DragTracker","short_doc":"Fired when the mouse is moved. ..."},{"tagname":"event","name":"mouseout","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":105}],"doc":"<p>Fires when the mouse exits the DragTracker's target element (or if <a href=\"#!/api/Ext.dd.DragTracker-cfg-delegate\" rel=\"Ext.dd.DragTracker-cfg-delegate\" class=\"docClass\">delegate</a> is\nused, when the mouse exits a delegate element).</p>\n\n<p><strong>Only available when <a href=\"#!/api/Ext.dd.DragTracker-cfg-trackOver\" rel=\"Ext.dd.DragTracker-cfg-trackOver\" class=\"docClass\">trackOver</a> is <code>true</code></strong></p>\n","params":[{"tagname":"params","type":"Object","name":"this","doc":"\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"e","doc":"<p>event object</p>\n","html_type":"Object"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-mouseout","owner":"Ext.dd.DragTracker","short_doc":"Fires when the mouse exits the DragTracker's target element (or if delegate is\nused, when the mouse exits a delegate ..."},{"tagname":"event","name":"mouseover","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":93}],"doc":"<p>Fires when the mouse enters the DragTracker's target element (or if <a href=\"#!/api/Ext.dd.DragTracker-cfg-delegate\" rel=\"Ext.dd.DragTracker-cfg-delegate\" class=\"docClass\">delegate</a> is\nused, when the mouse enters a delegate element).</p>\n\n<p><strong>Only available when <a href=\"#!/api/Ext.dd.DragTracker-cfg-trackOver\" rel=\"Ext.dd.DragTracker-cfg-trackOver\" class=\"docClass\">trackOver</a> is <code>true</code></strong></p>\n","params":[{"tagname":"params","type":"Object","name":"this","doc":"\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"e","doc":"<p>event object</p>\n","html_type":"Object"},{"tagname":"params","type":"HTMLElement","name":"target","doc":"<p>The element mouseovered.</p>\n","html_type":"HTMLElement"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-mouseover","owner":"Ext.dd.DragTracker","short_doc":"Fires when the mouse enters the DragTracker's target element (or if delegate is\nused, when the mouse enters a delegat..."},{"tagname":"event","name":"mouseup","autodetected":{},"files":[{"filename":"D:/_Projects/Personal/ExtJS/ext-5.0.0/src/dd/DragTracker.js","linenr":128}],"doc":"\n","params":[{"tagname":"params","type":"Object","name":"this","doc":"\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"e","doc":"<p>event object</p>\n","html_type":"Object"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-mouseup","owner":"Ext.dd.DragTracker","short_doc":" ..."}],"code_type":"ext_define","id":"class-Ext.dd.DragTracker","short_doc":"A DragTracker listens for drag events on an Element and fires events at the start and end of the drag,\nas well as dur..."}