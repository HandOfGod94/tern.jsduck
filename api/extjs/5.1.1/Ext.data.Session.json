{"tagname":"class","name":"Ext.data.Session","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":1}],"doc":"<p>This class manages models and their associations. Instances of <code>Session</code> are typically\nassociated with some <code>Component</code> (perhaps the Viewport or a Window) and then used by\ntheir <code><a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">view models</a></code> to enable data binding.</p>\n\n<p>The primary job of a Session is to manage a collection of records of many different\ntypes and their associations. This often starts by loading records when requested (via\nbind - see below) and culminates when it is time to save to the server.</p>\n\n<p>Because the Session tracks all records it loads, it ensures that for any given type of\nmodel, only one record exists with a given <code>id</code>. This means that all edits of that\nrecord are properly targeted at that one instance.</p>\n\n<p>Similarly, when associations are loaded, the <code><a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a></code> created to hold the\nassociated records is tracked by the Session. So all requests for the \"OrderItems\" of\na particular Order id will result in the same Store. Adding and removing items from\nthat Order then is sure to remain consistent.</p>\n\n<h1>Data</h1>\n\n<p>Since the Session is managing all this data, there are several methods it provides\nto give convenient access to that data. The most important of these is <code>update</code> and\n<code>getChanges</code>.</p>\n\n<p>The <code>update</code> and <code>getChanges</code> methods both operate on object that contains a summary\nof records and associations and different CRUD operations.</p>\n\n<h2>Saving</h2>\n\n<p>There are two basic ways to save the contents of a Session: <code>getChanges</code> and\n<code>getSaveBatch</code>. We've already seen <code>getChanges</code>. The data contained in the CRUD object\ncan be translated into whatever shape is needed by the server.</p>\n\n<p>To leverage the <code><a href=\"#!/api/Ext.data.Model-cfg-proxy\" rel=\"Ext.data.Model-cfg-proxy\" class=\"docClass\">proxy</a></code> facilities defined by each Model\nclass, there is the <code>getSaveBatch</code> method. That method returns an <code><a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">Ext.data.Batch</a></code>\nobject populated with the necessary <code>create</code>, <code>update</code> and <code>destory</code> operations to\nsave all of the changes in the Session.</p>\n","since":"5.0.0","aliases":{},"alternateClassNames":[],"extends":"Ext.Base","mixins":[],"requires":["Ext.data.schema.Schema","Ext.data.Batch","Ext.data.matrix.Matrix","Ext.data.session.ChangesVisitor","Ext.data.session.ChildChangesVisitor","Ext.data.session.BatchVisitor"],"uses":[],"members":[{"tagname":"cfg","name":"autoDestroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":65}],"doc":"<p><code>true</code> to automatically destroy this session when a component it is attached\nto is destroyed. This should be set to false if the session is intended to be\nused across multiple root level components.</p>\n","type":"Boolean","default":"true","properties":null,"since":"5.0.1","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-autoDestroy","owner":"Ext.data.Session","short_doc":"true to automatically destroy this session when a component it is attached\nto is destroyed. ...","html_type":"Boolean"},{"tagname":"cfg","name":"crudProperties","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":75}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":75,"type":"Object","default":"{create: 'C', read: 'R', update: 'U', drop: 'D'}","accessor":true,"evented":null,"id":"cfg-crudProperties","owner":"Ext.data.Session","short_doc":" ...","html_type":"Object"},{"tagname":"cfg","name":"parent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":59}],"doc":"<p>The parent session for this session.</p>\n","type":"Ext.data.Session","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-parent","owner":"Ext.data.Session","html_type":"<a href=\"#!/api/Ext.data.Session\" rel=\"Ext.data.Session\" class=\"docClass\">Ext.data.Session</a>"},{"tagname":"cfg","name":"schema","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":54}],"doc":"\n","type":"String/Ext.data.schema.Schema","default":"'default'","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-schema","owner":"Ext.data.Session","short_doc":" ...","html_type":"String/<a href=\"#!/api/Ext.data.schema.Schema\" rel=\"Ext.data.schema.Schema\" class=\"docClass\">Ext.data.schema.Schema</a>"},{"tagname":"property","name":"$className","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1025}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"String","default":"'Ext.Base'","readonly":null,"id":"property-S-className","owner":"Ext.Base","short_doc":" ...","html_type":"String"},{"tagname":"property","name":"$configPrefixed","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1037}],"doc":"<p>The value <code>true</code> causes <code>config</code> values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\") character. A value of <code>false</code>\nstores <code>config</code> values as properties using their exact name (no prefix).</p>\n","type":"Boolean","default":"true","properties":null,"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-S-configPrefixed","owner":"Ext.Base","overrides":[{"name":"$configPrefixed","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-S-configPrefixed\" rel=\"Ext.Component-property-S-configPrefixed\" class=\"docClass\">Ext.Component.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-property-S-configPrefixed\" rel=\"Ext.layout.Layout-property-S-configPrefixed\" class=\"docClass\">Ext.layout.Layout.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-property-S-configPrefixed\" rel=\"Ext.data.AbstractStore-property-S-configPrefixed\" class=\"docClass\">Ext.data.AbstractStore.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.layout.container.boxOverflow.None","link":"<a href=\"#!/api/Ext.layout.container.boxOverflow.None-property-S-configPrefixed\" rel=\"Ext.layout.container.boxOverflow.None-property-S-configPrefixed\" class=\"docClass\">Ext.layout.container.boxOverflow.None.$configPrefixed</a>"}],"short_doc":"The value true causes config values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\")...","html_type":"Boolean"},{"tagname":"property","name":"$configStrict","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1047}],"doc":"<p>The value <code>true</code> instructs the <code>initConfig</code> method to only honor values for\nproperties declared in the <code>config</code> block of a class. When <code>false</code>, properties\nthat are not declared in a <code>config</code> block will be placed on the instance.</p>\n","type":"Boolean","default":"true","properties":null,"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-S-configStrict","owner":"Ext.Base","overrides":[{"name":"$configStrict","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-S-configStrict\" rel=\"Ext.Component-property-S-configStrict\" class=\"docClass\">Ext.Component.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-property-S-configStrict\" rel=\"Ext.layout.Layout-property-S-configStrict\" class=\"docClass\">Ext.layout.Layout.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-property-S-configStrict\" rel=\"Ext.data.AbstractStore-property-S-configStrict\" class=\"docClass\">Ext.data.AbstractStore.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.layout.container.boxOverflow.None","link":"<a href=\"#!/api/Ext.layout.container.boxOverflow.None-property-S-configStrict\" rel=\"Ext.layout.container.boxOverflow.None-property-S-configStrict\" class=\"docClass\">Ext.layout.container.boxOverflow.None.$configStrict</a>"}],"short_doc":"The value true instructs the initConfig method to only honor values for\nproperties declared in the config block of a ...","html_type":"Boolean"},{"tagname":"property","name":"crudKeys","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":99}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":99,"type":"Object","default":"{C: 1, R: 1, U: 1, D: 1}","readonly":null,"id":"property-crudKeys","owner":"Ext.data.Session","short_doc":" ...","html_type":"Object"},{"tagname":"property","name":"crudOperations","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":85}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":85,"type":"Array","default":"[{type: 'R', entityMethod: 'readEntities'}, {type: 'C', entityMethod: 'createEntities'}, {type: 'U', entityMethod: 'updateEntities'}, {type: 'D', entityMethod: 'dropEntities'}]","readonly":null,"id":"property-crudOperations","owner":"Ext.data.Session","short_doc":" ...","html_type":"Array"},{"tagname":"property","name":"destroyed","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":83}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":83,"type":"Boolean","default":"false","readonly":null,"id":"property-destroyed","owner":"Ext.data.Session","short_doc":" ...","html_type":"Boolean"},{"tagname":"property","name":"isConfiguring","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1057}],"doc":"<p>This property is set to <code>true</code> during the call to <code>initConfig</code>.</p>\n","type":"Boolean","default":"false","properties":null,"protected":true,"readonly":true,"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-isConfiguring","owner":"Ext.Base","short_doc":"This property is set to true during the call to initConfig. ...","html_type":"Boolean"},{"tagname":"property","name":"isFirstInstance","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1066}],"doc":"<p>This property is set to <code>true</code> if this instance is the first of its class.</p>\n","type":"Boolean","default":"false","properties":null,"protected":true,"readonly":true,"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-isFirstInstance","owner":"Ext.Base","short_doc":"This property is set to true if this instance is the first of its class. ...","html_type":"Boolean"},{"tagname":"property","name":"isInstance","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1028}],"doc":"<p>This value is <code>true</code> and is used to identify plain objects from instances of\na defined class.</p>\n","type":"Boolean","default":"true","properties":null,"protected":true,"readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-isInstance","owner":"Ext.Base","short_doc":"This value is true and is used to identify plain objects from instances of\na defined class. ...","html_type":"Boolean"},{"tagname":"property","name":"isSession","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":51}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":51,"type":"Boolean","default":"true","readonly":null,"id":"property-isSession","owner":"Ext.data.Session","short_doc":" ...","html_type":"Boolean"},{"tagname":"property","name":"privates","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":520}],"doc":"<hr />\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"type":"Object","default":null,"readonly":null,"id":"property-privates","owner":"Ext.data.Session","html_type":"Object"},{"tagname":"property","name":"self","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1344}],"doc":"<p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n","type":"Ext.Class","default":null,"properties":null,"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-self","owner":"Ext.Base","short_doc":"Get the reference to the current class from which this object was instantiated. ...","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},{"tagname":"property","name":"$onExtended","autodetected":{"inheritdoc":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":370}],"doc":"\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"type":"Array","default":"[]","readonly":null,"id":"static-property-S-onExtended","owner":"Ext.Base","short_doc":" ...","html_type":"Array"},{"tagname":"method","name":"constructor","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":106}],"doc":"\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":106,"params":[{"name":"config","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["initConfig"],"id":"method-constructor","owner":"Ext.data.Session","return":{"type":"Ext.data.Session","doc":"\n","html_type":"<a href=\"#!/api/Ext.data.Session\" rel=\"Ext.data.Session\" class=\"docClass\">Ext.data.Session</a>"},"short_doc":" ..."},{"tagname":"method","name":"add","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":522}],"doc":"<p>Add a record instance to this session. Called by model.</p>\n","params":[{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The record.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getEntry","registerReferences"],"id":"method-add","owner":"Ext.data.Session","short_doc":"Add a record instance to this session. ..."},{"tagname":"method","name":"addDeprecations","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":115}],"doc":"<p>This method applies a versioned, deprecation declaration to this class. This\nis typically called by the <code>deprecated</code> config.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"deprecations","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-addDeprecations","owner":"Ext.Base","short_doc":"This method applies a versioned, deprecation declaration to this class. ..."},{"tagname":"method","name":"adopt","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":171}],"doc":"<p>Adds an existing record instance to the session. The record\nmay not belong to another session. The record cannot be a phantom record, instead\nuse <a href=\"#!/api/Ext.data.Session-method-createRecord\" rel=\"Ext.data.Session-method-createRecord\" class=\"docClass\">createRecord</a>.</p>\n","params":[{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The record to adopt.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["add","checkModelType"],"id":"method-adopt","owner":"Ext.data.Session","short_doc":"Adds an existing record instance to the session. ..."},{"tagname":"method","name":"afterErase","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":549}],"doc":"<p>Template method, will be called by Model after a record is dropped.</p>\n","params":[{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The record.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["evict"],"id":"method-afterErase","owner":"Ext.data.Session","short_doc":"Template method, will be called by Model after a record is dropped. ..."},{"tagname":"method","name":"applySchema","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":559}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"schema","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-applySchema","owner":"Ext.data.Session","short_doc":" ..."},{"tagname":"method","name":"callOverridden","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1581}],"doc":"<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n","params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n","html_type":"Array/Arguments"}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the overridden method</p>\n","properties":null,"html_type":"Object"},"protected":true,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-callOverridden","owner":"Ext.Base","short_doc":"Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi..."},{"tagname":"method","name":"callParent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1143}],"doc":"<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10));     // alerts 10\n alert(My.Derived2.method(10)); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n","protected":true,"params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n","html_type":"Array/Arguments"}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the parent method</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-callParent","owner":"Ext.Base","short_doc":"Call the \"parent\" method of the current method. ..."},{"tagname":"method","name":"callSuper","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1258}],"doc":"<p>This method is used by an override to call the superclass method but bypass any\noverridden method. This is often done to \"patch\" a method that contains a bug\nbut for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function () {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     extend: 'Ext.some.Class',\n\n     method: function () {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>Ext.some.DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.patches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function () {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <code>callParent</code> to call the superclass <code>method</code> since\nthat would call the overridden method containing the bug. In other words, the\nabove patch would only produce \"Fixed\" then \"Good\" in the console log, whereas,\nusing <code>callParent</code> would produce \"Fixed\" then \"Bad\" then \"Good\".</p>\n","protected":true,"params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n","html_type":"Array/Arguments"}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the superclass method</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-callSuper","owner":"Ext.Base","short_doc":"This method is used by an override to call the superclass method but bypass any\noverridden method. ..."},{"tagname":"method","name":"checkModelType","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":567}],"doc":"<p>Checks if the model type being referenced is valid for this session. That includes checking\nif the model name is correct &amp; is one used in this <a href=\"#!/api/Ext.data.Session-cfg-schema\" rel=\"Ext.data.Session-cfg-schema\" class=\"docClass\">schema</a> for this session. Will raise\nan exception if the model type is not correct.</p>\n","params":[{"tagname":"params","type":"String/Ext.Class","name":"name","doc":"<p>The model name or model type.</p>\n","html_type":"String/<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getSchema"],"id":"method-checkModelType","owner":"Ext.data.Session","short_doc":"Checks if the model type being referenced is valid for this session. ..."},{"tagname":"method","name":"commit","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":199}],"doc":"<p>Marks the session as \"clean\" by calling <a href=\"#!/api/Ext.data.Model-method-commit\" rel=\"Ext.data.Model-method-commit\" class=\"docClass\">Ext.data.Model.commit</a> on each record\nthat is known to the session.</p>\n\n<ul>\n<li>Phantom records will no longer be phantom.</li>\n<li>Modified records will no longer be dirty.</li>\n<li>Dropped records will be erased.</li>\n</ul>\n\n","since":"5.1.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-commit","owner":"Ext.data.Session","short_doc":"Marks the session as \"clean\" by calling Ext.data.Model.commit on each record\nthat is known to the session. ..."},{"tagname":"method","name":"createEntities","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":588}],"doc":"<p>Process a create block of entities from the <a href=\"#!/api/Ext.data.Session-method-update\" rel=\"Ext.data.Session-method-update\" class=\"docClass\">update</a> method.</p>\n","params":[{"tagname":"params","type":"Ext.Class","name":"entityType","doc":"<p>The entity type.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},{"tagname":"params","type":"Object[]","name":"items","doc":"<p>The data objects to create.</p>\n","html_type":"Object[]"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["createRecord","onInvalidEntityCreate","peekRecord"],"id":"method-createEntities","owner":"Ext.data.Session","short_doc":"Process a create block of entities from the update method. ..."},{"tagname":"method","name":"createRecord","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":224}],"doc":"<p>Creates a new record and tracks it in this session.</p>\n","params":[{"tagname":"params","type":"String/Ext.Class","name":"type","doc":"<p>The <code>entityName</code> or the actual class of record to create.</p>\n","html_type":"String/<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},{"tagname":"params","type":"Object","name":"data","optional":true,"doc":"<p>The data for the record.</p>\n","html_type":"Object"}],"return":{"type":"Ext.data.Model","name":"return","doc":"<p>The new record.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["checkModelType","getParent","getSchema"],"id":"method-createRecord","owner":"Ext.data.Session","short_doc":"Creates a new record and tracks it in this session. ..."},{"tagname":"method","name":"destroy","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":143}],"doc":"<p>This method is called to cleanup an object and its resources. After calling\nthis method, the object should not be used any further.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":143,"params":[],"chainable":false,"fires":[],"method_calls":["callParent","setSchema"],"id":"method-destroy","owner":"Ext.data.Session","protected":true,"overrides":[{"name":"destroy","owner":"Ext.Base","link":"<a href=\"#!/api/Ext.Base-method-destroy\" rel=\"Ext.Base-method-destroy\" class=\"docClass\">Ext.Base.destroy</a>"}],"short_doc":"This method is called to cleanup an object and its resources. ..."},{"tagname":"method","name":"dropEntities","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":614}],"doc":"<p>Process a drop block for entities from the <a href=\"#!/api/Ext.data.Session-method-update\" rel=\"Ext.data.Session-method-update\" class=\"docClass\">update</a> method.</p>\n","params":[{"tagname":"params","type":"Ext.Class","name":"entityType","doc":"<p>The entity type.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},{"tagname":"params","type":"Object[]","name":"ids","doc":"<p>The identifiers of the items to drop.</p>\n","html_type":"Object[]"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["onInvalidEntityDrop","peekRecord"],"id":"method-dropEntities","owner":"Ext.data.Session","short_doc":"Process a drop block for entities from the update method. ..."},{"tagname":"method","name":"evict","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":644}],"doc":"<p>Remove a record and any references from the session.</p>\n","params":[{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The record</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-evict","owner":"Ext.data.Session","short_doc":"Remove a record and any references from the session. ..."},{"tagname":"method","name":"getAutoDestroy","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.Session-cfg-autoDestroy\" rel=\"Ext.data.Session-cfg-autoDestroy\" class=\"docClass\">autoDestroy</a>.</p>\n","params":[],"return":{"type":"Boolean","doc":"\n","html_type":"Boolean"},"id":"method-getAutoDestroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":65}],"properties":null,"since":"5.0.1","static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.Session","short_doc":"Returns the value of autoDestroy. ..."},{"tagname":"method","name":"getChanges","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":250}],"doc":"<p>Returns an object describing all of the modified fields, created or dropped records\nand many-to-many association changes maintained by this session.</p>\n","return":{"type":"Object","name":"return","doc":"<p>An object in the CRUD format (see the intro docs). <code>null</code> if there are no changes.</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["visitData"],"id":"method-getChanges","owner":"Ext.data.Session","short_doc":"Returns an object describing all of the modified fields, created or dropped records\nand many-to-many association chan..."},{"tagname":"method","name":"getChangesForParent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":262}],"doc":"<p>The same functionality as <a href=\"#!/api/Ext.data.Session-method-getChanges\" rel=\"Ext.data.Session-method-getChanges\" class=\"docClass\">getChanges</a>, however we also take into account our\nparent session.</p>\n","return":{"type":"Object","name":"return","doc":"<p>An object in the CRUD format (see the intro docs). <code>null</code> if there are no changes.</p>\n","properties":null,"html_type":"Object"},"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["visitData"],"id":"method-getChangesForParent","owner":"Ext.data.Session","short_doc":"The same functionality as getChanges, however we also take into account our\nparent session. ..."},{"tagname":"method","name":"getConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1431}],"doc":"<p>Returns a specified config property value. If the name parameter is not passed,\nall current configuration options will be returned as key value pairs.</p>\n","params":[{"tagname":"params","type":"String","name":"name","optional":true,"doc":"<p>The name of the config property to get.</p>\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"peek","default":"false","optional":true,"doc":"<p><code>true</code> to peek at the raw value without calling the getter.</p>\n","html_type":"Boolean"}],"return":{"type":"Object","name":"return","doc":"<p>The config property value.</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-getConfig","owner":"Ext.Base","short_doc":"Returns a specified config property value. ..."},{"tagname":"method","name":"getCrudProperties","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.Session-cfg-crudProperties\" rel=\"Ext.data.Session-cfg-crudProperties\" class=\"docClass\">crudProperties</a>.</p>\n","params":[],"return":{"type":"Object","doc":"\n","html_type":"Object"},"id":"method-getCrudProperties","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":75}],"static":null,"private":null,"inheritable":null,"linenr":75,"owner":"Ext.data.Session","short_doc":"Returns the value of crudProperties. ..."},{"tagname":"method","name":"getCurrentConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1471}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getConfigurator"],"id":"method-getCurrentConfig","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"getEntityList","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":661}],"doc":"<p>Transforms a list of ids into a list of records for a particular type.</p>\n","params":[{"tagname":"params","type":"Ext.Class","name":"entityType","doc":"<p>The entity type.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},{"tagname":"params","type":"Object[]","name":"ids","doc":"<p>The ids to transform.</p>\n","html_type":"Object[]"}],"return":{"type":"Ext.data.Model[]","name":"return","doc":"<p>The models corresponding to the ids.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["onInvalidAssociationEntity","peekRecord"],"id":"method-getEntityList","owner":"Ext.data.Session","short_doc":"Transforms a list of ids into a list of records for a particular type. ..."},{"tagname":"method","name":"getEntry","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":688}],"doc":"<p>Return an entry for the data property for a particular type/id.</p>\n","params":[{"tagname":"params","type":"String/Ext.Class","name":"type","doc":"<p>The entity name or model type.</p>\n","html_type":"String/<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},{"tagname":"params","type":"Object","name":"id","doc":"<p>The id of the record</p>\n","html_type":"Object"}],"return":{"type":"Object","name":"return","doc":"<p>The data entry.</p>\n","properties":null,"html_type":"Object"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getSchema"],"id":"method-getEntry","owner":"Ext.data.Session","short_doc":"Return an entry for the data property for a particular type/id. ..."},{"tagname":"method","name":"getInitialConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1488}],"doc":"<p>Returns the initial configuration passed to constructor when instantiating\nthis class.</p>\n","params":[{"tagname":"params","type":"String","name":"name","optional":true,"doc":"<p>Name of the config option to return.</p>\n","html_type":"String"}],"return":{"type":"Object/Mixed","name":"return","doc":"<p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n","properties":null,"html_type":"Object/Mixed"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getInitialConfig","owner":"Ext.Base","short_doc":"Returns the initial configuration passed to constructor when instantiating\nthis class. ..."},{"tagname":"method","name":"getModelIdentifier","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":785}],"doc":"<p>Gets a user friendly identifier for a Model.</p>\n","params":[{"tagname":"params","type":"Ext.Class","name":"entityType","doc":"<p>The entity type.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},{"tagname":"params","type":"Object","name":"id","doc":"<p>The id of the entity.</p>\n","html_type":"Object"}],"return":{"type":"String","name":"return","doc":"<p>The identifier.</p>\n","properties":null,"html_type":"String"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getModelIdentifier","owner":"Ext.data.Session","short_doc":"Gets a user friendly identifier for a Model. ..."},{"tagname":"method","name":"getParent","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.Session-cfg-parent\" rel=\"Ext.data.Session-cfg-parent\" class=\"docClass\">parent</a>.</p>\n","params":[],"return":{"type":"Ext.data.Session","doc":"\n","html_type":"<a href=\"#!/api/Ext.data.Session\" rel=\"Ext.data.Session\" class=\"docClass\">Ext.data.Session</a>"},"id":"method-getParent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":59}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.Session","short_doc":"Returns the value of parent. ..."},{"tagname":"method","name":"getRecord","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":276}],"doc":"<p>Get a cached record from the session. If the record does not exist, it will\nbe created. If the <code>autoLoad</code> parameter is not set to <code>false</code>, the record will\nbe loaded via the <a href=\"#!/api/Ext.data.Model-cfg-proxy\" rel=\"Ext.data.Model-cfg-proxy\" class=\"docClass\">proxy</a> of the Model.</p>\n\n<p>If this session is configured with a <code><a href=\"#!/api/Ext.data.Session-cfg-parent\" rel=\"Ext.data.Session-cfg-parent\" class=\"docClass\">parent</a></code> session, a <em>copy</em> of any existing record\nin the <code>parent</code> will be adopted into this session. If the <code>parent</code> does not contain the record,\nthe record will be created and <em>not</em> inserted into the parent.</p>\n\n<p>See also <a href=\"#!/api/Ext.data.Session-method-peekRecord\" rel=\"Ext.data.Session-method-peekRecord\" class=\"docClass\">peekRecord</a>.</p>\n","params":[{"tagname":"params","type":"String/Ext.Class","name":"type","doc":"<p>The <code>entityName</code> or the actual class of record to create.</p>\n","html_type":"String/<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},{"tagname":"params","type":"Object","name":"id","doc":"<p>The id of the record.</p>\n","html_type":"Object"},{"tagname":"params","type":"Boolean/Object","name":"autoLoad","default":"true","optional":true,"doc":"<p><code>false</code> to prevent the record from being loaded if\nit does not exist. If this parameter is an object, it will be passed to the <a href=\"#!/api/Ext.data.Model-method-load\" rel=\"Ext.data.Model-method-load\" class=\"docClass\">Ext.data.Model.load</a> call.</p>\n","html_type":"Boolean/Object"}],"return":{"type":"Ext.data.Model","name":"return","doc":"<p>The record.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getParent","getSchema","peekRecord"],"id":"method-getRecord","owner":"Ext.data.Session","short_doc":"Get a cached record from the session. ..."},{"tagname":"method","name":"getSaveBatch","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":317}],"doc":"<p>Returns an <code><a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">Ext.data.Batch</a></code> containing the <code><a href=\"#!/api/Ext.data.operation.Operation\" rel=\"Ext.data.operation.Operation\" class=\"docClass\">Ext.data.operation.Operation</a></code> instances\nthat are needed to save all of the changes in this session. This sorting is based\non operation type, associations and foreign keys. Generally speaking the operations\nin the batch can be committed to a server sequentially and the server will never be\nsent a request with an invalid (client-generated) id in a foreign key field.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"sort","default":"true","optional":true,"doc":"<p>Pass <code>false</code> to disable the batch operation sort.</p>\n","html_type":"Boolean"}],"return":{"type":"Ext.data.Batch","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">Ext.data.Batch</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["visitData"],"id":"method-getSaveBatch","owner":"Ext.data.Session","short_doc":"Returns an Ext.data.Batch containing the Ext.data.operation.Operation instances\nthat are needed to save all of the ch..."},{"tagname":"method","name":"getSchema","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.Session-cfg-schema\" rel=\"Ext.data.Session-cfg-schema\" class=\"docClass\">schema</a>.</p>\n","params":[],"return":{"type":"String/Ext.data.schema.Schema","doc":"\n","html_type":"String/<a href=\"#!/api/Ext.data.schema.Schema\" rel=\"Ext.data.schema.Schema\" class=\"docClass\">Ext.data.schema.Schema</a>"},"id":"method-getSchema","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":54}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.Session","short_doc":"Returns the value of schema. ..."},{"tagname":"method","name":"hasConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1480}],"doc":"\n","private":true,"params":[{"tagname":"params","name":"config","doc":"\n","type":"Object","html_type":"Object"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-hasConfig","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"initConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1393}],"doc":"<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n","protected":true,"params":[{"tagname":"params","type":"Object","name":"config","doc":"\n","html_type":"Object"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["getConfigurator"],"id":"method-initConfig","owner":"Ext.Base","short_doc":"Initialize configuration for this class. ..."},{"tagname":"method","name":"link","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1508}],"doc":"<p>Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (via <code><a href=\"#!/api/Ext.Base-method-destroy\" rel=\"Ext.Base-method-destroy\" class=\"docClass\">destroy</a></code>).</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"\n","html_type":"String"},{"tagname":"params","type":"Object","name":"value","doc":"\n","html_type":"Object"}],"return":{"type":"Object","name":"return","doc":"<p>The <code>value</code> passed.</p>\n","properties":null,"html_type":"Object"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-link","owner":"Ext.Base","short_doc":"Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (vi..."},{"tagname":"method","name":"onInvalidAssociationEntity","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":335}],"doc":"<p>Triggered when an associated item from <a href=\"#!/api/Ext.data.Session-method-update\" rel=\"Ext.data.Session-method-update\" class=\"docClass\">update</a> references a record\nthat does not exist in the session.</p>\n","params":[{"tagname":"params","type":"Ext.Class","name":"entityType","doc":"<p>The entity type.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},{"tagname":"params","type":"Object","name":"id","doc":"<p>The id of the model.</p>\n","html_type":"Object"}],"protected":true,"template":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getModelIdentifier"],"id":"method-onInvalidAssociationEntity","owner":"Ext.data.Session","short_doc":"Triggered when an associated item from update references a record\nthat does not exist in the session. ..."},{"tagname":"method","name":"onInvalidEntityCreate","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":348}],"doc":"<p>Triggered when an drop block from <a href=\"#!/api/Ext.data.Session-method-update\" rel=\"Ext.data.Session-method-update\" class=\"docClass\">update</a> tries to create a record\nthat already exists.</p>\n","params":[{"tagname":"params","type":"Ext.Class","name":"entityType","doc":"<p>The entity type.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},{"tagname":"params","type":"Object","name":"id","doc":"<p>The id of the model.</p>\n","html_type":"Object"}],"protected":true,"template":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getModelIdentifier"],"id":"method-onInvalidEntityCreate","owner":"Ext.data.Session","short_doc":"Triggered when an drop block from update tries to create a record\nthat already exists. ..."},{"tagname":"method","name":"onInvalidEntityDrop","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":361}],"doc":"<p>Triggered when an drop block from <a href=\"#!/api/Ext.data.Session-method-update\" rel=\"Ext.data.Session-method-update\" class=\"docClass\">update</a> references a record\nthat does not exist in the session.</p>\n","params":[{"tagname":"params","type":"Ext.Class","name":"entityType","doc":"<p>The entity type.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},{"tagname":"params","type":"Object","name":"id","doc":"<p>The id of the model.</p>\n","html_type":"Object"}],"protected":true,"template":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getModelIdentifier"],"id":"method-onInvalidEntityDrop","owner":"Ext.data.Session","short_doc":"Triggered when an drop block from update references a record\nthat does not exist in the session. ..."},{"tagname":"method","name":"onInvalidEntityRead","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":374}],"doc":"<p>Triggered when an drop block from <a href=\"#!/api/Ext.data.Session-method-update\" rel=\"Ext.data.Session-method-update\" class=\"docClass\">update</a> tries to create a record\nthat already exists.</p>\n","params":[{"tagname":"params","type":"Ext.Class","name":"entityType","doc":"<p>The entity type.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},{"tagname":"params","type":"Object","name":"id","doc":"<p>The id of the model.</p>\n","html_type":"Object"}],"protected":true,"template":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getModelIdentifier"],"id":"method-onInvalidEntityRead","owner":"Ext.data.Session","short_doc":"Triggered when an drop block from update tries to create a record\nthat already exists. ..."},{"tagname":"method","name":"onInvalidEntityUpdate","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":387}],"doc":"<p>Triggered when an update block from <a href=\"#!/api/Ext.data.Session-method-update\" rel=\"Ext.data.Session-method-update\" class=\"docClass\">update</a> references a record\nthat does not exist in the session.</p>\n","params":[{"tagname":"params","type":"Ext.Class","name":"entityType","doc":"<p>The entity type.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},{"tagname":"params","type":"Object","name":"id","doc":"<p>The id of the model.</p>\n","html_type":"Object"},{"tagname":"params","type":"Boolean","name":"dropped","doc":"<p><code>true</code> if the record was dropped.</p>\n","html_type":"Boolean"}],"protected":true,"template":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getModelIdentifier"],"id":"method-onInvalidEntityUpdate","owner":"Ext.data.Session","short_doc":"Triggered when an update block from update references a record\nthat does not exist in the session. ..."},{"tagname":"method","name":"peekRecord","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":405}],"doc":"<p>Gets an existing record from the session. The record will <em>not</em> be created if it does\nnot exist.</p>\n\n<p>See also: <a href=\"#!/api/Ext.data.Session-method-getRecord\" rel=\"Ext.data.Session-method-getRecord\" class=\"docClass\">getRecord</a>.</p>\n","params":[{"tagname":"params","type":"String/Ext.Class","name":"type","doc":"<p>The <code>entityName</code> or the actual class of record to create.</p>\n","html_type":"String/<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},{"tagname":"params","type":"Object","name":"id","doc":"<p>The id of the record.</p>\n","html_type":"Object"},{"tagname":"params","type":"Boolean","name":"deep","default":"false","optional":true,"doc":"<p><code>true</code> to consult</p>\n","html_type":"Boolean"}],"return":{"type":"Ext.data.Model","name":"return","doc":"<p>The record, <code>null</code> if it does not exist.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["checkModelType","getParent","getSchema"],"id":"method-peekRecord","owner":"Ext.data.Session","short_doc":"Gets an existing record from the session. ..."},{"tagname":"method","name":"readEntities","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":893}],"doc":"<p>Process a read block of entities from the <a href=\"#!/api/Ext.data.Session-method-update\" rel=\"Ext.data.Session-method-update\" class=\"docClass\">update</a> method.</p>\n","params":[{"tagname":"params","type":"Ext.Class","name":"entityType","doc":"<p>The entity type.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},{"tagname":"params","type":"Object[]","name":"items","doc":"<p>The data objects to read.</p>\n","html_type":"Object[]"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["createRecord","onInvalidEntityRead","peekRecord"],"id":"method-readEntities","owner":"Ext.data.Session","short_doc":"Process a read block of entities from the update method. ..."},{"tagname":"method","name":"save","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":437}],"doc":"<p>Save any changes in this session to a <a href=\"#!/api/Ext.data.Session-cfg-parent\" rel=\"Ext.data.Session-cfg-parent\" class=\"docClass\">parent</a> session.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getParent","visitData"],"id":"method-save","owner":"Ext.data.Session","short_doc":"Save any changes in this session to a parent session. ..."},{"tagname":"method","name":"setAutoDestroy","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.Session-cfg-autoDestroy\" rel=\"Ext.data.Session-cfg-autoDestroy\" class=\"docClass\">autoDestroy</a>.</p>\n","params":[{"type":"Boolean","name":"autoDestroy","doc":"<p>The new value.</p>\n","html_type":"Boolean"}],"id":"method-setAutoDestroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":65}],"properties":null,"since":"5.0.1","static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.Session","short_doc":"Sets the value of autoDestroy. ..."},{"tagname":"method","name":"setConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1441}],"doc":"<p>Sets a single/multiple configuration options.</p>\n","params":[{"tagname":"params","type":"String/Object","name":"name","doc":"<p>The name of the property to set, or a set of key value pairs to set.</p>\n","html_type":"String/Object"},{"tagname":"params","type":"Object","name":"value","optional":true,"doc":"<p>The value to set for the name parameter.</p>\n","html_type":"Object"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["getConfigurator"],"id":"method-setConfig","owner":"Ext.Base","short_doc":"Sets a single/multiple configuration options. ..."},{"tagname":"method","name":"setCrudProperties","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.Session-cfg-crudProperties\" rel=\"Ext.data.Session-cfg-crudProperties\" class=\"docClass\">crudProperties</a>.</p>\n","params":[{"type":"Object","name":"crudProperties","doc":"<p>The new value.</p>\n","html_type":"Object"}],"id":"method-setCrudProperties","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":75}],"static":null,"private":null,"inheritable":null,"linenr":75,"owner":"Ext.data.Session","short_doc":"Sets the value of crudProperties. ..."},{"tagname":"method","name":"setParent","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.Session-cfg-parent\" rel=\"Ext.data.Session-cfg-parent\" class=\"docClass\">parent</a>.</p>\n","params":[{"type":"Ext.data.Session","name":"parent","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Session\" rel=\"Ext.data.Session\" class=\"docClass\">Ext.data.Session</a>"}],"id":"method-setParent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":59}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.Session","short_doc":"Sets the value of parent. ..."},{"tagname":"method","name":"setSchema","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.Session-cfg-schema\" rel=\"Ext.data.Session-cfg-schema\" class=\"docClass\">schema</a>.</p>\n","params":[{"type":"String/Ext.data.schema.Schema","name":"schema","doc":"<p>The new value.</p>\n","html_type":"String/<a href=\"#!/api/Ext.data.schema.Schema\" rel=\"Ext.data.schema.Schema\" class=\"docClass\">Ext.data.schema.Schema</a>"}],"id":"method-setSchema","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":54}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.Session","short_doc":"Sets the value of schema. ..."},{"tagname":"method","name":"spawn","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":451}],"doc":"<p>Create a child session with this session as the <a href=\"#!/api/Ext.data.Session-cfg-parent\" rel=\"Ext.data.Session-cfg-parent\" class=\"docClass\">parent</a>.</p>\n","return":{"type":"Ext.data.Session","name":"return","doc":"<p>The copied session.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Session\" rel=\"Ext.data.Session\" class=\"docClass\">Ext.data.Session</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getSchema"],"id":"method-spawn","owner":"Ext.data.Session","short_doc":"Create a child session with this session as the parent. ..."},{"tagname":"method","name":"statics","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1075}],"doc":"<p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self();   // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n","protected":true,"return":{"type":"Ext.Class","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-statics","owner":"Ext.Base","short_doc":"Get the reference to the class from which this object was instantiated. ..."},{"tagname":"method","name":"unlink","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1526}],"doc":"<p>Destroys a given set of <code><a href=\"#!/api/Ext.Base-method-link\" rel=\"Ext.Base-method-link\" class=\"docClass\">linked</a></code> objects. This is only needed if\nthe linked object is being destroyed before this instance.</p>\n","params":[{"tagname":"params","type":"String[]","name":"names","doc":"<p>The names of the linked objects to destroy.</p>\n","html_type":"String[]"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"method-unlink","owner":"Ext.Base","short_doc":"Destroys a given set of linked objects. ..."},{"tagname":"method","name":"update","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":462}],"doc":"<p>Complete a bulk update for this session.</p>\n","params":[{"tagname":"params","type":"Object","name":"data","doc":"<p>Data in the CRUD format (see the intro docs).</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getSchema"],"id":"method-update","owner":"Ext.data.Session","short_doc":"Complete a bulk update for this session. ..."},{"tagname":"method","name":"updateEntities","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":976}],"doc":"<p>Process an update block for entities from the <a href=\"#!/api/Ext.data.Session-method-update\" rel=\"Ext.data.Session-method-update\" class=\"docClass\">update</a> method.</p>\n","params":[{"tagname":"params","type":"Ext.Class","name":"entityType","doc":"<p>The entity type.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},{"tagname":"params","type":"Object[]","name":"items","doc":"<p>The data objects to update.</p>\n","html_type":"Object[]"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["onInvalidEntityUpdate","peekRecord"],"id":"method-updateEntities","owner":"Ext.data.Session","short_doc":"Process an update block for entities from the update method. ..."},{"tagname":"method","name":"visitData","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/Session.js","linenr":1033}],"doc":"<p>Walks the internal data tracked by this session and calls methods on the provided\n<code>visitor</code> object. The visitor can then accumulate whatever data it finds important.\nThe visitor object can provide a number of methods, but all are optional.</p>\n\n<p>This method does not enumerate associations since these can be traversed given the\nrecords that are enumerated. For many-to-many associations, however, this method\ndoes enumerate the changes because these changes are not \"owned\" by either side of\nsuch associations.</p>\n","params":[{"tagname":"params","type":"Object","name":"visitor","doc":"\n","properties":[{"tagname":"params","type":"Function","name":"onCleanRecord","optional":true,"doc":"<p>This method is called to describe a record\nthat is known but unchanged.</p>\n","properties":[{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The unmodified record.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"}],"html_type":"Function"},{"tagname":"params","type":"Function","name":"onDirtyRecord","optional":true,"doc":"<p>This method is called to describe a record\nthat has either been created, dropped or modified.</p>\n","properties":[{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The modified record.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"}],"html_type":"Function"},{"tagname":"params","type":"Function","name":"onMatrixChange","optional":true,"doc":"<p>This method is called to describe a\nchange in a many-to-many association (a \"matrix\").</p>\n","properties":[{"tagname":"params","type":"Ext.data.schema.Association","name":"association","doc":"<p>The object\ndescribing the many-to-many (\"matrix\") association.</p>\n","html_type":"<a href=\"#!/api/Ext.data.schema.Association\" rel=\"Ext.data.schema.Association\" class=\"docClass\">Ext.data.schema.Association</a>"},{"tagname":"params","type":"Mixed","name":"leftId","doc":"<p>The <code>idProperty</code> of the record on the\n\"left\" of the association.</p>\n","html_type":"Mixed"},{"tagname":"params","type":"Mixed","name":"rightId","doc":"<p>The <code>idProperty</code> of the record on the\n\"right\" of the association.</p>\n","html_type":"Mixed"},{"tagname":"params","type":"Number","name":"state","doc":"<p>A negative number if the two records\nare being disassociated or a positive number if they are being associated. For\nexample, when adding User 10 to Group 20, this would be 1. When removing the User\nthis argument would be -1.</p>\n","html_type":"Number"}],"html_type":"Function"}],"html_type":"Object"}],"return":{"type":"Object","name":"return","doc":"<p>The visitor instance</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getSchema"],"id":"method-visitData","owner":"Ext.data.Session","short_doc":"Walks the internal data tracked by this session and calls methods on the provided\nvisitor object. ..."},{"tagname":"method","name":"addConfig","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":911}],"doc":"<p>Adds new config properties to this class. This is called for classes when they\nare declared, then for any mixins that class may define and finally for any\noverrides defined that target the class.</p>\n","params":[{"tagname":"params","type":"Object","name":"config","doc":"\n","html_type":"Object"},{"tagname":"params","type":"Ext.Class","name":"mixinClass","optional":true,"doc":"<p>The mixin class if the configs are from a mixin.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"}],"private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["getConfigurator"],"id":"static-method-addConfig","owner":"Ext.Base","short_doc":"Adds new config properties to this class. ..."},{"tagname":"method","name":"addInheritableStatics","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":436}],"doc":"\n","private":true,"static":true,"inheritable":true,"params":[{"tagname":"params","type":"Object","name":"members","doc":"\n","html_type":"Object"}],"inheritdoc":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"static-method-addInheritableStatics","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"addMember","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":634}],"doc":"\n","private":true,"static":true,"inheritable":true,"params":[{"tagname":"params","name":"name","doc":"\n","type":"Object","html_type":"Object"},{"tagname":"params","name":"member","doc":"\n","type":"Object","html_type":"Object"}],"inheritdoc":null,"linenr":null,"chainable":true,"fires":null,"method_calls":["addMembers"],"id":"static-method-addMember","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"addMembers","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":480}],"doc":"<p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat();\n kitty.meow();\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"<p>The members to add to this class.</p>\n","html_type":"Object"},{"tagname":"params","type":"Boolean","name":"isStatic","default":"false","optional":true,"doc":"<p>Pass <code>true</code> if the members are static.</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"privacy","default":"false","optional":true,"doc":"<p>Pass <code>true</code> if the members are private. This\nonly has meaning in debug mode and only for methods.</p>\n","html_type":"Boolean"}],"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":true,"fires":null,"method_calls":["addConfig","addMembers"],"id":"static-method-addMembers","owner":"Ext.Base","short_doc":"Add methods / properties to the prototype of this class. ..."},{"tagname":"method","name":"addStatics","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":413}],"doc":"<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"\n","html_type":"Object"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":true,"fires":null,"method_calls":["addMembers"],"id":"static-method-addStatics","owner":"Ext.Base","short_doc":"Add / override static properties of this class. ..."},{"tagname":"method","name":"borrow","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":648}],"doc":"<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n","params":[{"tagname":"params","type":"Ext.Base","name":"fromClass","doc":"<p>The class to borrow members from</p>\n","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},{"tagname":"params","type":"Array/String","name":"members","doc":"<p>The names of the members to borrow</p>\n","html_type":"Array/String"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"inheritable":true,"private":true,"inheritdoc":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["addMembers"],"id":"static-method-borrow","owner":"Ext.Base","short_doc":"Borrow another class' members to the prototype of this class. ..."},{"tagname":"method","name":"callParent","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":785}],"doc":"\n","protected":true,"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[{"name":"args","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-callParent","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"callSuper","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":799}],"doc":"\n","protected":true,"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[{"name":"args","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-callSuper","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"create","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":94}],"doc":"<p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n","return":{"type":"Object","name":"return","doc":"<p>the created instance.</p>\n","properties":null,"html_type":"Object"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-create","owner":"Ext.Base","short_doc":"Create a new instance of this Class. ..."},{"tagname":"method","name":"createAlias","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":973}],"doc":"<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n","params":[{"tagname":"params","type":"String/Object","name":"alias","doc":"<p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n","html_type":"String/Object"},{"tagname":"params","type":"String/Object","name":"origin","doc":"<p>The original method name</p>\n","html_type":"String/Object"}],"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"static-method-createAlias","owner":"Ext.Base","short_doc":"Create aliases for existing prototype methods. ..."},{"tagname":"method","name":"extend","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":322}],"doc":"\n","private":true,"static":true,"inheritable":true,"params":[{"tagname":"params","name":"config","doc":"\n","type":"Object","html_type":"Object"}],"inheritdoc":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["getConfigurator","hasOwnProperty"],"id":"static-method-extend","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"getConfigurator","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":940}],"doc":"<p>Returns the <code><a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a></code> for this class.</p>\n","return":{"type":"Ext.Configurator","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a>"},"private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-getConfigurator","owner":"Ext.Base","short_doc":"Returns the Ext.Configurator for this class. ..."},{"tagname":"method","name":"getName","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":954}],"doc":"<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n","return":{"type":"String","name":"return","doc":"<p>className</p>\n","properties":null,"html_type":"String"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-getName","owner":"Ext.Base","short_doc":"Get the current class' name in string format. ..."},{"tagname":"method","name":"mixin","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":814}],"doc":"<p>Used internally by the mixins pre-processor</p>\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[{"name":"name","type":"Object","html_type":"Object"},{"name":"mixinClass","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":["addConfig","hasOwnProperty","mixin"],"id":"static-method-mixin","owner":"Ext.Base","short_doc":"Used internally by the mixins pre-processor ..."},{"tagname":"method","name":"onExtended","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":399}],"doc":"\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[{"name":"fn","type":"Object","html_type":"Object"},{"name":"scope","type":"Object","html_type":"Object"}],"chainable":true,"fires":null,"method_calls":null,"id":"static-method-onExtended","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"override","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":695}],"doc":"<p>Override members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>Direct use of this method should be rare. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n","html_type":"Object"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this class</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["addCachedConfig","addConfig","addInheritableStatics","addMembers","mixin"],"id":"static-method-override","owner":"Ext.Base","short_doc":"Override members of this class. ..."},{"tagname":"method","name":"triggerExtended","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":377}],"doc":"\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-triggerExtended","owner":"Ext.Base","short_doc":" ..."}],"code_type":"ext_define","id":"class-Ext.data.Session","short_doc":"This class manages models and their associations. ..."}