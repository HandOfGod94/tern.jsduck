{"tagname":"class","name":"Ext.data.PageMap","autodetected":{"aliases":true,"alternateClassNames":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/PageMap.js","linenr":1}],"doc":"<p>Private class for use by only Store when configured <code>buffered: true</code>.</p>\n","extends":"Ext.util.LruCache","private":true,"aliases":{},"alternateClassNames":[],"mixins":[],"requires":[],"uses":[],"members":[{"tagname":"cfg","name":"keyFn","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/HashMap.js","linenr":30}],"doc":"<p>A function that is used to retrieve a default key for a passed object.\nA default is provided that returns the <code>id</code> property on the object. This function is only used\nif the <code>add</code> method is called with a single argument.</p>\n","type":"Function","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-keyFn","owner":"Ext.util.HashMap","short_doc":"A function that is used to retrieve a default key for a passed object. ...","html_type":"Function"},{"tagname":"cfg","name":"listeners","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":240}],"doc":"<p>A config object containing one or more event handlers to be added to this object during initialization. This\nshould be a valid listeners config object as specified in the <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> example for attaching multiple\nhandlers at once.</p>\n\n<p><strong>DOM events from Ext JS <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a></strong></p>\n\n<p>While <em>some</em> Ext JS Component classes export selected DOM events (e.g. \"click\", \"mouseover\" etc), this is usually\nonly done when extra value can be added. For example the <a href=\"#!/api/Ext.view.View\" rel=\"Ext.view.View\" class=\"docClass\">DataView</a>'s <strong><code><a href=\"#!/api/Ext.view.View-event-itemclick\" rel=\"Ext.view.View-event-itemclick\" class=\"docClass\">itemclick</a></code></strong> event passing the node clicked on. To access DOM events directly from a\nchild element of a Component, we need to specify the <code>element</code> option to identify the Component property to add a\nDOM listener to:</p>\n\n<pre><code>new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n    width: 400,\n    height: 200,\n    dockedItems: [{\n        xtype: 'toolbar'\n    }],\n    listeners: {\n        click: {\n            element: 'el', //bind to the underlying el property on the panel\n            fn: function(){ console.log('click el'); }\n        },\n        dblclick: {\n            element: 'body', //bind to the underlying body property on the panel\n            fn: function(){ console.log('dblclick body'); }\n        }\n    }\n});\n</code></pre>\n","type":"Object","default":null,"properties":null,"id":"cfg-listeners","owner":"Ext.mixin.Observable","short_doc":"A config object containing one or more event handlers to be added to this object during initialization. ...","html_type":"Object"},{"tagname":"cfg","name":"maxSize","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/LruCache.js","linenr":13}],"doc":"<p>The maximum size the cache is allowed to grow to before further additions cause\nremoval of the least recently used entry.</p>\n","type":"Number","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-maxSize","owner":"Ext.util.LruCache","short_doc":"The maximum size the cache is allowed to grow to before further additions cause\nremoval of the least recently used en...","html_type":"Number"},{"tagname":"cfg","name":"pageSize","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/PageMap.js","linenr":13}],"doc":"<p>The size of pages in this map.</p>\n","type":"Number","default":"0","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-pageSize","owner":"Ext.data.PageMap","short_doc":"The size of pages in this map. ...","html_type":"Number"},{"tagname":"cfg","name":"rootProperty","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/PageMap.js","linenr":19}],"doc":"<p>The root property to use for aggregation, filtering and sorting. By default\nthis is <code>null</code> but when containing things like <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">records</a>\nthis config would likely be set to \"data\" so that property names are applied\nto the fields of each record.</p>\n","type":"String","default":"''","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-rootProperty","owner":"Ext.data.PageMap","short_doc":"The root property to use for aggregation, filtering and sorting. ...","html_type":"String"},{"tagname":"cfg","name":"store","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/PageMap.js","linenr":11}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":11,"type":"Object","default":null,"accessor":true,"evented":null,"id":"cfg-store","owner":"Ext.data.PageMap","html_type":"Object"},{"tagname":"property","name":"$className","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1025}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"String","default":"'Ext.Base'","readonly":null,"id":"property-S-className","owner":"Ext.Base","short_doc":" ...","html_type":"String"},{"tagname":"property","name":"$configPrefixed","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1037}],"doc":"<p>The value <code>true</code> causes <code>config</code> values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\") character. A value of <code>false</code>\nstores <code>config</code> values as properties using their exact name (no prefix).</p>\n","type":"Boolean","default":"true","properties":null,"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-S-configPrefixed","owner":"Ext.Base","overrides":[{"name":"$configPrefixed","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-S-configPrefixed\" rel=\"Ext.Component-property-S-configPrefixed\" class=\"docClass\">Ext.Component.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-property-S-configPrefixed\" rel=\"Ext.layout.Layout-property-S-configPrefixed\" class=\"docClass\">Ext.layout.Layout.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-property-S-configPrefixed\" rel=\"Ext.data.AbstractStore-property-S-configPrefixed\" class=\"docClass\">Ext.data.AbstractStore.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.layout.container.boxOverflow.None","link":"<a href=\"#!/api/Ext.layout.container.boxOverflow.None-property-S-configPrefixed\" rel=\"Ext.layout.container.boxOverflow.None-property-S-configPrefixed\" class=\"docClass\">Ext.layout.container.boxOverflow.None.$configPrefixed</a>"}],"short_doc":"The value true causes config values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\")...","html_type":"Boolean"},{"tagname":"property","name":"$configStrict","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1047}],"doc":"<p>The value <code>true</code> instructs the <code>initConfig</code> method to only honor values for\nproperties declared in the <code>config</code> block of a class. When <code>false</code>, properties\nthat are not declared in a <code>config</code> block will be placed on the instance.</p>\n","type":"Boolean","default":"true","properties":null,"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-S-configStrict","owner":"Ext.Base","overrides":[{"name":"$configStrict","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-S-configStrict\" rel=\"Ext.Component-property-S-configStrict\" class=\"docClass\">Ext.Component.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-property-S-configStrict\" rel=\"Ext.layout.Layout-property-S-configStrict\" class=\"docClass\">Ext.layout.Layout.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-property-S-configStrict\" rel=\"Ext.data.AbstractStore-property-S-configStrict\" class=\"docClass\">Ext.data.AbstractStore.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.layout.container.boxOverflow.None","link":"<a href=\"#!/api/Ext.layout.container.boxOverflow.None-property-S-configStrict\" rel=\"Ext.layout.container.boxOverflow.None-property-S-configStrict\" class=\"docClass\">Ext.layout.container.boxOverflow.None.$configStrict</a>"}],"short_doc":"The value true instructs the initConfig method to only honor values for\nproperties declared in the config block of a ...","html_type":"Boolean"},{"tagname":"property","name":"eventsSuspended","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":280}],"doc":"<p>Initial suspended call count. Incremented when <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvents\" rel=\"Ext.mixin.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a> is called, decremented when <a href=\"#!/api/Ext.mixin.Observable-method-resumeEvents\" rel=\"Ext.mixin.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> is called.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"Number","default":"0","readonly":null,"id":"property-eventsSuspended","owner":"Ext.mixin.Observable","short_doc":"Initial suspended call count. ...","html_type":"Number"},{"tagname":"property","name":"generation","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/HashMap.js","linenr":24}],"doc":"<p>Mutation counter which is incremented upon add and remove.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"Number","default":"0","readonly":null,"id":"property-generation","owner":"Ext.util.HashMap","short_doc":"Mutation counter which is incremented upon add and remove. ...","html_type":"Number"},{"tagname":"property","name":"hasListeners","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":286}],"doc":"<p>This object holds a key for any event that has a listener. The listener may be set\ndirectly on the instance, or on its class or a super class (via <a href=\"#!/api/Ext.mixin.Observable-static-method-observe\" rel=\"Ext.mixin.Observable-static-method-observe\" class=\"docClass\">observe</a>) or\non the <a href=\"#!/api/Ext.app.EventBus\" rel=\"Ext.app.EventBus\" class=\"docClass\">MVC EventBus</a>. The values of this object are truthy\n(a non-zero number) and falsy (0 or undefined). They do not represent an exact count\nof listeners. The value for an event is truthy if the event must be fired and is\nfalsy if there is no need to fire the event.</p>\n\n<p>The intended use of this property is to avoid the expense of fireEvent calls when\nthere are no listeners. This can be particularly helpful when one would otherwise\nhave to call fireEvent hundreds or thousands of times. It is used like this:</p>\n\n<pre><code> if (this.hasListeners.foo) {\n     this.fireEvent('foo', this, arg1);\n }\n</code></pre>\n","type":"Object","default":null,"properties":null,"readonly":true,"id":"property-hasListeners","owner":"Ext.mixin.Observable","short_doc":"This object holds a key for any event that has a listener. ...","html_type":"Object"},{"tagname":"property","name":"isConfiguring","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1057}],"doc":"<p>This property is set to <code>true</code> during the call to <code>initConfig</code>.</p>\n","type":"Boolean","default":"false","properties":null,"protected":true,"readonly":true,"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-isConfiguring","owner":"Ext.Base","short_doc":"This property is set to true during the call to initConfig. ...","html_type":"Boolean"},{"tagname":"property","name":"isFirstInstance","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1066}],"doc":"<p>This property is set to <code>true</code> if this instance is the first of its class.</p>\n","type":"Boolean","default":"false","properties":null,"protected":true,"readonly":true,"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-isFirstInstance","owner":"Ext.Base","short_doc":"This property is set to true if this instance is the first of its class. ...","html_type":"Boolean"},{"tagname":"property","name":"isInstance","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1028}],"doc":"<p>This value is <code>true</code> and is used to identify plain objects from instances of\na defined class.</p>\n","type":"Boolean","default":"true","properties":null,"protected":true,"readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-isInstance","owner":"Ext.Base","short_doc":"This value is true and is used to identify plain objects from instances of\na defined class. ...","html_type":"Boolean"},{"tagname":"property","name":"isObservable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":274}],"doc":"<p><code>true</code> in this class to identify an object as an instantiated Observable, or subclass thereof.</p>\n","type":"Boolean","default":"true","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-isObservable","owner":"Ext.mixin.Observable","short_doc":"true in this class to identify an object as an instantiated Observable, or subclass thereof. ...","html_type":"Boolean"},{"tagname":"property","name":"self","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1344}],"doc":"<p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n","type":"Ext.Class","default":null,"properties":null,"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-self","owner":"Ext.Base","short_doc":"Get the reference to the current class from which this object was instantiated. ...","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},{"tagname":"property","name":"$onExtended","autodetected":{"inheritdoc":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":370}],"doc":"\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"type":"Array","default":"[]","readonly":null,"id":"static-property-S-onExtended","owner":"Ext.Base","short_doc":" ...","html_type":"Array"},{"tagname":"method","name":"constructor","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/HashMap.js","linenr":69}],"doc":"<p>Creates new HashMap.</p>\n","params":[{"tagname":"params","type":"Object","name":"config","optional":true,"doc":"<p>Config object.</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["clear","getKeyFn"],"id":"method-constructor","owner":"Ext.util.HashMap","return":{"type":"Ext.util.HashMap","doc":"\n","html_type":"<a href=\"#!/api/Ext.util.HashMap\" rel=\"Ext.util.HashMap\" class=\"docClass\">Ext.util.HashMap</a>"},"short_doc":"Creates new HashMap. ..."},{"tagname":"method","name":"_addDeclaredListeners","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":400}],"doc":"<p>Adds declarative listeners as nested arrays of listener objects.</p>\n","private":true,"params":[{"tagname":"params","type":"Array","name":"listeners","doc":"\n","html_type":"Array"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if any listeners were added</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["addListener"],"id":"method-_addDeclaredListeners","owner":"Ext.mixin.Observable","short_doc":"Adds declarative listeners as nested arrays of listener objects. ..."},{"tagname":"method","name":"add","autodetected":{"tagname":"method","static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/LruCache.js","linenr":20}],"doc":"<p>Adds an item to the collection. Fires the <a href=\"#!/api/Ext.util.LruCache-event-add\" rel=\"Ext.util.LruCache-event-add\" class=\"docClass\">add</a> event when complete.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"name":"key","type":"Object","html_type":"Object"},{"name":"newValue","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.util.LruCache-event-add\" rel=\"Ext.util.LruCache-event-add\" class=\"docClass\">add</a>","<a href=\"#!/api/Ext.util.LruCache-event-remove\" rel=\"Ext.util.LruCache-event-remove\" class=\"docClass\">remove</a>"],"method_calls":["callParent","prune","removeAtKey"],"id":"method-add","owner":"Ext.util.LruCache","return":{"type":"Object","name":"return","doc":"<p>The item added.</p>\n","properties":null,"html_type":"Object"},"overrides":[{"name":"add","owner":"Ext.util.HashMap","link":"<a href=\"#!/api/Ext.util.HashMap-method-add\" rel=\"Ext.util.HashMap-method-add\" class=\"docClass\">Ext.util.HashMap.add</a>"}],"short_doc":"Adds an item to the collection. ..."},{"tagname":"method","name":"addAfterListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1505}],"doc":"<p>Appends an after-event handler.</p>\n\n<p>Same as <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> with <code>order</code> set to <code>'after'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event to listen for.</p>\n\n","html_type":"String/String[]/Object"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The method the event invokes.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope for <code>fn</code>.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>An object containing handler configuration.</p>\n\n","html_type":"Object"}],"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> with the <code>priority</code> option instead.</p>\n","version":"5.1"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["addListener"],"id":"method-addAfterListener","owner":"Ext.mixin.Observable","short_doc":"Appends an after-event handler. ..."},{"tagname":"method","name":"addAll","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/PageMap.js","linenr":163}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":163,"params":[{"name":"records","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.data.PageMap-event-add\" rel=\"Ext.data.PageMap-event-add\" class=\"docClass\">add</a>","pageadd","<a href=\"#!/api/Ext.data.PageMap-event-remove\" rel=\"Ext.data.PageMap-event-remove\" class=\"docClass\">remove</a>"],"method_calls":["addPage","getCount"],"id":"method-addAll","owner":"Ext.data.PageMap","short_doc":" ..."},{"tagname":"method","name":"addBeforeListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1490}],"doc":"<p>Appends a before-event handler.  Returning <code>false</code> from the handler will stop the event.</p>\n\n<p>Same as <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> with <code>order</code> set to <code>'before'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event to listen for.</p>\n\n","html_type":"String/String[]/Object"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The method the event invokes.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope for <code>fn</code>.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>An object containing handler configuration.</p>\n\n","html_type":"Object"}],"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> with the <code>priority</code> option instead.</p>\n","version":"5.1"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["addListener"],"id":"method-addBeforeListener","owner":"Ext.mixin.Observable","short_doc":"Appends a before-event handler. ..."},{"tagname":"method","name":"addDeprecations","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":115}],"doc":"<p>This method applies a versioned, deprecation declaration to this class. This\nis typically called by the <code>deprecated</code> config.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"deprecations","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-addDeprecations","owner":"Ext.Base","short_doc":"This method applies a versioned, deprecation declaration to this class. ..."},{"tagname":"method","name":"addListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":698}],"doc":"<p>The <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> method is shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a>.</p>\n\n<p>Appends an event handler to this object.  For example:</p>\n\n<pre><code>myGridPanel.on(\"itemclick\", this.onItemClick, this);\n</code></pre>\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple events. For example:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: this.onCellClick,\n    select: this.onSelect,\n    viewready: this.onViewReady,\n    scope: this // Important. Ensure \"this\" is correct during handler execution\n});\n</code></pre>\n\n<p>One can also specify options for each event handler separately:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: this.onCellClick, scope: this, single: true},\n    viewready: {fn: panel.onViewReady, scope: panel}\n});\n</code></pre>\n\n<p><em>Names</em> of methods in a specified scope may also be used:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: 'onCellClick', scope: this, single: true},\n    viewready: {fn: 'onViewReady', scope: panel}\n});\n</code></pre>\n","params":[{"tagname":"params","type":"String/Object","name":"eventName","doc":"<p>The name of the event to listen for.\nMay also be an object who's property names are event names.</p>\n\n","html_type":"String/Object"},{"tagname":"params","type":"Function/String","name":"fn","optional":true,"doc":"<p>The method the event invokes or the <em>name</em> of\nthe method within the specified <code>scope</code>.  Will be called with arguments\ngiven to <a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">Ext.util.Observable.fireEvent</a> plus the <code>options</code> parameter described\nbelow.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>An object containing handler configuration.</p>\n\n\n\n\n<p><strong>Note:</strong> The options object will also be passed as the last argument to every\nevent handler.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n","properties":[{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted,\n  defaults to the object which fired the event.</strong></p>\n\n","html_type":"Object"},{"tagname":"params","type":"Number","name":"delay","doc":"<p>The number of milliseconds to delay the invocation of the handler after the event\n  fires.</p>\n\n","html_type":"Number"},{"tagname":"params","type":"Boolean","name":"single","doc":"<p>True to add a handler to handle just the next firing of the event, and then remove\n  itself.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Number","name":"buffer","doc":"<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"onFrame","doc":"<p>Causes the handler to be scheduled to run at the next\n  <a href=\"#!/api/Ext.Function-method-requestAnimationFrame\" rel=\"Ext.Function-method-requestAnimationFrame\" class=\"docClass\">animation frame event</a>. If the\n  event fires again before that time, the handler is not rescheduled - the handler\n  will only be called once when the next animation frame is fired, with the last set\n  of arguments passed.</p>\n\n","html_type":"Number"},{"tagname":"params","type":"Ext.util.Observable","name":"target","doc":"<p>Only call the handler if the event was fired on the target Observable, <em>not</em> if the\n  event was bubbled up from a child Observable.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},{"tagname":"params","type":"String","name":"element","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</strong>\n  The name of a Component property which references an <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">element</a>\n  to add a listener to.</p>\n\n\n\n\n<p>  This option is useful during Component construction to add DOM event listeners to\n  elements of <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which will exist only after the\n  Component is rendered.</p>\n\n\n\n\n<p>  For example, to add a click listener to a Panel's body:</p>\n\n\n\n\n<pre><code>  var panel = new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n\n\n\n<p>In order to remove listeners attached using the element, you'll need to reference\nthe element itself as seen below.</p>\n\n\n\n\n<pre><code> panel.body.un(...)\n</code></pre>\n\n","html_type":"String"},{"tagname":"params","type":"String","name":"delegate","optional":true,"doc":"<p>A simple selector to filter the event target or look for a descendant of the target.</p>\n\n\n\n\n<p>  The \"delegate\" option is only available on <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instances (or\n  when attaching a listener to a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> via a Component using the\n  element option).</p>\n\n\n\n\n<p>  See the <em>delegate</em> example below.</p>\n\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"stopPropagation","optional":true,"doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopPropagation\" rel=\"Ext.event.Event-method-stopPropagation\" class=\"docClass\">stopPropagation</a> on the event object\n  before firing the handler.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"preventDefault","optional":true,"doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-preventDefault\" rel=\"Ext.event.Event-method-preventDefault\" class=\"docClass\">preventDefault</a> on the event object\n  before firing the handler.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"stopEvent","optional":true,"doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopEvent\" rel=\"Ext.event.Event-method-stopEvent\" class=\"docClass\">stopEvent</a> on the event object\n  before firing the handler.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Array","name":"args","optional":true,"doc":"<p>Optional arguments to pass to the handler function. Any additional arguments\n  passed to <a href=\"#!/api/Ext.mixin.Observable-method-fireEvent\" rel=\"Ext.mixin.Observable-method-fireEvent\" class=\"docClass\">fireEvent</a> will be appended to these arguments.</p>\n\n","html_type":"Array"},{"tagname":"params","type":"Boolean","name":"destroyable","default":"false","optional":true,"doc":"<p>When specified as <code>true</code>, the function returns a <code>destroyable</code> object. An object\n  which implements the <code>destroy</code> method which removes all listeners added in this call.\n  This syntax can be a helpful shortcut to using <a href=\"#!/api/Ext.mixin.Observable-method-un\" rel=\"Ext.mixin.Observable-method-un\" class=\"docClass\">un</a>; particularly when\n  removing multiple listeners.  <em>NOTE</em> - not compatible when using the <em>element</em>\n  option.  See <a href=\"#!/api/Ext.mixin.Observable-method-un\" rel=\"Ext.mixin.Observable-method-un\" class=\"docClass\">un</a> for the proper syntax for removing listeners added using the\n  <em>element</em> config.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Number","name":"priority","optional":true,"doc":"<p>An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handlers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.\n  A priority must be an integer to be valid.  Fractional values are reserved for\n  internal framework use.</p>\n\n","html_type":"Number"},{"tagname":"params","type":"String","name":"order","default":"'current'","optional":true,"doc":"<p>A legacy option that is provided for backward compatibility.\n  It is recommended to use the <code>priority</code> option instead.  Available options are:</p>\n\n\n\n\n<ul>\n<li><code>'before'</code>: equal to a priority of <code>100</code></li>\n<li><code>'current'</code>: equal to a priority of <code>0</code> or default priority</li>\n<li><code>'after'</code>: equal to a priority of <code>-100</code></li>\n</ul>\n\n\n\n","html_type":"String"}],"html_type":"Object"},{"tagname":"params","type":"String","name":"order","default":"'current'","optional":true,"doc":"<p>A shortcut for the <code>order</code> event option.  Provided for backward compatibility.\n  Please use the <code>priority</code> event option instead.</p>\n\n\n\n\n<p><strong>Combining Options</strong></p>\n\n\n\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n\n\n\n<p>A delayed, one-time listener.</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n\n\n\n<p><strong>Attaching multiple handlers in 1 call</strong></p>\n\n\n\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple handlers and handler configs.</p>\n\n\n\n\n<pre><code>grid.on({\n    itemclick: 'onItemClick',\n    itemcontextmenu: grid.onItemContextmenu,\n    destroy: {\n        fn: function () {\n            // function called within the 'altCmp' scope instead of grid\n        },\n        scope: altCmp // unique scope for the destroy handler\n    },\n    scope: grid       // default scope - provided for example clarity\n});\n</code></pre>\n\n\n\n\n<p><strong>Delegate</strong></p>\n\n\n\n\n<p>This is a configuration option that you can pass along when registering a handler for\nan event to assist with event delegation. By setting this configuration option\nto a simple selector, the target element will be filtered to look for a\ndescendant of the target. For example:</p>\n\n\n\n\n<pre><code>var panel = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n    xtype: 'panel',\n    renderTo: document.body,\n    title: 'Delegate Handler Example',\n    frame: true,\n    height: 220,\n    width: 220,\n    html: '&lt;h1 class=\"myTitle\"&gt;BODY TITLE&lt;/h1&gt;Body content'\n});\n\n// The click handler will only be called when the click occurs on the\n// delegate: h1.myTitle (\"h1\" tag with class \"myTitle\")\npanel.on({\n    click: function (e) {\n        console.log(e.getTarget().innerHTML);\n    },\n    element: 'body',\n    delegate: 'h1.myTitle'\n });\n</code></pre>\n\n","html_type":"String"}],"return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes\n all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.on({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["doAddListener"],"id":"method-addListener","owner":"Ext.mixin.Observable","short_doc":"The on method is shorthand for addListener. ..."},{"tagname":"method","name":"addManagedListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":419}],"doc":"<p>The addManagedListener method is used when some object (call it \"A\") is listening\nto an event on another observable object (\"B\") and you want to remove that listener\nfrom \"B\" when \"A\" is destroyed. This is not an issue when \"B\" is destroyed because\nall of its listeners will be removed at that time.</p>\n\n<p>Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Foo', {\n    extend: '<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>',\n\n    initComponent: function () {\n        this.addManagedListener(MyApp.SomeGlobalSharedMenu, 'show', this.doSomething);\n        this.callParent();\n    }\n});\n</code></pre>\n\n<p>As you can see, when an instance of Foo is destroyed, it ensures that the 'show'\nlistener on the menu (<code>MyApp.SomeGlobalSharedMenu</code>) is also removed.</p>\n\n<p>As of version 5.1 it is no longer necessary to use this method in most cases because\nlisteners are automatically managed if the scope object provided to <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a>\nis an Observable instance. However, if the observable instance and scope are not the\nsame object you still need to use <code>mon</code> or <code>addManagedListener</code> if you want the listener\nto be managed.</p>\n","params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item to which to add a listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","html_type":"Object/String"},{"tagname":"params","type":"Function/String","name":"fn","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event\nname, this is the handler function or the name of a method on the specified\n<code>scope</code>.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n","html_type":"Object"}],"return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners = myButton.mon({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["addManagedListener"],"id":"method-addManagedListener","owner":"Ext.mixin.Observable","short_doc":"The addManagedListener method is used when some object (call it \"A\") is listening\nto an event on another observable o..."},{"tagname":"method","name":"addPage","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/PageMap.js","linenr":172}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":172,"params":[{"name":"pageNumber","type":"Object","html_type":"Object"},{"name":"records","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.data.PageMap-event-add\" rel=\"Ext.data.PageMap-event-add\" class=\"docClass\">add</a>","pageadd","<a href=\"#!/api/Ext.data.PageMap-event-remove\" rel=\"Ext.data.PageMap-event-remove\" class=\"docClass\">remove</a>"],"method_calls":["add","fireEvent","getPageSize"],"id":"method-addPage","owner":"Ext.data.PageMap","short_doc":" ..."},{"tagname":"method","name":"callOverridden","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1581}],"doc":"<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n","params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n","html_type":"Array/Arguments"}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the overridden method</p>\n","properties":null,"html_type":"Object"},"protected":true,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-callOverridden","owner":"Ext.Base","short_doc":"Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi..."},{"tagname":"method","name":"callParent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1143}],"doc":"<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10));     // alerts 10\n alert(My.Derived2.method(10)); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n","protected":true,"params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n","html_type":"Array/Arguments"}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the parent method</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-callParent","owner":"Ext.Base","short_doc":"Call the \"parent\" method of the current method. ..."},{"tagname":"method","name":"callSuper","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1258}],"doc":"<p>This method is used by an override to call the superclass method but bypass any\noverridden method. This is often done to \"patch\" a method that contains a bug\nbut for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function () {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     extend: 'Ext.some.Class',\n\n     method: function () {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>Ext.some.DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.patches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function () {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <code>callParent</code> to call the superclass <code>method</code> since\nthat would call the overridden method containing the bug. In other words, the\nabove patch would only produce \"Fixed\" then \"Good\" in the console log, whereas,\nusing <code>callParent</code> would produce \"Fixed\" then \"Bad\" then \"Good\".</p>\n","protected":true,"params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n","html_type":"Array/Arguments"}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the superclass method</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-callSuper","owner":"Ext.Base","short_doc":"This method is used by an override to call the superclass method but bypass any\noverridden method. ..."},{"tagname":"method","name":"captureArgs","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":120}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"o","type":"Object","html_type":"Object"},{"name":"fn","type":"Object","html_type":"Object"},{"name":"scope","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-captureArgs","owner":"Ext.mixin.Observable","short_doc":" ..."},{"tagname":"method","name":"clear","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/PageMap.js","linenr":29}],"doc":"<p>Maintain a generation counter, so that the Store can reject incoming pages destined for the previous generation</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"name":"initial","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["callParent"],"id":"method-clear","owner":"Ext.data.PageMap","return":{"type":"Ext.util.HashMap","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.HashMap\" rel=\"Ext.util.HashMap\" class=\"docClass\">Ext.util.HashMap</a>"},"overrides":[{"name":"clear","owner":"Ext.util.LruCache","link":"<a href=\"#!/api/Ext.util.LruCache-method-clear\" rel=\"Ext.util.LruCache-method-clear\" class=\"docClass\">Ext.util.LruCache.clear</a>"}],"short_doc":"Maintain a generation counter, so that the Store can reject incoming pages destined for the previous generation ..."},{"tagname":"method","name":"clearListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1062}],"doc":"<p>Removes all listeners for this object including the managed listeners</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["clearManagedListeners"],"id":"method-clearListeners","owner":"Ext.mixin.Observable","short_doc":"Removes all listeners for this object including the managed listeners ..."},{"tagname":"method","name":"clearManagedListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1096}],"doc":"<p>Removes all managed listeners for this object.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["removeManagedListenerItem"],"id":"method-clearManagedListeners","owner":"Ext.mixin.Observable","short_doc":"Removes all managed listeners for this object. ..."},{"tagname":"method","name":"clone","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/LruCache.js","linenr":219}],"doc":"<p>Performs a shallow copy on this haLruCachesh.</p>\n","return":{"type":"Ext.util.HashMap","name":"return","doc":"<p>The new hash object.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.HashMap\" rel=\"Ext.util.HashMap\" class=\"docClass\">Ext.util.HashMap</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-clone","owner":"Ext.util.LruCache","overrides":[{"name":"clone","owner":"Ext.util.HashMap","link":"<a href=\"#!/api/Ext.util.HashMap-method-clone\" rel=\"Ext.util.HashMap-method-clone\" class=\"docClass\">Ext.util.HashMap.clone</a>"}],"short_doc":"Performs a shallow copy on this haLruCachesh. ..."},{"tagname":"method","name":"contains","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/LruCache.js","linenr":257}],"doc":"\n","private":true,"params":[],"id":"method-contains","owner":"Ext.util.LruCache","overrides":[{"name":"contains","owner":"Ext.util.HashMap","link":"<a href=\"#!/api/Ext.util.HashMap-method-contains\" rel=\"Ext.util.HashMap-method-contains\" class=\"docClass\">Ext.util.HashMap.contains</a>"}],"short_doc":" ..."},{"tagname":"method","name":"containsKey","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/LruCache.js","linenr":253}],"doc":"\n","private":true,"params":[],"id":"method-containsKey","owner":"Ext.util.LruCache","overrides":[{"name":"containsKey","owner":"Ext.util.HashMap","link":"<a href=\"#!/api/Ext.util.HashMap-method-containsKey\" rel=\"Ext.util.HashMap-method-containsKey\" class=\"docClass\">Ext.util.HashMap.containsKey</a>"}],"short_doc":" ..."},{"tagname":"method","name":"createRelayer","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1315}],"doc":"<p>Creates an event handling function which re-fires the event from this object as the passed event name.</p>\n","private":true,"params":[{"tagname":"params","type":"String","name":"newName","doc":"<p>The name under which to re-fire the passed parameters.</p>\n","html_type":"String"},{"tagname":"params","type":"Array","name":"beginEnd","optional":true,"doc":"<p>The caller can specify on which indices to slice.</p>\n","html_type":"Array"}],"return":{"type":"Function","name":"return","doc":"\n","properties":null,"html_type":"Function"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-createRelayer","owner":"Ext.mixin.Observable","short_doc":"Creates an event handling function which re-fires the event from this object as the passed event name. ..."},{"tagname":"method","name":"destroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1562}],"doc":"<p>This method is called to cleanup an object and its resources. After calling\nthis method, the object should not be used any further.</p>\n","protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["unlink"],"id":"method-destroy","owner":"Ext.Base","overrides":[{"name":"destroy","owner":"Ext.util.ElementContainer","link":"<a href=\"#!/api/Ext.util.ElementContainer-method-destroy\" rel=\"Ext.util.ElementContainer-method-destroy\" class=\"docClass\">Ext.util.ElementContainer.destroy</a>"},{"name":"destroy","owner":"Ext.state.Stateful","link":"<a href=\"#!/api/Ext.state.Stateful-method-destroy\" rel=\"Ext.state.Stateful-method-destroy\" class=\"docClass\">Ext.state.Stateful.destroy</a>"},{"name":"destroy","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-method-destroy\" rel=\"Ext.Component-method-destroy\" class=\"docClass\">Ext.Component.destroy</a>"},{"name":"destroy","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-destroy\" rel=\"Ext.data.AbstractStore-method-destroy\" class=\"docClass\">Ext.data.AbstractStore.destroy</a>"},{"name":"destroy","owner":"Ext.plugin.Abstract","link":"<a href=\"#!/api/Ext.plugin.Abstract-method-destroy\" rel=\"Ext.plugin.Abstract-method-destroy\" class=\"docClass\">Ext.plugin.Abstract.destroy</a>"},{"name":"destroy","owner":"Ext.app.BaseController","link":"<a href=\"#!/api/Ext.app.BaseController-method-destroy\" rel=\"Ext.app.BaseController-method-destroy\" class=\"docClass\">Ext.app.BaseController.destroy</a>"}],"short_doc":"This method is called to cleanup an object and its resources. ..."},{"tagname":"method","name":"doFireEvent","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":652}],"doc":"<p>Continue to fire event.</p>\n","private":true,"params":[{"tagname":"params","type":"String","name":"eventName","doc":"\n","html_type":"String"},{"tagname":"params","type":"Array","name":"args","doc":"\n","html_type":"Array"},{"tagname":"params","type":"Boolean","name":"bubbles","doc":"\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getBubbleParent"],"id":"method-doFireEvent","owner":"Ext.mixin.Observable","short_doc":"Continue to fire event. ..."},{"tagname":"method","name":"each","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/LruCache.js","linenr":170}],"doc":"<p>Executes the specified function once for each item in the cache.\nReturning false from the function will cease iteration.</p>\n\n<p>By default, iteration is from least recently used to most recent.</p>\n\n<p>The paramaters passed to the function are:</p>\n\n<div class=\"mdetail-params\"><ul>\n<li><b>key</b> : String<p class=\"sub-desc\">The key of the item</p></li>\n<li><b>value</b> : Number<p class=\"sub-desc\">The value of the item</p></li>\n<li><b>length</b> : Number<p class=\"sub-desc\">The total number of items in the hash</p></li>\n</ul></div>\n\n","params":[{"tagname":"params","type":"Function","name":"fn","doc":"<p>The function to execute.</p>\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) to execute in. Defaults to this LruCache.</p>\n","html_type":"Object"},{"tagname":"params","type":"Boolean","name":"reverse","default":"false","optional":true,"doc":"<p>Pass <code>true</code> to iterate the list in reverse (most recent first) order.</p>\n","html_type":"Boolean"}],"return":{"type":"Ext.util.LruCache","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.LruCache\" rel=\"Ext.util.LruCache\" class=\"docClass\">Ext.util.LruCache</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"method-each","owner":"Ext.util.LruCache","overrides":[{"name":"each","owner":"Ext.util.HashMap","link":"<a href=\"#!/api/Ext.util.HashMap-method-each\" rel=\"Ext.util.HashMap-method-each\" class=\"docClass\">Ext.util.HashMap.each</a>"}],"short_doc":"Executes the specified function once for each item in the cache. ..."},{"tagname":"method","name":"enableBubble","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1329}],"doc":"<p>Enables events fired by this Observable to bubble up an owner hierarchy by calling <code>this.getBubbleTarget()</code> if\npresent. There is no implementation in the Observable base class.</p>\n\n<p>This is commonly used by Ext.Components to bubble events to owner Containers.\nSee <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>. The default implementation in <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> returns the\nComponent's immediate owner. But if a known target is required, this can be overridden to access the\nrequired target more quickly.</p>\n\n<p>Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.overrides.form.field.Base', {\n    override: '<a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a>',\n\n    //  Add functionality to Field's initComponent to enable the change event to bubble\n    initComponent: function () {\n        this.callParent();\n        this.enableBubble('change');\n    }\n});\n\nvar myForm = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.form.Panel\" rel=\"Ext.form.Panel\" class=\"docClass\">Ext.form.Panel</a>', {\n    title: 'User Details',\n    items: [{\n        ...\n    }],\n    listeners: {\n        change: function() {\n            // Title goes red if form has been modified.\n            myForm.header.setStyle('color', 'red');\n        }\n    }\n});\n</code></pre>\n","params":[{"tagname":"params","type":"String/String[]","name":"eventNames","doc":"<p>The event name to bubble, or an Array of event names.</p>\n","html_type":"String/String[]"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["_initEvent"],"id":"method-enableBubble","owner":"Ext.mixin.Observable","short_doc":"Enables events fired by this Observable to bubble up an owner hierarchy by calling this.getBubbleTarget() if\npresent. ..."},{"tagname":"method","name":"find","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/PageMap.js","linenr":133}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":133,"params":[{"name":"property","type":"Object","html_type":"Object"},{"name":"value","type":"Object","html_type":"Object"},{"name":"start","type":"Object","html_type":"Object"},{"name":"startsWith","type":"Object","html_type":"Object"},{"name":"endsWith","type":"Object","html_type":"Object"},{"name":"ignoreCase","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["findBy","getRootProperty"],"id":"method-find","owner":"Ext.data.PageMap","short_doc":" ..."},{"tagname":"method","name":"findBy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/PageMap.js","linenr":67}],"doc":"<p>Returns the first record in this page map which elicits a true return value from the\npassed selection function.</p>\n\n<p>**IMPORTANT\nThis can ONLY find records which happen to be cached in the page cache. This will be parts of the dataset around the currently\nvisible zone, or recently visited zones if the pages have not yet been purged from the cache.</p>\n\n<p>This CAN NOT find records which have not been loaded into the cache.**</p>\n\n<p>If full client side searching is required, do not use a buffered store, instead use a regular, fully loaded store and\nuse the <a href=\"#!/api/Ext.grid.plugin.BufferedRenderer\" rel=\"Ext.grid.plugin.BufferedRenderer\" class=\"docClass\">BufferedRenderer</a> plugin to minimize DOM footprint.</p>\n","params":[{"tagname":"params","type":"Function","name":"fn","doc":"<p>The selection function to execute for each item.</p>\n","properties":[{"tagname":"params","type":"Mixed","name":"rec","doc":"<p>The record.</p>\n","html_type":"Mixed"},{"tagname":"params","type":"Mixed","name":"index","doc":"<p>The index in the total dataset of the record.</p>\n","html_type":"Mixed"}],"html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (<code>this</code> reference) in which the function is executed. Defaults to this PageMap.</p>\n","html_type":"Object"}],"return":{"type":"Object","name":"return","doc":"<p>The first record in this page map which returned true from the selection\nfunction, or null if none was found.</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["forEach"],"id":"method-findBy","owner":"Ext.data.PageMap","short_doc":"Returns the first record in this page map which elicits a true return value from the\npassed selection function. ..."},{"tagname":"method","name":"findIndex","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/PageMap.js","linenr":146}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":146,"params":[{"name":"property","type":"Object","html_type":"Object"},{"name":"value","type":"Object","html_type":"Object"},{"name":"start","type":"Object","html_type":"Object"},{"name":"startsWith","type":"Object","html_type":"Object"},{"name":"endsWith","type":"Object","html_type":"Object"},{"name":"ignoreCase","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["findIndexBy","getRootProperty"],"id":"method-findIndex","owner":"Ext.data.PageMap","short_doc":" ..."},{"tagname":"method","name":"findIndexBy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/PageMap.js","linenr":100}],"doc":"<p>Returns the index <em>in the whole dataset</em> of the first record in this page map which elicits a true return value from the\npassed selection function.</p>\n\n<p>**IMPORTANT\nThis can ONLY find records which happen to be cached in the page cache. This will be parts of the dataset around the currently\nvisible zone, or recently visited zones if the pages have not yet been purged from the cache.</p>\n\n<p>This CAN NOT find records which have not been loaded into the cache.**</p>\n\n<p>If full client side searching is required, do not use a buffered store, instead use a regular, fully loaded store and\nuse the <a href=\"#!/api/Ext.grid.plugin.BufferedRenderer\" rel=\"Ext.grid.plugin.BufferedRenderer\" class=\"docClass\">BufferedRenderer</a> plugin to minimize DOM footprint.</p>\n","params":[{"tagname":"params","type":"Function","name":"fn","doc":"<p>The selection function to execute for each item.</p>\n","properties":[{"tagname":"params","type":"Mixed","name":"rec","doc":"<p>The record.</p>\n","html_type":"Mixed"},{"tagname":"params","type":"Mixed","name":"index","doc":"<p>The index in the total dataset of the record.</p>\n","html_type":"Mixed"}],"html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (<code>this</code> reference) in which the function is executed. Defaults to this PageMap.</p>\n","html_type":"Object"}],"return":{"type":"Number","name":"return","doc":"<p>The index first record in this page map which returned true from the selection\nfunction, or -1 if none was found.</p>\n","properties":null,"html_type":"Number"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["forEach"],"id":"method-findIndexBy","owner":"Ext.data.PageMap","short_doc":"Returns the index in the whole dataset of the first record in this page map which elicits a true return value from th..."},{"tagname":"method","name":"findKey","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/LruCache.js","linenr":202}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"value","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-findKey","owner":"Ext.util.LruCache","overrides":[{"name":"findKey","owner":"Ext.util.HashMap","link":"<a href=\"#!/api/Ext.util.HashMap-method-findKey\" rel=\"Ext.util.HashMap-method-findKey\" class=\"docClass\">Ext.util.HashMap.findKey</a>"}],"short_doc":" ..."},{"tagname":"method","name":"fireAction","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":614}],"doc":"<p>Fires the specified event with the passed parameters and executes a function (action).\nBy default, the action function will be executed after any \"before\" event handlers\n(as specified using the <code>order</code> option of <code><a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a></code>), but before any\nother handlers are fired.  This gives the \"before\" handlers an opportunity to\ncancel the event by returning <code>false</code>, and prevent the action function from being\ncalled.</p>\n\n<p>The action can also be configured to run after normal handlers, but before any \"after\"\nhandlers (as specified using the <code>order</code> event option) by passing <code>'after'</code>\nas the <code>order</code> parameter.  This configuration gives any event handlers except\nfor \"after\" handlers the opportunity to cancel the event and prevent the action\nfunction from being called.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n","html_type":"String"},{"tagname":"params","type":"Array","name":"args","doc":"<p>Arguments to pass to handlers and to the action function.</p>\n","html_type":"Array"},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The action function.</p>\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>Event options for the action function.  Accepts any\nof the options of <code><a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a></code></p>\n","html_type":"Object"},{"tagname":"params","type":"String","name":"order","default":"'before'","optional":true,"doc":"<p>The order to call the action function relative\ntoo the event handlers (<code>'before'</code> or <code>'after'</code>).  Note that this option is\nsimply used to sort the action function relative to the event handlers by \"priority\".\nAn order of <code>'before'</code> is equivalent to a priority of <code>99.5</code>, while an order of\n<code>'after'</code> is equivalent to a priority of <code>-99.5</code>.  See the <code>priority</code> option\nof <code><a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a></code> for more details.</p>\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["doAddListener","fireEventArgs"],"id":"method-fireAction","owner":"Ext.mixin.Observable","short_doc":"Fires the specified event with the passed parameters and executes a function (action). ..."},{"tagname":"method","name":"fireEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":550}],"doc":"<p>Fires the specified event with the passed parameters (minus the event name, plus the <code>options</code> object passed\nto <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a>).</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy (See <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by\ncalling <a href=\"#!/api/Ext.mixin.Observable-method-enableBubble\" rel=\"Ext.mixin.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n","html_type":"String"},{"tagname":"params","type":"Object...","name":"args","doc":"<p>Variable number of parameters are passed to handlers.</p>\n","html_type":"Object..."}],"return":{"type":"Boolean","name":"return","doc":"<p>returns false if any of the handlers return false otherwise it returns true.</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["fireEventArgs"],"id":"method-fireEvent","owner":"Ext.mixin.Observable","short_doc":"Fires the specified event with the passed parameters (minus the event name, plus the options object passed\nto addList..."},{"tagname":"method","name":"fireEventArgs","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":588}],"doc":"<p>Fires the specified event with the passed parameter list.</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy (See <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by\ncalling <a href=\"#!/api/Ext.mixin.Observable-method-enableBubble\" rel=\"Ext.mixin.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n","html_type":"String"},{"tagname":"params","type":"Object[]","name":"args","doc":"<p>An array of parameters which are passed to handlers.</p>\n","html_type":"Object[]"}],"return":{"type":"Boolean","name":"return","doc":"<p>returns false if any of the handlers return false otherwise it returns true.</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["doFireEvent"],"id":"method-fireEventArgs","owner":"Ext.mixin.Observable","short_doc":"Fires the specified event with the passed parameter list. ..."},{"tagname":"method","name":"forEach","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/PageMap.js","linenr":40}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":40,"params":[{"name":"fn","type":"Object","html_type":"Object"},{"name":"scope","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["getPage","getPageSize"],"id":"method-forEach","owner":"Ext.data.PageMap","short_doc":" ..."},{"tagname":"method","name":"get","autodetected":{"tagname":"method","static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/LruCache.js","linenr":91}],"doc":"<p>Retrieves an item with a particular key.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"name":"key","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["moveToEnd"],"id":"method-get","owner":"Ext.util.LruCache","return":{"type":"Object","name":"return","doc":"<p>The value at that key. If it doesn't exist, <code>undefined</code> is returned.</p>\n","properties":null,"html_type":"Object"},"overrides":[{"name":"get","owner":"Ext.util.HashMap","link":"<a href=\"#!/api/Ext.util.HashMap-method-get\" rel=\"Ext.util.HashMap-method-get\" class=\"docClass\">Ext.util.HashMap.get</a>"}],"short_doc":"Retrieves an item with a particular key. ..."},{"tagname":"method","name":"getArray","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/LruCache.js","linenr":156}],"doc":"<p>Gets either the keys/values in an array from the hash.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"Boolean","name":"isKey","doc":"<p>True to extract the keys, otherwise, the value</p>\n","html_type":"Boolean"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-getArray","owner":"Ext.util.LruCache","return":{"type":"Array","name":"return","doc":"<p>An array of either keys/values from the hash.</p>\n","properties":null,"html_type":"Array"},"throws":null,"type":null,"overrides":[{"name":"getArray","owner":"Ext.util.HashMap","link":"<a href=\"#!/api/Ext.util.HashMap-method-getArray\" rel=\"Ext.util.HashMap-method-getArray\" class=\"docClass\">Ext.util.HashMap.getArray</a>"}],"short_doc":"Gets either the keys/values in an array from the hash. ..."},{"tagname":"method","name":"getAt","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/PageMap.js","linenr":288}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":288,"params":[{"name":"index","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["getRange"],"id":"method-getAt","owner":"Ext.data.PageMap","short_doc":" ..."},{"tagname":"method","name":"getBubbleParent","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":685}],"doc":"<p>Gets the bubbling parent for an Observable</p>\n","private":true,"return":{"type":"Ext.util.Observable","name":"return","doc":"<p>The bubble parent. null is returned if no bubble target exists</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getBubbleTarget"],"id":"method-getBubbleParent","owner":"Ext.mixin.Observable","short_doc":"Gets the bubbling parent for an Observable ..."},{"tagname":"method","name":"getByInternalId","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/PageMap.js","linenr":203}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":203,"params":[{"name":"internalId","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["getAt"],"id":"method-getByInternalId","owner":"Ext.data.PageMap","short_doc":" ..."},{"tagname":"method","name":"getConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1431}],"doc":"<p>Returns a specified config property value. If the name parameter is not passed,\nall current configuration options will be returned as key value pairs.</p>\n","params":[{"tagname":"params","type":"String","name":"name","optional":true,"doc":"<p>The name of the config property to get.</p>\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"peek","default":"false","optional":true,"doc":"<p><code>true</code> to peek at the raw value without calling the getter.</p>\n","html_type":"Boolean"}],"return":{"type":"Object","name":"return","doc":"<p>The config property value.</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-getConfig","owner":"Ext.Base","short_doc":"Returns a specified config property value. ..."},{"tagname":"method","name":"getCount","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/PageMap.js","linenr":195}],"doc":"<p>Gets the number of items in the hash.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":195,"params":[],"chainable":false,"fires":[],"method_calls":["callParent","getPageSize"],"id":"method-getCount","owner":"Ext.data.PageMap","return":{"type":"Number","name":"return","doc":"<p>The number of items in the hash.</p>\n","properties":null,"html_type":"Number"},"overrides":[{"name":"getCount","owner":"Ext.util.HashMap","link":"<a href=\"#!/api/Ext.util.HashMap-method-getCount\" rel=\"Ext.util.HashMap-method-getCount\" class=\"docClass\">Ext.util.HashMap.getCount</a>"}],"short_doc":"Gets the number of items in the hash. ..."},{"tagname":"method","name":"getCurrentConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1471}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getConfigurator"],"id":"method-getCurrentConfig","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"getData","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/HashMap.js","linenr":95}],"doc":"<p>Implementation for being able to extract the key from an object if only\na single argument is passed.</p>\n","private":true,"params":[{"tagname":"params","type":"String","name":"key","doc":"<p>The key</p>\n","html_type":"String"},{"tagname":"params","type":"Object","name":"value","doc":"<p>The value</p>\n","html_type":"Object"}],"return":{"type":"Array","name":"return","doc":"<p>[key, value]</p>\n","properties":null,"html_type":"Array"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getKey"],"id":"method-getData","owner":"Ext.util.HashMap","short_doc":"Implementation for being able to extract the key from an object if only\na single argument is passed. ..."},{"tagname":"method","name":"getInitialConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1488}],"doc":"<p>Returns the initial configuration passed to constructor when instantiating\nthis class.</p>\n","params":[{"tagname":"params","type":"String","name":"name","optional":true,"doc":"<p>Name of the config option to return.</p>\n","html_type":"String"}],"return":{"type":"Object/Mixed","name":"return","doc":"<p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n","properties":null,"html_type":"Object/Mixed"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getInitialConfig","owner":"Ext.Base","short_doc":"Returns the initial configuration passed to constructor when instantiating\nthis class. ..."},{"tagname":"method","name":"getKey","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/HashMap.js","linenr":113}],"doc":"<p>Extracts the key from an object. This is a default implementation, it may be overridden</p>\n","params":[{"tagname":"params","type":"Object","name":"o","doc":"<p>The object to get the key from</p>\n","html_type":"Object"}],"return":{"type":"String","name":"return","doc":"<p>The key to use.</p>\n","properties":null,"html_type":"String"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getKey","owner":"Ext.util.HashMap","short_doc":"Extracts the key from an object. ..."},{"tagname":"method","name":"getKeyFn","doc":"<p>Returns the value of <a href=\"#!/api/Ext.util.HashMap-cfg-keyFn\" rel=\"Ext.util.HashMap-cfg-keyFn\" class=\"docClass\">keyFn</a>.</p>\n","params":[],"return":{"type":"Function","doc":"\n","html_type":"Function"},"id":"method-getKeyFn","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/HashMap.js","linenr":30}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.HashMap","short_doc":"Returns the value of keyFn. ..."},{"tagname":"method","name":"getKeys","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/LruCache.js","linenr":261}],"doc":"\n","private":true,"params":[],"id":"method-getKeys","owner":"Ext.util.LruCache","overrides":[{"name":"getKeys","owner":"Ext.util.HashMap","link":"<a href=\"#!/api/Ext.util.HashMap-method-getKeys\" rel=\"Ext.util.HashMap-method-getKeys\" class=\"docClass\">Ext.util.HashMap.getKeys</a>"}],"short_doc":" ..."},{"tagname":"method","name":"getMaxSize","doc":"<p>Returns the value of <a href=\"#!/api/Ext.util.LruCache-cfg-maxSize\" rel=\"Ext.util.LruCache-cfg-maxSize\" class=\"docClass\">maxSize</a>.</p>\n","params":[],"return":{"type":"Number","doc":"\n","html_type":"Number"},"id":"method-getMaxSize","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/LruCache.js","linenr":13}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.LruCache","short_doc":"Returns the value of maxSize. ..."},{"tagname":"method","name":"getPage","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/PageMap.js","linenr":263}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":263,"params":[{"name":"pageNumber","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["get"],"id":"method-getPage","owner":"Ext.data.PageMap","short_doc":" ..."},{"tagname":"method","name":"getPageFromRecordIndex","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/PageMap.js","linenr":159}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":159,"params":[{"name":"index","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["getPageSize"],"id":"method-getPageFromRecordIndex","owner":"Ext.data.PageMap","short_doc":" ..."},{"tagname":"method","name":"getPageSize","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.PageMap-cfg-pageSize\" rel=\"Ext.data.PageMap-cfg-pageSize\" class=\"docClass\">pageSize</a>.</p>\n","params":[],"return":{"type":"Number","doc":"\n","html_type":"Number"},"id":"method-getPageSize","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/PageMap.js","linenr":13}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.PageMap","short_doc":"Returns the value of pageSize. ..."},{"tagname":"method","name":"getRange","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/PageMap.js","linenr":292}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":292,"params":[{"name":"start","type":"Object","html_type":"Object"},{"name":"end","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["getPage","getPageFromRecordIndex","getPageSize","hasRange"],"id":"method-getRange","owner":"Ext.data.PageMap","short_doc":" ..."},{"tagname":"method","name":"getRootProperty","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.PageMap-cfg-rootProperty\" rel=\"Ext.data.PageMap-cfg-rootProperty\" class=\"docClass\">rootProperty</a>.</p>\n","params":[],"return":{"type":"String","doc":"\n","html_type":"String"},"id":"method-getRootProperty","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/PageMap.js","linenr":19}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.PageMap","short_doc":"Returns the value of rootProperty. ..."},{"tagname":"method","name":"getStore","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.PageMap-cfg-store\" rel=\"Ext.data.PageMap-cfg-store\" class=\"docClass\">store</a>.</p>\n","params":[],"return":{"type":"Object","doc":"\n","html_type":"Object"},"id":"method-getStore","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/PageMap.js","linenr":11}],"static":null,"private":null,"inheritable":null,"linenr":11,"owner":"Ext.data.PageMap","short_doc":"Returns the value of store. ..."},{"tagname":"method","name":"getValues","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/LruCache.js","linenr":265}],"doc":"\n","private":true,"params":[],"id":"method-getValues","owner":"Ext.util.LruCache","overrides":[{"name":"getValues","owner":"Ext.util.HashMap","link":"<a href=\"#!/api/Ext.util.HashMap-method-getValues\" rel=\"Ext.util.HashMap-method-getValues\" class=\"docClass\">Ext.util.HashMap.getValues</a>"}],"short_doc":" ..."},{"tagname":"method","name":"hasConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1480}],"doc":"\n","private":true,"params":[{"tagname":"params","name":"config","doc":"\n","type":"Object","html_type":"Object"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-hasConfig","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"hasListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1138}],"doc":"<p>Checks to see if this object has any listeners for a specified event, or whether the event bubbles. The answer\nindicates whether the event needs firing or not.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to check for</p>\n","html_type":"String"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the event is being listened for or bubbles, else <code>false</code></p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-hasListener","owner":"Ext.mixin.Observable","short_doc":"Checks to see if this object has any listeners for a specified event, or whether the event bubbles. ..."},{"tagname":"method","name":"hasPage","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/PageMap.js","linenr":279}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":279,"params":[{"name":"pageNumber","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["get"],"id":"method-hasPage","owner":"Ext.data.PageMap","short_doc":" ..."},{"tagname":"method","name":"hasRange","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/PageMap.js","linenr":267}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":267,"params":[{"name":"start","type":"Object","html_type":"Object"},{"name":"end","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["getPageFromRecordIndex","hasPage"],"id":"method-hasRange","owner":"Ext.data.PageMap","short_doc":" ..."},{"tagname":"method","name":"indexOf","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/PageMap.js","linenr":210}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":210,"params":[{"name":"record","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-indexOf","owner":"Ext.data.PageMap","short_doc":" ..."},{"tagname":"method","name":"initConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1393}],"doc":"<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n","protected":true,"params":[{"tagname":"params","type":"Object","name":"config","doc":"\n","html_type":"Object"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["getConfigurator"],"id":"method-initConfig","owner":"Ext.Base","short_doc":"Initialize configuration for this class. ..."},{"tagname":"method","name":"insert","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/PageMap.js","linenr":221}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":221,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-insert","owner":"Ext.data.PageMap","short_doc":" ..."},{"tagname":"method","name":"insertBefore","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/LruCache.js","linenr":50}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"key","type":"Object","html_type":"Object"},{"name":"newValue","type":"Object","html_type":"Object"},{"name":"sibling","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.util.LruCache-event-add\" rel=\"Ext.util.LruCache-event-add\" class=\"docClass\">add</a>","<a href=\"#!/api/Ext.util.LruCache-event-remove\" rel=\"Ext.util.LruCache-event-remove\" class=\"docClass\">remove</a>"],"method_calls":["add","findKey","prune","unlinkEntry"],"id":"method-insertBefore","owner":"Ext.util.LruCache","short_doc":" ..."},{"tagname":"method","name":"isSuspended","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1150}],"doc":"<p>Checks if all events, or a specific event, is suspended.</p>\n","params":[{"tagname":"params","type":"String","name":"event","optional":true,"doc":"<p>The name of the specific event to check</p>\n","html_type":"String"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if events are suspended</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-isSuspended","owner":"Ext.mixin.Observable","short_doc":"Checks if all events, or a specific event, is suspended. ..."},{"tagname":"method","name":"link","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1508}],"doc":"<p>Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (via <code><a href=\"#!/api/Ext.Base-method-destroy\" rel=\"Ext.Base-method-destroy\" class=\"docClass\">destroy</a></code>).</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"\n","html_type":"String"},{"tagname":"params","type":"Object","name":"value","doc":"\n","html_type":"Object"}],"return":{"type":"Object","name":"return","doc":"<p>The <code>value</code> passed.</p>\n","properties":null,"html_type":"Object"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-link","owner":"Ext.Base","short_doc":"Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (vi..."},{"tagname":"method","name":"mon","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1665}],"doc":"<p>Shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-addManagedListener\" rel=\"Ext.mixin.Observable-method-addManagedListener\" class=\"docClass\">addManagedListener</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item to which to add a listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","html_type":"Object/String"},{"tagname":"params","type":"Function/String","name":"fn","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event\nname, this is the handler function or the name of a method on the specified\n<code>scope</code>.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n","html_type":"Object"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-mon","owner":"Ext.mixin.Observable","return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners = myButton.mon({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","properties":null,"html_type":"Object"},"throws":null,"type":null,"short_doc":"Shorthand for addManagedListener. ..."},{"tagname":"method","name":"moveToEnd","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/LruCache.js","linenr":140}],"doc":"<p>private. Only used by internal methods.</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[{"name":"entry","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["unlinkEntry"],"id":"method-moveToEnd","owner":"Ext.util.LruCache","short_doc":"private. ..."},{"tagname":"method","name":"mun","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1671}],"doc":"<p>Shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-removeManagedListener\" rel=\"Ext.mixin.Observable-method-removeManagedListener\" class=\"docClass\">removeManagedListener</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item from which to remove a listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","html_type":"Object/String"},{"tagname":"params","type":"Function","name":"fn","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","html_type":"Object"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-mun","owner":"Ext.mixin.Observable","return":null,"throws":null,"type":null,"short_doc":"Shorthand for removeManagedListener. ..."},{"tagname":"method","name":"on","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1654}],"doc":"<p>The <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> method is shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a>.</p>\n\n<p>Appends an event handler to this object.  For example:</p>\n\n<pre><code>myGridPanel.on(\"itemclick\", this.onItemClick, this);\n</code></pre>\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple events. For example:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: this.onCellClick,\n    select: this.onSelect,\n    viewready: this.onViewReady,\n    scope: this // Important. Ensure \"this\" is correct during handler execution\n});\n</code></pre>\n\n<p>One can also specify options for each event handler separately:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: this.onCellClick, scope: this, single: true},\n    viewready: {fn: panel.onViewReady, scope: panel}\n});\n</code></pre>\n\n<p><em>Names</em> of methods in a specified scope may also be used:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: 'onCellClick', scope: this, single: true},\n    viewready: {fn: 'onViewReady', scope: panel}\n});\n</code></pre>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"String/Object","name":"eventName","doc":"<p>The name of the event to listen for.\nMay also be an object who's property names are event names.</p>\n\n","html_type":"String/Object"},{"tagname":"params","type":"Function/String","name":"fn","optional":true,"doc":"<p>The method the event invokes or the <em>name</em> of\nthe method within the specified <code>scope</code>.  Will be called with arguments\ngiven to <a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">Ext.util.Observable.fireEvent</a> plus the <code>options</code> parameter described\nbelow.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>An object containing handler configuration.</p>\n\n\n\n\n<p><strong>Note:</strong> The options object will also be passed as the last argument to every\nevent handler.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n","properties":[{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted,\n  defaults to the object which fired the event.</strong></p>\n\n","html_type":"Object"},{"tagname":"params","type":"Number","name":"delay","doc":"<p>The number of milliseconds to delay the invocation of the handler after the event\n  fires.</p>\n\n","html_type":"Number"},{"tagname":"params","type":"Boolean","name":"single","doc":"<p>True to add a handler to handle just the next firing of the event, and then remove\n  itself.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Number","name":"buffer","doc":"<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"onFrame","doc":"<p>Causes the handler to be scheduled to run at the next\n  <a href=\"#!/api/Ext.Function-method-requestAnimationFrame\" rel=\"Ext.Function-method-requestAnimationFrame\" class=\"docClass\">animation frame event</a>. If the\n  event fires again before that time, the handler is not rescheduled - the handler\n  will only be called once when the next animation frame is fired, with the last set\n  of arguments passed.</p>\n\n","html_type":"Number"},{"tagname":"params","type":"Ext.util.Observable","name":"target","doc":"<p>Only call the handler if the event was fired on the target Observable, <em>not</em> if the\n  event was bubbled up from a child Observable.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},{"tagname":"params","type":"String","name":"element","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</strong>\n  The name of a Component property which references an <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">element</a>\n  to add a listener to.</p>\n\n\n\n\n<p>  This option is useful during Component construction to add DOM event listeners to\n  elements of <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which will exist only after the\n  Component is rendered.</p>\n\n\n\n\n<p>  For example, to add a click listener to a Panel's body:</p>\n\n\n\n\n<pre><code>  var panel = new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n\n\n\n<p>In order to remove listeners attached using the element, you'll need to reference\nthe element itself as seen below.</p>\n\n\n\n\n<pre><code> panel.body.un(...)\n</code></pre>\n\n","html_type":"String"},{"tagname":"params","type":"String","name":"delegate","optional":true,"doc":"<p>A simple selector to filter the event target or look for a descendant of the target.</p>\n\n\n\n\n<p>  The \"delegate\" option is only available on <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instances (or\n  when attaching a listener to a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> via a Component using the\n  element option).</p>\n\n\n\n\n<p>  See the <em>delegate</em> example below.</p>\n\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"stopPropagation","optional":true,"doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopPropagation\" rel=\"Ext.event.Event-method-stopPropagation\" class=\"docClass\">stopPropagation</a> on the event object\n  before firing the handler.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"preventDefault","optional":true,"doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-preventDefault\" rel=\"Ext.event.Event-method-preventDefault\" class=\"docClass\">preventDefault</a> on the event object\n  before firing the handler.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"stopEvent","optional":true,"doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopEvent\" rel=\"Ext.event.Event-method-stopEvent\" class=\"docClass\">stopEvent</a> on the event object\n  before firing the handler.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Array","name":"args","optional":true,"doc":"<p>Optional arguments to pass to the handler function. Any additional arguments\n  passed to <a href=\"#!/api/Ext.mixin.Observable-method-fireEvent\" rel=\"Ext.mixin.Observable-method-fireEvent\" class=\"docClass\">fireEvent</a> will be appended to these arguments.</p>\n\n","html_type":"Array"},{"tagname":"params","type":"Boolean","name":"destroyable","default":"false","optional":true,"doc":"<p>When specified as <code>true</code>, the function returns a <code>destroyable</code> object. An object\n  which implements the <code>destroy</code> method which removes all listeners added in this call.\n  This syntax can be a helpful shortcut to using <a href=\"#!/api/Ext.mixin.Observable-method-un\" rel=\"Ext.mixin.Observable-method-un\" class=\"docClass\">un</a>; particularly when\n  removing multiple listeners.  <em>NOTE</em> - not compatible when using the <em>element</em>\n  option.  See <a href=\"#!/api/Ext.mixin.Observable-method-un\" rel=\"Ext.mixin.Observable-method-un\" class=\"docClass\">un</a> for the proper syntax for removing listeners added using the\n  <em>element</em> config.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Number","name":"priority","optional":true,"doc":"<p>An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handlers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.\n  A priority must be an integer to be valid.  Fractional values are reserved for\n  internal framework use.</p>\n\n","html_type":"Number"},{"tagname":"params","type":"String","name":"order","default":"'current'","optional":true,"doc":"<p>A legacy option that is provided for backward compatibility.\n  It is recommended to use the <code>priority</code> option instead.  Available options are:</p>\n\n\n\n\n<ul>\n<li><code>'before'</code>: equal to a priority of <code>100</code></li>\n<li><code>'current'</code>: equal to a priority of <code>0</code> or default priority</li>\n<li><code>'after'</code>: equal to a priority of <code>-100</code></li>\n</ul>\n\n\n\n","html_type":"String"}],"html_type":"Object"},{"tagname":"params","type":"String","name":"order","default":"'current'","optional":true,"doc":"<p>A shortcut for the <code>order</code> event option.  Provided for backward compatibility.\n  Please use the <code>priority</code> event option instead.</p>\n\n\n\n\n<p><strong>Combining Options</strong></p>\n\n\n\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n\n\n\n<p>A delayed, one-time listener.</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n\n\n\n<p><strong>Attaching multiple handlers in 1 call</strong></p>\n\n\n\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple handlers and handler configs.</p>\n\n\n\n\n<pre><code>grid.on({\n    itemclick: 'onItemClick',\n    itemcontextmenu: grid.onItemContextmenu,\n    destroy: {\n        fn: function () {\n            // function called within the 'altCmp' scope instead of grid\n        },\n        scope: altCmp // unique scope for the destroy handler\n    },\n    scope: grid       // default scope - provided for example clarity\n});\n</code></pre>\n\n\n\n\n<p><strong>Delegate</strong></p>\n\n\n\n\n<p>This is a configuration option that you can pass along when registering a handler for\nan event to assist with event delegation. By setting this configuration option\nto a simple selector, the target element will be filtered to look for a\ndescendant of the target. For example:</p>\n\n\n\n\n<pre><code>var panel = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n    xtype: 'panel',\n    renderTo: document.body,\n    title: 'Delegate Handler Example',\n    frame: true,\n    height: 220,\n    width: 220,\n    html: '&lt;h1 class=\"myTitle\"&gt;BODY TITLE&lt;/h1&gt;Body content'\n});\n\n// The click handler will only be called when the click occurs on the\n// delegate: h1.myTitle (\"h1\" tag with class \"myTitle\")\npanel.on({\n    click: function (e) {\n        console.log(e.getTarget().innerHTML);\n    },\n    element: 'body',\n    delegate: 'h1.myTitle'\n });\n</code></pre>\n\n","html_type":"String"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-on","owner":"Ext.mixin.Observable","return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes\n all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.on({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","properties":null,"html_type":"Object"},"throws":null,"type":null,"short_doc":"The on method is shorthand for addListener. ..."},{"tagname":"method","name":"onAfter","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1557}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-addAfterListener\" rel=\"Ext.mixin.Observable-method-addAfterListener\" class=\"docClass\">addAfterListener</a>.</p>\n","inheritdoc":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> instead.</p>\n","version":"5.1"},"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event to listen for.</p>\n\n","html_type":"String/String[]/Object"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The method the event invokes.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope for <code>fn</code>.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>An object containing handler configuration.</p>\n\n","html_type":"Object"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-onAfter","owner":"Ext.mixin.Observable","return":null,"throws":null,"type":null,"short_doc":"Alias for addAfterListener. ..."},{"tagname":"method","name":"onBefore","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1550}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-addBeforeListener\" rel=\"Ext.mixin.Observable-method-addBeforeListener\" class=\"docClass\">addBeforeListener</a>.</p>\n","inheritdoc":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> instead.</p>\n","version":"5.1"},"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event to listen for.</p>\n\n","html_type":"String/String[]/Object"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The method the event invokes.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope for <code>fn</code>.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>An object containing handler configuration.</p>\n\n","html_type":"Object"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-onBefore","owner":"Ext.mixin.Observable","return":null,"throws":null,"type":null,"short_doc":"Alias for addBeforeListener. ..."},{"tagname":"method","name":"peekPage","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/PageMap.js","linenr":284}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":284,"params":[{"name":"pageNumber","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-peekPage","owner":"Ext.data.PageMap","short_doc":" ..."},{"tagname":"method","name":"prepareClass","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":157}],"doc":"<p>Prepares a given class for observable instances. This method is called when a\nclass derives from this class or uses this class as a mixin.</p>\n","params":[{"tagname":"params","type":"Function","name":"T","doc":"<p>The class constructor to prepare.</p>\n","html_type":"Function"},{"tagname":"params","type":"Ext.util.Observable","name":"mixin","doc":"<p>The mixin if being used as a mixin.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},{"tagname":"params","type":"Object","name":"data","doc":"<p>The raw class creation data if this is an extend.</p>\n","html_type":"Object"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-prepareClass","owner":"Ext.mixin.Observable","short_doc":"Prepares a given class for observable instances. ..."},{"tagname":"method","name":"prune","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/LruCache.js","linenr":238}],"doc":"<p>Purge the least recently used entries if the maxSize has been exceeded.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":["<a href=\"#!/api/Ext.util.LruCache-event-remove\" rel=\"Ext.util.LruCache-event-remove\" class=\"docClass\">remove</a>"],"method_calls":["getMaxSize","removeAtKey"],"id":"method-prune","owner":"Ext.util.LruCache","short_doc":"Purge the least recently used entries if the maxSize has been exceeded. ..."},{"tagname":"method","name":"relayEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1260}],"doc":"<p>Relays selected events from the specified Observable as if the events were fired by <code>this</code>.</p>\n\n<p>For example if you are extending Grid, you might decide to forward some events from store.\nSo you can do this inside your initComponent:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load']);\n</code></pre>\n\n<p>The grid instance will then have an observable 'load' event which will be passed\nthe parameters of the store's load event and any function fired with the grid's\nload event would have access to the grid using the this keyword (unless the event\nis handled by a controller's control/listen event listener in which case 'this'\nwill be the controller rather than the grid).</p>\n","params":[{"tagname":"params","type":"Object","name":"origin","doc":"<p>The Observable whose events this object is to relay.</p>\n","html_type":"Object"},{"tagname":"params","type":"String[]","name":"events","doc":"<p>Array of event names to relay.</p>\n","html_type":"String[]"},{"tagname":"params","type":"String","name":"prefix","optional":true,"doc":"<p>A common prefix to prepend to the event names. For example:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>Now the grid will forward 'load' and 'clear' events of store as 'storeload' and 'storeclear'.</p>\n","html_type":"String"}],"return":{"type":"Object","name":"return","doc":"<p>A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which, when destroyed, removes all relayers. For example:</p>\n\n<pre><code>this.storeRelayers = this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>Can be undone by calling</p>\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.storeRelayers);\n</code></pre>\n\n<p>or\n    this.store.relayers.destroy();</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["createRelayer","mon"],"id":"method-relayEvents","owner":"Ext.mixin.Observable","short_doc":"Relays selected events from the specified Observable as if the events were fired by this. ..."},{"tagname":"method","name":"remove","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/PageMap.js","linenr":227}],"doc":"<p>Remove an item from the hash.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":227,"params":[],"chainable":false,"fires":["beforepageremove","pageremove"],"method_calls":["findKey","removeAtKey"],"id":"method-remove","owner":"Ext.data.PageMap","return":{"type":"Boolean","name":"return","doc":"<p>True if the item was successfully removed.</p>\n","properties":null,"html_type":"Boolean"},"overrides":[{"name":"remove","owner":"Ext.util.HashMap","link":"<a href=\"#!/api/Ext.util.HashMap-method-remove\" rel=\"Ext.util.HashMap-method-remove\" class=\"docClass\">Ext.util.HashMap.remove</a>"}],"short_doc":"Remove an item from the hash. ..."},{"tagname":"method","name":"removeAfterListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1535}],"doc":"<p>Removes a before-event handler.</p>\n\n<p>Same as <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a> with <code>order</code> set to <code>'after'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event the handler was associated with.</p>\n\n","html_type":"String/String[]/Object"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The handler to remove.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope originally specified for <code>fn</code>.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>Extra options object.</p>\n\n","html_type":"Object"}],"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a> instead.</p>\n","version":"5.1"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["removeListener"],"id":"method-removeAfterListener","owner":"Ext.mixin.Observable","short_doc":"Removes a before-event handler. ..."},{"tagname":"method","name":"removeAt","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/PageMap.js","linenr":233}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":233,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-removeAt","owner":"Ext.data.PageMap","short_doc":" ..."},{"tagname":"method","name":"removeAtKey","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/PageMap.js","linenr":239}],"doc":"<p>Remove an item from the hash.</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":239,"params":[{"name":"page","type":"Object","html_type":"Object"}],"chainable":false,"fires":["beforepageremove","pageremove"],"method_calls":["callParent","fireEvent","getPage"],"id":"method-removeAtKey","owner":"Ext.data.PageMap","return":{"type":"Boolean","name":"return","doc":"<p>True if the item was successfully removed.</p>\n","properties":null,"html_type":"Boolean"},"throws":null,"type":null,"overrides":[{"name":"removeAtKey","owner":"Ext.util.LruCache","link":"<a href=\"#!/api/Ext.util.LruCache-method-removeAtKey\" rel=\"Ext.util.LruCache-method-removeAtKey\" class=\"docClass\">Ext.util.LruCache.removeAtKey</a>"}],"short_doc":"Remove an item from the hash. ..."},{"tagname":"method","name":"removeBeforeListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1520}],"doc":"<p>Removes a before-event handler.</p>\n\n<p>Same as <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a> with <code>order</code> set to <code>'before'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event the handler was associated with.</p>\n\n","html_type":"String/String[]/Object"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The handler to remove.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope originally specified for <code>fn</code>.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>Extra options object.</p>\n\n","html_type":"Object"}],"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a> instead.</p>\n","version":"5.1"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["removeListener"],"id":"method-removeBeforeListener","owner":"Ext.mixin.Observable","short_doc":"Removes a before-event handler. ..."},{"tagname":"method","name":"removeListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":992}],"doc":"<p>Removes an event handler.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The type of event the handler was associated with.</p>\n\n","html_type":"String"},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The handler to remove. <strong>This must be a reference to the function\npassed into the\n<a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope originally specified for the handler. It\nmust be the same as the scope argument specified in the original call to\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a> or the listener will not be removed.</p>\n\n\n\n\n<p><strong>Convenience Syntax</strong></p>\n\n\n\n\n<p>You can use the {link <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> addListener destroyable: true} config option in\nplace of calling un().  For example:</p>\n\n\n\n\n<pre><code>var listeners = cmp.on({\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide,\n    destroyable: true\n});\n\n// Remove listeners\nlisteners.destroy();\n// or\ncmp.un(\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide\n);\n</code></pre>\n\n\n\n\n<p><strong>Exception - DOM event handlers using the element config option</strong></p>\n\n\n\n\n<p>You must go directly through the element to detach an event handler attached using\nthe <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> <em>element</em> option.</p>\n\n\n\n\n<pre><code>panel.on({\n    element: 'body',\n    click: 'onBodyCLick'\n});\n\npanel.body.un({\n    click: 'onBodyCLick'\n});\n</code></pre>\n\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["doRemoveListener"],"id":"method-removeListener","owner":"Ext.mixin.Observable","short_doc":"Removes an event handler. ..."},{"tagname":"method","name":"removeManagedListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":512}],"doc":"<p>Removes listeners that were added by the <a href=\"#!/api/Ext.mixin.Observable-method-mon\" rel=\"Ext.mixin.Observable-method-mon\" class=\"docClass\">mon</a> method.</p>\n","params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item from which to remove a listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","html_type":"Object/String"},{"tagname":"params","type":"Function","name":"fn","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["removeManagedListener","removeManagedListenerItem"],"id":"method-removeManagedListener","owner":"Ext.mixin.Observable","short_doc":"Removes listeners that were added by the mon method. ..."},{"tagname":"method","name":"removeManagedListenerItem","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1112}],"doc":"<p>Remove a single managed listener item</p>\n","private":true,"params":[{"tagname":"params","type":"Boolean","name":"isClear","doc":"<p>True if this is being called during a clear</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Object","name":"managedListener","doc":"<p>The managed listener item\nSee removeManagedListener for other args</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-removeManagedListenerItem","owner":"Ext.mixin.Observable","short_doc":"Remove a single managed listener item ..."},{"tagname":"method","name":"replace","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/HashMap.js","linenr":159}],"doc":"<p>Replaces an item in the hash. If the key doesn't exist, the\n<a href=\"#!/api/Ext.util.HashMap-method-add\" rel=\"Ext.util.HashMap-method-add\" class=\"docClass\">add</a> method will be used.</p>\n","params":[{"tagname":"params","type":"String","name":"key","doc":"<p>The key of the item.</p>\n","html_type":"String"},{"tagname":"params","type":"Object","name":"value","doc":"<p>The new value for the item.</p>\n","html_type":"Object"}],"return":{"type":"Object","name":"return","doc":"<p>The new value of the item.</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":["<a href=\"#!/api/Ext.util.HashMap-event-add\" rel=\"Ext.util.HashMap-event-add\" class=\"docClass\">add</a>","<a href=\"#!/api/Ext.util.HashMap-event-remove\" rel=\"Ext.util.HashMap-event-remove\" class=\"docClass\">remove</a>","<a href=\"#!/api/Ext.util.HashMap-event-replace\" rel=\"Ext.util.HashMap-event-replace\" class=\"docClass\">replace</a>"],"method_calls":["add","containsKey","fireEvent","getKey"],"id":"method-replace","owner":"Ext.util.HashMap","short_doc":"Replaces an item in the hash. ..."},{"tagname":"method","name":"resolveListenerScope","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":565}],"doc":"<p>Gets the default scope for firing late bound events (string names with\nno scope attached) at runtime.</p>\n","params":[{"tagname":"params","type":"Object","name":"defaultScope","default":"this","optional":true,"doc":"<p>The default scope to return if none is found.</p>\n","html_type":"Object"}],"return":{"type":"Object","name":"return","doc":"<p>The default event scope</p>\n\n","properties":null,"html_type":"Object"},"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-resolveListenerScope","owner":"Ext.mixin.Observable","overrides":[{"name":"resolveListenerScope","owner":"Ext.mixin.Inheritable","link":"<a href=\"#!/api/Ext.mixin.Inheritable-method-resolveListenerScope\" rel=\"Ext.mixin.Inheritable-method-resolveListenerScope\" class=\"docClass\">Ext.mixin.Inheritable.resolveListenerScope</a>"},{"name":"resolveListenerScope","owner":"Ext.plugin.Abstract","link":"<a href=\"#!/api/Ext.plugin.Abstract-method-resolveListenerScope\" rel=\"Ext.plugin.Abstract-method-resolveListenerScope\" class=\"docClass\">Ext.plugin.Abstract.resolveListenerScope</a>"}],"short_doc":"Gets the default scope for firing late bound events (string names with\nno scope attached) at runtime. ..."},{"tagname":"method","name":"resumeEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1209}],"doc":"<p>Resumes firing of the named event(s).</p>\n\n<p>After calling this method to resume events, the events will fire when requested to fire.</p>\n\n<p><strong>Note that if the <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvent\" rel=\"Ext.mixin.Observable-method-suspendEvent\" class=\"docClass\">suspendEvent</a> method is called multiple times for a certain event,\nthis converse method will have to be called the same number of times for it to resume firing.</strong></p>\n","params":[{"tagname":"params","type":"String...","name":"eventName","doc":"<p>Multiple event names to resume.</p>\n","html_type":"String..."}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-resumeEvent","owner":"Ext.mixin.Observable","short_doc":"Resumes firing of the named event(s). ..."},{"tagname":"method","name":"resumeEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1233}],"doc":"<p>Resumes firing events (see <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvents\" rel=\"Ext.mixin.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a>).</p>\n\n<p>If events were suspended using the <code>queueSuspended</code> parameter, then all events fired\nduring event suspension will be sent to any listeners now.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"discardQueue","optional":true,"doc":"<p><code>true</code> to prevent any previously queued events from firing\nwhile we were suspended. See <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvents\" rel=\"Ext.mixin.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a>.</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-resumeEvents","owner":"Ext.mixin.Observable","short_doc":"Resumes firing events (see suspendEvents). ..."},{"tagname":"method","name":"setConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1441}],"doc":"<p>Sets a single/multiple configuration options.</p>\n","params":[{"tagname":"params","type":"String/Object","name":"name","doc":"<p>The name of the property to set, or a set of key value pairs to set.</p>\n","html_type":"String/Object"},{"tagname":"params","type":"Object","name":"value","optional":true,"doc":"<p>The value to set for the name parameter.</p>\n","html_type":"Object"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["getConfigurator"],"id":"method-setConfig","owner":"Ext.Base","short_doc":"Sets a single/multiple configuration options. ..."},{"tagname":"method","name":"setKeyFn","doc":"<p>Sets the value of <a href=\"#!/api/Ext.util.HashMap-cfg-keyFn\" rel=\"Ext.util.HashMap-cfg-keyFn\" class=\"docClass\">keyFn</a>.</p>\n","params":[{"type":"Function","name":"keyFn","doc":"<p>The new value.</p>\n","html_type":"Function"}],"id":"method-setKeyFn","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/HashMap.js","linenr":30}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.HashMap","short_doc":"Sets the value of keyFn. ..."},{"tagname":"method","name":"setListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1677}],"doc":"<p>An alias for <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a>.  In versions prior to 5.1, <a href=\"#!/api/Ext.mixin.Observable-cfg-listeners\" rel=\"Ext.mixin.Observable-cfg-listeners\" class=\"docClass\">listeners</a>\nhad a generated setter which could be called to add listeners.  In 5.1 the listeners\nconfig is not processed using the config system and has no generated setter, so\nthis method is provided for backward compatibility.  The preferred way of\nadding listeners is to use the <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> method.</p>\n","params":[{"tagname":"params","type":"Object","name":"listeners","doc":"<p>The listeners</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-setListeners","owner":"Ext.mixin.Observable","short_doc":"An alias for addListener. ..."},{"tagname":"method","name":"setMaxSize","doc":"<p>Sets the value of <a href=\"#!/api/Ext.util.LruCache-cfg-maxSize\" rel=\"Ext.util.LruCache-cfg-maxSize\" class=\"docClass\">maxSize</a>.</p>\n","params":[{"type":"Number","name":"maxSize","doc":"<p>The new value.</p>\n","html_type":"Number"}],"id":"method-setMaxSize","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/LruCache.js","linenr":13}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.LruCache","short_doc":"Sets the value of maxSize. ..."},{"tagname":"method","name":"setPageSize","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.PageMap-cfg-pageSize\" rel=\"Ext.data.PageMap-cfg-pageSize\" class=\"docClass\">pageSize</a>.</p>\n","params":[{"type":"Number","name":"pageSize","doc":"<p>The new value.</p>\n","html_type":"Number"}],"id":"method-setPageSize","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/PageMap.js","linenr":13}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.PageMap","short_doc":"Sets the value of pageSize. ..."},{"tagname":"method","name":"setRootProperty","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.PageMap-cfg-rootProperty\" rel=\"Ext.data.PageMap-cfg-rootProperty\" class=\"docClass\">rootProperty</a>.</p>\n","params":[{"type":"String","name":"rootProperty","doc":"<p>The new value.</p>\n","html_type":"String"}],"id":"method-setRootProperty","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/PageMap.js","linenr":19}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.PageMap","short_doc":"Sets the value of rootProperty. ..."},{"tagname":"method","name":"setStore","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.PageMap-cfg-store\" rel=\"Ext.data.PageMap-cfg-store\" class=\"docClass\">store</a>.</p>\n","params":[{"type":"Object","name":"store","doc":"<p>The new value.</p>\n","html_type":"Object"}],"id":"method-setStore","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/PageMap.js","linenr":11}],"static":null,"private":null,"inheritable":null,"linenr":11,"owner":"Ext.data.PageMap","short_doc":"Sets the value of store. ..."},{"tagname":"method","name":"statics","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1075}],"doc":"<p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self();   // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n","protected":true,"return":{"type":"Ext.Class","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-statics","owner":"Ext.Base","short_doc":"Get the reference to the class from which this object was instantiated. ..."},{"tagname":"method","name":"suspendEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1181}],"doc":"<p>Suspends firing of the named event(s).</p>\n\n<p>After calling this method to suspend events, the events will no longer fire when requested to fire.</p>\n\n<p><strong>Note that if this is called multiple times for a certain event, the converse method\n<a href=\"#!/api/Ext.mixin.Observable-method-resumeEvent\" rel=\"Ext.mixin.Observable-method-resumeEvent\" class=\"docClass\">resumeEvent</a> will have to be called the same number of times for it to resume firing.</strong></p>\n","params":[{"tagname":"params","type":"String...","name":"eventName","doc":"<p>Multiple event names to suspend.</p>\n","html_type":"String..."}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["_initEvent"],"id":"method-suspendEvent","owner":"Ext.mixin.Observable","short_doc":"Suspends firing of the named event(s). ..."},{"tagname":"method","name":"suspendEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1168}],"doc":"<p>Suspends the firing of all events. (see <a href=\"#!/api/Ext.mixin.Observable-method-resumeEvents\" rel=\"Ext.mixin.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a>)</p>\n","params":[{"tagname":"params","type":"Boolean","name":"queueSuspended","doc":"<p><code>true</code> to queue up suspended events to be fired\nafter the <a href=\"#!/api/Ext.mixin.Observable-method-resumeEvents\" rel=\"Ext.mixin.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> call instead of discarding all suspended events.</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-suspendEvents","owner":"Ext.mixin.Observable","short_doc":"Suspends the firing of all events. ..."},{"tagname":"method","name":"un","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1659}],"doc":"<p>Shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The type of event the handler was associated with.</p>\n\n","html_type":"String"},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The handler to remove. <strong>This must be a reference to the function\npassed into the\n<a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope originally specified for the handler. It\nmust be the same as the scope argument specified in the original call to\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a> or the listener will not be removed.</p>\n\n\n\n\n<p><strong>Convenience Syntax</strong></p>\n\n\n\n\n<p>You can use the {link <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> addListener destroyable: true} config option in\nplace of calling un().  For example:</p>\n\n\n\n\n<pre><code>var listeners = cmp.on({\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide,\n    destroyable: true\n});\n\n// Remove listeners\nlisteners.destroy();\n// or\ncmp.un(\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide\n);\n</code></pre>\n\n\n\n\n<p><strong>Exception - DOM event handlers using the element config option</strong></p>\n\n\n\n\n<p>You must go directly through the element to detach an event handler attached using\nthe <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> <em>element</em> option.</p>\n\n\n\n\n<pre><code>panel.on({\n    element: 'body',\n    click: 'onBodyCLick'\n});\n\npanel.body.un({\n    click: 'onBodyCLick'\n});\n</code></pre>\n\n","html_type":"Object"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-un","owner":"Ext.mixin.Observable","return":null,"throws":null,"type":null,"short_doc":"Shorthand for removeListener. ..."},{"tagname":"method","name":"unAfter","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1571}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-removeAfterListener\" rel=\"Ext.mixin.Observable-method-removeAfterListener\" class=\"docClass\">removeAfterListener</a>.</p>\n","inheritdoc":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-un\" rel=\"Ext.mixin.Observable-method-un\" class=\"docClass\">un</a> instead.</p>\n","version":"5.1"},"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event the handler was associated with.</p>\n\n","html_type":"String/String[]/Object"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The handler to remove.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope originally specified for <code>fn</code>.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>Extra options object.</p>\n\n","html_type":"Object"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-unAfter","owner":"Ext.mixin.Observable","return":null,"throws":null,"type":null,"short_doc":"Alias for removeAfterListener. ..."},{"tagname":"method","name":"unBefore","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1564}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-removeBeforeListener\" rel=\"Ext.mixin.Observable-method-removeBeforeListener\" class=\"docClass\">removeBeforeListener</a>.</p>\n","inheritdoc":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-un\" rel=\"Ext.mixin.Observable-method-un\" class=\"docClass\">un</a> instead.</p>\n","version":"5.1"},"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event the handler was associated with.</p>\n\n","html_type":"String/String[]/Object"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The handler to remove.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope originally specified for <code>fn</code>.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>Extra options object.</p>\n\n","html_type":"Object"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-unBefore","owner":"Ext.mixin.Observable","return":null,"throws":null,"type":null,"short_doc":"Alias for removeBeforeListener. ..."},{"tagname":"method","name":"unlink","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1526}],"doc":"<p>Destroys a given set of <code><a href=\"#!/api/Ext.Base-method-link\" rel=\"Ext.Base-method-link\" class=\"docClass\">linked</a></code> objects. This is only needed if\nthe linked object is being destroyed before this instance.</p>\n","params":[{"tagname":"params","type":"String[]","name":"names","doc":"<p>The names of the linked objects to destroy.</p>\n","html_type":"String[]"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"method-unlink","owner":"Ext.Base","short_doc":"Destroys a given set of linked objects. ..."},{"tagname":"method","name":"unlinkEntry","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/LruCache.js","linenr":122}],"doc":"<p>private. Only used by internal methods.</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[{"name":"entry","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-unlinkEntry","owner":"Ext.util.LruCache","short_doc":"private. ..."},{"tagname":"method","name":"addConfig","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":911}],"doc":"<p>Adds new config properties to this class. This is called for classes when they\nare declared, then for any mixins that class may define and finally for any\noverrides defined that target the class.</p>\n","params":[{"tagname":"params","type":"Object","name":"config","doc":"\n","html_type":"Object"},{"tagname":"params","type":"Ext.Class","name":"mixinClass","optional":true,"doc":"<p>The mixin class if the configs are from a mixin.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"}],"private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["getConfigurator"],"id":"static-method-addConfig","owner":"Ext.Base","short_doc":"Adds new config properties to this class. ..."},{"tagname":"method","name":"addInheritableStatics","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":436}],"doc":"\n","private":true,"static":true,"inheritable":true,"params":[{"tagname":"params","type":"Object","name":"members","doc":"\n","html_type":"Object"}],"inheritdoc":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"static-method-addInheritableStatics","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"addMember","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":634}],"doc":"\n","private":true,"static":true,"inheritable":true,"params":[{"tagname":"params","name":"name","doc":"\n","type":"Object","html_type":"Object"},{"tagname":"params","name":"member","doc":"\n","type":"Object","html_type":"Object"}],"inheritdoc":null,"linenr":null,"chainable":true,"fires":null,"method_calls":["addMembers"],"id":"static-method-addMember","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"addMembers","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":480}],"doc":"<p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat();\n kitty.meow();\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"<p>The members to add to this class.</p>\n","html_type":"Object"},{"tagname":"params","type":"Boolean","name":"isStatic","default":"false","optional":true,"doc":"<p>Pass <code>true</code> if the members are static.</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"privacy","default":"false","optional":true,"doc":"<p>Pass <code>true</code> if the members are private. This\nonly has meaning in debug mode and only for methods.</p>\n","html_type":"Boolean"}],"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":true,"fires":null,"method_calls":["addConfig","addMembers"],"id":"static-method-addMembers","owner":"Ext.Base","short_doc":"Add methods / properties to the prototype of this class. ..."},{"tagname":"method","name":"addStatics","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":413}],"doc":"<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"\n","html_type":"Object"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":true,"fires":null,"method_calls":["addMembers"],"id":"static-method-addStatics","owner":"Ext.Base","short_doc":"Add / override static properties of this class. ..."},{"tagname":"method","name":"borrow","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":648}],"doc":"<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n","params":[{"tagname":"params","type":"Ext.Base","name":"fromClass","doc":"<p>The class to borrow members from</p>\n","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},{"tagname":"params","type":"Array/String","name":"members","doc":"<p>The names of the members to borrow</p>\n","html_type":"Array/String"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"inheritable":true,"private":true,"inheritdoc":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["addMembers"],"id":"static-method-borrow","owner":"Ext.Base","short_doc":"Borrow another class' members to the prototype of this class. ..."},{"tagname":"method","name":"callParent","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":785}],"doc":"\n","protected":true,"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[{"name":"args","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-callParent","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"callSuper","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":799}],"doc":"\n","protected":true,"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[{"name":"args","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-callSuper","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"create","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":94}],"doc":"<p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n","return":{"type":"Object","name":"return","doc":"<p>the created instance.</p>\n","properties":null,"html_type":"Object"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-create","owner":"Ext.Base","short_doc":"Create a new instance of this Class. ..."},{"tagname":"method","name":"createAlias","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":973}],"doc":"<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n","params":[{"tagname":"params","type":"String/Object","name":"alias","doc":"<p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n","html_type":"String/Object"},{"tagname":"params","type":"String/Object","name":"origin","doc":"<p>The original method name</p>\n","html_type":"String/Object"}],"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"static-method-createAlias","owner":"Ext.Base","short_doc":"Create aliases for existing prototype methods. ..."},{"tagname":"method","name":"extend","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":322}],"doc":"\n","private":true,"static":true,"inheritable":true,"params":[{"tagname":"params","name":"config","doc":"\n","type":"Object","html_type":"Object"}],"inheritdoc":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["getConfigurator","hasOwnProperty"],"id":"static-method-extend","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"getConfigurator","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":940}],"doc":"<p>Returns the <code><a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a></code> for this class.</p>\n","return":{"type":"Ext.Configurator","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a>"},"private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-getConfigurator","owner":"Ext.Base","short_doc":"Returns the Ext.Configurator for this class. ..."},{"tagname":"method","name":"getName","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":954}],"doc":"<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n","return":{"type":"String","name":"return","doc":"<p>className</p>\n","properties":null,"html_type":"String"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-getName","owner":"Ext.Base","short_doc":"Get the current class' name in string format. ..."},{"tagname":"method","name":"mixin","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":814}],"doc":"<p>Used internally by the mixins pre-processor</p>\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[{"name":"name","type":"Object","html_type":"Object"},{"name":"mixinClass","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":["addConfig","hasOwnProperty","mixin"],"id":"static-method-mixin","owner":"Ext.Base","short_doc":"Used internally by the mixins pre-processor ..."},{"tagname":"method","name":"onExtended","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":399}],"doc":"\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[{"name":"fn","type":"Object","html_type":"Object"},{"name":"scope","type":"Object","html_type":"Object"}],"chainable":true,"fires":null,"method_calls":null,"id":"static-method-onExtended","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"override","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":695}],"doc":"<p>Override members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>Direct use of this method should be rare. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n","html_type":"Object"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this class</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["addCachedConfig","addConfig","addInheritableStatics","addMembers","mixin"],"id":"static-method-override","owner":"Ext.Base","short_doc":"Override members of this class. ..."},{"tagname":"method","name":"triggerExtended","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":377}],"doc":"\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-triggerExtended","owner":"Ext.Base","short_doc":" ..."},{"tagname":"event","name":"add","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/HashMap.js","linenr":38}],"doc":"<p>Fires when a new item is added to the hash.</p>\n","params":[{"tagname":"params","type":"Ext.util.HashMap","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.util.HashMap\" rel=\"Ext.util.HashMap\" class=\"docClass\">Ext.util.HashMap</a>"},{"tagname":"params","type":"String","name":"key","doc":"<p>The key of the added item.</p>\n","html_type":"String"},{"tagname":"params","type":"Object","name":"value","doc":"<p>The value of the added item.</p>\n","html_type":"Object"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-add","owner":"Ext.util.HashMap","short_doc":"Fires when a new item is added to the hash. ..."},{"tagname":"event","name":"clear","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/HashMap.js","linenr":46}],"doc":"<p>Fires when the hash is cleared.</p>\n","params":[{"tagname":"params","type":"Ext.util.HashMap","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.util.HashMap\" rel=\"Ext.util.HashMap\" class=\"docClass\">Ext.util.HashMap</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-clear","owner":"Ext.util.HashMap","short_doc":"Fires when the hash is cleared. ..."},{"tagname":"event","name":"remove","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/HashMap.js","linenr":52}],"doc":"<p>Fires when an item is removed from the hash.</p>\n","params":[{"tagname":"params","type":"Ext.util.HashMap","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.util.HashMap\" rel=\"Ext.util.HashMap\" class=\"docClass\">Ext.util.HashMap</a>"},{"tagname":"params","type":"String","name":"key","doc":"<p>The key of the removed item.</p>\n","html_type":"String"},{"tagname":"params","type":"Object","name":"value","doc":"<p>The value of the removed item.</p>\n","html_type":"Object"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-remove","owner":"Ext.util.HashMap","short_doc":"Fires when an item is removed from the hash. ..."},{"tagname":"event","name":"replace","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/HashMap.js","linenr":60}],"doc":"<p>Fires when an item is replaced in the hash.</p>\n","params":[{"tagname":"params","type":"Ext.util.HashMap","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.util.HashMap\" rel=\"Ext.util.HashMap\" class=\"docClass\">Ext.util.HashMap</a>"},{"tagname":"params","type":"String","name":"key","doc":"<p>The key of the replaced item.</p>\n","html_type":"String"},{"tagname":"params","type":"Object","name":"value","doc":"<p>The new value for the item.</p>\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"old","doc":"<p>The old value for the item.</p>\n","html_type":"Object"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-replace","owner":"Ext.util.HashMap","short_doc":"Fires when an item is replaced in the hash. ..."}],"code_type":"ext_define","id":"class-Ext.data.PageMap"}