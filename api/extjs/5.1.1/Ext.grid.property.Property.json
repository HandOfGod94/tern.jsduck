{"tagname":"class","name":"Ext.grid.property.Property","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/property/Property.js","linenr":1}],"doc":"<p>A specific Ext.data.Model type that represents a name/value pair and is made to work with the\n<a href=\"#!/api/Ext.grid.property.Grid\" rel=\"Ext.grid.property.Grid\" class=\"docClass\">Ext.grid.property.Grid</a>. Typically, Properties do not need to be created directly as they can be\ncreated implicitly by simply using the appropriate data configs either via the\n<a href=\"#!/api/Ext.grid.property.Grid-cfg-source\" rel=\"Ext.grid.property.Grid-cfg-source\" class=\"docClass\">Ext.grid.property.Grid.source</a> config property or by calling <a href=\"#!/api/Ext.grid.property.Grid-method-setSource\" rel=\"Ext.grid.property.Grid-method-setSource\" class=\"docClass\">Ext.grid.property.Grid.setSource</a>.\nHowever, if the need arises, these records can also be created explicitly as shown below. Example usage:</p>\n\n<pre><code>var rec = new <a href=\"#!/api/Ext.grid.property.Property\" rel=\"Ext.grid.property.Property\" class=\"docClass\">Ext.grid.property.Property</a>({\n    name: 'birthday',\n    value: Ext.Date.parse('17/06/1962', 'd/m/Y')\n});\n// Add record to an already populated grid\ngrid.store.addSorted(rec);\n</code></pre>\n","aliases":{},"alternateClassNames":["Ext.PropGridProperty"],"extends":"Ext.data.Model","mixins":[],"requires":[],"uses":[],"members":[{"tagname":"property","name":"fields","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/property/Property.js","linenr":29}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":29,"type":"Array","default":"[{name: 'name', type: 'string'}, {name: 'value'}]","readonly":null,"id":"property-fields","owner":"Ext.grid.property.Property","short_doc":" ...","html_type":"Array"},{"tagname":"property","name":"idProperty","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/property/Property.js","linenr":35}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":35,"type":"String","default":"'name'","readonly":null,"id":"property-idProperty","owner":"Ext.grid.property.Property","short_doc":" ...","html_type":"String"},{"tagname":"method","name":"constructor","autodetected":{},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/property/Property.js","linenr":1}],"doc":"<p>Creates new property.</p>\n","params":[{"tagname":"params","type":"Object","name":"config","doc":"<p>A data object in the format:</p>\n","properties":[{"tagname":"params","type":"String/String[]","name":"name","doc":"<p>A name or names for the property.</p>\n","html_type":"String/String[]"},{"tagname":"params","type":"Mixed/Mixed[]","name":"value","doc":"<p>A value or values for the property.\nThe specified value's type will be read automatically by the grid to determine the type of editor to use when\ndisplaying it.</p>\n","html_type":"Mixed/Mixed[]"}],"html_type":"Object"}],"return":{"type":"Ext.grid.property.Property","doc":"\n","html_type":"<a href=\"#!/api/Ext.grid.property.Property\" rel=\"Ext.grid.property.Property\" class=\"docClass\">Ext.grid.property.Property</a>"},"id":"method-constructor","owner":"Ext.grid.property.Property","short_doc":"Creates new property. ..."}],"code_type":"ext_define","id":"class-Ext.grid.property.Property","short_doc":"A specific Ext.data.Model type that represents a name/value pair and is made to work with the\nExt.grid.property.Grid. ..."}