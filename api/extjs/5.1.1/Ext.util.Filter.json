{"tagname":"class","name":"Ext.util.Filter","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":1}],"doc":"<p>Represents a filter that can be applied to a <a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">MixedCollection</a>. Can either simply\nfilter on a property/value pair or pass in a filter function with custom logic. Filters are always used in the\ncontext of MixedCollections, though <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Store</a>s frequently create them when filtering and searching\non their records. Example usage:</p>\n\n<pre><code>// Set up a fictional MixedCollection containing a few people to filter on\nvar allNames = new <a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a>();\nallNames.addAll([\n    { id: 1, name: 'Ed',    age: 25 },\n    { id: 2, name: 'Jamie', age: 37 },\n    { id: 3, name: 'Abe',   age: 32 },\n    { id: 4, name: 'Aaron', age: 26 },\n    { id: 5, name: 'David', age: 32 }\n]);\n\nvar ageFilter = new <a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a>({\n    property: 'age',\n    value   : 32\n});\n\nvar longNameFilter = new <a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a>({\n    filterFn: function(item) {\n        return item.name.length &gt; 4;\n    }\n});\n\n// a new MixedCollection with the 3 names longer than 4 characters\nvar longNames = allNames.filter(longNameFilter);\n\n// a new MixedCollection with the 2 people of age 32:\nvar youngFolk = allNames.filter(ageFilter);\n</code></pre>\n","aliases":{},"alternateClassNames":[],"extends":"Ext.Base","mixins":[],"requires":[],"uses":[],"members":[{"tagname":"cfg","name":"anyMatch","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":71}],"doc":"<p>True to allow any match - no regex start/end line anchors will be added.</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-anyMatch","owner":"Ext.util.Filter","short_doc":"True to allow any match - no regex start/end line anchors will be added. ...","html_type":"Boolean"},{"tagname":"cfg","name":"caseSensitive","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":83}],"doc":"<p>True to make the regex case sensitive (adds 'i' switch to regex).</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-caseSensitive","owner":"Ext.util.Filter","short_doc":"True to make the regex case sensitive (adds 'i' switch to regex). ...","html_type":"Boolean"},{"tagname":"cfg","name":"convert","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":145}],"doc":"<p>A function to do any conversion on the value before comparison. For example,\nsomething that returns the date only part of a date.</p>\n","type":"Function","default":null,"properties":[{"tagname":"cfg","type":"Object","name":"value","doc":"<p>The value to convert.</p>\n\n\n\n","html_type":"Object"},{"tagname":"cfg","type":"Object","name":"return","doc":"<p>The converted value.</p>\n\n\n\n","html_type":"Object"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-convert","owner":"Ext.util.Filter","short_doc":"A function to do any conversion on the value before comparison. ...","html_type":"Function"},{"tagname":"cfg","name":"disableOnEmpty","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":98}],"doc":"<p><code>true</code> to not have this filter participate in the filtering process when the <a href=\"#!/api/Ext.util.Filter-cfg-value\" rel=\"Ext.util.Filter-cfg-value\" class=\"docClass\">value</a> of\nthis the filter is empty according to <a href=\"#!/api/Ext-method-isEmpty\" rel=\"Ext-method-isEmpty\" class=\"docClass\">Ext.isEmpty</a>.</p>\n","type":"Boolean","default":"false","properties":null,"since":"5.1.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-disableOnEmpty","owner":"Ext.util.Filter","short_doc":"true to not have this filter participate in the filtering process when the value of\nthis the filter is empty accordin...","html_type":"Boolean"},{"tagname":"cfg","name":"disabled","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":89}],"doc":"<p>Setting this property to <code>true</code> disables this individual Filter so that it no longer contributes to a <a href=\"#!/api/Ext.data.Store-cfg-filters\" rel=\"Ext.data.Store-cfg-filters\" class=\"docClass\">Store&#39;s filter set</a></p>\n\n<p>When disabled, the next time the store is filtered, the Filter plays no part in filtering and records eliminated by it may rejoin the dataset.</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-disabled","owner":"Ext.util.Filter","short_doc":"Setting this property to true disables this individual Filter so that it no longer contributes to a Store&#39;s filte...","html_type":"Boolean"},{"tagname":"cfg","name":"exactMatch","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":77}],"doc":"<p>True to force exact match (^ and $ characters added to the regex). Ignored if anyMatch is true.</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-exactMatch","owner":"Ext.util.Filter","short_doc":"True to force exact match (^ and $ characters added to the regex). ...","html_type":"Boolean"},{"tagname":"cfg","name":"filterFn","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":54}],"doc":"<p>A custom filter function which is passed each item in the <a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a> in turn. Should return\n<code>true</code> to accept each item or <code>false</code> to reject it.</p>\n","type":"Function","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-filterFn","owner":"Ext.util.Filter","short_doc":"A custom filter function which is passed each item in the Ext.util.MixedCollection in turn. ...","html_type":"Function"},{"tagname":"cfg","name":"id","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":61}],"doc":"<p>An identifier by which this Filter is indexed in a <a href=\"#!/api/Ext.data.Store-cfg-filters\" rel=\"Ext.data.Store-cfg-filters\" class=\"docClass\">Store&#39;s filters collection</a></p>\n\n<p>Identified Filters may be individually removed from a Store's filter set by using <a href=\"#!/api/Ext.data.Store-method-removeFilter\" rel=\"Ext.data.Store-method-removeFilter\" class=\"docClass\">Ext.data.Store.removeFilter</a>.</p>\n\n<p>Anonymous Filters may be removed en masse by passing <code>null</code> to <a href=\"#!/api/Ext.data.Store-method-removeFilter\" rel=\"Ext.data.Store-method-removeFilter\" class=\"docClass\">Ext.data.Store.removeFilter</a>.</p>\n","type":"String","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-id","owner":"Ext.util.Filter","short_doc":"An identifier by which this Filter is indexed in a Store&#39;s filters collection\n\nIdentified Filters may be individu...","html_type":"String"},{"tagname":"cfg","name":"operator","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":107}],"doc":"<p>The operator to use to compare the <a href=\"#!/api/Ext.util.Filter-cfg-property\" rel=\"Ext.util.Filter-cfg-property\" class=\"docClass\">property</a> to this Filter's <a href=\"#!/api/Ext.util.Filter-cfg-value\" rel=\"Ext.util.Filter-cfg-value\" class=\"docClass\">value</a></p>\n\n<p>Possible values are:</p>\n\n<ul>\n<li> <code>&lt;</code></li>\n<li> <code>&lt;=</code></li>\n<li> <code>=</code></li>\n<li> <code>&amp;gt;=</code></li>\n<li> <code>&amp;gt;</code></li>\n<li> <code>!=</code></li>\n<li> <code>in</code></li>\n<li> <code>like</code></li>\n</ul>\n\n\n<p>The <code>in</code> operator expects this filter's <a href=\"#!/api/Ext.util.Filter-cfg-value\" rel=\"Ext.util.Filter-cfg-value\" class=\"docClass\">value</a> to be an array and matches\nvalues that are present in that array.</p>\n\n<p>The <code>like</code> operator matches values that contain this filter's <a href=\"#!/api/Ext.util.Filter-cfg-value\" rel=\"Ext.util.Filter-cfg-value\" class=\"docClass\">value</a> as a\nsubstring.</p>\n","type":"String","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-operator","owner":"Ext.util.Filter","short_doc":"The operator to use to compare the property to this Filter's value\n\nPossible values are:\n\n\n &lt;\n &lt;=\n =\n &amp;gt;=...","html_type":"String"},{"tagname":"cfg","name":"property","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":38}],"doc":"<p>The property to filter on. Required unless a <a href=\"#!/api/Ext.util.Filter-cfg-filterFn\" rel=\"Ext.util.Filter-cfg-filterFn\" class=\"docClass\">filterFn</a> is passed.</p>\n","type":"String","default":"null","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-property","owner":"Ext.util.Filter","short_doc":"The property to filter on. ...","html_type":"String"},{"tagname":"cfg","name":"root","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":130}],"doc":"<p>Optional root property. This is mostly useful when filtering a Store, in which case we set the root to 'data' to\nmake the filter pull the <a href=\"#!/api/Ext.util.Filter-cfg-property\" rel=\"Ext.util.Filter-cfg-property\" class=\"docClass\">property</a> out of the data object of each item</p>\n","type":"String","default":"null","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-root","owner":"Ext.util.Filter","short_doc":"Optional root property. ...","html_type":"String"},{"tagname":"cfg","name":"scope","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":156}],"doc":"<p>The context (<code>this</code> property) in which the filtering function is called. Defaults\nto this Filter object.</p>\n","type":"Object","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-scope","owner":"Ext.util.Filter","short_doc":"The context (this property) in which the filtering function is called. ...","html_type":"Object"},{"tagname":"cfg","name":"serializer","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":137}],"doc":"<p>A function to post-process any serialization.</p>\n","type":"Function","default":null,"properties":null,"params":[{"tagname":"params","type":"Object","name":"data","doc":"<p>The serialized data.</p>\n","html_type":"Object"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-serializer","owner":"Ext.util.Filter","short_doc":"A function to post-process any serialization. ...","html_type":"Function"},{"tagname":"cfg","name":"value","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":44}],"doc":"<p>The value you want to match against. Required unless a <a href=\"#!/api/Ext.util.Filter-cfg-filterFn\" rel=\"Ext.util.Filter-cfg-filterFn\" class=\"docClass\">filterFn</a> is passed.</p>\n\n<p>Can be a regular expression which will be used as a matcher or any other value\nsuch as an object or an array of objects. This value is compared using the configured\n<a href=\"#!/api/Ext.util.Filter-cfg-operator\" rel=\"Ext.util.Filter-cfg-operator\" class=\"docClass\">operator</a>.</p>\n","type":"RegExp/Mixed","default":"null","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-value","owner":"Ext.util.Filter","short_doc":"The value you want to match against. ...","html_type":"RegExp/Mixed"},{"tagname":"property","name":"$className","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1025}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"String","default":"'Ext.Base'","readonly":null,"id":"property-S-className","owner":"Ext.Base","short_doc":" ...","html_type":"String"},{"tagname":"property","name":"$configPrefixed","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1037}],"doc":"<p>The value <code>true</code> causes <code>config</code> values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\") character. A value of <code>false</code>\nstores <code>config</code> values as properties using their exact name (no prefix).</p>\n","type":"Boolean","default":"true","properties":null,"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-S-configPrefixed","owner":"Ext.Base","overrides":[{"name":"$configPrefixed","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-S-configPrefixed\" rel=\"Ext.Component-property-S-configPrefixed\" class=\"docClass\">Ext.Component.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-property-S-configPrefixed\" rel=\"Ext.layout.Layout-property-S-configPrefixed\" class=\"docClass\">Ext.layout.Layout.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-property-S-configPrefixed\" rel=\"Ext.data.AbstractStore-property-S-configPrefixed\" class=\"docClass\">Ext.data.AbstractStore.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.layout.container.boxOverflow.None","link":"<a href=\"#!/api/Ext.layout.container.boxOverflow.None-property-S-configPrefixed\" rel=\"Ext.layout.container.boxOverflow.None-property-S-configPrefixed\" class=\"docClass\">Ext.layout.container.boxOverflow.None.$configPrefixed</a>"}],"short_doc":"The value true causes config values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\")...","html_type":"Boolean"},{"tagname":"property","name":"$configStrict","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":163}],"doc":"<p>Needed for scope above. If <code>scope</code> were a \"config\" it would be merged and lose its\nidentity.</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"type":"Boolean","default":"false","readonly":null,"id":"property-S-configStrict","owner":"Ext.util.Filter","params":null,"return":null,"throws":null,"overrides":[{"name":"$configStrict","owner":"Ext.Base","link":"<a href=\"#!/api/Ext.Base-property-S-configStrict\" rel=\"Ext.Base-property-S-configStrict\" class=\"docClass\">Ext.Base.$configStrict</a>"}],"short_doc":"Needed for scope above. ...","html_type":"Boolean"},{"tagname":"property","name":"isConfiguring","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1057}],"doc":"<p>This property is set to <code>true</code> during the call to <code>initConfig</code>.</p>\n","type":"Boolean","default":"false","properties":null,"protected":true,"readonly":true,"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-isConfiguring","owner":"Ext.Base","short_doc":"This property is set to true during the call to initConfig. ...","html_type":"Boolean"},{"tagname":"property","name":"isFilter","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":35}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":35,"type":"Boolean","default":"true","readonly":null,"id":"property-isFilter","owner":"Ext.util.Filter","short_doc":" ...","html_type":"Boolean"},{"tagname":"property","name":"isFirstInstance","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1066}],"doc":"<p>This property is set to <code>true</code> if this instance is the first of its class.</p>\n","type":"Boolean","default":"false","properties":null,"protected":true,"readonly":true,"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-isFirstInstance","owner":"Ext.Base","short_doc":"This property is set to true if this instance is the first of its class. ...","html_type":"Boolean"},{"tagname":"property","name":"isInstance","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1028}],"doc":"<p>This value is <code>true</code> and is used to identify plain objects from instances of\na defined class.</p>\n","type":"Boolean","default":"true","properties":null,"protected":true,"readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-isInstance","owner":"Ext.Base","short_doc":"This value is true and is used to identify plain objects from instances of\na defined class. ...","html_type":"Boolean"},{"tagname":"property","name":"preventConvert","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":240}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":240,"type":"Object","default":"{'in': 1}","readonly":null,"id":"property-preventConvert","owner":"Ext.util.Filter","short_doc":" ...","html_type":"Object"},{"tagname":"property","name":"privates","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":398}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":398,"type":"Object","default":null,"readonly":null,"id":"property-privates","owner":"Ext.util.Filter","html_type":"Object"},{"tagname":"property","name":"self","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1344}],"doc":"<p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n","type":"Ext.Class","default":null,"properties":null,"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-self","owner":"Ext.Base","short_doc":"Get the reference to the current class from which this object was instantiated. ...","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},{"tagname":"property","name":"$onExtended","autodetected":{"inheritdoc":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":370}],"doc":"\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"type":"Array","default":"[]","readonly":null,"id":"static-property-S-onExtended","owner":"Ext.Base","short_doc":" ...","html_type":"Array"},{"tagname":"method","name":"constructor","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":226}],"doc":"<p>Creates new Filter.</p>\n","params":[{"tagname":"params","type":"Object","name":"config","doc":"<p>Config object</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["initConfig"],"id":"method-constructor","owner":"Ext.util.Filter","return":{"type":"Ext.util.Filter","doc":"\n","html_type":"<a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a>"},"short_doc":"Creates new Filter. ..."},{"tagname":"method","name":"addDeprecations","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":115}],"doc":"<p>This method applies a versioned, deprecation declaration to this class. This\nis typically called by the <code>deprecated</code> config.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"deprecations","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-addDeprecations","owner":"Ext.Base","short_doc":"This method applies a versioned, deprecation declaration to this class. ..."},{"tagname":"method","name":"callOverridden","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1581}],"doc":"<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n","params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n","html_type":"Array/Arguments"}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the overridden method</p>\n","properties":null,"html_type":"Object"},"protected":true,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-callOverridden","owner":"Ext.Base","short_doc":"Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi..."},{"tagname":"method","name":"callParent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1143}],"doc":"<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10));     // alerts 10\n alert(My.Derived2.method(10)); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n","protected":true,"params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n","html_type":"Array/Arguments"}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the parent method</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-callParent","owner":"Ext.Base","short_doc":"Call the \"parent\" method of the current method. ..."},{"tagname":"method","name":"callSuper","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1258}],"doc":"<p>This method is used by an override to call the superclass method but bypass any\noverridden method. This is often done to \"patch\" a method that contains a bug\nbut for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function () {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     extend: 'Ext.some.Class',\n\n     method: function () {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>Ext.some.DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.patches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function () {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <code>callParent</code> to call the superclass <code>method</code> since\nthat would call the overridden method containing the bug. In other words, the\nabove patch would only produce \"Fixed\" then \"Good\" in the console log, whereas,\nusing <code>callParent</code> would produce \"Fixed\" then \"Bad\" then \"Good\".</p>\n","protected":true,"params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n","html_type":"Array/Arguments"}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the superclass method</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-callSuper","owner":"Ext.Base","short_doc":"This method is used by an override to call the superclass method but bypass any\noverridden method. ..."},{"tagname":"method","name":"createRegexFilter","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":299}],"doc":"<p>Creates a filter function for the configured value/anyMatch/caseSensitive options\nfor this Filter.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getAnyMatch","getCaseSensitive","getExactMatch","getPropertyValue","getValue"],"id":"method-createRegexFilter","owner":"Ext.util.Filter","short_doc":"Creates a filter function for the configured value/anyMatch/caseSensitive options\nfor this Filter. ..."},{"tagname":"method","name":"destroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1562}],"doc":"<p>This method is called to cleanup an object and its resources. After calling\nthis method, the object should not be used any further.</p>\n","protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["unlink"],"id":"method-destroy","owner":"Ext.Base","overrides":[{"name":"destroy","owner":"Ext.util.ElementContainer","link":"<a href=\"#!/api/Ext.util.ElementContainer-method-destroy\" rel=\"Ext.util.ElementContainer-method-destroy\" class=\"docClass\">Ext.util.ElementContainer.destroy</a>"},{"name":"destroy","owner":"Ext.state.Stateful","link":"<a href=\"#!/api/Ext.state.Stateful-method-destroy\" rel=\"Ext.state.Stateful-method-destroy\" class=\"docClass\">Ext.state.Stateful.destroy</a>"},{"name":"destroy","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-method-destroy\" rel=\"Ext.Component-method-destroy\" class=\"docClass\">Ext.Component.destroy</a>"},{"name":"destroy","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-destroy\" rel=\"Ext.data.AbstractStore-method-destroy\" class=\"docClass\">Ext.data.AbstractStore.destroy</a>"},{"name":"destroy","owner":"Ext.plugin.Abstract","link":"<a href=\"#!/api/Ext.plugin.Abstract-method-destroy\" rel=\"Ext.plugin.Abstract-method-destroy\" class=\"docClass\">Ext.plugin.Abstract.destroy</a>"},{"name":"destroy","owner":"Ext.app.BaseController","link":"<a href=\"#!/api/Ext.app.BaseController-method-destroy\" rel=\"Ext.app.BaseController-method-destroy\" class=\"docClass\">Ext.app.BaseController.destroy</a>"}],"short_doc":"This method is called to cleanup an object and its resources. ..."},{"tagname":"method","name":"filter","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":244}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":244,"params":[{"name":"item","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["getConvert","getFilterFn","getOperator"],"id":"method-filter","owner":"Ext.util.Filter","short_doc":" ..."},{"tagname":"method","name":"getAnyMatch","doc":"<p>Returns the value of <a href=\"#!/api/Ext.util.Filter-cfg-anyMatch\" rel=\"Ext.util.Filter-cfg-anyMatch\" class=\"docClass\">anyMatch</a>.</p>\n","params":[],"return":{"type":"Boolean","doc":"\n","html_type":"Boolean"},"id":"method-getAnyMatch","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":71}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Filter","short_doc":"Returns the value of anyMatch. ..."},{"tagname":"method","name":"getCaseSensitive","doc":"<p>Returns the value of <a href=\"#!/api/Ext.util.Filter-cfg-caseSensitive\" rel=\"Ext.util.Filter-cfg-caseSensitive\" class=\"docClass\">caseSensitive</a>.</p>\n","params":[],"return":{"type":"Boolean","doc":"\n","html_type":"Boolean"},"id":"method-getCaseSensitive","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":83}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Filter","short_doc":"Returns the value of caseSensitive. ..."},{"tagname":"method","name":"getConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1431}],"doc":"<p>Returns a specified config property value. If the name parameter is not passed,\nall current configuration options will be returned as key value pairs.</p>\n","params":[{"tagname":"params","type":"String","name":"name","optional":true,"doc":"<p>The name of the config property to get.</p>\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"peek","default":"false","optional":true,"doc":"<p><code>true</code> to peek at the raw value without calling the getter.</p>\n","html_type":"Boolean"}],"return":{"type":"Object","name":"return","doc":"<p>The config property value.</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-getConfig","owner":"Ext.Base","short_doc":"Returns a specified config property value. ..."},{"tagname":"method","name":"getConvert","doc":"<p>Returns the value of <a href=\"#!/api/Ext.util.Filter-cfg-convert\" rel=\"Ext.util.Filter-cfg-convert\" class=\"docClass\">convert</a>.</p>\n","params":[],"return":{"type":"Function","doc":"\n","html_type":"Function"},"id":"method-getConvert","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":145}],"properties":[{"tagname":"cfg","type":"Object","name":"value","doc":"<p>The value to convert.</p>\n\n\n\n","html_type":"Object"},{"tagname":"cfg","type":"Object","name":"return","doc":"<p>The converted value.</p>\n\n\n\n","html_type":"Object"}],"private":true,"static":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Filter","short_doc":"Returns the value of convert. ..."},{"tagname":"method","name":"getCurrentConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1471}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getConfigurator"],"id":"method-getCurrentConfig","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"getDisableOnEmpty","doc":"<p>Returns the value of <a href=\"#!/api/Ext.util.Filter-cfg-disableOnEmpty\" rel=\"Ext.util.Filter-cfg-disableOnEmpty\" class=\"docClass\">disableOnEmpty</a>.</p>\n","params":[],"return":{"type":"Boolean","doc":"\n","html_type":"Boolean"},"id":"method-getDisableOnEmpty","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":98}],"properties":null,"since":"5.1.0","static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Filter","short_doc":"Returns the value of disableOnEmpty. ..."},{"tagname":"method","name":"getDisabled","doc":"<p>Returns the value of <a href=\"#!/api/Ext.util.Filter-cfg-disabled\" rel=\"Ext.util.Filter-cfg-disabled\" class=\"docClass\">disabled</a>.</p>\n","params":[],"return":{"type":"Boolean","doc":"\n","html_type":"Boolean"},"id":"method-getDisabled","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":89}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Filter","short_doc":"Returns the value of disabled. ..."},{"tagname":"method","name":"getExactMatch","doc":"<p>Returns the value of <a href=\"#!/api/Ext.util.Filter-cfg-exactMatch\" rel=\"Ext.util.Filter-cfg-exactMatch\" class=\"docClass\">exactMatch</a>.</p>\n","params":[],"return":{"type":"Boolean","doc":"\n","html_type":"Boolean"},"id":"method-getExactMatch","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":77}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Filter","short_doc":"Returns the value of exactMatch. ..."},{"tagname":"method","name":"getFilterFn","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":276}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":276,"params":[],"chainable":false,"fires":[],"method_calls":["createRegexFilter","getOperator"],"id":"method-getFilterFn","owner":"Ext.util.Filter","short_doc":" ..."},{"tagname":"method","name":"getId","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":262}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":262,"params":[],"chainable":false,"fires":[],"method_calls":["getProperty"],"id":"method-getId","owner":"Ext.util.Filter","short_doc":" ..."},{"tagname":"method","name":"getInitialConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1488}],"doc":"<p>Returns the initial configuration passed to constructor when instantiating\nthis class.</p>\n","params":[{"tagname":"params","type":"String","name":"name","optional":true,"doc":"<p>Name of the config option to return.</p>\n","html_type":"String"}],"return":{"type":"Object/Mixed","name":"return","doc":"<p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n","properties":null,"html_type":"Object/Mixed"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getInitialConfig","owner":"Ext.Base","short_doc":"Returns the initial configuration passed to constructor when instantiating\nthis class. ..."},{"tagname":"method","name":"getOperator","doc":"<p>Returns the value of <a href=\"#!/api/Ext.util.Filter-cfg-operator\" rel=\"Ext.util.Filter-cfg-operator\" class=\"docClass\">operator</a>.</p>\n","params":[],"return":{"type":"String","doc":"\n","html_type":"String"},"id":"method-getOperator","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":107}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Filter","short_doc":"Returns the value of operator. ..."},{"tagname":"method","name":"getProperty","doc":"<p>Returns the value of <a href=\"#!/api/Ext.util.Filter-cfg-property\" rel=\"Ext.util.Filter-cfg-property\" class=\"docClass\">property</a>.</p>\n","params":[],"return":{"type":"String","doc":"\n","html_type":"String"},"id":"method-getProperty","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":38}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Filter","short_doc":"Returns the value of property. ..."},{"tagname":"method","name":"getPropertyValue","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":320}],"doc":"<p>Returns the property of interest from the given item, based on the configured <code>root</code>\nand <code>property</code> configs.</p>\n","params":[{"tagname":"params","type":"Object","name":"item","doc":"<p>The item.</p>\n","html_type":"Object"}],"return":{"type":"Object","name":"return","doc":"<p>The property of the object.</p>\n","properties":null,"html_type":"Object"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getPropertyValue","owner":"Ext.util.Filter","short_doc":"Returns the property of interest from the given item, based on the configured root\nand property configs. ..."},{"tagname":"method","name":"getRoot","doc":"<p>Returns the value of <a href=\"#!/api/Ext.util.Filter-cfg-root\" rel=\"Ext.util.Filter-cfg-root\" class=\"docClass\">root</a>.</p>\n","params":[],"return":{"type":"String","doc":"\n","html_type":"String"},"id":"method-getRoot","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":130}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Filter","short_doc":"Returns the value of root. ..."},{"tagname":"method","name":"getScope","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":356}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":356,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getScope","owner":"Ext.util.Filter","short_doc":" ..."},{"tagname":"method","name":"getSerializer","doc":"<p>Returns the value of <a href=\"#!/api/Ext.util.Filter-cfg-serializer\" rel=\"Ext.util.Filter-cfg-serializer\" class=\"docClass\">serializer</a>.</p>\n","params":[],"return":{"type":"Function","doc":"\n","html_type":"Function"},"id":"method-getSerializer","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":137}],"properties":null,"private":true,"static":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Filter","short_doc":"Returns the value of serializer. ..."},{"tagname":"method","name":"getState","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":334}],"doc":"<p>Returns this filter's state.</p>\n","return":{"type":"Object","name":"return","doc":"\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getInitialConfig","getValue"],"id":"method-getState","owner":"Ext.util.Filter","short_doc":"Returns this filter's state. ..."},{"tagname":"method","name":"getValue","doc":"<p>Returns the value of <a href=\"#!/api/Ext.util.Filter-cfg-value\" rel=\"Ext.util.Filter-cfg-value\" class=\"docClass\">value</a>.</p>\n","params":[],"return":{"type":"RegExp/Mixed","doc":"\n","html_type":"RegExp/Mixed"},"id":"method-getValue","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":44}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Filter","short_doc":"Returns the value of value. ..."},{"tagname":"method","name":"hasConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1480}],"doc":"\n","private":true,"params":[{"tagname":"params","name":"config","doc":"\n","type":"Object","html_type":"Object"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-hasConfig","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"initConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1393}],"doc":"<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n","protected":true,"params":[{"tagname":"params","type":"Object","name":"config","doc":"\n","html_type":"Object"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["getConfigurator"],"id":"method-initConfig","owner":"Ext.Base","short_doc":"Initialize configuration for this class. ..."},{"tagname":"method","name":"link","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1508}],"doc":"<p>Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (via <code><a href=\"#!/api/Ext.Base-method-destroy\" rel=\"Ext.Base-method-destroy\" class=\"docClass\">destroy</a></code>).</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"\n","html_type":"String"},{"tagname":"params","type":"Object","name":"value","doc":"\n","html_type":"Object"}],"return":{"type":"Object","name":"return","doc":"<p>The <code>value</code> passed.</p>\n","properties":null,"html_type":"Object"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-link","owner":"Ext.Base","short_doc":"Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (vi..."},{"tagname":"method","name":"serialize","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":360}],"doc":"<p>Returns this filter's serialized state. This is used when transmitting this filter\nto a server.</p>\n","return":{"type":"Object","name":"return","doc":"\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getSerializer","getState"],"id":"method-serialize","owner":"Ext.util.Filter","short_doc":"Returns this filter's serialized state. ..."},{"tagname":"method","name":"setAnyMatch","doc":"<p>Sets the value of <a href=\"#!/api/Ext.util.Filter-cfg-anyMatch\" rel=\"Ext.util.Filter-cfg-anyMatch\" class=\"docClass\">anyMatch</a>.</p>\n","params":[{"type":"Boolean","name":"anyMatch","doc":"<p>The new value.</p>\n","html_type":"Boolean"}],"id":"method-setAnyMatch","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":71}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Filter","short_doc":"Sets the value of anyMatch. ..."},{"tagname":"method","name":"setCaseSensitive","doc":"<p>Sets the value of <a href=\"#!/api/Ext.util.Filter-cfg-caseSensitive\" rel=\"Ext.util.Filter-cfg-caseSensitive\" class=\"docClass\">caseSensitive</a>.</p>\n","params":[{"type":"Boolean","name":"caseSensitive","doc":"<p>The new value.</p>\n","html_type":"Boolean"}],"id":"method-setCaseSensitive","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":83}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Filter","short_doc":"Sets the value of caseSensitive. ..."},{"tagname":"method","name":"setConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1441}],"doc":"<p>Sets a single/multiple configuration options.</p>\n","params":[{"tagname":"params","type":"String/Object","name":"name","doc":"<p>The name of the property to set, or a set of key value pairs to set.</p>\n","html_type":"String/Object"},{"tagname":"params","type":"Object","name":"value","optional":true,"doc":"<p>The value to set for the name parameter.</p>\n","html_type":"Object"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["getConfigurator"],"id":"method-setConfig","owner":"Ext.Base","short_doc":"Sets a single/multiple configuration options. ..."},{"tagname":"method","name":"setConvert","doc":"<p>Sets the value of <a href=\"#!/api/Ext.util.Filter-cfg-convert\" rel=\"Ext.util.Filter-cfg-convert\" class=\"docClass\">convert</a>.</p>\n","params":[{"type":"Function","name":"convert","doc":"<p>The new value.</p>\n","html_type":"Function"}],"id":"method-setConvert","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":145}],"properties":[{"tagname":"cfg","type":"Object","name":"value","doc":"<p>The value to convert.</p>\n\n\n\n","html_type":"Object"},{"tagname":"cfg","type":"Object","name":"return","doc":"<p>The converted value.</p>\n\n\n\n","html_type":"Object"}],"private":true,"static":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Filter","short_doc":"Sets the value of convert. ..."},{"tagname":"method","name":"setDisableOnEmpty","doc":"<p>Sets the value of <a href=\"#!/api/Ext.util.Filter-cfg-disableOnEmpty\" rel=\"Ext.util.Filter-cfg-disableOnEmpty\" class=\"docClass\">disableOnEmpty</a>.</p>\n","params":[{"type":"Boolean","name":"disableOnEmpty","doc":"<p>The new value.</p>\n","html_type":"Boolean"}],"id":"method-setDisableOnEmpty","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":98}],"properties":null,"since":"5.1.0","static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Filter","short_doc":"Sets the value of disableOnEmpty. ..."},{"tagname":"method","name":"setDisabled","doc":"<p>Sets the value of <a href=\"#!/api/Ext.util.Filter-cfg-disabled\" rel=\"Ext.util.Filter-cfg-disabled\" class=\"docClass\">disabled</a>.</p>\n","params":[{"type":"Boolean","name":"disabled","doc":"<p>The new value.</p>\n","html_type":"Boolean"}],"id":"method-setDisabled","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":89}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Filter","short_doc":"Sets the value of disabled. ..."},{"tagname":"method","name":"setExactMatch","doc":"<p>Sets the value of <a href=\"#!/api/Ext.util.Filter-cfg-exactMatch\" rel=\"Ext.util.Filter-cfg-exactMatch\" class=\"docClass\">exactMatch</a>.</p>\n","params":[{"type":"Boolean","name":"exactMatch","doc":"<p>The new value.</p>\n","html_type":"Boolean"}],"id":"method-setExactMatch","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":77}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Filter","short_doc":"Sets the value of exactMatch. ..."},{"tagname":"method","name":"setFilterFn","doc":"<p>Sets the value of <a href=\"#!/api/Ext.util.Filter-cfg-filterFn\" rel=\"Ext.util.Filter-cfg-filterFn\" class=\"docClass\">filterFn</a>.</p>\n","params":[{"type":"Function","name":"filterFn","doc":"<p>The new value.</p>\n","html_type":"Function"}],"id":"method-setFilterFn","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":54}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Filter","short_doc":"Sets the value of filterFn. ..."},{"tagname":"method","name":"setId","doc":"<p>Sets the value of <a href=\"#!/api/Ext.util.Filter-cfg-id\" rel=\"Ext.util.Filter-cfg-id\" class=\"docClass\">id</a>.</p>\n","params":[{"type":"String","name":"id","doc":"<p>The new value.</p>\n","html_type":"String"}],"id":"method-setId","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":61}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Filter","short_doc":"Sets the value of id. ..."},{"tagname":"method","name":"setOperator","doc":"<p>Sets the value of <a href=\"#!/api/Ext.util.Filter-cfg-operator\" rel=\"Ext.util.Filter-cfg-operator\" class=\"docClass\">operator</a>.</p>\n","params":[{"type":"String","name":"operator","doc":"<p>The new value.</p>\n","html_type":"String"}],"id":"method-setOperator","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":107}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Filter","short_doc":"Sets the value of operator. ..."},{"tagname":"method","name":"setProperty","doc":"<p>Sets the value of <a href=\"#!/api/Ext.util.Filter-cfg-property\" rel=\"Ext.util.Filter-cfg-property\" class=\"docClass\">property</a>.</p>\n","params":[{"type":"String","name":"property","doc":"<p>The new value.</p>\n","html_type":"String"}],"id":"method-setProperty","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":38}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Filter","short_doc":"Sets the value of property. ..."},{"tagname":"method","name":"setRoot","doc":"<p>Sets the value of <a href=\"#!/api/Ext.util.Filter-cfg-root\" rel=\"Ext.util.Filter-cfg-root\" class=\"docClass\">root</a>.</p>\n","params":[{"type":"String","name":"root","doc":"<p>The new value.</p>\n","html_type":"String"}],"id":"method-setRoot","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":130}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Filter","short_doc":"Sets the value of root. ..."},{"tagname":"method","name":"setSerializer","doc":"<p>Sets the value of <a href=\"#!/api/Ext.util.Filter-cfg-serializer\" rel=\"Ext.util.Filter-cfg-serializer\" class=\"docClass\">serializer</a>.</p>\n","params":[{"type":"Function","name":"serializer","doc":"<p>The new value.</p>\n","html_type":"Function"}],"id":"method-setSerializer","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":137}],"properties":null,"private":true,"static":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Filter","short_doc":"Sets the value of serializer. ..."},{"tagname":"method","name":"setValue","doc":"<p>Sets the value of <a href=\"#!/api/Ext.util.Filter-cfg-value\" rel=\"Ext.util.Filter-cfg-value\" class=\"docClass\">value</a>.</p>\n","params":[{"type":"RegExp/Mixed","name":"value","doc":"<p>The new value.</p>\n","html_type":"RegExp/Mixed"}],"id":"method-setValue","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":44}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Filter","short_doc":"Sets the value of value. ..."},{"tagname":"method","name":"statics","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1075}],"doc":"<p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self();   // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n","protected":true,"return":{"type":"Ext.Class","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-statics","owner":"Ext.Base","short_doc":"Get the reference to the class from which this object was instantiated. ..."},{"tagname":"method","name":"unlink","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1526}],"doc":"<p>Destroys a given set of <code><a href=\"#!/api/Ext.Base-method-link\" rel=\"Ext.Base-method-link\" class=\"docClass\">linked</a></code> objects. This is only needed if\nthe linked object is being destroyed before this instance.</p>\n","params":[{"tagname":"params","type":"String[]","name":"names","doc":"<p>The names of the linked objects to destroy.</p>\n","html_type":"String[]"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"method-unlink","owner":"Ext.Base","short_doc":"Destroys a given set of linked objects. ..."},{"tagname":"method","name":"updateDisableOnEmpty","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":390}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":390,"params":[{"name":"disableOnEmpty","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["getValue","setDisabled"],"id":"method-updateDisableOnEmpty","owner":"Ext.util.Filter","short_doc":" ..."},{"tagname":"method","name":"updateOperator","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":379}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":379,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-updateOperator","owner":"Ext.util.Filter","short_doc":" ..."},{"tagname":"method","name":"updateValue","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":383}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":383,"params":[{"name":"value","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["getDisableOnEmpty","setDisabled"],"id":"method-updateValue","owner":"Ext.util.Filter","short_doc":" ..."},{"tagname":"method","name":"addConfig","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":911}],"doc":"<p>Adds new config properties to this class. This is called for classes when they\nare declared, then for any mixins that class may define and finally for any\noverrides defined that target the class.</p>\n","params":[{"tagname":"params","type":"Object","name":"config","doc":"\n","html_type":"Object"},{"tagname":"params","type":"Ext.Class","name":"mixinClass","optional":true,"doc":"<p>The mixin class if the configs are from a mixin.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"}],"private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["getConfigurator"],"id":"static-method-addConfig","owner":"Ext.Base","short_doc":"Adds new config properties to this class. ..."},{"tagname":"method","name":"addInheritableStatics","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":436}],"doc":"\n","private":true,"static":true,"inheritable":true,"params":[{"tagname":"params","type":"Object","name":"members","doc":"\n","html_type":"Object"}],"inheritdoc":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"static-method-addInheritableStatics","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"addMember","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":634}],"doc":"\n","private":true,"static":true,"inheritable":true,"params":[{"tagname":"params","name":"name","doc":"\n","type":"Object","html_type":"Object"},{"tagname":"params","name":"member","doc":"\n","type":"Object","html_type":"Object"}],"inheritdoc":null,"linenr":null,"chainable":true,"fires":null,"method_calls":["addMembers"],"id":"static-method-addMember","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"addMembers","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":480}],"doc":"<p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat();\n kitty.meow();\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"<p>The members to add to this class.</p>\n","html_type":"Object"},{"tagname":"params","type":"Boolean","name":"isStatic","default":"false","optional":true,"doc":"<p>Pass <code>true</code> if the members are static.</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"privacy","default":"false","optional":true,"doc":"<p>Pass <code>true</code> if the members are private. This\nonly has meaning in debug mode and only for methods.</p>\n","html_type":"Boolean"}],"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":true,"fires":null,"method_calls":["addConfig","addMembers"],"id":"static-method-addMembers","owner":"Ext.Base","short_doc":"Add methods / properties to the prototype of this class. ..."},{"tagname":"method","name":"addStatics","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":413}],"doc":"<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"\n","html_type":"Object"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":true,"fires":null,"method_calls":["addMembers"],"id":"static-method-addStatics","owner":"Ext.Base","short_doc":"Add / override static properties of this class. ..."},{"tagname":"method","name":"borrow","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":648}],"doc":"<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n","params":[{"tagname":"params","type":"Ext.Base","name":"fromClass","doc":"<p>The class to borrow members from</p>\n","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},{"tagname":"params","type":"Array/String","name":"members","doc":"<p>The names of the members to borrow</p>\n","html_type":"Array/String"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"inheritable":true,"private":true,"inheritdoc":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["addMembers"],"id":"static-method-borrow","owner":"Ext.Base","short_doc":"Borrow another class' members to the prototype of this class. ..."},{"tagname":"method","name":"callParent","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":785}],"doc":"\n","protected":true,"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[{"name":"args","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-callParent","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"callSuper","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":799}],"doc":"\n","protected":true,"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[{"name":"args","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-callSuper","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"create","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":94}],"doc":"<p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n","return":{"type":"Object","name":"return","doc":"<p>the created instance.</p>\n","properties":null,"html_type":"Object"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-create","owner":"Ext.Base","short_doc":"Create a new instance of this Class. ..."},{"tagname":"method","name":"createAlias","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":973}],"doc":"<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n","params":[{"tagname":"params","type":"String/Object","name":"alias","doc":"<p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n","html_type":"String/Object"},{"tagname":"params","type":"String/Object","name":"origin","doc":"<p>The original method name</p>\n","html_type":"String/Object"}],"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"static-method-createAlias","owner":"Ext.Base","short_doc":"Create aliases for existing prototype methods. ..."},{"tagname":"method","name":"createFilterFn","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":168}],"doc":"<p>Creates a single filter function which encapsulates the passed Filter array or\nCollection.</p>\n","params":[{"tagname":"params","type":"Ext.util.Filter[]/Ext.util.Collection","name":"filters","doc":"<p>The filters from which to\ncreate a filter function.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a>[]/<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"}],"return":{"type":"Function","name":"return","doc":"<p>A function, which when passed a candidate object returns <code>true</code>\nif the candidate passes all the specified Filters.</p>\n","properties":null,"html_type":"Function"},"inheritdoc":null,"static":true,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"static-method-createFilterFn","owner":"Ext.util.Filter","short_doc":"Creates a single filter function which encapsulates the passed Filter array or\nCollection. ..."},{"tagname":"method","name":"extend","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":322}],"doc":"\n","private":true,"static":true,"inheritable":true,"params":[{"tagname":"params","name":"config","doc":"\n","type":"Object","html_type":"Object"}],"inheritdoc":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["getConfigurator","hasOwnProperty"],"id":"static-method-extend","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"getConfigurator","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":940}],"doc":"<p>Returns the <code><a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a></code> for this class.</p>\n","return":{"type":"Ext.Configurator","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a>"},"private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-getConfigurator","owner":"Ext.Base","short_doc":"Returns the Ext.Configurator for this class. ..."},{"tagname":"method","name":"getName","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":954}],"doc":"<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n","return":{"type":"String","name":"return","doc":"<p>className</p>\n","properties":null,"html_type":"String"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-getName","owner":"Ext.Base","short_doc":"Get the current class' name in string format. ..."},{"tagname":"method","name":"isInvalid","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Filter.js","linenr":200}],"doc":"<p>Checks whether the filter will produce a meaningful value. Since filters\nmay be used in conjunction with data binding, this is a sanity check to\ncheck whether the resulting filter will be able to match.</p>\n","params":[{"tagname":"params","type":"Object","name":"cfg","doc":"<p>The filter config object</p>\n","html_type":"Object"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the filter will produce a valid value</p>\n","properties":null,"html_type":"Boolean"},"private":true,"inheritdoc":null,"static":true,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"static-method-isInvalid","owner":"Ext.util.Filter","short_doc":"Checks whether the filter will produce a meaningful value. ..."},{"tagname":"method","name":"mixin","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":814}],"doc":"<p>Used internally by the mixins pre-processor</p>\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[{"name":"name","type":"Object","html_type":"Object"},{"name":"mixinClass","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":["addConfig","hasOwnProperty","mixin"],"id":"static-method-mixin","owner":"Ext.Base","short_doc":"Used internally by the mixins pre-processor ..."},{"tagname":"method","name":"onExtended","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":399}],"doc":"\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[{"name":"fn","type":"Object","html_type":"Object"},{"name":"scope","type":"Object","html_type":"Object"}],"chainable":true,"fires":null,"method_calls":null,"id":"static-method-onExtended","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"override","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":695}],"doc":"<p>Override members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>Direct use of this method should be rare. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n","html_type":"Object"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this class</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["addCachedConfig","addConfig","addInheritableStatics","addMembers","mixin"],"id":"static-method-override","owner":"Ext.Base","short_doc":"Override members of this class. ..."},{"tagname":"method","name":"triggerExtended","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":377}],"doc":"\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-triggerExtended","owner":"Ext.Base","short_doc":" ..."}],"code_type":"ext_define","id":"class-Ext.util.Filter","short_doc":"Represents a filter that can be applied to a MixedCollection. ..."}