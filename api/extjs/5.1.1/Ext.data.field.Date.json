{"tagname":"class","name":"Ext.data.field.Date","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Date.js","linenr":1}],"doc":"<p>This class provides Date specific processing for fields.</p>\n\n<p>In previous releases this functionality was integral to the <code>Field</code> base class.</p>\n","aliases":{"data":["field.date"]},"alternateClassNames":[],"extends":"Ext.data.field.Field","mixins":[],"requires":[],"uses":[],"members":[{"tagname":"cfg","name":"allowBlank","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":278}],"doc":"<p>Used for validating a <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">model</a>. Defaults to true. An empty value here will cause\n<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>.<a href=\"#!/api/Ext.data.Model-method-isValid\" rel=\"Ext.data.Model-method-isValid\" class=\"docClass\">isValid</a> to evaluate to false.</p>\n","type":"Boolean","default":"true","properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-allowBlank","owner":"Ext.data.field.Field","short_doc":"Used for validating a model. ...","html_type":"Boolean"},{"tagname":"cfg","name":"allowNull","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":287}],"doc":"<p>Use when converting received data into a <a href=\"#!/api/Ext.data.field.Integer\" rel=\"Ext.data.field.Integer\" class=\"docClass\">&lt;code&gt;int&lt;/code&gt;</a>,\n<a href=\"#!/api/Ext.data.field.Number\" rel=\"Ext.data.field.Number\" class=\"docClass\">&lt;code&gt;float&lt;/code&gt;</a>, <a href=\"#!/api/Ext.data.field.Boolean\" rel=\"Ext.data.field.Boolean\" class=\"docClass\">&lt;code&gt;bool&lt;/code&gt;</a>\nor <a href=\"#!/api/Ext.data.field.String\" rel=\"Ext.data.field.String\" class=\"docClass\">&lt;code&gt;string&lt;/code&gt;</a> type. If the value cannot be\nparsed, <code>null</code> will be used if allowNull is true, otherwise a default value for that type will be used:</p>\n\n<ul>\n<li>for <code>int</code> and <code>float</code> - <code>0</code>.</li>\n<li>for <code>string</code> - <code>\"\"</code>.</li>\n<li>for <code>bool</code> - <code>false</code>.</li>\n</ul>\n\n\n<p>Note that when parsing of <a href=\"#!/api/Ext.data.field.Date\" rel=\"Ext.data.field.Date\" class=\"docClass\">&lt;code&gt;date&lt;/code&gt;</a> type fails, the value will\nbe <code>null</code> regardless of this setting.</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-allowNull","owner":"Ext.data.field.Field","short_doc":"Use when converting received data into a &lt;code&gt;int&lt;/code&gt;,\n&lt;code&gt;float&lt;/code&gt;, &lt;code&gt;bo...","html_type":"Boolean"},{"tagname":"cfg","name":"calculate","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":304}],"doc":"<p>This config defines a simple field calculation function. A calculate method only\nhas access to the record data and should return the value of the calculated field.\nWhen provided in this way, the <code>depends</code> config is automatically determined by\nparsing the <code>calculate</code> function. For example:</p>\n\n<pre><code> fields: [{\n     name: 'firstName',\n     type: 'string'\n },{\n     name: 'lastName',\n     type: 'string'\n },{\n     name: 'fullName',\n     calculate: function (data) {\n         return data.firstName + ' ' + data.lastName;\n     }\n }]\n</code></pre>\n\n<p>The above 'fullName' field is equivalent to:</p>\n\n<pre><code> {\n     name: 'fullName',\n     convert: function (v, rec) {\n         return rec.get('firstName') + ' ' + rec.get('lastName');\n     },\n     depends: ['firstName', 'lastName']\n }\n</code></pre>\n\n<p>The restrictions on form for a <code>calculate</code> method are that the accesses to field\nvalues must match the following regular expression (case insensitive):</p>\n\n<pre><code> data.([a-z_][a-z0-9_]*)\n // where 'data' is the param passed to the calculate method\n</code></pre>\n\n<p>The only advantage of a <code>calculate</code> method over a <code>convert</code> method is automatic\ndetermination of <code>depends</code>.</p>\n\n<p><strong>Note:</strong> The use of calculate and <a href=\"#!/api/Ext.data.field.Field-cfg-convert\" rel=\"Ext.data.field.Field-cfg-convert\" class=\"docClass\">convert</a> are exclusive.  The calculate\nmethod will override the convert method if both are configured.</p>\n","type":"Function","default":null,"properties":null,"params":[{"tagname":"params","type":"Object","name":"data","doc":"<p>An object with all values for each field in the parent\nmodel.  See <a href=\"#!/api/Ext.data.Model-method-getData\" rel=\"Ext.data.Model-method-getData\" class=\"docClass\">getData</a>.</p>\n","html_type":"Object"}],"return":{"type":"Mixed","name":"return","doc":"<p>value The value of the calculated field</p>\n","properties":null,"html_type":"Mixed"},"id":"cfg-calculate","owner":"Ext.data.field.Field","short_doc":"This config defines a simple field calculation function. ...","html_type":"Function"},{"tagname":"cfg","name":"convert","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":351}],"doc":"<p>If specified this config overrides the <code><a href=\"#!/api/Ext.data.field.Field-method-convert\" rel=\"Ext.data.field.Field-method-convert\" class=\"docClass\">convert</a></code> method. See\nalso <code><a href=\"#!/api/Ext.data.field.Field-cfg-calculate\" rel=\"Ext.data.field.Field-cfg-calculate\" class=\"docClass\">calculate</a></code> for simple field calculations.</p>\n\n<p><strong>Note:</strong> The use of <a href=\"#!/api/Ext.data.field.Field-cfg-calculate\" rel=\"Ext.data.field.Field-cfg-calculate\" class=\"docClass\">calculate</a> and convert are exclusive.  The calculate\nmethod will override the convert method if both are configured.</p>\n","type":"Function","default":null,"properties":null,"id":"cfg-convert","owner":"Ext.data.field.Field","short_doc":"If specified this config overrides the convert method. ...","html_type":"Function"},{"tagname":"cfg","name":"critical","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":360}],"doc":"<p>A critical field is a field that must always be sent to the server even if it has\nnot changed. The most common example of such a field is the \"id\" of a record (see\n<code><a href=\"#!/api/Ext.data.Model-cfg-idProperty\" rel=\"Ext.data.Model-cfg-idProperty\" class=\"docClass\">Ext.data.Model.idProperty</a></code> but the <code><a href=\"#!/api/Ext.data.Model-cfg-versionProperty\" rel=\"Ext.data.Model-cfg-versionProperty\" class=\"docClass\">Ext.data.Model.versionProperty</a></code>\nis similarly a <code>critical</code> field.</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-critical","owner":"Ext.data.field.Field","short_doc":"A critical field is a field that must always be sent to the server even if it has\nnot changed. ...","html_type":"Boolean"},{"tagname":"cfg","name":"dateFormat","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Date.js","linenr":15}],"doc":"<p>Serves as a default for the <a href=\"#!/api/Ext.data.field.Date-cfg-dateReadFormat\" rel=\"Ext.data.field.Date-cfg-dateReadFormat\" class=\"docClass\">dateReadFormat</a> and <a href=\"#!/api/Ext.data.field.Date-cfg-dateWriteFormat\" rel=\"Ext.data.field.Date-cfg-dateWriteFormat\" class=\"docClass\">dateWriteFormat</a> config options. This\nwill be used in place of those other configurations if not specified.</p>\n\n<p>A format string for the <a href=\"#!/api/Ext.Date-method-parse\" rel=\"Ext.Date-method-parse\" class=\"docClass\">Ext.Date.parse</a> function, or \"timestamp\" if the value provided by\nthe Reader is a UNIX timestamp, or \"time\" if the value provided by the Reader is a javascript millisecond\ntimestamp. See <a href=\"#!/api/Ext.Date\" rel=\"Ext.Date\" class=\"docClass\">Ext.Date</a>.</p>\n\n<p>It is quite important to note that while this config is optional, it will default to using the base\nJavaScript Date object's <code>parse</code> function if not specified, rather than <a href=\"#!/api/Ext.Date-method-parse\" rel=\"Ext.Date-method-parse\" class=\"docClass\">Ext.Date.parse</a>.\nThis can cause unexpected issues, especially when converting between timezones, or when converting dates that\ndo not have a timezone specified. The behavior of the native <code>Date.parse</code> is implementation-specific, and\ndepending on the value of the date string, it might return the UTC date or the local date. <strong>For this reason\nit is strongly recommended that you always specify an explicit date format when parsing dates.</strong></p>\n","type":"String","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-dateFormat","owner":"Ext.data.field.Date","short_doc":"Serves as a default for the dateReadFormat and dateWriteFormat config options. ...","html_type":"String"},{"tagname":"cfg","name":"dateReadFormat","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Date.js","linenr":34}],"doc":"<p>Used when converting received data into a Date when the <a href=\"#!/api/Ext.data.field.Date-property-type\" rel=\"Ext.data.field.Date-property-type\" class=\"docClass\">type</a> is specified as <code>\"date\"</code>.\nThis configuration takes precedence over <a href=\"#!/api/Ext.data.field.Date-cfg-dateFormat\" rel=\"Ext.data.field.Date-cfg-dateFormat\" class=\"docClass\">dateFormat</a>.\nSee <a href=\"#!/api/Ext.data.field.Date-cfg-dateFormat\" rel=\"Ext.data.field.Date-cfg-dateFormat\" class=\"docClass\">dateFormat</a> for more information.</p>\n","type":"String","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-dateReadFormat","owner":"Ext.data.field.Date","short_doc":"Used when converting received data into a Date when the type is specified as \"date\". ...","html_type":"String"},{"tagname":"cfg","name":"dateWriteFormat","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Date.js","linenr":42}],"doc":"<p>Provides a custom format when serializing dates with a <a href=\"#!/api/Ext.data.writer.Writer\" rel=\"Ext.data.writer.Writer\" class=\"docClass\">Ext.data.writer.Writer</a>.\nIf this is not specified, the <a href=\"#!/api/Ext.data.field.Date-cfg-dateFormat\" rel=\"Ext.data.field.Date-cfg-dateFormat\" class=\"docClass\">dateFormat</a> will be used. If no <code>dateFormat</code>\nis specified, 'timestamp' format is used.</p>\n\n<p>See the <a href=\"#!/api/Ext.data.writer.Writer\" rel=\"Ext.data.writer.Writer\" class=\"docClass\">Ext.data.writer.Writer</a> docs for more information on writing dates.</p>\n\n<p><strong>Note</strong> It is not possible to use the standard date serialization pathway or <a href=\"#!/api/Ext-property-USE_NATIVE_JSON\" rel=\"Ext-property-USE_NATIVE_JSON\" class=\"docClass\">native browser JSON production</a>\nto use a <a href=\"#!/api/Ext.data.writer.Json\" rel=\"Ext.data.writer.Json\" class=\"docClass\">JsonWriter</a> to send Microsoft formated\n\"JSON\" dates.</p>\n\n<p>To use a <a href=\"#!/api/Ext.data.writer.Json\" rel=\"Ext.data.writer.Json\" class=\"docClass\">JsonWriter</a> to write dates in a JSON packet in\nthe form <code>\"\\/Date(1357372800000)\\/\"</code> configure the field like this:</p>\n\n<p>   {\n       type: 'date',\n       dateFormat: 'MS',     // To parse incoming dates from server correctly\n       serialize: null       // Avoid formatting or conversion by the Writer\n   }</p>\n\n<p>Then override the <code><a href=\"#!/api/Ext.JSON\" rel=\"Ext.JSON\" class=\"docClass\">Ext.JSON</a></code> date serialize function:</p>\n\n<p>   <a href=\"#!/api/Ext.JSON-method-encodeDate\" rel=\"Ext.JSON-method-encodeDate\" class=\"docClass\">Ext.JSON.encodeDate</a> = function (d) {\n       return '\"' + <a href=\"#!/api/Ext.Date-method-format\" rel=\"Ext.Date-method-format\" class=\"docClass\">Ext.Date.format</a>(d, 'MS') + '\"';\n   };</p>\n","type":"String","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-dateWriteFormat","owner":"Ext.data.field.Date","short_doc":"Provides a custom format when serializing dates with a Ext.data.writer.Writer. ...","html_type":"String"},{"tagname":"cfg","name":"defaultValue","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":376}],"doc":"<p>The default value used when the creating an instance from a raw data object,\nand the property referenced by the <code><a href=\"#!/api/Ext.data.field.Field-cfg-mapping\" rel=\"Ext.data.field.Field-cfg-mapping\" class=\"docClass\">mapping</a></code>\ndoes not exist in that data object.</p>\n\n<p>The value <code>undefined</code> prevents defaulting in a value.</p>\n","type":"Object","default":"undefined","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-defaultValue","owner":"Ext.data.field.Field","short_doc":"The default value used when the creating an instance from a raw data object,\nand the property referenced by the mappi...","html_type":"Object"},{"tagname":"cfg","name":"depends","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":431}],"doc":"<p>The field name or names within the <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Model</a> on which the value\nof this field depends, and from which a new value may be calculated. These values\nare the values used by the <code>convert</code> method. If you do not have a <code>convert</code> method\nthen this config should not be specified.</p>\n\n<p>Before using this config you should consider if using a <code>calculate</code> method instead\nof a <code>convert</code> method would be simpler.</p>\n\n<p>Whenever any of the named fields are set using the <a href=\"#!/api/Ext.data.Model-method-set\" rel=\"Ext.data.Model-method-set\" class=\"docClass\">set</a>\nmethod, this fields will have its <code>convert</code> method called passing the\n<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">record</a> so that the dependent value can be calculated from\nall fields which it needs.</p>\n\n<p>For example, to display a person's full name, using two separate <code>firstName</code> and\n<code>lastName</code> fields, configure the name field like this:</p>\n\n<pre><code>{\n    name: 'name',\n\n    // Will be called whenever forename or surname fields are set\n    convert: function (v, rec) {\n        return rec.get('firstName') + ' ' + rec.get('lastName');\n    },\n\n    depends: [ 'firstName', 'lastName' ],\n\n    // It should not be returned to the server - it's not a database field\n    persist: false\n}\n</code></pre>\n\n<p>Note that if you do not want the calculated field to be part of the field set sent\nback to the server when the store is synchronized, you should configure the field\nwith <code>persist</code> set to <code>false</code>.</p>\n","type":"String/String[]","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-depends","owner":"Ext.data.field.Field","short_doc":"The field name or names within the Model on which the value\nof this field depends, and from which a new value may be ...","html_type":"String/String[]"},{"tagname":"cfg","name":"mapping","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":478}],"doc":"<p>(Optional) A path expression for use by the <a href=\"#!/api/Ext.data.reader.Reader\" rel=\"Ext.data.reader.Reader\" class=\"docClass\">Ext.data.reader.Reader</a> implementation that is creating the\n<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Model</a> to extract the Field value from the data object. If the path expression is the same\nas the field name, the mapping may be omitted. A function may be passed to do complex data extraction. The examples\nbelow are simple just to demonstrate the capability, typically, a function would not be used to extract such\nsimple data.</p>\n\n<p>The form of the mapping expression depends on the Reader being used.</p>\n\n<ul>\n<li><p><a href=\"#!/api/Ext.data.reader.Json\" rel=\"Ext.data.reader.Json\" class=\"docClass\">Ext.data.reader.Json</a></p>\n\n<p>The mapping is a string containing the javascript expression to reference the data from an element of the data\nitem's <a href=\"#!/api/Ext.data.reader.Json-cfg-rootProperty\" rel=\"Ext.data.reader.Json-cfg-rootProperty\" class=\"docClass\">rootProperty</a> Array. Defaults to the field name. If a function is passed,\na single argument is received which contains the raw json object:</p>\n\n<pre><code>// Server returns [{\"name\": \"Foo\", \"age\": 1}, {\"name\": \"Bar\", \"age\": 2}]\nmapping: function(data) {\n    return data.name;\n}\n</code></pre></li>\n<li><p><a href=\"#!/api/Ext.data.reader.Xml\" rel=\"Ext.data.reader.Xml\" class=\"docClass\">Ext.data.reader.Xml</a></p>\n\n<p>The mapping is an <a href=\"#!/api/Ext.dom.Query\" rel=\"Ext.dom.Query\" class=\"docClass\">Ext.DomQuery</a> path to the data item relative to the DOM element that represents the\n<a href=\"#!/api/Ext.data.reader.Xml-cfg-record\" rel=\"Ext.data.reader.Xml-cfg-record\" class=\"docClass\">record</a>. Defaults to the field name. If a function is passed, a single argument\nis received which contains the record node:</p>\n\n<pre><code>// Server returns &lt;Root&gt;&lt;Person&gt;&lt;Name&gt;Foo&lt;/Name&gt;&lt;Age&gt;1&lt;/Age&gt;&lt;/Person&gt;&lt;Person&gt;&lt;Name&gt;Bar&lt;/Name&gt;&lt;Age&gt;2&lt;/Age&gt;&lt;/Person&gt;&lt;/Root&gt;\nmapping: function(data) {\n    return data.firstChild.textContent;\n}\n</code></pre></li>\n<li><p><a href=\"#!/api/Ext.data.reader.Array\" rel=\"Ext.data.reader.Array\" class=\"docClass\">Ext.data.reader.Array</a></p>\n\n<p>The mapping is a number indicating the Array index of the field's value. Defaults to the field specification's\nArray position. If a function is passed, a single argument is received which contains the child array.</p>\n\n<pre><code>// Server returns [[\"Foo\", 1], [\"Bar\", 2]]\nmapping: function(data) {\n    return data[0];\n}\n</code></pre></li>\n</ul>\n\n\n<p>If a more complex value extraction strategy is required, then configure the Field with a <a href=\"#!/api/Ext.data.field.Field-cfg-convert\" rel=\"Ext.data.field.Field-cfg-convert\" class=\"docClass\">convert</a>\nfunction. This is passed the whole row object, and may interrogate it in whatever way is necessary in order to\nreturn the desired data.</p>\n","type":"String/Number/Function","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-mapping","owner":"Ext.data.field.Field","short_doc":"(Optional) A path expression for use by the Ext.data.reader.Reader implementation that is creating the\nModel to extra...","html_type":"String/Number/Function"},{"tagname":"cfg","name":"name","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":527}],"doc":"<p>The name by which the field is referenced within the Model. This is referenced by,\nfor example, the <code>dataIndex</code> property in column definition objects passed to\n<a href=\"#!/api/Ext.grid.property.HeaderContainer\" rel=\"Ext.grid.property.HeaderContainer\" class=\"docClass\">Ext.grid.property.HeaderContainer</a>.</p>\n\n<p>Note: In the simplest case, if no properties other than <code>name</code> are required, a\nfield definition may consist of just a String for the field name.</p>\n","type":"String","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-name","owner":"Ext.data.field.Field","short_doc":"The name by which the field is referenced within the Model. ...","html_type":"String"},{"tagname":"cfg","name":"persist","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":546}],"doc":"<p>False to exclude this field from the <a href=\"#!/api/Ext.data.Model-property-modified\" rel=\"Ext.data.Model-property-modified\" class=\"docClass\">Ext.data.Model.modified</a> fields in a\nrecord. This will also exclude the field from being written using a\n<a href=\"#!/api/Ext.data.writer.Writer\" rel=\"Ext.data.writer.Writer\" class=\"docClass\">Ext.data.writer.Writer</a>. This option is useful when fields are used to keep\nstate on the client but do not need to be persisted to the server.</p>\n\n<p>Defaults to <code>false</code> for <code>calculated</code> fields and <code>true</code> otherwise.</p>\n","type":"Boolean","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-persist","owner":"Ext.data.field.Field","short_doc":"False to exclude this field from the Ext.data.Model.modified fields in a\nrecord. ...","html_type":"Boolean"},{"tagname":"cfg","name":"reference","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":558}],"doc":"<p>The <a href=\"#!/api/Ext.data.Model-property-entityName\" rel=\"Ext.data.Model-property-entityName\" class=\"docClass\">name</a> of the entity referenced by this field.\nIn most databases, this relationship is represented by a \"foreign key\". That is, a\nvalue for such a field matches the value of the <a href=\"#!/api/Ext.data.Model-cfg-idProperty\" rel=\"Ext.data.Model-cfg-idProperty\" class=\"docClass\">id</a>\nfor an entity of this type.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('MyApp.models.Organization', {\n     extend: '<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>',\n     ...\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('MyApp.models.User', {\n     extend: '<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>',\n\n     fields: [\n         { name: 'organizationId', reference: 'Organization' }\n     ],\n     ...\n });\n</code></pre>\n\n<p>If a <code>reference</code> is not nullable, set the <a href=\"#!/api/Ext.data.field.Field-cfg-allowBlank\" rel=\"Ext.data.field.Field-cfg-allowBlank\" class=\"docClass\">allowBlank</a> property\nto false.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('MyApp.models.User', {\n     extend: '<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>',\n\n     fields: [\n         { name: 'organizationId', reference: 'Organization', allowBlank: false }\n     ],\n     ...\n });\n</code></pre>\n\n<p>If the name of the generated <a href=\"#!/api/Ext.data.schema.Association\" rel=\"Ext.data.schema.Association\" class=\"docClass\">association</a> or other aspects\nneed to be specified, the <code>reference</code> can be an object. The following usage shows\nwhat would be generated by default given the above examples using the string form.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('MyApp.models.User', {\n     extend: '<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>',\n\n     fields: [{\n         name: 'organizationId',\n         reference: {\n             type: 'Organization',\n             association: 'UsersByOrganization',\n             role: 'organization',\n             inverse: 'users'\n         }\n     }],\n     ...\n });\n</code></pre>\n\n<p>Finally, a <code>reference</code> can also describe ownership between the entities. By default,\nno ownership relationship is assumed. If, however, the User entities are owned by\ntheir Organization, we could say this:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('MyApp.models.User', {\n     extend: '<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>',\n\n     fields: [{\n         name: 'organizationId',\n         reference: {\n             parent: 'Organization' // Organization is the parent of User\n         }\n     }],\n     ...\n });\n</code></pre>\n","type":"String/Object","default":null,"properties":[{"tagname":"cfg","type":"String","name":"type","doc":"<p>The type which this field references. This is the value set by the string form of\n<code>reference</code>. If the referenced entity has an ownership relationship this field\nshould be omitted and <code>reference.parent</code> or <code>reference.child</code> should be specified\ninstead.</p>\n","html_type":"String"},{"tagname":"cfg","type":"String","name":"association","optional":true,"doc":"<p>The name of the association. By default, the name of the association is the\ncapitalized <code>inverse</code> plus \"By\" plus the capitalized <code>role</code>.</p>\n","html_type":"String"},{"tagname":"cfg","type":"String","name":"child","optional":true,"doc":"<p>Set this property instead of <code>reference.type</code> to indicate that the referenced entity\nis an owned child of this entity. That is, the <code>reference</code> entity should be deleted\nwhen this entity is deleted.</p>\n","html_type":"String"},{"tagname":"cfg","type":"String","name":"parent","optional":true,"doc":"<p>Set this property instead of <code>reference.type</code> to indicate that the referenced entity\nis the owning parent of this entity. That is, this entity should be deleted when the\n<code>reference</code> entity is deleted.</p>\n","html_type":"String"},{"tagname":"cfg","type":"String","name":"role","optional":true,"doc":"<p>The name of the role played by the referenced entity. By default, this is the field\nname (minus its \"Id\" suffix if present).</p>\n","html_type":"String"},{"tagname":"cfg","type":"String/Object","name":"inverse","optional":true,"doc":"<p>The name of the inverse role (of this entity with respect to the <code>reference</code>\nentity). By default, this is the <a href=\"#!/api/Ext.util.Inflector-method-pluralize\" rel=\"Ext.util.Inflector-method-pluralize\" class=\"docClass\">pluralized</a>\nname of this entity, unless this <code>reference</code> is <code>unique</code>, in which case the default\nname is the <a href=\"#!/api/Ext.util.Inflector-method-singularize\" rel=\"Ext.util.Inflector-method-singularize\" class=\"docClass\">singularized</a> name of this entity.</p>\n\n<p>This config may also be an object containing a role, getter, or setter.</p>\n","html_type":"String/Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-reference","owner":"Ext.data.field.Field","short_doc":"The name of the entity referenced by this field. ...","html_type":"String/Object"},{"tagname":"cfg","name":"serialize","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":660}],"doc":"<p>A function which converts the Model's value for this Field into a form which can be used by whatever <a href=\"#!/api/Ext.data.writer.Writer\" rel=\"Ext.data.writer.Writer\" class=\"docClass\">Writer</a>\nis being used to sync data with the server.</p>\n","type":"Function","default":null,"properties":null,"inheritdoc":null,"id":"cfg-serialize","owner":"Ext.data.field.Field","params":[{"tagname":"params","type":"Mixed","name":"value","doc":"<p>The Field's value - the value to be serialized.</p>\n\n","html_type":"Mixed"},{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The record being serialized.</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"}],"return":{"type":"String","name":"return","doc":"<p>The string that represents the Field's value.</p>\n\n","properties":null,"html_type":"String"},"throws":null,"short_doc":"A function which converts the Model's value for this Field into a form which can be used by whatever Writer\nis being ...","html_type":"Function"},{"tagname":"cfg","name":"sortType","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Date.js","linenr":11}],"doc":"<p>A function which converts a Field's value to a comparable value in order to ensure\ncorrect sort ordering.</p>\n\n<p>Predefined functions are provided in <a href=\"#!/api/Ext.data.SortTypes\" rel=\"Ext.data.SortTypes\" class=\"docClass\">Ext.data.SortTypes</a>. A custom sort example:</p>\n\n<pre><code>// current sort     after sort we want\n// +-+------+          +-+------+\n// |1|First |          |1|First |\n// |2|Last  |          |3|Second|\n// |3|Second|          |2|Last  |\n// +-+------+          +-+------+\n\nsortType: function(value) {\n   switch (value.toLowerCase()) // native toLowerCase():\n   {\n      case 'first': return 1;\n      case 'second': return 2;\n      default: return 3;\n   }\n}\n</code></pre>\n\n<p>May also be set to a String value, corresponding to one of the named sort types in\n<a href=\"#!/api/Ext.data.SortTypes\" rel=\"Ext.data.SortTypes\" class=\"docClass\">Ext.data.SortTypes</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":11,"type":"Function/String","default":"'asDate'","readonly":null,"id":"cfg-sortType","owner":"Ext.data.field.Date","properties":null,"overrides":[{"name":"sortType","owner":"Ext.data.field.Field","link":"<a href=\"#!/api/Ext.data.field.Field-cfg-sortType\" rel=\"Ext.data.field.Field-cfg-sortType\" class=\"docClass\">Ext.data.field.Field.sortType</a>"}],"short_doc":"A function which converts a Field's value to a comparable value in order to ensure\ncorrect sort ordering. ...","html_type":"Function/String"},{"tagname":"cfg","name":"unique","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":693}],"doc":"<p><code>true</code> if the value of this field is unique amongst all instances. When used with a\n<code>reference</code> this describes a \"one-to-one\" relationship. It is almost always the case\nthat a <code>unique</code> field cannot also be <a href=\"#!/api/Ext.data.field.Field-cfg-allowBlank\" rel=\"Ext.data.field.Field-cfg-allowBlank\" class=\"docClass\">nullable</a>.</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-unique","owner":"Ext.data.field.Field","short_doc":"true if the value of this field is unique amongst all instances. ...","html_type":"Boolean"},{"tagname":"cfg","name":"validators","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":701}],"doc":"<p>An array of <a href=\"#!/api/Ext.data.validator.Validator\" rel=\"Ext.data.validator.Validator\" class=\"docClass\">validators</a> for this field. These\n<code>validators</code> will only be passed a field value to validate.</p>\n","type":"Object[]","default":null,"properties":null,"id":"cfg-validators","owner":"Ext.data.field.Field","short_doc":"An array of validators for this field. ...","html_type":"Object[]"},{"tagname":"property","name":"$className","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1025}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"String","default":"'Ext.Base'","readonly":null,"id":"property-S-className","owner":"Ext.Base","short_doc":" ...","html_type":"String"},{"tagname":"property","name":"$configPrefixed","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1037}],"doc":"<p>The value <code>true</code> causes <code>config</code> values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\") character. A value of <code>false</code>\nstores <code>config</code> values as properties using their exact name (no prefix).</p>\n","type":"Boolean","default":"true","properties":null,"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-S-configPrefixed","owner":"Ext.Base","overrides":[{"name":"$configPrefixed","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-S-configPrefixed\" rel=\"Ext.Component-property-S-configPrefixed\" class=\"docClass\">Ext.Component.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-property-S-configPrefixed\" rel=\"Ext.layout.Layout-property-S-configPrefixed\" class=\"docClass\">Ext.layout.Layout.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-property-S-configPrefixed\" rel=\"Ext.data.AbstractStore-property-S-configPrefixed\" class=\"docClass\">Ext.data.AbstractStore.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.layout.container.boxOverflow.None","link":"<a href=\"#!/api/Ext.layout.container.boxOverflow.None-property-S-configPrefixed\" rel=\"Ext.layout.container.boxOverflow.None-property-S-configPrefixed\" class=\"docClass\">Ext.layout.container.boxOverflow.None.$configPrefixed</a>"}],"short_doc":"The value true causes config values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\")...","html_type":"Boolean"},{"tagname":"property","name":"$configStrict","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1047}],"doc":"<p>The value <code>true</code> instructs the <code>initConfig</code> method to only honor values for\nproperties declared in the <code>config</code> block of a class. When <code>false</code>, properties\nthat are not declared in a <code>config</code> block will be placed on the instance.</p>\n","type":"Boolean","default":"true","properties":null,"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-S-configStrict","owner":"Ext.Base","overrides":[{"name":"$configStrict","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-S-configStrict\" rel=\"Ext.Component-property-S-configStrict\" class=\"docClass\">Ext.Component.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-property-S-configStrict\" rel=\"Ext.layout.Layout-property-S-configStrict\" class=\"docClass\">Ext.layout.Layout.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-property-S-configStrict\" rel=\"Ext.data.AbstractStore-property-S-configStrict\" class=\"docClass\">Ext.data.AbstractStore.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.layout.container.boxOverflow.None","link":"<a href=\"#!/api/Ext.layout.container.boxOverflow.None-property-S-configStrict\" rel=\"Ext.layout.container.boxOverflow.None-property-S-configStrict\" class=\"docClass\">Ext.layout.container.boxOverflow.None.$configStrict</a>"}],"short_doc":"The value true instructs the initConfig method to only honor values for\nproperties declared in the config block of a ...","html_type":"Boolean"},{"tagname":"property","name":"aliasPrefix","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":258}],"doc":"<p>also configures Factoryable</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"type":"String","default":"'data.field.'","readonly":null,"id":"property-aliasPrefix","owner":"Ext.data.field.Field","short_doc":"also configures Factoryable ...","html_type":"String"},{"tagname":"property","name":"argumentNamesRe","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":794}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":794,"type":"RegExp","default":"/^function\\s+\\(\\s*([^,\\)\\s]+)/","readonly":null,"id":"property-argumentNamesRe","owner":"Ext.data.field.Field","short_doc":" ...","html_type":"RegExp"},{"tagname":"property","name":"calculateRe","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":795}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":795,"type":"RegExp","default":"/[^\\.a-z0-9_]([a-z_][a-z_0-9]*)\\.([a-z_][a-z_0-9]*)/gi","readonly":null,"id":"property-calculateRe","owner":"Ext.data.field.Field","short_doc":" ...","html_type":"RegExp"},{"tagname":"property","name":"calculated","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":725}],"doc":"<p>This property is <code>true</code> if this field has a <code><a href=\"#!/api/Ext.data.field.Field-cfg-calculate\" rel=\"Ext.data.field.Field-cfg-calculate\" class=\"docClass\">calculate</a></code>\nmethod or a <code><a href=\"#!/api/Ext.data.field.Field-method-convert\" rel=\"Ext.data.field.Field-method-convert\" class=\"docClass\">convert</a></code> method that operates on the entire\nrecord as opposed to just the data value. This property is determined from the\n<code>length</code> of the <code><a href=\"#!/api/Ext.data.field.Field-method-convert\" rel=\"Ext.data.field.Field-method-convert\" class=\"docClass\">convert</a></code> function which means this is\n<em>not</em> calculated:</p>\n\n<pre><code> convert: function (value) {\n     return ...\n }\n</code></pre>\n\n<p>While this <em>is</em> calculated:</p>\n\n<pre><code> convert: function (value, record) {\n     return ...\n }\n</code></pre>\n\n<p><strong>NOTE:</strong> It is recommended for such fields to use <code><a href=\"#!/api/Ext.data.field.Field-cfg-calculate\" rel=\"Ext.data.field.Field-cfg-calculate\" class=\"docClass\">calculate</a></code>\nor explicitly specify the fields used by <code><a href=\"#!/api/Ext.data.field.Field-method-convert\" rel=\"Ext.data.field.Field-method-convert\" class=\"docClass\">convert</a></code> using\n<code><a href=\"#!/api/Ext.data.field.Field-cfg-depends\" rel=\"Ext.data.field.Field-cfg-depends\" class=\"docClass\">depends</a></code>.</p>\n","type":"Boolean","default":"false","properties":null,"readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-calculated","owner":"Ext.data.field.Field","short_doc":"This property is true if this field has a calculate\nmethod or a convert method that operates on the entire\nrecord as ...","html_type":"Boolean"},{"tagname":"property","name":"defaultInvalidMessage","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":369}],"doc":"<p>The default message to present for an invalid field.</p>\n","type":"String","default":"'This field is invalid'","properties":null,"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-defaultInvalidMessage","owner":"Ext.data.field.Field","short_doc":"The default message to present for an invalid field. ...","html_type":"String"},{"tagname":"property","name":"definedBy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":387}],"doc":"<p>The class (derived from <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>) that defined this field.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('MyApp.models.Foo', {\n     extend: '<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>',\n\n     fields: [\n         { name: 'bar' }\n     ],\n     ...\n });\n\n var barField = MyApp.models.Foo.getField('bar');\n\n alert(barField.definedBy === MyApp.models.Foo); // alerts 'true'\n</code></pre>\n\n<p>When a field is inherited, this value will reference the class that originally\ndefined the field.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('MyApp.models.Base', {\n     extend: '<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>',\n\n     fields: [\n         { name: 'foo' }\n     ],\n     ...\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('MyApp.models.Derived', {\n     extend: 'MyApp.models.Base',\n\n     fields: [\n         { name: 'bar' }\n     ],\n     ...\n });\n\n var fooField = MyApp.models.Derived.getField('foo');\n\n alert(fooField.definedBy === MyApp.models.Base); // alerts 'true'\n</code></pre>\n","type":"Ext.Class","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-definedBy","owner":"Ext.data.field.Field","short_doc":"The class (derived from Ext.data.Model) that defined this field. ...","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},{"tagname":"property","name":"dependents","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":469}],"doc":"<p>This array tracks the fields that have indicated this field in their <code>depends</code>\nlist. If no fields depend on this field, this will be <code>null</code>.</p>\n","type":"Ext.data.field.Field[]","default":null,"properties":null,"readonly":true,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"id":"property-dependents","owner":"Ext.data.field.Field","short_doc":"This array tracks the fields that have indicated this field in their depends\nlist. ...","html_type":"<a href=\"#!/api/Ext.data.field.Field\" rel=\"Ext.data.field.Field\" class=\"docClass\">Ext.data.field.Field</a>[]"},{"tagname":"property","name":"deprecated","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":1183}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1183,"type":"Object","default":null,"readonly":null,"id":"property-deprecated","owner":"Ext.data.field.Field","html_type":"Object"},{"tagname":"property","name":"evil","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":751}],"doc":"<p>This flag is set to true for fields that have <code>convert</code> methods which take the 2nd\nargument (the record) and do not specify a <code>depends</code> set. Good fields indicate the\nfields on which they depend (if any).</p>\n","type":"Boolean","default":"false","properties":null,"private":true,"readonly":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"id":"property-evil","owner":"Ext.data.field.Field","short_doc":"This flag is set to true for fields that have convert methods which take the 2nd\nargument (the record) and do not spe...","html_type":"Boolean"},{"tagname":"property","name":"factoryConfig","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":264}],"doc":"<p>If this property is specified by the target class of this mixin its properties are\nused to configure the created <code><a href=\"#!/api/Ext.Factory\" rel=\"Ext.Factory\" class=\"docClass\">Ext.Factory</a></code>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":264,"type":"Object","default":"{defaultProperty: 'name'}","readonly":null,"id":"property-factoryConfig","owner":"Ext.data.field.Field","properties":null,"overrides":[{"name":"factoryConfig","owner":"Ext.mixin.Factoryable","link":"<a href=\"#!/api/Ext.mixin.Factoryable-property-factoryConfig\" rel=\"Ext.mixin.Factoryable-property-factoryConfig\" class=\"docClass\">Ext.mixin.Factoryable.factoryConfig</a>"}],"short_doc":"If this property is specified by the target class of this mixin its properties are\nused to configure the created Ext....","html_type":"Object"},{"tagname":"property","name":"identifier","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":761}],"doc":"<p>This property is set to <code>true</code> if this is an <a href=\"#!/api/Ext.data.Model-cfg-idProperty\" rel=\"Ext.data.Model-cfg-idProperty\" class=\"docClass\">id</a>\nfield.</p>\n","type":"Boolean","default":"false","properties":null,"readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-identifier","owner":"Ext.data.field.Field","short_doc":"This property is set to true if this is an id\nfield. ...","html_type":"Boolean"},{"tagname":"property","name":"isConfiguring","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1057}],"doc":"<p>This property is set to <code>true</code> during the call to <code>initConfig</code>.</p>\n","type":"Boolean","default":"false","properties":null,"protected":true,"readonly":true,"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-isConfiguring","owner":"Ext.Base","short_doc":"This property is set to true during the call to initConfig. ...","html_type":"Boolean"},{"tagname":"property","name":"isDataField","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":268}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":268,"type":"Boolean","default":"true","readonly":null,"id":"property-isDataField","owner":"Ext.data.field.Field","short_doc":" ...","html_type":"Boolean"},{"tagname":"property","name":"isDateField","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Date.js","linenr":13}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":13,"type":"Boolean","default":"true","readonly":null,"id":"property-isDateField","owner":"Ext.data.field.Date","short_doc":" ...","html_type":"Boolean"},{"tagname":"property","name":"isField","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":269}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":269,"type":"Boolean","default":"true","readonly":null,"id":"property-isField","owner":"Ext.data.field.Field","short_doc":" ...","html_type":"Boolean"},{"tagname":"property","name":"isFirstInstance","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1066}],"doc":"<p>This property is set to <code>true</code> if this instance is the first of its class.</p>\n","type":"Boolean","default":"false","properties":null,"protected":true,"readonly":true,"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-isFirstInstance","owner":"Ext.Base","short_doc":"This property is set to true if this instance is the first of its class. ...","html_type":"Boolean"},{"tagname":"property","name":"isInstance","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1028}],"doc":"<p>This value is <code>true</code> and is used to identify plain objects from instances of\na defined class.</p>\n","type":"Boolean","default":"true","properties":null,"protected":true,"readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-isInstance","owner":"Ext.Base","short_doc":"This value is true and is used to identify plain objects from instances of\na defined class. ...","html_type":"Boolean"},{"tagname":"property","name":"mixinId","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Factoryable.js","linenr":266}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":266,"type":"String","default":"'factoryable'","readonly":null,"id":"property-mixinId","owner":"Ext.mixin.Factoryable","overrides":[{"name":"mixinId","owner":"Ext.util.StoreHolder","link":"<a href=\"#!/api/Ext.util.StoreHolder-property-mixinId\" rel=\"Ext.util.StoreHolder-property-mixinId\" class=\"docClass\">Ext.util.StoreHolder.mixinId</a>"}],"short_doc":" ...","html_type":"String"},{"tagname":"property","name":"ordinal","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":539}],"doc":"<p>The position of this field in the <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a> in which it was defined.</p>\n","type":"Number","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-ordinal","owner":"Ext.data.field.Field","html_type":"Number"},{"tagname":"property","name":"rank","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":707}],"doc":"<p>This is a 1-based value that describes the dependency order of this field. This is\ninitialized to <code>null</code> (falsey) so we can cheaply topo-sort the fields of a class.</p>\n","type":"Number","default":null,"properties":null,"private":true,"readonly":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"id":"property-rank","owner":"Ext.data.field.Field","short_doc":"This is a 1-based value that describes the dependency order of this field. ...","html_type":"Number"},{"tagname":"property","name":"self","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1344}],"doc":"<p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n","type":"Ext.Class","default":null,"properties":null,"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-self","owner":"Ext.Base","short_doc":"Get the reference to the current class from which this object was instantiated. ...","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},{"tagname":"property","name":"stripRe","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":716}],"doc":"<p>A regular expression for stripping non-numeric characters from a numeric value.\nThis should be overridden for localization.</p>\n","type":"RegExp","default":"/[\\$,%]/g","properties":null,"readonly":true,"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-stripRe","owner":"Ext.data.field.Field","short_doc":"A regular expression for stripping non-numeric characters from a numeric value. ...","html_type":"RegExp"},{"tagname":"property","name":"type","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":262}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":262,"type":"String","default":"'auto'","readonly":null,"id":"property-type","owner":"Ext.data.field.Field","short_doc":" ...","html_type":"String"},{"tagname":"property","name":"$onExtended","autodetected":{"inheritdoc":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":370}],"doc":"\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"type":"Array","default":"[]","readonly":null,"id":"static-property-S-onExtended","owner":"Ext.Base","short_doc":" ...","html_type":"Array"},{"tagname":"method","name":"constructor","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":797}],"doc":"\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":797,"params":[{"name":"config","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-constructor","owner":"Ext.data.field.Field","return":{"type":"Ext.data.field.Field","doc":"\n","html_type":"<a href=\"#!/api/Ext.data.field.Field\" rel=\"Ext.data.field.Field\" class=\"docClass\">Ext.data.field.Field</a>"},"short_doc":" ..."},{"tagname":"method","name":"addDeprecations","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":115}],"doc":"<p>This method applies a versioned, deprecation declaration to this class. This\nis typically called by the <code>deprecated</code> config.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"deprecations","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-addDeprecations","owner":"Ext.Base","short_doc":"This method applies a versioned, deprecation declaration to this class. ..."},{"tagname":"method","name":"callOverridden","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1581}],"doc":"<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n","params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n","html_type":"Array/Arguments"}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the overridden method</p>\n","properties":null,"html_type":"Object"},"protected":true,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-callOverridden","owner":"Ext.Base","short_doc":"Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi..."},{"tagname":"method","name":"callParent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1143}],"doc":"<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10));     // alerts 10\n alert(My.Derived2.method(10)); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n","protected":true,"params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n","html_type":"Array/Arguments"}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the parent method</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-callParent","owner":"Ext.Base","short_doc":"Call the \"parent\" method of the current method. ..."},{"tagname":"method","name":"callSuper","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1258}],"doc":"<p>This method is used by an override to call the superclass method but bypass any\noverridden method. This is often done to \"patch\" a method that contains a bug\nbut for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function () {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     extend: 'Ext.some.Class',\n\n     method: function () {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>Ext.some.DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.patches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function () {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <code>callParent</code> to call the superclass <code>method</code> since\nthat would call the overridden method containing the bug. In other words, the\nabove patch would only produce \"Fixed\" then \"Good\" in the console log, whereas,\nusing <code>callParent</code> would produce \"Fixed\" then \"Bad\" then \"Good\".</p>\n","protected":true,"params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n","html_type":"Array/Arguments"}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the superclass method</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-callSuper","owner":"Ext.Base","short_doc":"This method is used by an override to call the superclass method but bypass any\noverridden method. ..."},{"tagname":"method","name":"collate","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":909}],"doc":"<p>Compares two values to retrieve their relative position in sort order, taking into account\nany <a href=\"#!/api/Ext.data.field.Field-cfg-sortType\" rel=\"Ext.data.field.Field-cfg-sortType\" class=\"docClass\">sortType</a>. Also see <a href=\"#!/api/Ext.data.field.Field-method-compare\" rel=\"Ext.data.field.Field-method-compare\" class=\"docClass\">compare</a>.</p>\n","params":[{"tagname":"params","type":"Object","name":"value1","doc":"<p>The first value.</p>\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"value2","doc":"<p>The second value.</p>\n","html_type":"Object"}],"return":{"type":"Number","name":"return","doc":"<p><code>-1</code> if <code>value1</code> is less than <code>value2</code>. <code>1</code> if <code>value1</code> is greater than <code>value2</code>.\n<code>0</code> otherwise.</p>\n","properties":null,"html_type":"Number"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["sortType"],"id":"method-collate","owner":"Ext.data.field.Field","short_doc":"Compares two values to retrieve their relative position in sort order, taking into account\nany sortType. ..."},{"tagname":"method","name":"compare","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Date.js","linenr":71}],"doc":"<p>Compares two values to retrieve their relative position in sort order. Also see\n<a href=\"#!/api/Ext.data.field.Date-method-collate\" rel=\"Ext.data.field.Date-method-collate\" class=\"docClass\">collate</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":71,"params":[{"name":"lhs","type":"Object","html_type":"Object"},{"name":"rhs","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-compare","owner":"Ext.data.field.Date","return":{"type":"Number","name":"return","doc":"<p><code>-1</code> if <code>value1</code> is less than <code>value2</code>. <code>1</code> if <code>value1</code> is greater than <code>value2</code>.\n<code>0</code> otherwise.</p>\n","properties":null,"html_type":"Number"},"overrides":[{"name":"compare","owner":"Ext.data.field.Field","link":"<a href=\"#!/api/Ext.data.field.Field-method-compare\" rel=\"Ext.data.field.Field-method-compare\" class=\"docClass\">Ext.data.field.Field.compare</a>"}],"short_doc":"Compares two values to retrieve their relative position in sort order. ..."},{"tagname":"method","name":"compileValidators","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":881}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":881,"params":[],"chainable":false,"fires":[],"method_calls":["constructValidators"],"id":"method-compileValidators","owner":"Ext.data.field.Field","short_doc":" ..."},{"tagname":"method","name":"constructValidators","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":889}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":889,"params":[{"name":"validators","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-constructValidators","owner":"Ext.data.field.Field","short_doc":" ..."},{"tagname":"method","name":"convert","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Date.js","linenr":91}],"doc":"<p>A function which converts the value provided by the Reader into the value that will\nbe stored in the record. This method can be overridden by a derived class or set as\na <code><a href=\"#!/api/Ext.data.field.Date-cfg-convert\" rel=\"Ext.data.field.Date-cfg-convert\" class=\"docClass\">convert</a></code> config.</p>\n\n<p>If configured as <code>null</code>, then no conversion will be applied to the raw data property\nwhen this Field is read. This will increase performance. but you must ensure that\nthe data is of the correct type and does not <em>need</em> converting.</p>\n\n<p>Example of convert functions:</p>\n\n<pre><code>function fullName(v, record){\n    return record.data.last + ', ' + record.data.first;\n}\n\nfunction location(v, record){\n    return !record.data.city ? '' : (record.data.city + ', ' + record.data.state);\n}\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Dude', {\n    extend: '<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>',\n    fields: [\n        {name: 'fullname',  convert: fullName},\n        {name: 'firstname', mapping: 'name.first'},\n        {name: 'lastname',  mapping: 'name.last'},\n        {name: 'city', defaultValue: 'unknown'},\n        'state',\n        {name: 'location',  convert: location}\n    ]\n});\n\n// create the data store\nvar store = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>', {\n    model: 'Dude',\n    proxy: {\n        type: 'memory',\n        reader: {\n            type: 'json',\n            rootProperty: 'daRoot',\n            totalProperty: 'total'\n        }\n    }\n});\n\nvar myData = [\n    { key: 1,\n      name: { first: 'Fat',    last:  'Albert' }\n      // notice no city, state provided in data object\n    },\n    { key: 2,\n      name: { first: 'Barney', last:  'Rubble' },\n      city: 'Bedrock', state: 'Stoneridge'\n    },\n    { key: 3,\n      name: { first: 'Cliff',  last:  'Claven' },\n      city: 'Boston',  state: 'MA'\n    }\n];\n</code></pre>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":91,"params":[{"name":"v","type":"Object","html_type":"Object"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-convert","owner":"Ext.data.field.Date","return":{"type":"Mixed","name":"return","doc":"<p>The converted value for storage in the record.</p>\n\n","properties":null,"html_type":"Mixed"},"overrides":[{"name":"convert","owner":"Ext.data.field.Field","link":"<a href=\"#!/api/Ext.data.field.Field-method-convert\" rel=\"Ext.data.field.Field-method-convert\" class=\"docClass\">Ext.data.field.Field.convert</a>"}],"short_doc":"A function which converts the value provided by the Reader into the value that will\nbe stored in the record. ..."},{"tagname":"method","name":"destroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1562}],"doc":"<p>This method is called to cleanup an object and its resources. After calling\nthis method, the object should not be used any further.</p>\n","protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["unlink"],"id":"method-destroy","owner":"Ext.Base","overrides":[{"name":"destroy","owner":"Ext.util.ElementContainer","link":"<a href=\"#!/api/Ext.util.ElementContainer-method-destroy\" rel=\"Ext.util.ElementContainer-method-destroy\" class=\"docClass\">Ext.util.ElementContainer.destroy</a>"},{"name":"destroy","owner":"Ext.state.Stateful","link":"<a href=\"#!/api/Ext.state.Stateful-method-destroy\" rel=\"Ext.state.Stateful-method-destroy\" class=\"docClass\">Ext.state.Stateful.destroy</a>"},{"name":"destroy","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-method-destroy\" rel=\"Ext.Component-method-destroy\" class=\"docClass\">Ext.Component.destroy</a>"},{"name":"destroy","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-destroy\" rel=\"Ext.data.AbstractStore-method-destroy\" class=\"docClass\">Ext.data.AbstractStore.destroy</a>"},{"name":"destroy","owner":"Ext.plugin.Abstract","link":"<a href=\"#!/api/Ext.plugin.Abstract-method-destroy\" rel=\"Ext.plugin.Abstract-method-destroy\" class=\"docClass\">Ext.plugin.Abstract.destroy</a>"},{"name":"destroy","owner":"Ext.app.BaseController","link":"<a href=\"#!/api/Ext.app.BaseController-method-destroy\" rel=\"Ext.app.BaseController-method-destroy\" class=\"docClass\">Ext.app.BaseController.destroy</a>"}],"short_doc":"This method is called to cleanup an object and its resources. ..."},{"tagname":"method","name":"doCalculate","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":1091}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1091,"params":[{"name":"v","type":"Object","html_type":"Object"},{"name":"rec","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["calculate"],"id":"method-doCalculate","owner":"Ext.data.field.Field","short_doc":" ..."},{"tagname":"method","name":"getAllowBlank","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":1103}],"doc":"<p>Gets allowBlank for this field. See <a href=\"#!/api/Ext.data.field.Field-cfg-allowBlank\" rel=\"Ext.data.field.Field-cfg-allowBlank\" class=\"docClass\">allowBlank</a>.</p>\n","return":{"type":"Boolean","name":"return","doc":"<p>allowBlank</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getAllowBlank","owner":"Ext.data.field.Field","short_doc":"Gets allowBlank for this field. ..."},{"tagname":"method","name":"getAllowNull","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":1111}],"doc":"<p>Gets allowNull for this field. See <a href=\"#!/api/Ext.data.field.Field-cfg-allowNull\" rel=\"Ext.data.field.Field-cfg-allowNull\" class=\"docClass\">allowNull</a>.</p>\n","return":{"type":"Boolean","name":"return","doc":"<p>allowNull</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getAllowNull","owner":"Ext.data.field.Field","short_doc":"Gets allowNull for this field. ..."},{"tagname":"method","name":"getConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1431}],"doc":"<p>Returns a specified config property value. If the name parameter is not passed,\nall current configuration options will be returned as key value pairs.</p>\n","params":[{"tagname":"params","type":"String","name":"name","optional":true,"doc":"<p>The name of the config property to get.</p>\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"peek","default":"false","optional":true,"doc":"<p><code>true</code> to peek at the raw value without calling the getter.</p>\n","html_type":"Boolean"}],"return":{"type":"Object","name":"return","doc":"<p>The config property value.</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-getConfig","owner":"Ext.Base","short_doc":"Returns a specified config property value. ..."},{"tagname":"method","name":"getConvert","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":1119}],"doc":"<p>Gets converter for this field. See <a href=\"#!/api/Ext.data.field.Field-method-convert\" rel=\"Ext.data.field.Field-method-convert\" class=\"docClass\">convert</a>.</p>\n","return":{"type":"Function","name":"return","doc":"<p>convert</p>\n","properties":null,"html_type":"Function"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getConvert","owner":"Ext.data.field.Field","short_doc":"Gets converter for this field. ..."},{"tagname":"method","name":"getCurrentConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1471}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getConfigurator"],"id":"method-getCurrentConfig","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"getDateFormat","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Date.js","linenr":125}],"doc":"<p>Gets the dateFormat for this field. See <a href=\"#!/api/Ext.data.field.Date-cfg-dateFormat\" rel=\"Ext.data.field.Date-cfg-dateFormat\" class=\"docClass\">dateFormat</a>.</p>\n","return":{"type":"String","name":"return","doc":"<p>dateFormat</p>\n","properties":null,"html_type":"String"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getDateFormat","owner":"Ext.data.field.Date","short_doc":"Gets the dateFormat for this field. ..."},{"tagname":"method","name":"getDateReadFormat","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Date.js","linenr":133}],"doc":"<p>Gets the dateReadFormat for this field. See <a href=\"#!/api/Ext.data.field.Date-cfg-dateReadFormat\" rel=\"Ext.data.field.Date-cfg-dateReadFormat\" class=\"docClass\">dateReadFormat</a>.</p>\n","return":{"type":"String","name":"return","doc":"<p>dateReadFormat</p>\n","properties":null,"html_type":"String"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getDateReadFormat","owner":"Ext.data.field.Date","short_doc":"Gets the dateReadFormat for this field. ..."},{"tagname":"method","name":"getDateWriteFormat","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Date.js","linenr":141}],"doc":"<p>Gets the dateWriteFormat for this field. See <a href=\"#!/api/Ext.data.field.Date-cfg-dateWriteFormat\" rel=\"Ext.data.field.Date-cfg-dateWriteFormat\" class=\"docClass\">dateWriteFormat</a>.</p>\n","return":{"type":"String","name":"return","doc":"<p>dateWriteFormat</p>\n","properties":null,"html_type":"String"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["hasOwnProperty"],"id":"method-getDateWriteFormat","owner":"Ext.data.field.Date","short_doc":"Gets the dateWriteFormat for this field. ..."},{"tagname":"method","name":"getDefaultValue","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":1127}],"doc":"<p>Gets the defaultValue for this field. See <a href=\"#!/api/Ext.data.field.Field-cfg-defaultValue\" rel=\"Ext.data.field.Field-cfg-defaultValue\" class=\"docClass\">defaultValue</a>.</p>\n","return":{"type":"Object","name":"return","doc":"<p>defaultValue</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getDefaultValue","owner":"Ext.data.field.Field","short_doc":"Gets the defaultValue for this field. ..."},{"tagname":"method","name":"getDepends","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":1135}],"doc":"<p>Gets the depends for this field. See <a href=\"#!/api/Ext.data.field.Field-cfg-depends\" rel=\"Ext.data.field.Field-cfg-depends\" class=\"docClass\">depends</a>.</p>\n","return":{"type":"String[]","name":"return","doc":"<p>depends</p>\n","properties":null,"html_type":"String[]"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getDepends","owner":"Ext.data.field.Field","short_doc":"Gets the depends for this field. ..."},{"tagname":"method","name":"getInitialConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1488}],"doc":"<p>Returns the initial configuration passed to constructor when instantiating\nthis class.</p>\n","params":[{"tagname":"params","type":"String","name":"name","optional":true,"doc":"<p>Name of the config option to return.</p>\n","html_type":"String"}],"return":{"type":"Object/Mixed","name":"return","doc":"<p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n","properties":null,"html_type":"Object/Mixed"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getInitialConfig","owner":"Ext.Base","short_doc":"Returns the initial configuration passed to constructor when instantiating\nthis class. ..."},{"tagname":"method","name":"getMapping","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":1143}],"doc":"<p>Get the mapping for this field. See <a href=\"#!/api/Ext.data.field.Field-cfg-mapping\" rel=\"Ext.data.field.Field-cfg-mapping\" class=\"docClass\">mapping</a>.</p>\n","return":{"type":"Object","name":"return","doc":"<p>mapping</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getMapping","owner":"Ext.data.field.Field","short_doc":"Get the mapping for this field. ..."},{"tagname":"method","name":"getName","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":1095}],"doc":"<p>Gets the name for this field. See <a href=\"#!/api/Ext.data.field.Field-cfg-name\" rel=\"Ext.data.field.Field-cfg-name\" class=\"docClass\">name</a>.</p>\n","return":{"type":"String","name":"return","doc":"<p>name</p>\n","properties":null,"html_type":"String"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getName","owner":"Ext.data.field.Field","short_doc":"Gets the name for this field. ..."},{"tagname":"method","name":"getPersist","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":1160}],"doc":"<p>Gets the persist for this field. See <a href=\"#!/api/Ext.data.field.Field-cfg-persist\" rel=\"Ext.data.field.Field-cfg-persist\" class=\"docClass\">persist</a>.</p>\n","return":{"type":"Boolean","name":"return","doc":"<p>persist</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getPersist","owner":"Ext.data.field.Field","short_doc":"Gets the persist for this field. ..."},{"tagname":"method","name":"getSortDir","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":1186}],"doc":"<p>Gets the sortDir for this field.</p>\n","return":{"type":"String","name":"return","doc":"<p>sortDir</p>\n","properties":null,"html_type":"String"},"deprecated":{"text":"<p>Setting sortDir and calling getSortDir were never applied by the\nthe Sorter.  This functionality does not natively exist on field instances.</p>\n","version":"5.1"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getSortDir","owner":"Ext.data.field.Field","short_doc":"Gets the sortDir for this field. ..."},{"tagname":"method","name":"getSortType","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":1168}],"doc":"<p>Gets the sortType for this field. See <a href=\"#!/api/Ext.data.field.Field-cfg-sortType\" rel=\"Ext.data.field.Field-cfg-sortType\" class=\"docClass\">sortType</a>.</p>\n","return":{"type":"Function","name":"return","doc":"<p>sortType</p>\n","properties":null,"html_type":"Function"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getSortType","owner":"Ext.data.field.Field","short_doc":"Gets the sortType for this field. ..."},{"tagname":"method","name":"getType","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Date.js","linenr":159}],"doc":"<p>Gets a string representation of the type of this field.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":159,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getType","owner":"Ext.data.field.Date","return":{"type":"String","name":"return","doc":"<p>type</p>\n\n","properties":null,"html_type":"String"},"overrides":[{"name":"getType","owner":"Ext.data.field.Field","link":"<a href=\"#!/api/Ext.data.field.Field-method-getType\" rel=\"Ext.data.field.Field-method-getType\" class=\"docClass\">Ext.data.field.Field.getType</a>"}],"short_doc":"Gets a string representation of the type of this field. ..."},{"tagname":"method","name":"hasConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1480}],"doc":"\n","private":true,"params":[{"tagname":"params","name":"config","doc":"\n","type":"Object","html_type":"Object"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-hasConfig","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"hasMapping","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":1151}],"doc":"<p>Checks if this field has a mapping applied.</p>\n","return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if this field has a mapping.</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-hasMapping","owner":"Ext.data.field.Field","short_doc":"Checks if this field has a mapping applied. ..."},{"tagname":"method","name":"initConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1393}],"doc":"<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n","protected":true,"params":[{"tagname":"params","type":"Object","name":"config","doc":"\n","html_type":"Object"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["getConfigurator"],"id":"method-initConfig","owner":"Ext.Base","short_doc":"Initialize configuration for this class. ..."},{"tagname":"method","name":"isEqual","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":942}],"doc":"<p>Tests whether two values are equal based on this field type.\nThis uses the <a href=\"#!/api/Ext.data.field.Field-method-compare\" rel=\"Ext.data.field.Field-method-compare\" class=\"docClass\">compare</a> method to determine equality, so\nthis method should generally not be overridden.</p>\n","params":[{"tagname":"params","type":"Object","name":"value1","doc":"<p>The first value.</p>\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"value2","doc":"<p>The second value.</p>\n","html_type":"Object"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the values are equal.</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["compare"],"id":"method-isEqual","owner":"Ext.data.field.Field","short_doc":"Tests whether two values are equal based on this field type. ..."},{"tagname":"method","name":"link","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1508}],"doc":"<p>Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (via <code><a href=\"#!/api/Ext.Base-method-destroy\" rel=\"Ext.Base-method-destroy\" class=\"docClass\">destroy</a></code>).</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"\n","html_type":"String"},{"tagname":"params","type":"Object","name":"value","doc":"\n","html_type":"Object"}],"return":{"type":"Object","name":"return","doc":"<p>The <code>value</code> passed.</p>\n","properties":null,"html_type":"Object"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-link","owner":"Ext.Base","short_doc":"Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (vi..."},{"tagname":"method","name":"onClassExtended","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":769}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":769,"params":[{"name":"cls","type":"Object","html_type":"Object"},{"name":"data","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-onClassExtended","owner":"Ext.data.field.Field","short_doc":" ..."},{"tagname":"method","name":"onClassMixedIn","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Factoryable.js","linenr":268}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":268,"params":[{"name":"targetClass","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-onClassMixedIn","owner":"Ext.mixin.Factoryable","short_doc":" ..."},{"tagname":"method","name":"serialize","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Date.js","linenr":113}],"doc":"<p>A function which converts the Model's value for this Field into a form which can be used by whatever <a href=\"#!/api/Ext.data.writer.Writer\" rel=\"Ext.data.writer.Writer\" class=\"docClass\">Writer</a>\nis being used to sync data with the server.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":113,"params":[{"name":"value","type":"Object","html_type":"Object"}],"chainable":null,"fires":[],"method_calls":["getDateWriteFormat"],"id":"method-serialize","owner":"Ext.data.field.Date","return":{"type":"String","name":"return","doc":"<p>The string that represents the Field's value.</p>\n","properties":null,"html_type":"String"},"overrides":[{"name":"serialize","owner":"Ext.data.field.Field","link":"<a href=\"#!/api/Ext.data.field.Field-method-serialize\" rel=\"Ext.data.field.Field-method-serialize\" class=\"docClass\">Ext.data.field.Field.serialize</a>"}],"short_doc":"A function which converts the Model's value for this Field into a form which can be used by whatever Writer\nis being ..."},{"tagname":"method","name":"setConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1441}],"doc":"<p>Sets a single/multiple configuration options.</p>\n","params":[{"tagname":"params","type":"String/Object","name":"name","doc":"<p>The name of the property to set, or a set of key value pairs to set.</p>\n","html_type":"String/Object"},{"tagname":"params","type":"Object","name":"value","optional":true,"doc":"<p>The value to set for the name parameter.</p>\n","html_type":"Object"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["getConfigurator"],"id":"method-setConfig","owner":"Ext.Base","short_doc":"Sets a single/multiple configuration options. ..."},{"tagname":"method","name":"setModelValidators","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":876}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":876,"params":[{"name":"modelValidators","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-setModelValidators","owner":"Ext.data.field.Field","short_doc":" ..."},{"tagname":"method","name":"statics","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1075}],"doc":"<p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self();   // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n","protected":true,"return":{"type":"Ext.Class","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-statics","owner":"Ext.Base","short_doc":"Get the reference to the class from which this object was instantiated. ..."},{"tagname":"method","name":"unlink","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1526}],"doc":"<p>Destroys a given set of <code><a href=\"#!/api/Ext.Base-method-link\" rel=\"Ext.Base-method-link\" class=\"docClass\">linked</a></code> objects. This is only needed if\nthe linked object is being destroyed before this instance.</p>\n","params":[{"tagname":"params","type":"String[]","name":"names","doc":"<p>The names of the linked objects to destroy.</p>\n","html_type":"String[]"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"method-unlink","owner":"Ext.Base","short_doc":"Destroys a given set of linked objects. ..."},{"tagname":"method","name":"validate","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/field/Field.js","linenr":1035}],"doc":"<p>Validates the passed value for this field.</p>\n","params":[{"tagname":"params","type":"Object","name":"value","doc":"<p>The value to validate.</p>\n","html_type":"Object"},{"tagname":"params","type":"String","name":"separator","optional":true,"doc":"<p>This string is passed if the caller wants all validation\nmessages concatenated with this string between each. This can be handled as a\n\"falsy\" value because concatenating with no separator is seldom desirable.</p>\n","html_type":"String"},{"tagname":"params","type":"Ext.data.ErrorCollection","name":"errors","optional":true,"doc":"<p>This parameter is passed if the caller\nwants all validation results individually added to the collection.</p>\n","html_type":"<a href=\"#!/api/Ext.data.ErrorCollection\" rel=\"Ext.data.ErrorCollection\" class=\"docClass\">Ext.data.ErrorCollection</a>"}],"return":{"type":"Boolean/String","name":"return","doc":"<p><code>true</code> if the value is valid. A string may be returned if\nthe value is not valid, to indicate an error message. Any other non <code>true</code> value\nindicates the value is not valid. This method is not implemented by default,\nsubclasses may override it to provide an implementation.</p>\n","properties":null,"html_type":"Boolean/String"},"protected":true,"template":true,"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["compileValidators"],"id":"method-validate","owner":"Ext.data.field.Field","short_doc":"Validates the passed value for this field. ..."},{"tagname":"method","name":"addConfig","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":911}],"doc":"<p>Adds new config properties to this class. This is called for classes when they\nare declared, then for any mixins that class may define and finally for any\noverrides defined that target the class.</p>\n","params":[{"tagname":"params","type":"Object","name":"config","doc":"\n","html_type":"Object"},{"tagname":"params","type":"Ext.Class","name":"mixinClass","optional":true,"doc":"<p>The mixin class if the configs are from a mixin.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"}],"private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["getConfigurator"],"id":"static-method-addConfig","owner":"Ext.Base","short_doc":"Adds new config properties to this class. ..."},{"tagname":"method","name":"addInheritableStatics","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":436}],"doc":"\n","private":true,"static":true,"inheritable":true,"params":[{"tagname":"params","type":"Object","name":"members","doc":"\n","html_type":"Object"}],"inheritdoc":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"static-method-addInheritableStatics","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"addMember","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":634}],"doc":"\n","private":true,"static":true,"inheritable":true,"params":[{"tagname":"params","name":"name","doc":"\n","type":"Object","html_type":"Object"},{"tagname":"params","name":"member","doc":"\n","type":"Object","html_type":"Object"}],"inheritdoc":null,"linenr":null,"chainable":true,"fires":null,"method_calls":["addMembers"],"id":"static-method-addMember","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"addMembers","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":480}],"doc":"<p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat();\n kitty.meow();\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"<p>The members to add to this class.</p>\n","html_type":"Object"},{"tagname":"params","type":"Boolean","name":"isStatic","default":"false","optional":true,"doc":"<p>Pass <code>true</code> if the members are static.</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"privacy","default":"false","optional":true,"doc":"<p>Pass <code>true</code> if the members are private. This\nonly has meaning in debug mode and only for methods.</p>\n","html_type":"Boolean"}],"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":true,"fires":null,"method_calls":["addConfig","addMembers"],"id":"static-method-addMembers","owner":"Ext.Base","short_doc":"Add methods / properties to the prototype of this class. ..."},{"tagname":"method","name":"addStatics","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":413}],"doc":"<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"\n","html_type":"Object"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":true,"fires":null,"method_calls":["addMembers"],"id":"static-method-addStatics","owner":"Ext.Base","short_doc":"Add / override static properties of this class. ..."},{"tagname":"method","name":"borrow","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":648}],"doc":"<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n","params":[{"tagname":"params","type":"Ext.Base","name":"fromClass","doc":"<p>The class to borrow members from</p>\n","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},{"tagname":"params","type":"Array/String","name":"members","doc":"<p>The names of the members to borrow</p>\n","html_type":"Array/String"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"inheritable":true,"private":true,"inheritdoc":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["addMembers"],"id":"static-method-borrow","owner":"Ext.Base","short_doc":"Borrow another class' members to the prototype of this class. ..."},{"tagname":"method","name":"callParent","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":785}],"doc":"\n","protected":true,"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[{"name":"args","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-callParent","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"callSuper","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":799}],"doc":"\n","protected":true,"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[{"name":"args","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-callSuper","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"create","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":94}],"doc":"<p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n","return":{"type":"Object","name":"return","doc":"<p>the created instance.</p>\n","properties":null,"html_type":"Object"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-create","owner":"Ext.Base","short_doc":"Create a new instance of this Class. ..."},{"tagname":"method","name":"createAlias","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":973}],"doc":"<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n","params":[{"tagname":"params","type":"String/Object","name":"alias","doc":"<p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n","html_type":"String/Object"},{"tagname":"params","type":"String/Object","name":"origin","doc":"<p>The original method name</p>\n","html_type":"String/Object"}],"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"static-method-createAlias","owner":"Ext.Base","short_doc":"Create aliases for existing prototype methods. ..."},{"tagname":"method","name":"extend","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":322}],"doc":"\n","private":true,"static":true,"inheritable":true,"params":[{"tagname":"params","name":"config","doc":"\n","type":"Object","html_type":"Object"}],"inheritdoc":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["getConfigurator","hasOwnProperty"],"id":"static-method-extend","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"getConfigurator","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":940}],"doc":"<p>Returns the <code><a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a></code> for this class.</p>\n","return":{"type":"Ext.Configurator","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a>"},"private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-getConfigurator","owner":"Ext.Base","short_doc":"Returns the Ext.Configurator for this class. ..."},{"tagname":"method","name":"getName","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":954}],"doc":"<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n","return":{"type":"String","name":"return","doc":"<p>className</p>\n","properties":null,"html_type":"String"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-getName","owner":"Ext.Base","short_doc":"Get the current class' name in string format. ..."},{"tagname":"method","name":"mixin","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":814}],"doc":"<p>Used internally by the mixins pre-processor</p>\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[{"name":"name","type":"Object","html_type":"Object"},{"name":"mixinClass","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":["addConfig","hasOwnProperty","mixin"],"id":"static-method-mixin","owner":"Ext.Base","short_doc":"Used internally by the mixins pre-processor ..."},{"tagname":"method","name":"onExtended","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":399}],"doc":"\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[{"name":"fn","type":"Object","html_type":"Object"},{"name":"scope","type":"Object","html_type":"Object"}],"chainable":true,"fires":null,"method_calls":null,"id":"static-method-onExtended","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"override","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":695}],"doc":"<p>Override members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>Direct use of this method should be rare. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n","html_type":"Object"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this class</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["addCachedConfig","addConfig","addInheritableStatics","addMembers","mixin"],"id":"static-method-override","owner":"Ext.Base","short_doc":"Override members of this class. ..."},{"tagname":"method","name":"triggerExtended","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":377}],"doc":"\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-triggerExtended","owner":"Ext.Base","short_doc":" ..."}],"code_type":"ext_define","id":"class-Ext.data.field.Date","short_doc":"This class provides Date specific processing for fields. ..."}