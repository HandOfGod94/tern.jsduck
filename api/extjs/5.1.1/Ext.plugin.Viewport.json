{"tagname":"class","name":"Ext.plugin.Viewport","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/plugin/Viewport.js","linenr":1}],"doc":"<p>This plugin can be applied to any <code>Component</code> (although almost always to a <code>Container</code>)\nto make it fill the browser viewport. This plugin is used internally by the more familiar\n<code><a href=\"#!/api/Ext.container.Viewport\" rel=\"Ext.container.Viewport\" class=\"docClass\">Ext.container.Viewport</a></code> class.</p>\n\n<p>The <code>Viewport</code> container is commonly used but it can be an issue if you need to fill the\nviewport with a container that derives from another class (e.g., <code><a href=\"#!/api/Ext.tab.Panel\" rel=\"Ext.tab.Panel\" class=\"docClass\">Ext.tab.Panel</a></code>). Prior\nto this plugin, you would have to do this:</p>\n\n<pre><code> Ext.create('<a href=\"#!/api/Ext.container.Viewport\" rel=\"Ext.container.Viewport\" class=\"docClass\">Ext.container.Viewport</a>', {\n     layout: 'fit', // full the viewport with the tab panel\n\n     items: [{\n         xtype: 'tabpanel',\n         items: [{\n             ...\n         }]\n     }]\n });\n</code></pre>\n\n<p>With this plugin you can create the <code>tabpanel</code> as the viewport:</p>\n\n<pre><code> Ext.create('<a href=\"#!/api/Ext.tab.Panel\" rel=\"Ext.tab.Panel\" class=\"docClass\">Ext.tab.Panel</a>', {\n     plugins: 'viewport',\n\n     items: [{\n         ...\n     }]\n });\n</code></pre>\n\n<p>More importantly perhaps is that as a plugin, the view class can be reused in other\ncontexts such as the content of a <code><a href=\"#!/api/Ext.window.Window\" rel=\"Ext.window.Window\" class=\"docClass\">window</a></code>.</p>\n\n<p>The Viewport renders itself to the document body, and automatically sizes itself to the size of\nthe browser viewport and manages window resizing. There may only be one Viewport created\nin a page.</p>\n\n<h2>Responsive Design</h2>\n\n<p>This plugin enables Ext.mixin.Responsive.responsiveConfig for the target component.</p>\n","since":"5.0.0","aliases":{"plugin":["viewport"]},"alternateClassNames":[],"extends":"Ext.plugin.Responsive","mixins":[],"requires":[],"uses":[],"members":[{"tagname":"property","name":"isPlugin","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/plugin/Responsive.js","linenr":33}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":33,"type":"Boolean","default":"true","readonly":null,"id":"property-isPlugin","owner":"Ext.plugin.Responsive","short_doc":" ...","html_type":"Boolean"},{"tagname":"property","name":"pluginId","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/plugin/Responsive.js","linenr":31}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":31,"type":"String","default":"'responsive'","readonly":null,"id":"property-pluginId","owner":"Ext.plugin.Responsive","short_doc":" ...","html_type":"String"},{"tagname":"property","name":"privates","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/plugin/Viewport.js","linenr":248}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":248,"type":"Object","default":null,"readonly":null,"id":"property-privates","owner":"Ext.plugin.Viewport","params":null,"return":null,"throws":null,"overrides":[{"name":"privates","owner":"Ext.plugin.Responsive","link":"<a href=\"#!/api/Ext.plugin.Responsive-property-privates\" rel=\"Ext.plugin.Responsive-property-privates\" class=\"docClass\">Ext.plugin.Responsive.privates</a>"}],"html_type":"Object"},{"tagname":"method","name":"constructor","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/plugin/Responsive.js","linenr":35}],"doc":"\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":35,"params":[{"name":"config","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["initConfig"],"id":"method-constructor","owner":"Ext.plugin.Responsive","return":{"type":"Ext.plugin.Responsive","doc":"\n","html_type":"<a href=\"#!/api/Ext.plugin.Responsive\" rel=\"Ext.plugin.Responsive\" class=\"docClass\">Ext.plugin.Responsive</a>"},"short_doc":" ..."},{"tagname":"method","name":"init","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/plugin/Responsive.js","linenr":61}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":61,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-init","owner":"Ext.plugin.Responsive","short_doc":" ..."},{"tagname":"method","name":"setCmp","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/plugin/Viewport.js","linenr":49}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":49,"params":[{"name":"cmp","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["decorate"],"id":"method-setCmp","owner":"Ext.plugin.Viewport","short_doc":" ..."},{"tagname":"method","name":"decorate","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/plugin/Viewport.js","linenr":62}],"doc":"\n","inheritdoc":null,"static":true,"private":true,"inheritable":null,"linenr":62,"params":[{"name":"target","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":["addMeta","callParent","initInheritedState","mon","removeUIFromElement","setSize","setupViewport"],"id":"static-method-decorate","owner":"Ext.plugin.Viewport","short_doc":" ..."}],"code_type":"ext_define","id":"class-Ext.plugin.Viewport","short_doc":"This plugin can be applied to any Component (although almost always to a Container)\nto make it fill the browser viewp..."}