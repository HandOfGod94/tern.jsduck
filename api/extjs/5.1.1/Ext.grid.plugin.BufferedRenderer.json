{"tagname":"class","name":"Ext.grid.plugin.BufferedRenderer","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":1}],"doc":"<p>Implements buffered rendering of a grid, allowing users to scroll\nthrough thousands of records without the performance penalties of\nrendering all the records into the DOM at once.</p>\n\n<p>The number of rows rendered outside the visible area can be controlled by configuring the plugin.</p>\n\n<p>Users should not instantiate this class. It is instantiated automatically\nand applied to all grids.</p>\n\n<h2>Implementation notes</h2>\n\n<p>This class monitors scrolling of the <a href=\"#!/api/Ext.view.Table\" rel=\"Ext.view.Table\" class=\"docClass\">TableView</a> within a <a href=\"#!/api/Ext.grid.Panel\" rel=\"Ext.grid.Panel\" class=\"docClass\">GridPanel</a> to render a small section of\nthe dataset.</p>\n","private":true,"aliases":{"plugin":["bufferedrenderer"]},"alternateClassNames":[],"extends":"Ext.AbstractPlugin","mixins":[],"requires":[],"uses":[],"members":[{"tagname":"cfg","name":"leadingBufferZone","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":45}],"doc":"<p>The number of extra rows to render on the leading side of scrolling\n<strong>outside the <a href=\"#!/api/Ext.grid.plugin.BufferedRenderer-cfg-numFromEdge\" rel=\"Ext.grid.plugin.BufferedRenderer-cfg-numFromEdge\" class=\"docClass\">numFromEdge</a></strong> buffer as scrolling proceeds.</p>\n","type":"Number","default":"20","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-leadingBufferZone","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":"The number of extra rows to render on the leading side of scrolling\noutside the numFromEdge buffer as scrolling proce...","html_type":"Number"},{"tagname":"cfg","name":"numFromEdge","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":31}],"doc":"<p>The zone which causes new rows to be appended to the view. As soon as the edge\nof the rendered grid is this number of rows from the edge of the viewport, the view is moved.</p>\n","type":"Number","default":"2","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-numFromEdge","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":"The zone which causes new rows to be appended to the view. ...","html_type":"Number"},{"tagname":"cfg","name":"pluginId","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/plugin/Abstract.js","linenr":60}],"doc":"<p>A name for the plugin that can be set at creation time to then retrieve the plugin\nthrough <a href=\"#!/api/Ext.Component-method-getPlugin\" rel=\"Ext.Component-method-getPlugin\" class=\"docClass\">getPlugin</a> method.  For example:</p>\n\n<pre><code>var grid = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.grid.Panel\" rel=\"Ext.grid.Panel\" class=\"docClass\">Ext.grid.Panel</a>', {\n    plugins: [{\n        ptype: 'cellediting',\n        clicksToEdit: 2,\n        pluginId: 'cellplugin'\n    }]\n});\n\n// later on:\nvar plugin = grid.getPlugin('cellplugin');\n</code></pre>\n","type":"String","default":null,"properties":null,"id":"cfg-pluginId","owner":"Ext.plugin.Abstract","short_doc":"A name for the plugin that can be set at creation time to then retrieve the plugin\nthrough getPlugin method. ...","html_type":"String"},{"tagname":"cfg","name":"scrollToLoadBuffer","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":65}],"doc":"<p>This is the time in milliseconds to buffer load requests when the store is a <a href=\"#!/api/Ext.data.BufferedStore\" rel=\"Ext.data.BufferedStore\" class=\"docClass\">buffered store</a>\nand a page required for rendering is not present in the store's cache and needs loading.</p>\n","type":"Number","default":"200","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-scrollToLoadBuffer","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":"This is the time in milliseconds to buffer load requests when the store is a buffered store\nand a page required for r...","html_type":"Number"},{"tagname":"cfg","name":"synchronousRender","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":52}],"doc":"<p>By default, on detection of a scroll event which brings the end of the rendered table within\n<code><a href=\"#!/api/Ext.grid.plugin.BufferedRenderer-cfg-numFromEdge\" rel=\"Ext.grid.plugin.BufferedRenderer-cfg-numFromEdge\" class=\"docClass\">numFromEdge</a></code> rows of the grid viewport, if the required rows are available in the Store,\nthe BufferedRenderer will render rows from the Store <em>immediately</em> before returning from the event handler.\nThis setting helps avoid the impression of whitespace appearing during scrolling.</p>\n\n<p>Set this to <code>false</code> to defer the render until the scroll event handler exits. This allows for faster\nscrolling, but also allows whitespace to be more easily scrolled into view.</p>\n","type":"Boolean","default":"true","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-synchronousRender","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":"By default, on detection of a scroll event which brings the end of the rendered table within\nnumFromEdge rows of the ...","html_type":"Boolean"},{"tagname":"cfg","name":"trailingBufferZone","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":38}],"doc":"<p>The number of extra rows to render on the trailing side of scrolling\n<strong>outside the <a href=\"#!/api/Ext.grid.plugin.BufferedRenderer-cfg-numFromEdge\" rel=\"Ext.grid.plugin.BufferedRenderer-cfg-numFromEdge\" class=\"docClass\">numFromEdge</a></strong> buffer as scrolling proceeds.</p>\n","type":"Number","default":"10","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-trailingBufferZone","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":"The number of extra rows to render on the trailing side of scrolling\noutside the numFromEdge buffer as scrolling proc...","html_type":"Number"},{"tagname":"property","name":"$className","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1025}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"String","default":"'Ext.Base'","readonly":null,"id":"property-S-className","owner":"Ext.Base","short_doc":" ...","html_type":"String"},{"tagname":"property","name":"$configPrefixed","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1037}],"doc":"<p>The value <code>true</code> causes <code>config</code> values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\") character. A value of <code>false</code>\nstores <code>config</code> values as properties using their exact name (no prefix).</p>\n","type":"Boolean","default":"true","properties":null,"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-S-configPrefixed","owner":"Ext.Base","overrides":[{"name":"$configPrefixed","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-S-configPrefixed\" rel=\"Ext.Component-property-S-configPrefixed\" class=\"docClass\">Ext.Component.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-property-S-configPrefixed\" rel=\"Ext.layout.Layout-property-S-configPrefixed\" class=\"docClass\">Ext.layout.Layout.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-property-S-configPrefixed\" rel=\"Ext.data.AbstractStore-property-S-configPrefixed\" class=\"docClass\">Ext.data.AbstractStore.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.layout.container.boxOverflow.None","link":"<a href=\"#!/api/Ext.layout.container.boxOverflow.None-property-S-configPrefixed\" rel=\"Ext.layout.container.boxOverflow.None-property-S-configPrefixed\" class=\"docClass\">Ext.layout.container.boxOverflow.None.$configPrefixed</a>"}],"short_doc":"The value true causes config values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\")...","html_type":"Boolean"},{"tagname":"property","name":"$configStrict","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1047}],"doc":"<p>The value <code>true</code> instructs the <code>initConfig</code> method to only honor values for\nproperties declared in the <code>config</code> block of a class. When <code>false</code>, properties\nthat are not declared in a <code>config</code> block will be placed on the instance.</p>\n","type":"Boolean","default":"true","properties":null,"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-S-configStrict","owner":"Ext.Base","overrides":[{"name":"$configStrict","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-S-configStrict\" rel=\"Ext.Component-property-S-configStrict\" class=\"docClass\">Ext.Component.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-property-S-configStrict\" rel=\"Ext.layout.Layout-property-S-configStrict\" class=\"docClass\">Ext.layout.Layout.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-property-S-configStrict\" rel=\"Ext.data.AbstractStore-property-S-configStrict\" class=\"docClass\">Ext.data.AbstractStore.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.layout.container.boxOverflow.None","link":"<a href=\"#!/api/Ext.layout.container.boxOverflow.None-property-S-configStrict\" rel=\"Ext.layout.container.boxOverflow.None-property-S-configStrict\" class=\"docClass\">Ext.layout.container.boxOverflow.None.$configStrict</a>"}],"short_doc":"The value true instructs the initConfig method to only honor values for\nproperties declared in the config block of a ...","html_type":"Boolean"},{"tagname":"property","name":"bodyTop","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":82}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":82,"type":"Number","default":"0","readonly":null,"id":"property-bodyTop","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":" ...","html_type":"Number"},{"tagname":"property","name":"isBufferedRenderer","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":23}],"doc":"<p><code>true</code> in this class to identify an object as an instantiated BufferedRenderer, or subclass thereof.</p>\n","type":"Boolean","default":"true","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-isBufferedRenderer","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":"true in this class to identify an object as an instantiated BufferedRenderer, or subclass thereof. ...","html_type":"Boolean"},{"tagname":"property","name":"isConfiguring","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1057}],"doc":"<p>This property is set to <code>true</code> during the call to <code>initConfig</code>.</p>\n","type":"Boolean","default":"false","properties":null,"protected":true,"readonly":true,"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-isConfiguring","owner":"Ext.Base","short_doc":"This property is set to true during the call to initConfig. ...","html_type":"Boolean"},{"tagname":"property","name":"isFirstInstance","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1066}],"doc":"<p>This property is set to <code>true</code> if this instance is the first of its class.</p>\n","type":"Boolean","default":"false","properties":null,"protected":true,"readonly":true,"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-isFirstInstance","owner":"Ext.Base","short_doc":"This property is set to true if this instance is the first of its class. ...","html_type":"Boolean"},{"tagname":"property","name":"isInstance","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1028}],"doc":"<p>This value is <code>true</code> and is used to identify plain objects from instances of\na defined class.</p>\n","type":"Boolean","default":"true","properties":null,"protected":true,"readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-isInstance","owner":"Ext.Base","short_doc":"This value is true and is used to identify plain objects from instances of\na defined class. ...","html_type":"Boolean"},{"tagname":"property","name":"isPlugin","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/plugin/Abstract.js","linenr":19}],"doc":"<p><code>true</code> in this class to identify an object as an instantiated Plugin, or subclass thereof.</p>\n","type":"Boolean","default":"true","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-isPlugin","owner":"Ext.plugin.Abstract","short_doc":"true in this class to identify an object as an instantiated Plugin, or subclass thereof. ...","html_type":"Boolean"},{"tagname":"property","name":"lastScrollDirection","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":81}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":81,"type":"Number","default":"1","readonly":null,"id":"property-lastScrollDirection","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":" ...","html_type":"Number"},{"tagname":"property","name":"loadId","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":84}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":84,"type":"Number","default":"0","readonly":null,"id":"property-loadId","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":" ...","html_type":"Number"},{"tagname":"property","name":"lockableScope","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":29}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":29,"type":"String","default":"'both'","readonly":null,"id":"property-lockableScope","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":" ...","html_type":"String"},{"tagname":"property","name":"position","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":76}],"doc":"<p>Current pixel scroll position of the associated <a href=\"#!/api/Ext.view.Table\" rel=\"Ext.view.Table\" class=\"docClass\">View</a>.</p>\n","type":"Number","default":"0","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-position","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":"Current pixel scroll position of the associated View. ...","html_type":"Number"},{"tagname":"property","name":"rowHeight","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":74}],"doc":"<p>private. Start at default value</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"type":"Number","default":"21","readonly":null,"id":"property-rowHeight","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":"private. ...","html_type":"Number"},{"tagname":"property","name":"scrollHeight","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":83}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":83,"type":"Number","default":"0","readonly":null,"id":"property-scrollHeight","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":" ...","html_type":"Number"},{"tagname":"property","name":"self","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1344}],"doc":"<p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n","type":"Ext.Class","default":null,"properties":null,"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-self","owner":"Ext.Base","short_doc":"Get the reference to the current class from which this object was instantiated. ...","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},{"tagname":"property","name":"viewSize","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":72}],"doc":"<p>private. Initial value of 100.</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"type":"Number","default":"100","readonly":null,"id":"property-viewSize","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":"private. ...","html_type":"Number"},{"tagname":"property","name":"$onExtended","autodetected":{"inheritdoc":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":370}],"doc":"\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"type":"Array","default":"[]","readonly":null,"id":"static-property-S-onExtended","owner":"Ext.Base","short_doc":" ...","html_type":"Array"},{"tagname":"method","name":"constructor","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/plugin/Abstract.js","linenr":25}],"doc":"<p>Instantiates the plugin.</p>\n","params":[{"tagname":"params","type":"Object","name":"config","optional":true,"doc":"<p>Configuration object.</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["initConfig"],"id":"method-constructor","owner":"Ext.plugin.Abstract","return":{"type":"Ext.plugin.Abstract","doc":"\n","html_type":"<a href=\"#!/api/Ext.plugin.Abstract\" rel=\"Ext.plugin.Abstract\" class=\"docClass\">Ext.plugin.Abstract</a>"},"short_doc":"Instantiates the plugin. ..."},{"tagname":"method","name":"addDeprecations","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":115}],"doc":"<p>This method applies a versioned, deprecation declaration to this class. This\nis typically called by the <code>deprecated</code> config.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"deprecations","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-addDeprecations","owner":"Ext.Base","short_doc":"This method applies a versioned, deprecation declaration to this class. ..."},{"tagname":"method","name":"attemptLoad","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":1528}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1528,"params":[{"name":"start","type":"Object","html_type":"Object"},{"name":"end","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["doAttemptLoad"],"id":"method-attemptLoad","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":" ..."},{"tagname":"method","name":"bindStore","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":151}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":151,"params":[{"name":"store","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["onViewResize","unbindStore"],"id":"method-bindStore","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":" ..."},{"tagname":"method","name":"bottomOfViewCloseToEdge","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":966}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":966,"params":[],"chainable":false,"fires":[],"method_calls":["getLastVisibleRowIndex"],"id":"method-bottomOfViewCloseToEdge","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":" ..."},{"tagname":"method","name":"callOverridden","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1581}],"doc":"<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n","params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n","html_type":"Array/Arguments"}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the overridden method</p>\n","properties":null,"html_type":"Object"},"protected":true,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-callOverridden","owner":"Ext.Base","short_doc":"Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi..."},{"tagname":"method","name":"callParent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1143}],"doc":"<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10));     // alerts 10\n alert(My.Derived2.method(10)); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n","protected":true,"params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n","html_type":"Array/Arguments"}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the parent method</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-callParent","owner":"Ext.Base","short_doc":"Call the \"parent\" method of the current method. ..."},{"tagname":"method","name":"callSuper","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1258}],"doc":"<p>This method is used by an override to call the superclass method but bypass any\noverridden method. This is often done to \"patch\" a method that contains a bug\nbut for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function () {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     extend: 'Ext.some.Class',\n\n     method: function () {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>Ext.some.DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.patches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function () {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <code>callParent</code> to call the superclass <code>method</code> since\nthat would call the overridden method containing the bug. In other words, the\nabove patch would only produce \"Fixed\" then \"Good\" in the console log, whereas,\nusing <code>callParent</code> would produce \"Fixed\" then \"Bad\" then \"Good\".</p>\n","protected":true,"params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n","html_type":"Array/Arguments"}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the superclass method</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-callSuper","owner":"Ext.Base","short_doc":"This method is used by an override to call the superclass method but bypass any\noverridden method. ..."},{"tagname":"method","name":"cancelLoad","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":1540}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1540,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-cancelLoad","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":" ..."},{"tagname":"method","name":"checkVariableRowHeight","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":140}],"doc":"<p>Keep the variableRowHeight and any Lockable's syncRowHeight property correct WRT variable row heights being possible.</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-checkVariableRowHeight","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":"Keep the variableRowHeight and any Lockable's syncRowHeight property correct WRT variable row heights being possible. ..."},{"tagname":"method","name":"clonePlugin","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/plugin/Abstract.js","linenr":36}],"doc":"<p>Creates clone of the plugin.</p>\n","params":[{"tagname":"params","type":"Object","name":"overrideCfg","optional":true,"doc":"<p>Additional config for the derived plugin.</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-clonePlugin","owner":"Ext.plugin.Abstract","short_doc":"Creates clone of the plugin. ..."},{"tagname":"method","name":"destroy","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":1562}],"doc":"<p>The destroy method is invoked by the owning Component at the time the Component is\nbeing destroyed.</p>\n\n<p>The supplied implementation is empty. Subclasses should perform plugin cleanup in\ntheir own implementation of this method.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":1562,"params":[],"chainable":false,"fires":[],"method_calls":["cancelLoad"],"id":"method-destroy","owner":"Ext.grid.plugin.BufferedRenderer","overrides":[{"name":"destroy","owner":"Ext.plugin.Abstract","link":"<a href=\"#!/api/Ext.plugin.Abstract-method-destroy\" rel=\"Ext.plugin.Abstract-method-destroy\" class=\"docClass\">Ext.plugin.Abstract.destroy</a>"}],"short_doc":"The destroy method is invoked by the owning Component at the time the Component is\nbeing destroyed. ..."},{"tagname":"method","name":"doAttemptLoad","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":1546}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1546,"params":[{"name":"start","type":"Object","html_type":"Object"},{"name":"end","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["onRangeFetched"],"id":"method-doAttemptLoad","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":" ..."},{"tagname":"method","name":"doRefreshView","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":1027}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1027,"params":[{"name":"range","type":"Object","html_type":"Object"},{"name":"startIndex","type":"Object","html_type":"Object"},{"name":"endIndex","type":"Object","html_type":"Object"},{"name":"options","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["refreshSize","setBodyTop"],"id":"method-doRefreshView","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":" ..."},{"tagname":"method","name":"getCmp","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/plugin/Abstract.js","linenr":52}],"doc":"<p>Returns the component to which this plugin is attached.</p>\n","return":{"type":"Ext.Component","name":"return","doc":"<p>Owner component.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getCmp","owner":"Ext.plugin.Abstract","short_doc":"Returns the component to which this plugin is attached. ..."},{"tagname":"method","name":"getConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1431}],"doc":"<p>Returns a specified config property value. If the name parameter is not passed,\nall current configuration options will be returned as key value pairs.</p>\n","params":[{"tagname":"params","type":"String","name":"name","optional":true,"doc":"<p>The name of the config property to get.</p>\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"peek","default":"false","optional":true,"doc":"<p><code>true</code> to peek at the raw value without calling the getter.</p>\n","html_type":"Boolean"}],"return":{"type":"Object","name":"return","doc":"<p>The config property value.</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-getConfig","owner":"Ext.Base","short_doc":"Returns a specified config property value. ..."},{"tagname":"method","name":"getCurrentConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1471}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getConfigurator"],"id":"method-getCurrentConfig","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"getFirstVisibleRowIndex","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":1394}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1394,"params":[{"name":"startRow","type":"Object","html_type":"Object"},{"name":"endRow","type":"Object","html_type":"Object"},{"name":"viewportTop","type":"Object","html_type":"Object"},{"name":"viewportBottom","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["getFirstVisibleRowIndex"],"id":"method-getFirstVisibleRowIndex","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":" ..."},{"tagname":"method","name":"getInitialConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1488}],"doc":"<p>Returns the initial configuration passed to constructor when instantiating\nthis class.</p>\n","params":[{"tagname":"params","type":"String","name":"name","optional":true,"doc":"<p>Name of the config option to return.</p>\n","html_type":"String"}],"return":{"type":"Object/Mixed","name":"return","doc":"<p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n","properties":null,"html_type":"Object/Mixed"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getInitialConfig","owner":"Ext.Base","short_doc":"Returns the initial configuration passed to constructor when instantiating\nthis class. ..."},{"tagname":"method","name":"getLastVisibleRowIndex","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":1442}],"doc":"<p>Returns the index of the last row in your table view deemed to be visible.</p>\n","return":{"type":"Number","name":"return","doc":"\n","properties":null,"html_type":"Number"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"startRow","type":"Object","html_type":"Object"},{"name":"endRow","type":"Object","html_type":"Object"},{"name":"viewportTop","type":"Object","html_type":"Object"},{"name":"viewportBottom","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["getFirstVisibleRowIndex","getLastVisibleRowIndex"],"id":"method-getLastVisibleRowIndex","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":"Returns the index of the last row in your table view deemed to be visible. ..."},{"tagname":"method","name":"getScrollHeight","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":1496}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1496,"params":[{"name":"calculatedOnly","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["hasOwnProperty"],"id":"method-getScrollHeight","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":" ..."},{"tagname":"method","name":"getViewRange","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":552}],"doc":"<p>TableView's getViewRange delegates the operation to this method if buffered rendering is present.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getViewRange","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":"TableView's getViewRange delegates the operation to this method if buffered rendering is present. ..."},{"tagname":"method","name":"handleViewScroll","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":906}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":906,"params":[{"name":"direction","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["bottomOfViewCloseToEdge","getFirstVisibleRowIndex","getLastVisibleRowIndex","renderRange","topOfViewCloseToEdge"],"id":"method-handleViewScroll","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":" ..."},{"tagname":"method","name":"hasConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1480}],"doc":"\n","private":true,"params":[{"tagname":"params","name":"config","doc":"\n","type":"Object","html_type":"Object"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-hasConfig","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"init","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":86}],"doc":"<p>Initialize this as a plugin</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"name":"grid","type":"Object","html_type":"Object"}],"chainable":null,"fires":[],"method_calls":["bindStore"],"id":"method-init","owner":"Ext.grid.plugin.BufferedRenderer","overrides":[{"name":"init","owner":"Ext.plugin.Abstract","link":"<a href=\"#!/api/Ext.plugin.Abstract-method-init\" rel=\"Ext.plugin.Abstract-method-init\" class=\"docClass\">Ext.plugin.Abstract.init</a>"}],"short_doc":"Initialize this as a plugin ..."},{"tagname":"method","name":"initConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1393}],"doc":"<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n","protected":true,"params":[{"tagname":"params","type":"Object","name":"config","doc":"\n","html_type":"Object"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["getConfigurator"],"id":"method-initConfig","owner":"Ext.Base","short_doc":"Initialize configuration for this class. ..."},{"tagname":"method","name":"link","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1508}],"doc":"<p>Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (via <code><a href=\"#!/api/Ext.Base-method-destroy\" rel=\"Ext.Base-method-destroy\" class=\"docClass\">destroy</a></code>).</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"\n","html_type":"String"},{"tagname":"params","type":"Object","name":"value","doc":"\n","html_type":"Object"}],"return":{"type":"Object","name":"return","doc":"<p>The <code>value</code> passed.</p>\n","properties":null,"html_type":"Object"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-link","owner":"Ext.Base","short_doc":"Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (vi..."},{"tagname":"method","name":"onBeforeStoreLoad","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":201}],"doc":"<p>Disallow mouse interactions, and disable handling of scroll events until the load is finished</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["disable"],"id":"method-onBeforeStoreLoad","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":"Disallow mouse interactions, and disable handling of scroll events until the load is finished ..."},{"tagname":"method","name":"onClassExtended","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/plugin/Abstract.js","linenr":96}],"doc":"<p>Private.\nInject a ptype property so that Component.findPlugin(ptype) works.</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[{"name":"cls","type":"Object","html_type":"Object"},{"name":"data","type":"Object","html_type":"Object"},{"name":"hooks","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-onClassExtended","owner":"Ext.plugin.Abstract","short_doc":"Private. ..."},{"tagname":"method","name":"onRangeFetched","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":1155}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1155,"params":[{"name":"range","type":"Object","html_type":"Object"},{"name":"start","type":"Object","html_type":"Object"},{"name":"end","type":"Object","html_type":"Object"},{"name":"options","type":"Object","html_type":"Object"},{"name":"fromLockingPartner","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["setBodyTop","syncRowHeights"],"id":"method-onRangeFetched","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":" ..."},{"tagname":"method","name":"onReconfigure","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":190}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":190,"params":[{"name":"grid","type":"Object","html_type":"Object"},{"name":"store","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["bindStore"],"id":"method-onReconfigure","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":" ..."},{"tagname":"method","name":"onReplace","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":584}],"doc":"<p>Handles the Store replace event, producing a correct buffered view after the replace operation.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"store","type":"Object","html_type":"Object"},{"name":"startIndex","type":"Object","html_type":"Object"},{"name":"oldRecords","type":"Object","html_type":"Object"},{"name":"newRecords","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["handleViewScroll","onRangeFetched","refreshSize","refreshView","setBodyTop"],"id":"method-onReplace","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":"Handles the Store replace event, producing a correct buffered view after the replace operation. ..."},{"tagname":"method","name":"onStoreClear","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":219}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":219,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-onStoreClear","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":" ..."},{"tagname":"method","name":"onStoreGroupChange","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":242}],"doc":"<p>If the store is not grouped, we can switch to fixed row height mode</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[{"name":"store","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["refreshSize"],"id":"method-onStoreGroupChange","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":"If the store is not grouped, we can switch to fixed row height mode ..."},{"tagname":"method","name":"onStoreLoad","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":210}],"doc":"<p>Re-enable mouse interactions and scroll event handling on load.</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["enable"],"id":"method-onStoreLoad","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":"Re-enable mouse interactions and scroll event handling on load. ..."},{"tagname":"method","name":"onViewBoxReady","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":247}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":247,"params":[{"name":"view","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["refreshScroller"],"id":"method-onViewBoxReady","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":" ..."},{"tagname":"method","name":"onViewRefresh","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":251}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":251,"params":[{"name":"view","type":"Object","html_type":"Object"},{"name":"records","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["checkVariableRowHeight","hasOwnProperty","onViewResize","onViewScroll","refreshSize","setBodyTop"],"id":"method-onViewRefresh","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":" ..."},{"tagname":"method","name":"onViewResize","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":335}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":335,"params":[{"name":"view","type":"Object","html_type":"Object"},{"name":"width","type":"Object","html_type":"Object"},{"name":"height","type":"Object","html_type":"Object"},{"name":"oldWidth","type":"Object","html_type":"Object"},{"name":"oldHeight","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["setViewSize"],"id":"method-onViewResize","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":" ..."},{"tagname":"method","name":"onViewScroll","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":883}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":883,"params":[],"chainable":false,"fires":[],"method_calls":["handleViewScroll"],"id":"method-onViewScroll","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":" ..."},{"tagname":"method","name":"onWrappedColumnWidthChange","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":354}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":354,"params":[{"name":"oldWidth","type":"Object","html_type":"Object"},{"name":"newWidth","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["refreshSize","setBodyTop","setViewSize"],"id":"method-onWrappedColumnWidthChange","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":" ..."},{"tagname":"method","name":"refreshScroller","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":451}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":451,"params":[{"name":"view","type":"Object","html_type":"Object"},{"name":"scrollRange","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-refreshScroller","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":" ..."},{"tagname":"method","name":"refreshSize","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":315}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":315,"params":[],"chainable":false,"fires":[],"method_calls":["getScrollHeight","stretchView"],"id":"method-refreshSize","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":" ..."},{"tagname":"method","name":"refreshView","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":987}],"doc":"<p>Refreshes the current rendered range if possible.\nOptionally refreshes starting at the specified index.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"startIndex","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-refreshView","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":"Refreshes the current rendered range if possible. ..."},{"tagname":"method","name":"renderRange","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":1120}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1120,"params":[{"name":"start","type":"Object","html_type":"Object"},{"name":"end","type":"Object","html_type":"Object"},{"name":"forceSynchronous","type":"Object","html_type":"Object"},{"name":"fromLockingPartner","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["attemptLoad","cancelLoad","onRangeFetched"],"id":"method-renderRange","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":" ..."},{"tagname":"method","name":"resolveListenerScope","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/plugin/Abstract.js","linenr":110}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":110,"params":[{"name":"defaultScope","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["getCmp"],"id":"method-resolveListenerScope","owner":"Ext.plugin.Abstract","short_doc":" ..."},{"tagname":"method","name":"scrollTo","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":681}],"doc":"<p>Scrolls to and optionally selects the specified row index <strong>in the total dataset</strong>.</p>\n\n<p>This is a private method for internal usage by the framework.</p>\n\n<p>Use the grid's <a href=\"#!/api/Ext.panel.Table-method-ensureVisible\" rel=\"Ext.panel.Table-method-ensureVisible\" class=\"docClass\">ensureVisible</a> method to scroll a particular\nrecord or record index into view.</p>\n","private":true,"params":[{"tagname":"params","type":"Number/Ext.data.Model","name":"record","doc":"<p>The record, or the zero-based position in the dataset to scroll to.</p>\n","html_type":"Number/<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>An object containing options to modify the operation.</p>\n","properties":[{"tagname":"params","type":"Boolean","name":"animate","optional":true,"doc":"<p>Pass <code>true</code> to animate the row into view.</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"highlight","optional":true,"doc":"<p>Pass <code>true</code> to highlight the row with a glow animation when it is in view.</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"select","optional":true,"doc":"<p>Pass as <code>true</code> to select the specified row.</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"focus","optional":true,"doc":"<p>Pass as <code>true</code> to focus the specified row.</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Function","name":"callback","optional":true,"doc":"<p>A function to call when the row has been scrolled to.</p>\n","properties":[{"tagname":"params","type":"Number","name":"recordIdx","doc":"<p>The resulting record index (may have changed if the passed index was outside the valid range).</p>\n","html_type":"Number"},{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The resulting record from the store.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},{"tagname":"params","type":"HTMLElement","name":"node","doc":"<p>The resulting view row element.</p>\n","html_type":"HTMLElement"}],"html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (<code>this</code> reference) in which to execute the callback. Defaults to this BufferedRenderer.</p>\n","html_type":"Object"}],"html_type":"Object"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["onViewScroll","refreshSize","renderRange","syncRowHeights"],"id":"method-scrollTo","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":"Scrolls to and optionally selects the specified row index in the total dataset. ..."},{"tagname":"method","name":"setBodyTop","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":1371}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1371,"params":[{"name":"bodyTop","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["stretchView"],"id":"method-setBodyTop","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":" ..."},{"tagname":"method","name":"setCmp","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/plugin/Abstract.js","linenr":44}],"doc":"<p>Sets the component to which this plugin is attached.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"cmp","doc":"<p>Owner component.</p>\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-setCmp","owner":"Ext.plugin.Abstract","short_doc":"Sets the component to which this plugin is attached. ..."},{"tagname":"method","name":"setConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1441}],"doc":"<p>Sets a single/multiple configuration options.</p>\n","params":[{"tagname":"params","type":"String/Object","name":"name","doc":"<p>The name of the property to set, or a set of key value pairs to set.</p>\n","html_type":"String/Object"},{"tagname":"params","type":"Object","name":"value","optional":true,"doc":"<p>The value to set for the name parameter.</p>\n","html_type":"Object"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["getConfigurator"],"id":"method-setConfig","owner":"Ext.Base","short_doc":"Sets a single/multiple configuration options. ..."},{"tagname":"method","name":"setViewSize","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":462}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":462,"params":[{"name":"viewSize","type":"Object","html_type":"Object"},{"name":"fromLockingPartner","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-setViewSize","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":" ..."},{"tagname":"method","name":"statics","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1075}],"doc":"<p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self();   // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n","protected":true,"return":{"type":"Ext.Class","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-statics","owner":"Ext.Base","short_doc":"Get the reference to the class from which this object was instantiated. ..."},{"tagname":"method","name":"stretchView","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":384}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":384,"params":[{"name":"view","type":"Object","html_type":"Object"},{"name":"scrollRange","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["hasOwnProperty","refreshScroller"],"id":"method-stretchView","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":" ..."},{"tagname":"method","name":"syncRowHeights","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":1316}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1316,"params":[{"name":"itemEls","type":"Object","html_type":"Object"},{"name":"partnerItemEls","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["syncRowHeightsFinish"],"id":"method-syncRowHeights","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":" ..."},{"tagname":"method","name":"syncRowHeightsFinish","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":1355}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1355,"params":[],"chainable":false,"fires":[],"method_calls":["refreshSize"],"id":"method-syncRowHeightsFinish","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":" ..."},{"tagname":"method","name":"topOfViewCloseToEdge","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":976}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":976,"params":[],"chainable":false,"fires":[],"method_calls":["getFirstVisibleRowIndex"],"id":"method-topOfViewCloseToEdge","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":" ..."},{"tagname":"method","name":"unbindStore","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/grid/plugin/BufferedRenderer.js","linenr":196}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":196,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-unbindStore","owner":"Ext.grid.plugin.BufferedRenderer","short_doc":" ..."},{"tagname":"method","name":"unlink","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1526}],"doc":"<p>Destroys a given set of <code><a href=\"#!/api/Ext.Base-method-link\" rel=\"Ext.Base-method-link\" class=\"docClass\">linked</a></code> objects. This is only needed if\nthe linked object is being destroyed before this instance.</p>\n","params":[{"tagname":"params","type":"String[]","name":"names","doc":"<p>The names of the linked objects to destroy.</p>\n","html_type":"String[]"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"method-unlink","owner":"Ext.Base","short_doc":"Destroys a given set of linked objects. ..."},{"tagname":"method","name":"addConfig","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":911}],"doc":"<p>Adds new config properties to this class. This is called for classes when they\nare declared, then for any mixins that class may define and finally for any\noverrides defined that target the class.</p>\n","params":[{"tagname":"params","type":"Object","name":"config","doc":"\n","html_type":"Object"},{"tagname":"params","type":"Ext.Class","name":"mixinClass","optional":true,"doc":"<p>The mixin class if the configs are from a mixin.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"}],"private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["getConfigurator"],"id":"static-method-addConfig","owner":"Ext.Base","short_doc":"Adds new config properties to this class. ..."},{"tagname":"method","name":"addInheritableStatics","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":436}],"doc":"\n","private":true,"static":true,"inheritable":true,"params":[{"tagname":"params","type":"Object","name":"members","doc":"\n","html_type":"Object"}],"inheritdoc":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"static-method-addInheritableStatics","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"addMember","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":634}],"doc":"\n","private":true,"static":true,"inheritable":true,"params":[{"tagname":"params","name":"name","doc":"\n","type":"Object","html_type":"Object"},{"tagname":"params","name":"member","doc":"\n","type":"Object","html_type":"Object"}],"inheritdoc":null,"linenr":null,"chainable":true,"fires":null,"method_calls":["addMembers"],"id":"static-method-addMember","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"addMembers","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":480}],"doc":"<p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat();\n kitty.meow();\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"<p>The members to add to this class.</p>\n","html_type":"Object"},{"tagname":"params","type":"Boolean","name":"isStatic","default":"false","optional":true,"doc":"<p>Pass <code>true</code> if the members are static.</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"privacy","default":"false","optional":true,"doc":"<p>Pass <code>true</code> if the members are private. This\nonly has meaning in debug mode and only for methods.</p>\n","html_type":"Boolean"}],"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":true,"fires":null,"method_calls":["addConfig","addMembers"],"id":"static-method-addMembers","owner":"Ext.Base","short_doc":"Add methods / properties to the prototype of this class. ..."},{"tagname":"method","name":"addStatics","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":413}],"doc":"<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"\n","html_type":"Object"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":true,"fires":null,"method_calls":["addMembers"],"id":"static-method-addStatics","owner":"Ext.Base","short_doc":"Add / override static properties of this class. ..."},{"tagname":"method","name":"borrow","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":648}],"doc":"<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n","params":[{"tagname":"params","type":"Ext.Base","name":"fromClass","doc":"<p>The class to borrow members from</p>\n","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},{"tagname":"params","type":"Array/String","name":"members","doc":"<p>The names of the members to borrow</p>\n","html_type":"Array/String"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"inheritable":true,"private":true,"inheritdoc":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["addMembers"],"id":"static-method-borrow","owner":"Ext.Base","short_doc":"Borrow another class' members to the prototype of this class. ..."},{"tagname":"method","name":"callParent","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":785}],"doc":"\n","protected":true,"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[{"name":"args","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-callParent","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"callSuper","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":799}],"doc":"\n","protected":true,"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[{"name":"args","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-callSuper","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"create","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":94}],"doc":"<p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n","return":{"type":"Object","name":"return","doc":"<p>the created instance.</p>\n","properties":null,"html_type":"Object"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-create","owner":"Ext.Base","short_doc":"Create a new instance of this Class. ..."},{"tagname":"method","name":"createAlias","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":973}],"doc":"<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n","params":[{"tagname":"params","type":"String/Object","name":"alias","doc":"<p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n","html_type":"String/Object"},{"tagname":"params","type":"String/Object","name":"origin","doc":"<p>The original method name</p>\n","html_type":"String/Object"}],"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"static-method-createAlias","owner":"Ext.Base","short_doc":"Create aliases for existing prototype methods. ..."},{"tagname":"method","name":"extend","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":322}],"doc":"\n","private":true,"static":true,"inheritable":true,"params":[{"tagname":"params","name":"config","doc":"\n","type":"Object","html_type":"Object"}],"inheritdoc":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["getConfigurator","hasOwnProperty"],"id":"static-method-extend","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"getConfigurator","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":940}],"doc":"<p>Returns the <code><a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a></code> for this class.</p>\n","return":{"type":"Ext.Configurator","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a>"},"private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-getConfigurator","owner":"Ext.Base","short_doc":"Returns the Ext.Configurator for this class. ..."},{"tagname":"method","name":"getName","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":954}],"doc":"<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n","return":{"type":"String","name":"return","doc":"<p>className</p>\n","properties":null,"html_type":"String"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-getName","owner":"Ext.Base","short_doc":"Get the current class' name in string format. ..."},{"tagname":"method","name":"mixin","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":814}],"doc":"<p>Used internally by the mixins pre-processor</p>\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[{"name":"name","type":"Object","html_type":"Object"},{"name":"mixinClass","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":["addConfig","hasOwnProperty","mixin"],"id":"static-method-mixin","owner":"Ext.Base","short_doc":"Used internally by the mixins pre-processor ..."},{"tagname":"method","name":"onExtended","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":399}],"doc":"\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[{"name":"fn","type":"Object","html_type":"Object"},{"name":"scope","type":"Object","html_type":"Object"}],"chainable":true,"fires":null,"method_calls":null,"id":"static-method-onExtended","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"override","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":695}],"doc":"<p>Override members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>Direct use of this method should be rare. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n","html_type":"Object"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this class</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["addCachedConfig","addConfig","addInheritableStatics","addMembers","mixin"],"id":"static-method-override","owner":"Ext.Base","short_doc":"Override members of this class. ..."},{"tagname":"method","name":"triggerExtended","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":377}],"doc":"\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-triggerExtended","owner":"Ext.Base","short_doc":" ..."}],"code_type":"ext_define","id":"class-Ext.grid.plugin.BufferedRenderer","short_doc":"Implements buffered rendering of a grid, allowing users to scroll\nthrough thousands of records without the performanc..."}