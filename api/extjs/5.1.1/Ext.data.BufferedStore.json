{"tagname":"class","name":"Ext.data.BufferedStore","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":1}],"doc":"<p>A BufferedStore maintains a sparsely populated map of pages corresponding to an extremely large server-side dataset.</p>\n\n<p>Use a BufferedStore when the dataset size is so large that the database and network latency, and client memory requirements\npreclude caching the entire dataset in a regular <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Store</a>.</p>\n\n<p>When using a BufferedStore <em>not all of the dataset is present in the client</em>. Only pages which have been\nrequested by the UI (usually a <a href=\"#!/api/Ext.grid.Panel\" rel=\"Ext.grid.Panel\" class=\"docClass\">GridPanel</a>) and surrounding pages will be present. Retention\nof viewed pages in the BufferedStore after they have been scrolled out of view is configurable. See <a href=\"#!/api/Ext.data.BufferedStore-cfg-leadingBufferZone\" rel=\"Ext.data.BufferedStore-cfg-leadingBufferZone\" class=\"docClass\">leadingBufferZone</a>,\n<a href=\"#!/api/Ext.data.BufferedStore-cfg-trailingBufferZone\" rel=\"Ext.data.BufferedStore-cfg-trailingBufferZone\" class=\"docClass\">trailingBufferZone</a> and <a href=\"#!/api/Ext.data.BufferedStore-cfg-purgePageCount\" rel=\"Ext.data.BufferedStore-cfg-purgePageCount\" class=\"docClass\">purgePageCount</a>.</p>\n\n<p>To use a BufferedStore, initiate the loading process by loading the first page. The number of rows rendered are\ndetermined automatically, and the range of pages needed to keep the cache primed for scrolling is\nrequested and cached.\nExample:</p>\n\n<pre><code>myBufferedStore.loadPage(1); // Load page 1\n</code></pre>\n\n<p>A <a href=\"#!/api/Ext.grid.plugin.BufferedRenderer\" rel=\"Ext.grid.plugin.BufferedRenderer\" class=\"docClass\">BufferedRenderer</a> is instantiated which will monitor the scrolling in the grid, and\nrefresh the view's rows from the page cache as needed. It will also pull new data into the page\ncache when scrolling of the view draws upon data near either end of the prefetched data.</p>\n\n<p>The margins which trigger view refreshing from the prefetched data are <a href=\"#!/api/Ext.grid.plugin.BufferedRenderer-cfg-numFromEdge\" rel=\"Ext.grid.plugin.BufferedRenderer-cfg-numFromEdge\" class=\"docClass\">Ext.grid.plugin.BufferedRenderer.numFromEdge</a>,\n<a href=\"#!/api/Ext.grid.plugin.BufferedRenderer-cfg-leadingBufferZone\" rel=\"Ext.grid.plugin.BufferedRenderer-cfg-leadingBufferZone\" class=\"docClass\">Ext.grid.plugin.BufferedRenderer.leadingBufferZone</a> and <a href=\"#!/api/Ext.grid.plugin.BufferedRenderer-cfg-trailingBufferZone\" rel=\"Ext.grid.plugin.BufferedRenderer-cfg-trailingBufferZone\" class=\"docClass\">Ext.grid.plugin.BufferedRenderer.trailingBufferZone</a>.</p>\n\n<p>The margins which trigger loading more data into the page cache are, <a href=\"#!/api/Ext.data.BufferedStore-cfg-leadingBufferZone\" rel=\"Ext.data.BufferedStore-cfg-leadingBufferZone\" class=\"docClass\">leadingBufferZone</a> and\n<a href=\"#!/api/Ext.data.BufferedStore-cfg-trailingBufferZone\" rel=\"Ext.data.BufferedStore-cfg-trailingBufferZone\" class=\"docClass\">trailingBufferZone</a>.</p>\n\n<p>By default, only 5 pages of data (in addition to the pages which over the visible region) are cached in the page cache,\nwith old pages being evicted from the cache as the view moves down through the dataset. This is controlled by the\n<a href=\"#!/api/Ext.data.BufferedStore-cfg-purgePageCount\" rel=\"Ext.data.BufferedStore-cfg-purgePageCount\" class=\"docClass\">purgePageCount</a> setting.</p>\n\n<p>Setting this value to zero means that no pages are <em>ever</em> scrolled out of the page cache, and\nthat eventually the whole dataset may become present in the page cache. This is sometimes desirable\nas long as datasets do not reach astronomical proportions.</p>\n\n<p>Selection state may be maintained across page boundaries by configuring the SelectionModel not to discard\nrecords from its collection when those Records cycle out of the Store's primary collection. This is done\nby configuring the SelectionModel like this:</p>\n\n<pre><code>selModel: {\n    pruneRemoved: false\n}\n</code></pre>\n","aliases":{"store":["buffered"]},"alternateClassNames":[],"extends":"Ext.data.ProxyStore","mixins":[],"requires":["Ext.data.PageMap","Ext.util.Filter","Ext.util.Sorter","Ext.util.Grouper"],"uses":["Ext.util.SorterCollection","Ext.util.FilterCollection","Ext.util.GroupCollection"],"members":[{"tagname":"cfg","name":"autoDestroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":45}],"doc":"<p>When a Store is used by only one <a href=\"#!/api/Ext.view.View\" rel=\"Ext.view.View\" class=\"docClass\">DataView</a>, and should only exist for the lifetime of that view, then\nconfigure the autoDestroy flag as <code>true</code>. This causes the destruction of the view to trigger the destruction of its Store.</p>\n","type":"Boolean","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-autoDestroy","owner":"Ext.data.AbstractStore","short_doc":"When a Store is used by only one DataView, and should only exist for the lifetime of that view, then\nconfigure the au...","html_type":"Boolean"},{"tagname":"cfg","name":"autoLoad","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":70}],"doc":"<p>If data is not specified, and if autoLoad is true or an Object, this store's load method is automatically called\nafter creation. If the value of autoLoad is an Object, this Object will be passed to the store's load method.</p>\n\n<p>It's important to note that <a href=\"#!/api/Ext.data.TreeStore\" rel=\"Ext.data.TreeStore\" class=\"docClass\">Tree Stores</a> will<br/>\nload regardless of autoLoad's value if expand is set to true on the\n<a href=\"#!/api/Ext.data.TreeStore-cfg-root\" rel=\"Ext.data.TreeStore-cfg-root\" class=\"docClass\">root node</a>.</p>\n","type":"Boolean/Object","default":null,"properties":null,"since":"2.3.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-autoLoad","owner":"Ext.data.ProxyStore","short_doc":"If data is not specified, and if autoLoad is true or an Object, this store's load method is automatically called\nafte...","html_type":"Boolean/Object"},{"tagname":"cfg","name":"autoLoadDelay","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":112}],"doc":"<p>.\nThe delay time to kick of the initial autoLoad task</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"Number","default":"1","accessor":true,"evented":null,"id":"cfg-autoLoadDelay","owner":"Ext.data.ProxyStore","short_doc":".\nThe delay time to kick of the initial autoLoad task ...","html_type":"Number"},{"tagname":"cfg","name":"autoSync","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":83}],"doc":"<p>True to automatically sync the Store with its Proxy after every edit to one of its Records. Defaults to false.</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-autoSync","owner":"Ext.data.ProxyStore","short_doc":"True to automatically sync the Store with its Proxy after every edit to one of its Records. ...","html_type":"Boolean"},{"tagname":"cfg","name":"batchUpdateMode","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":89}],"doc":"<p>Sets the updating behavior based on batch synchronization. 'operation' (the default) will update the Store's\ninternal representation of the data after each operation of the batch has completed, 'complete' will wait until\nthe entire batch has been completed before updating the Store's data. 'complete' is a good choice for local\nstorage proxies, 'operation' is better for remote proxies, where there is a comparatively high latency.</p>\n","type":"String","default":"'operation'","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-batchUpdateMode","owner":"Ext.data.ProxyStore","short_doc":"Sets the updating behavior based on batch synchronization. ...","html_type":"String"},{"tagname":"cfg","name":"data","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":74}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":74,"type":"Number","default":"0","accessor":true,"evented":null,"id":"cfg-data","owner":"Ext.data.BufferedStore","short_doc":" ...","html_type":"Number"},{"tagname":"cfg","name":"defaultViewSize","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":106}],"doc":"<p>The default view size to use until the <a href=\"#!/api/Ext.data.BufferedStore-cfg-viewSize\" rel=\"Ext.data.BufferedStore-cfg-viewSize\" class=\"docClass\">viewSize</a> has been configured.</p>\n","type":"Number","default":"100","properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-defaultViewSize","owner":"Ext.data.BufferedStore","short_doc":"The default view size to use until the viewSize has been configured. ...","html_type":"Number"},{"tagname":"cfg","name":"fields","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":49}],"doc":"<p>This may be used in place of specifying a <a href=\"#!/api/Ext.data.ProxyStore-cfg-model\" rel=\"Ext.data.ProxyStore-cfg-model\" class=\"docClass\">model</a> configuration. The fields should be a\nset of <a href=\"#!/api/Ext.data.field.Field\" rel=\"Ext.data.field.Field\" class=\"docClass\">Ext.data.Field</a> configuration objects. The store will automatically create a <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>\nwith these fields. In general this configuration option should only be used for simple stores like\na two-field store of ComboBox. For anything more complicated, such as specifying a particular id property or\nassociations, a <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a> should be defined and specified for the <a href=\"#!/api/Ext.data.ProxyStore-cfg-model\" rel=\"Ext.data.ProxyStore-cfg-model\" class=\"docClass\">model</a>\nconfig.</p>\n","type":"Object[]","default":null,"properties":null,"since":"2.3.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-fields","owner":"Ext.data.ProxyStore","short_doc":"This may be used in place of specifying a model configuration. ...","html_type":"Object[]"},{"tagname":"cfg","name":"filters","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":29}],"doc":"<p>Array of <a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Filters</a> for this store. Can also be passed array of\nfunctions which will be used as the <a href=\"#!/api/Ext.util.Filter-cfg-filterFn\" rel=\"Ext.util.Filter-cfg-filterFn\" class=\"docClass\">filterFn</a> config\nfor filters:</p>\n\n<pre><code>filters: [\n    function(item) {\n        return item.weight &gt; 0;\n    }\n]\n</code></pre>\n\n<p>To filter after the grid is loaded use the <a href=\"#!/api/Ext.data.Store-method-filterBy\" rel=\"Ext.data.Store-method-filterBy\" class=\"docClass\">filterBy</a> function.</p>\n","type":"Object[]/Function[]","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-filters","owner":"Ext.data.AbstractStore","short_doc":"Array of Filters for this store. ...","html_type":"Object[]/Function[]"},{"tagname":"cfg","name":"groupDir","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":100}],"doc":"<p>The direction in which sorting should be applied when grouping. Supported values are \"ASC\" and \"DESC\".</p>\n","type":"String","default":"'ASC'","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-groupDir","owner":"Ext.data.AbstractStore","short_doc":"The direction in which sorting should be applied when grouping. ...","html_type":"String"},{"tagname":"cfg","name":"groupField","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":92}],"doc":"<p>The field by which to group data in the store. Internally, grouping is very similar to sorting - the\ngroupField and <a href=\"#!/api/Ext.data.AbstractStore-cfg-groupDir\" rel=\"Ext.data.AbstractStore-cfg-groupDir\" class=\"docClass\">groupDir</a> are injected as the first sorter (see <a href=\"#!/api/Ext.data.AbstractStore-method-sort\" rel=\"Ext.data.AbstractStore-method-sort\" class=\"docClass\">sort</a>). Stores support a single\nlevel of grouping, and groups can be fetched via the <a href=\"#!/api/Ext.data.AbstractStore-method-getGroups\" rel=\"Ext.data.AbstractStore-method-getGroups\" class=\"docClass\">getGroups</a> method.</p>\n","type":"String","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-groupField","owner":"Ext.data.AbstractStore","short_doc":"The field by which to group data in the store. ...","html_type":"String"},{"tagname":"cfg","name":"grouper","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":106}],"doc":"<p>The grouper by which to group the data store. May also be specified by the <a href=\"#!/api/Ext.data.AbstractStore-cfg-groupField\" rel=\"Ext.data.AbstractStore-cfg-groupField\" class=\"docClass\">groupField</a> config, however\nthey should not be used together.</p>\n","type":"Object/Ext.util.Grouper","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-grouper","owner":"Ext.data.AbstractStore","short_doc":"The grouper by which to group the data store. ...","html_type":"Object/<a href=\"#!/api/Ext.util.Grouper\" rel=\"Ext.util.Grouper\" class=\"docClass\">Ext.util.Grouper</a>"},{"tagname":"cfg","name":"leadingBufferZone","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":99}],"doc":"<p>The number of extra rows to keep cached on the leading side of scrolling buffer\nas scrolling proceeds. A larger number means fewer replenishments from the server.</p>\n","type":"Number","default":"200","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-leadingBufferZone","owner":"Ext.data.BufferedStore","short_doc":"The number of extra rows to keep cached on the leading side of scrolling buffer\nas scrolling proceeds. ...","html_type":"Number"},{"tagname":"cfg","name":"listeners","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":240}],"doc":"<p>A config object containing one or more event handlers to be added to this object during initialization. This\nshould be a valid listeners config object as specified in the <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> example for attaching multiple\nhandlers at once.</p>\n\n<p><strong>DOM events from Ext JS <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a></strong></p>\n\n<p>While <em>some</em> Ext JS Component classes export selected DOM events (e.g. \"click\", \"mouseover\" etc), this is usually\nonly done when extra value can be added. For example the <a href=\"#!/api/Ext.view.View\" rel=\"Ext.view.View\" class=\"docClass\">DataView</a>'s <strong><code><a href=\"#!/api/Ext.view.View-event-itemclick\" rel=\"Ext.view.View-event-itemclick\" class=\"docClass\">itemclick</a></code></strong> event passing the node clicked on. To access DOM events directly from a\nchild element of a Component, we need to specify the <code>element</code> option to identify the Component property to add a\nDOM listener to:</p>\n\n<pre><code>new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n    width: 400,\n    height: 200,\n    dockedItems: [{\n        xtype: 'toolbar'\n    }],\n    listeners: {\n        click: {\n            element: 'el', //bind to the underlying el property on the panel\n            fn: function(){ console.log('click el'); }\n        },\n        dblclick: {\n            element: 'body', //bind to the underlying body property on the panel\n            fn: function(){ console.log('dblclick body'); }\n        }\n    }\n});\n</code></pre>\n","type":"Object","default":null,"properties":null,"id":"cfg-listeners","owner":"Ext.mixin.Observable","short_doc":"A config object containing one or more event handlers to be added to this object during initialization. ...","html_type":"Object"},{"tagname":"cfg","name":"model","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":37}],"doc":"<p>Name of the <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Model</a> associated with this store. See\n<a href=\"#!/api/Ext.data.Model-property-entityName\" rel=\"Ext.data.Model-property-entityName\" class=\"docClass\">Ext.data.Model.entityName</a>.</p>\n\n<p>May also be the actual Model subclass.</p>\n\n<p>This config is required for the store to be able to read data unless you have defined\nthe <a href=\"#!/api/Ext.data.ProxyStore-cfg-fields\" rel=\"Ext.data.ProxyStore-cfg-fields\" class=\"docClass\">fields</a> config which will create an anonymous <code><a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a></code>.</p>\n","type":"String/Ext.data.Model","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-model","owner":"Ext.data.ProxyStore","short_doc":"Name of the Model associated with this store. ...","html_type":"String/<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},{"tagname":"cfg","name":"pageSize","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":75}],"doc":"<p>The number of records considered to form a 'page'. This is used to power the built-in\npaging using the nextPage and previousPage functions when the grid is paged using a\n<a href=\"#!/api/Ext.toolbar.Paging\" rel=\"Ext.toolbar.Paging\" class=\"docClass\">PagingToolbar</a> Defaults to 25.</p>\n\n<p>To disable paging, set the pageSize to <code>0</code>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":75,"type":"Number","default":"25","accessor":true,"evented":null,"id":"cfg-pageSize","owner":"Ext.data.BufferedStore","properties":null,"overrides":[{"name":"pageSize","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-cfg-pageSize\" rel=\"Ext.data.AbstractStore-cfg-pageSize\" class=\"docClass\">Ext.data.AbstractStore.pageSize</a>"}],"short_doc":"The number of records considered to form a 'page'. ...","html_type":"Number"},{"tagname":"cfg","name":"proxy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":62}],"doc":"<p>The Proxy to use for this Store. This can be either a string, a config object or a Proxy instance -\nsee <a href=\"#!/api/Ext.data.ProxyStore-method-setProxy\" rel=\"Ext.data.ProxyStore-method-setProxy\" class=\"docClass\">setProxy</a> for details.</p>\n","type":"String/Ext.data.proxy.Proxy/Object","default":null,"properties":null,"since":"1.1.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-proxy","owner":"Ext.data.ProxyStore","short_doc":"The Proxy to use for this Store. ...","html_type":"String/<a href=\"#!/api/Ext.data.proxy.Proxy\" rel=\"Ext.data.proxy.Proxy\" class=\"docClass\">Ext.data.proxy.Proxy</a>/Object"},{"tagname":"cfg","name":"purgePageCount","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":79}],"doc":"<p>The number of pages <em>in addition to twice the required buffered range</em> to keep in the prefetch cache before purging least recently used records.</p>\n\n<p>For example, if the height of the view area and the configured <a href=\"#!/api/Ext.data.BufferedStore-cfg-trailingBufferZone\" rel=\"Ext.data.BufferedStore-cfg-trailingBufferZone\" class=\"docClass\">trailingBufferZone</a> and <a href=\"#!/api/Ext.data.BufferedStore-cfg-leadingBufferZone\" rel=\"Ext.data.BufferedStore-cfg-leadingBufferZone\" class=\"docClass\">leadingBufferZone</a> require that there\nare three pages in the cache, then a <code>purgePageCount</code> of 5 ensures that up to 11 pages can be in the page cache any any one time. This is enough\nto allow the user to scroll rapidly between different areas of the dataset without evicting pages which are still needed.</p>\n\n<p>A value of 0 indicates to never purge the prefetched data.</p>\n","type":"Number","default":"5","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-purgePageCount","owner":"Ext.data.BufferedStore","short_doc":"The number of pages in addition to twice the required buffered range to keep in the prefetch cache before purging lea...","html_type":"Number"},{"tagname":"cfg","name":"remoteFilter","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":77}],"doc":"<p><code>true</code> to defer any filtering operation to the server. If <code>false</code>, filtering is done locally on the client.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":77,"type":"Boolean","default":"true","accessor":true,"evented":null,"id":"cfg-remoteFilter","owner":"Ext.data.BufferedStore","properties":null,"overrides":[{"name":"remoteFilter","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-cfg-remoteFilter\" rel=\"Ext.data.AbstractStore-cfg-remoteFilter\" class=\"docClass\">Ext.data.AbstractStore.remoteFilter</a>"}],"short_doc":"true to defer any filtering operation to the server. ...","html_type":"Boolean"},{"tagname":"cfg","name":"remoteSort","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":76}],"doc":"<p><code>true</code> if the sorting should be performed on the server side, false if it is local only.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":76,"type":"Boolean","default":"true","accessor":true,"evented":null,"id":"cfg-remoteSort","owner":"Ext.data.BufferedStore","properties":null,"overrides":[{"name":"remoteSort","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-cfg-remoteSort\" rel=\"Ext.data.AbstractStore-cfg-remoteSort\" class=\"docClass\">Ext.data.AbstractStore.remoteSort</a>"}],"short_doc":"true if the sorting should be performed on the server side, false if it is local only. ...","html_type":"Boolean"},{"tagname":"cfg","name":"sortOnLoad","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":78}],"doc":"<p>If true, any sorters attached to this Store will be run after loading data, before the datachanged event is fired.\nDefaults to true, ignored if <a href=\"#!/api/Ext.data.Store-cfg-remoteSort\" rel=\"Ext.data.Store-cfg-remoteSort\" class=\"docClass\">remoteSort</a> is true</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":78,"type":"Boolean","default":"false","accessor":true,"evented":null,"id":"cfg-sortOnLoad","owner":"Ext.data.BufferedStore","properties":null,"overrides":[{"name":"sortOnLoad","owner":"Ext.data.ProxyStore","link":"<a href=\"#!/api/Ext.data.ProxyStore-cfg-sortOnLoad\" rel=\"Ext.data.ProxyStore-cfg-sortOnLoad\" class=\"docClass\">Ext.data.ProxyStore.sortOnLoad</a>"}],"short_doc":"If true, any sorters attached to this Store will be run after loading data, before the datachanged event is fired. ...","html_type":"Boolean"},{"tagname":"cfg","name":"sorters","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":68}],"doc":"<p>The initial set of <a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Sorters</a></p>\n","type":"Ext.util.Sorter[]/Object[]","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-sorters","owner":"Ext.data.AbstractStore","html_type":"<a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a>[]/Object[]"},{"tagname":"cfg","name":"statefulFilters","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":62}],"doc":"<p>Configure as <code>true</code> to have the filters saved when a client <a href=\"#!/api/Ext.grid.Panel\" rel=\"Ext.grid.Panel\" class=\"docClass\">grid</a> saves its state.</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-statefulFilters","owner":"Ext.data.AbstractStore","short_doc":"Configure as true to have the filters saved when a client grid saves its state. ...","html_type":"Boolean"},{"tagname":"cfg","name":"storeId","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":52}],"doc":"<p>Unique identifier for this store. If present, this Store will be registered with the <a href=\"#!/api/Ext.data.StoreManager\" rel=\"Ext.data.StoreManager\" class=\"docClass\">Ext.data.StoreManager</a>,\nmaking it easy to reuse elsewhere.</p>\n\n<p>Note that when store is instantiated by Controller, the storeId will be\noverridden by the name of the store.</p>\n","type":"String","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-storeId","owner":"Ext.data.AbstractStore","short_doc":"Unique identifier for this store. ...","html_type":"String"},{"tagname":"cfg","name":"trackRemoved","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":119}],"doc":"<p>This config controls whether removed records are remembered by this store for\nlater saving to the server.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"type":"Boolean","default":"false","accessor":true,"evented":null,"id":"cfg-trackRemoved","owner":"Ext.data.BufferedStore","params":null,"return":null,"throws":null,"overrides":[{"name":"trackRemoved","owner":"Ext.data.ProxyStore","link":"<a href=\"#!/api/Ext.data.ProxyStore-cfg-trackRemoved\" rel=\"Ext.data.ProxyStore-cfg-trackRemoved\" class=\"docClass\">Ext.data.ProxyStore.trackRemoved</a>"}],"short_doc":"This config controls whether removed records are remembered by this store for\nlater saving to the server. ...","html_type":"Boolean"},{"tagname":"cfg","name":"trailingBufferZone","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":92}],"doc":"<p>The number of extra records to keep cached on the trailing side of scrolling buffer\nas scrolling proceeds. A larger number means fewer replenishments from the server.</p>\n","type":"Number","default":"25","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-trailingBufferZone","owner":"Ext.data.BufferedStore","short_doc":"The number of extra records to keep cached on the trailing side of scrolling buffer\nas scrolling proceeds. ...","html_type":"Number"},{"tagname":"cfg","name":"viewSize","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":112}],"doc":"<p>The view size needed to fill the current view. Defaults to the <a href=\"#!/api/Ext.data.BufferedStore-cfg-defaultViewSize\" rel=\"Ext.data.BufferedStore-cfg-defaultViewSize\" class=\"docClass\">defaultViewSize</a>.\nThis will typically be set by the underlying view.</p>\n","type":"Number","default":"0","properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-viewSize","owner":"Ext.data.BufferedStore","short_doc":"The view size needed to fill the current view. ...","html_type":"Number"},{"tagname":"property","name":"$className","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1025}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"String","default":"'Ext.Base'","readonly":null,"id":"property-S-className","owner":"Ext.Base","short_doc":" ...","html_type":"String"},{"tagname":"property","name":"$configPrefixed","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":25}],"doc":"<p>The value <code>true</code> causes <code>config</code> values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\") character. A value of <code>false</code>\nstores <code>config</code> values as properties using their exact name (no prefix).</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":25,"type":"Boolean","default":"false","readonly":null,"id":"property-S-configPrefixed","owner":"Ext.data.AbstractStore","overrides":[{"name":"$configPrefixed","owner":"Ext.Base","link":"<a href=\"#!/api/Ext.Base-property-S-configPrefixed\" rel=\"Ext.Base-property-S-configPrefixed\" class=\"docClass\">Ext.Base.$configPrefixed</a>"}],"params":null,"return":null,"throws":null,"short_doc":"The value true causes config values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\")...","html_type":"Boolean"},{"tagname":"property","name":"$configStrict","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":26}],"doc":"<p>The value <code>true</code> instructs the <code>initConfig</code> method to only honor values for\nproperties declared in the <code>config</code> block of a class. When <code>false</code>, properties\nthat are not declared in a <code>config</code> block will be placed on the instance.</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":26,"type":"Boolean","default":"false","readonly":null,"id":"property-S-configStrict","owner":"Ext.data.AbstractStore","overrides":[{"name":"$configStrict","owner":"Ext.Base","link":"<a href=\"#!/api/Ext.Base-property-S-configStrict\" rel=\"Ext.Base-property-S-configStrict\" class=\"docClass\">Ext.Base.$configStrict</a>"}],"params":null,"return":null,"throws":null,"short_doc":"The value true instructs the initConfig method to only honor values for\nproperties declared in the config block of a ...","html_type":"Boolean"},{"tagname":"property","name":"autoSyncSuspended","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":154}],"doc":"<p>A counter to track suspensions.</p>\n","type":"Number","default":"0","properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-autoSyncSuspended","owner":"Ext.data.ProxyStore","short_doc":"A counter to track suspensions. ...","html_type":"Number"},{"tagname":"property","name":"blockLoadCounter","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":145}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":145,"type":"Number","default":"0","readonly":null,"id":"property-blockLoadCounter","owner":"Ext.data.ProxyStore","short_doc":" ...","html_type":"Number"},{"tagname":"property","name":"buffered","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":70}],"doc":"<p>For backward compatibility with user code.</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"type":"Boolean","default":"true","readonly":null,"id":"property-buffered","owner":"Ext.data.BufferedStore","short_doc":"For backward compatibility with user code. ...","html_type":"Boolean"},{"tagname":"property","name":"currentPage","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":124}],"doc":"<p>The page that the Store has most recently loaded (see <a href=\"#!/api/Ext.data.Store-method-loadPage\" rel=\"Ext.data.Store-method-loadPage\" class=\"docClass\">loadPage</a>)</p>\n","type":"Number","default":"1","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-currentPage","owner":"Ext.data.AbstractStore","short_doc":"The page that the Store has most recently loaded (see loadPage) ...","html_type":"Number"},{"tagname":"property","name":"deprecated","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":1150}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1150,"type":"Object","default":null,"readonly":null,"id":"property-deprecated","owner":"Ext.data.AbstractStore","html_type":"Object"},{"tagname":"property","name":"eventsSuspended","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":280}],"doc":"<p>Initial suspended call count. Incremented when <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvents\" rel=\"Ext.mixin.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a> is called, decremented when <a href=\"#!/api/Ext.mixin.Observable-method-resumeEvents\" rel=\"Ext.mixin.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> is called.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"Number","default":"0","readonly":null,"id":"property-eventsSuspended","owner":"Ext.mixin.Observable","short_doc":"Initial suspended call count. ...","html_type":"Number"},{"tagname":"property","name":"factoryConfig","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":20}],"doc":"<p>If this property is specified by the target class of this mixin its properties are\nused to configure the created <code><a href=\"#!/api/Ext.Factory\" rel=\"Ext.Factory\" class=\"docClass\">Ext.Factory</a></code>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":20,"type":"Object","default":"{defaultType: 'store', type: 'store'}","readonly":null,"id":"property-factoryConfig","owner":"Ext.data.AbstractStore","overrides":[{"name":"factoryConfig","owner":"Ext.mixin.Factoryable","link":"<a href=\"#!/api/Ext.mixin.Factoryable-property-factoryConfig\" rel=\"Ext.mixin.Factoryable-property-factoryConfig\" class=\"docClass\">Ext.mixin.Factoryable.factoryConfig</a>"}],"properties":null,"short_doc":"If this property is specified by the target class of this mixin its properties are\nused to configure the created Ext....","html_type":"Object"},{"tagname":"property","name":"hasListeners","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":286}],"doc":"<p>This object holds a key for any event that has a listener. The listener may be set\ndirectly on the instance, or on its class or a super class (via <a href=\"#!/api/Ext.mixin.Observable-static-method-observe\" rel=\"Ext.mixin.Observable-static-method-observe\" class=\"docClass\">observe</a>) or\non the <a href=\"#!/api/Ext.app.EventBus\" rel=\"Ext.app.EventBus\" class=\"docClass\">MVC EventBus</a>. The values of this object are truthy\n(a non-zero number) and falsy (0 or undefined). They do not represent an exact count\nof listeners. The value for an event is truthy if the event must be fired and is\nfalsy if there is no need to fire the event.</p>\n\n<p>The intended use of this property is to avoid the expense of fireEvent calls when\nthere are no listeners. This can be particularly helpful when one would otherwise\nhave to call fireEvent hundreds or thousands of times. It is used like this:</p>\n\n<pre><code> if (this.hasListeners.foo) {\n     this.fireEvent('foo', this, arg1);\n }\n</code></pre>\n","type":"Object","default":null,"properties":null,"readonly":true,"id":"property-hasListeners","owner":"Ext.mixin.Observable","short_doc":"This object holds a key for any event that has a listener. ...","html_type":"Object"},{"tagname":"property","name":"implicitModel","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":137}],"doc":"<p>True if a model was created implicitly for this Store. This happens if a fields array is passed to the Store's\nconstructor instead of a model constructor or name.</p>\n","type":"Boolean","default":"false","properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-implicitModel","owner":"Ext.data.ProxyStore","short_doc":"True if a model was created implicitly for this Store. ...","html_type":"Boolean"},{"tagname":"property","name":"isBufferedStore","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":64}],"doc":"<p><code>true</code> in this class to identify an object as an instantiated BufferedStore, or subclass thereof.</p>\n","type":"Boolean","default":"true","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-isBufferedStore","owner":"Ext.data.BufferedStore","short_doc":"true in this class to identify an object as an instantiated BufferedStore, or subclass thereof. ...","html_type":"Boolean"},{"tagname":"property","name":"isConfiguring","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1057}],"doc":"<p>This property is set to <code>true</code> during the call to <code>initConfig</code>.</p>\n","type":"Boolean","default":"false","properties":null,"protected":true,"readonly":true,"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-isConfiguring","owner":"Ext.Base","short_doc":"This property is set to true during the call to initConfig. ...","html_type":"Boolean"},{"tagname":"property","name":"isDestroyed","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":137}],"doc":"<p>True if the Store has already been destroyed. If this is true, the reference to Store should be deleted\nas it will not function correctly any more.</p>\n","type":"Boolean","default":"false","properties":null,"since":"3.4.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-isDestroyed","owner":"Ext.data.AbstractStore","short_doc":"True if the Store has already been destroyed. ...","html_type":"Boolean"},{"tagname":"property","name":"isFirstInstance","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1066}],"doc":"<p>This property is set to <code>true</code> if this instance is the first of its class.</p>\n","type":"Boolean","default":"false","properties":null,"protected":true,"readonly":true,"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-isFirstInstance","owner":"Ext.Base","short_doc":"This property is set to true if this instance is the first of its class. ...","html_type":"Boolean"},{"tagname":"property","name":"isInstance","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1028}],"doc":"<p>This value is <code>true</code> and is used to identify plain objects from instances of\na defined class.</p>\n","type":"Boolean","default":"true","properties":null,"protected":true,"readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-isInstance","owner":"Ext.Base","short_doc":"This value is true and is used to identify plain objects from instances of\na defined class. ...","html_type":"Boolean"},{"tagname":"property","name":"isObservable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":274}],"doc":"<p><code>true</code> in this class to identify an object as an instantiated Observable, or subclass thereof.</p>\n","type":"Boolean","default":"true","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-isObservable","owner":"Ext.mixin.Observable","short_doc":"true in this class to identify an object as an instantiated Observable, or subclass thereof. ...","html_type":"Boolean"},{"tagname":"property","name":"isStore","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":145}],"doc":"<p><code>true</code> in this class to identify an object as an instantiated Store, or subclass thereof.</p>\n","type":"Boolean","default":"true","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-isStore","owner":"Ext.data.AbstractStore","short_doc":"true in this class to identify an object as an instantiated Store, or subclass thereof. ...","html_type":"Boolean"},{"tagname":"property","name":"lastOptions","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":148}],"doc":"<p>Property to hold the last options from a <a href=\"#!/api/Ext.data.ProxyStore-method-load\" rel=\"Ext.data.ProxyStore-method-load\" class=\"docClass\">load</a> method call. This object is used for the <a href=\"#!/api/Ext.data.ProxyStore-method-reload\" rel=\"Ext.data.ProxyStore-method-reload\" class=\"docClass\">reload</a>\nto reuse the same options. Please see <a href=\"#!/api/Ext.data.ProxyStore-method-reload\" rel=\"Ext.data.ProxyStore-method-reload\" class=\"docClass\">reload</a> for a simple example on how to use the lastOptions property.</p>\n","type":"Object","default":null,"properties":null,"id":"property-lastOptions","owner":"Ext.data.ProxyStore","short_doc":"Property to hold the last options from a load method call. ...","html_type":"Object"},{"tagname":"property","name":"loading","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":130}],"doc":"<p><code>true</code> if the Store is currently loading via its Proxy.</p>\n","type":"Boolean","default":"false","properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-loading","owner":"Ext.data.AbstractStore","short_doc":"true if the Store is currently loading via its Proxy. ...","html_type":"Boolean"},{"tagname":"property","name":"loadsWhileBlocked","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":146}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":146,"type":"Number","default":"0","readonly":null,"id":"property-loadsWhileBlocked","owner":"Ext.data.ProxyStore","short_doc":" ...","html_type":"Number"},{"tagname":"property","name":"mixinId","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Factoryable.js","linenr":266}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":266,"type":"String","default":"'factoryable'","readonly":null,"id":"property-mixinId","owner":"Ext.mixin.Factoryable","overrides":[{"name":"mixinId","owner":"Ext.util.StoreHolder","link":"<a href=\"#!/api/Ext.util.StoreHolder-property-mixinId\" rel=\"Ext.util.StoreHolder-property-mixinId\" class=\"docClass\">Ext.util.StoreHolder.mixinId</a>"}],"short_doc":" ...","html_type":"String"},{"tagname":"property","name":"privates","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":1076}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1076,"type":"Object","default":null,"readonly":null,"id":"property-privates","owner":"Ext.data.BufferedStore","params":null,"return":null,"throws":null,"overrides":[{"name":"privates","owner":"Ext.data.ProxyStore","link":"<a href=\"#!/api/Ext.data.ProxyStore-property-privates\" rel=\"Ext.data.ProxyStore-property-privates\" class=\"docClass\">Ext.data.ProxyStore.privates</a>"}],"html_type":"Object"},{"tagname":"property","name":"removed","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":215}],"doc":"<p>Temporary cache in which removed model instances are kept until successfully\nsynchronised with a Proxy, at which point this is cleared.</p>\n\n<p>This cache is maintained unless you set <code>trackRemoved</code> to <code>false</code>.</p>\n","protected":true,"type":"Ext.data.Model[]","default":"[]","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-removed","owner":"Ext.data.ProxyStore","short_doc":"Temporary cache in which removed model instances are kept until successfully\nsynchronised with a Proxy, at which poin...","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},{"tagname":"property","name":"self","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1344}],"doc":"<p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n","type":"Ext.Class","default":null,"properties":null,"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-self","owner":"Ext.Base","short_doc":"Get the reference to the current class from which this object was instantiated. ...","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},{"tagname":"property","name":"updating","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":151}],"doc":"<p>A counter that is increased by <code>beginUpdate</code> and decreased by <code>endUpdate</code>. When\nthis transitions from 0 to 1 the <code><a href=\"#!/api/Ext.data.AbstractStore-event-beginupdate\" rel=\"Ext.data.AbstractStore-event-beginupdate\" class=\"docClass\">beginupdate</a></code> event is\nfired. When it transitions back from 1 to 0 the <code><a href=\"#!/api/Ext.data.AbstractStore-event-endupdate\" rel=\"Ext.data.AbstractStore-event-endupdate\" class=\"docClass\">endupdate</a></code>\nevent is fired.</p>\n","type":"Number","default":"0","properties":null,"readonly":true,"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-updating","owner":"Ext.data.AbstractStore","short_doc":"A counter that is increased by beginUpdate and decreased by endUpdate. ...","html_type":"Number"},{"tagname":"property","name":"$onExtended","autodetected":{"inheritdoc":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":370}],"doc":"\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"type":"Array","default":"[]","readonly":null,"id":"static-property-S-onExtended","owner":"Ext.Base","short_doc":" ...","html_type":"Array"},{"tagname":"method","name":"constructor","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":161}],"doc":"<p>documented above</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"name":"config","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["blockLoad","callParent","getModel","getStoreId","unblockLoad"],"id":"method-constructor","owner":"Ext.data.ProxyStore","overrides":[{"name":"constructor","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-constructor\" rel=\"Ext.data.AbstractStore-method-constructor\" class=\"docClass\">Ext.data.AbstractStore.constructor</a>"}],"return":{"type":"Ext.data.ProxyStore","doc":"\n","html_type":"<a href=\"#!/api/Ext.data.ProxyStore\" rel=\"Ext.data.ProxyStore\" class=\"docClass\">Ext.data.ProxyStore</a>"},"short_doc":"documented above ..."},{"tagname":"method","name":"_addDeclaredListeners","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":400}],"doc":"<p>Adds declarative listeners as nested arrays of listener objects.</p>\n","private":true,"params":[{"tagname":"params","type":"Array","name":"listeners","doc":"\n","html_type":"Array"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if any listeners were added</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["addListener"],"id":"method-_addDeclaredListeners","owner":"Ext.mixin.Observable","short_doc":"Adds declarative listeners as nested arrays of listener objects. ..."},{"tagname":"method","name":"add","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":224}],"doc":"<p><debug></debug></p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-add","owner":"Ext.data.BufferedStore","short_doc":" ..."},{"tagname":"method","name":"addAfterListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1505}],"doc":"<p>Appends an after-event handler.</p>\n\n<p>Same as <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> with <code>order</code> set to <code>'after'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event to listen for.</p>\n\n","html_type":"String/String[]/Object"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The method the event invokes.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope for <code>fn</code>.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>An object containing handler configuration.</p>\n\n","html_type":"Object"}],"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> with the <code>priority</code> option instead.</p>\n","version":"5.1"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["addListener"],"id":"method-addAfterListener","owner":"Ext.mixin.Observable","short_doc":"Appends an after-event handler. ..."},{"tagname":"method","name":"addBeforeListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1490}],"doc":"<p>Appends a before-event handler.  Returning <code>false</code> from the handler will stop the event.</p>\n\n<p>Same as <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> with <code>order</code> set to <code>'before'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event to listen for.</p>\n\n","html_type":"String/String[]/Object"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The method the event invokes.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope for <code>fn</code>.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>An object containing handler configuration.</p>\n\n","html_type":"Object"}],"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> with the <code>priority</code> option instead.</p>\n","version":"5.1"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["addListener"],"id":"method-addBeforeListener","owner":"Ext.mixin.Observable","short_doc":"Appends a before-event handler. ..."},{"tagname":"method","name":"addDeprecations","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":115}],"doc":"<p>This method applies a versioned, deprecation declaration to this class. This\nis typically called by the <code>deprecated</code> config.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"deprecations","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-addDeprecations","owner":"Ext.Base","short_doc":"This method applies a versioned, deprecation declaration to this class. ..."},{"tagname":"method","name":"addFieldTransform","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":658}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":658,"params":[{"name":"sorter","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["getModel"],"id":"method-addFieldTransform","owner":"Ext.data.AbstractStore","short_doc":" ..."},{"tagname":"method","name":"addFilter","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":586}],"doc":"<p>Adds a new Filter to this Store's <a href=\"#!/api/Ext.data.AbstractStore-cfg-filters\" rel=\"Ext.data.AbstractStore-cfg-filters\" class=\"docClass\">filter set</a> and\nby default, applies the updated filter set to the Store's unfiltered dataset.</p>\n","params":[{"tagname":"params","type":"Object[]/Ext.util.Filter[]","name":"filters","doc":"<p>The set of filters to add to the current <a href=\"#!/api/Ext.data.AbstractStore-cfg-filters\" rel=\"Ext.data.AbstractStore-cfg-filters\" class=\"docClass\">filter set</a>.</p>\n","html_type":"Object[]/<a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a>[]"},{"tagname":"params","type":"Boolean","name":"suppressEvent","optional":true,"doc":"<p>If <code>true</code> the filter is cleared silently.</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getFilters"],"id":"method-addFilter","owner":"Ext.data.AbstractStore","short_doc":"Adds a new Filter to this Store's filter set and\nby default, applies the updated filter set to the Store's unfiltered..."},{"tagname":"method","name":"addListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":698}],"doc":"<p>The <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> method is shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a>.</p>\n\n<p>Appends an event handler to this object.  For example:</p>\n\n<pre><code>myGridPanel.on(\"itemclick\", this.onItemClick, this);\n</code></pre>\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple events. For example:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: this.onCellClick,\n    select: this.onSelect,\n    viewready: this.onViewReady,\n    scope: this // Important. Ensure \"this\" is correct during handler execution\n});\n</code></pre>\n\n<p>One can also specify options for each event handler separately:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: this.onCellClick, scope: this, single: true},\n    viewready: {fn: panel.onViewReady, scope: panel}\n});\n</code></pre>\n\n<p><em>Names</em> of methods in a specified scope may also be used:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: 'onCellClick', scope: this, single: true},\n    viewready: {fn: 'onViewReady', scope: panel}\n});\n</code></pre>\n","params":[{"tagname":"params","type":"String/Object","name":"eventName","doc":"<p>The name of the event to listen for.\nMay also be an object who's property names are event names.</p>\n\n","html_type":"String/Object"},{"tagname":"params","type":"Function/String","name":"fn","optional":true,"doc":"<p>The method the event invokes or the <em>name</em> of\nthe method within the specified <code>scope</code>.  Will be called with arguments\ngiven to <a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">Ext.util.Observable.fireEvent</a> plus the <code>options</code> parameter described\nbelow.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>An object containing handler configuration.</p>\n\n\n\n\n<p><strong>Note:</strong> The options object will also be passed as the last argument to every\nevent handler.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n","properties":[{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted,\n  defaults to the object which fired the event.</strong></p>\n\n","html_type":"Object"},{"tagname":"params","type":"Number","name":"delay","doc":"<p>The number of milliseconds to delay the invocation of the handler after the event\n  fires.</p>\n\n","html_type":"Number"},{"tagname":"params","type":"Boolean","name":"single","doc":"<p>True to add a handler to handle just the next firing of the event, and then remove\n  itself.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Number","name":"buffer","doc":"<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"onFrame","doc":"<p>Causes the handler to be scheduled to run at the next\n  <a href=\"#!/api/Ext.Function-method-requestAnimationFrame\" rel=\"Ext.Function-method-requestAnimationFrame\" class=\"docClass\">animation frame event</a>. If the\n  event fires again before that time, the handler is not rescheduled - the handler\n  will only be called once when the next animation frame is fired, with the last set\n  of arguments passed.</p>\n\n","html_type":"Number"},{"tagname":"params","type":"Ext.util.Observable","name":"target","doc":"<p>Only call the handler if the event was fired on the target Observable, <em>not</em> if the\n  event was bubbled up from a child Observable.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},{"tagname":"params","type":"String","name":"element","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</strong>\n  The name of a Component property which references an <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">element</a>\n  to add a listener to.</p>\n\n\n\n\n<p>  This option is useful during Component construction to add DOM event listeners to\n  elements of <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which will exist only after the\n  Component is rendered.</p>\n\n\n\n\n<p>  For example, to add a click listener to a Panel's body:</p>\n\n\n\n\n<pre><code>  var panel = new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n\n\n\n<p>In order to remove listeners attached using the element, you'll need to reference\nthe element itself as seen below.</p>\n\n\n\n\n<pre><code> panel.body.un(...)\n</code></pre>\n\n","html_type":"String"},{"tagname":"params","type":"String","name":"delegate","optional":true,"doc":"<p>A simple selector to filter the event target or look for a descendant of the target.</p>\n\n\n\n\n<p>  The \"delegate\" option is only available on <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instances (or\n  when attaching a listener to a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> via a Component using the\n  element option).</p>\n\n\n\n\n<p>  See the <em>delegate</em> example below.</p>\n\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"stopPropagation","optional":true,"doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopPropagation\" rel=\"Ext.event.Event-method-stopPropagation\" class=\"docClass\">stopPropagation</a> on the event object\n  before firing the handler.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"preventDefault","optional":true,"doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-preventDefault\" rel=\"Ext.event.Event-method-preventDefault\" class=\"docClass\">preventDefault</a> on the event object\n  before firing the handler.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"stopEvent","optional":true,"doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopEvent\" rel=\"Ext.event.Event-method-stopEvent\" class=\"docClass\">stopEvent</a> on the event object\n  before firing the handler.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Array","name":"args","optional":true,"doc":"<p>Optional arguments to pass to the handler function. Any additional arguments\n  passed to <a href=\"#!/api/Ext.mixin.Observable-method-fireEvent\" rel=\"Ext.mixin.Observable-method-fireEvent\" class=\"docClass\">fireEvent</a> will be appended to these arguments.</p>\n\n","html_type":"Array"},{"tagname":"params","type":"Boolean","name":"destroyable","default":"false","optional":true,"doc":"<p>When specified as <code>true</code>, the function returns a <code>destroyable</code> object. An object\n  which implements the <code>destroy</code> method which removes all listeners added in this call.\n  This syntax can be a helpful shortcut to using <a href=\"#!/api/Ext.mixin.Observable-method-un\" rel=\"Ext.mixin.Observable-method-un\" class=\"docClass\">un</a>; particularly when\n  removing multiple listeners.  <em>NOTE</em> - not compatible when using the <em>element</em>\n  option.  See <a href=\"#!/api/Ext.mixin.Observable-method-un\" rel=\"Ext.mixin.Observable-method-un\" class=\"docClass\">un</a> for the proper syntax for removing listeners added using the\n  <em>element</em> config.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Number","name":"priority","optional":true,"doc":"<p>An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handlers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.\n  A priority must be an integer to be valid.  Fractional values are reserved for\n  internal framework use.</p>\n\n","html_type":"Number"},{"tagname":"params","type":"String","name":"order","default":"'current'","optional":true,"doc":"<p>A legacy option that is provided for backward compatibility.\n  It is recommended to use the <code>priority</code> option instead.  Available options are:</p>\n\n\n\n\n<ul>\n<li><code>'before'</code>: equal to a priority of <code>100</code></li>\n<li><code>'current'</code>: equal to a priority of <code>0</code> or default priority</li>\n<li><code>'after'</code>: equal to a priority of <code>-100</code></li>\n</ul>\n\n\n\n","html_type":"String"}],"html_type":"Object"},{"tagname":"params","type":"String","name":"order","default":"'current'","optional":true,"doc":"<p>A shortcut for the <code>order</code> event option.  Provided for backward compatibility.\n  Please use the <code>priority</code> event option instead.</p>\n\n\n\n\n<p><strong>Combining Options</strong></p>\n\n\n\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n\n\n\n<p>A delayed, one-time listener.</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n\n\n\n<p><strong>Attaching multiple handlers in 1 call</strong></p>\n\n\n\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple handlers and handler configs.</p>\n\n\n\n\n<pre><code>grid.on({\n    itemclick: 'onItemClick',\n    itemcontextmenu: grid.onItemContextmenu,\n    destroy: {\n        fn: function () {\n            // function called within the 'altCmp' scope instead of grid\n        },\n        scope: altCmp // unique scope for the destroy handler\n    },\n    scope: grid       // default scope - provided for example clarity\n});\n</code></pre>\n\n\n\n\n<p><strong>Delegate</strong></p>\n\n\n\n\n<p>This is a configuration option that you can pass along when registering a handler for\nan event to assist with event delegation. By setting this configuration option\nto a simple selector, the target element will be filtered to look for a\ndescendant of the target. For example:</p>\n\n\n\n\n<pre><code>var panel = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n    xtype: 'panel',\n    renderTo: document.body,\n    title: 'Delegate Handler Example',\n    frame: true,\n    height: 220,\n    width: 220,\n    html: '&lt;h1 class=\"myTitle\"&gt;BODY TITLE&lt;/h1&gt;Body content'\n});\n\n// The click handler will only be called when the click occurs on the\n// delegate: h1.myTitle (\"h1\" tag with class \"myTitle\")\npanel.on({\n    click: function (e) {\n        console.log(e.getTarget().innerHTML);\n    },\n    element: 'body',\n    delegate: 'h1.myTitle'\n });\n</code></pre>\n\n","html_type":"String"}],"return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes\n all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.on({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["doAddListener"],"id":"method-addListener","owner":"Ext.mixin.Observable","short_doc":"The on method is shorthand for addListener. ..."},{"tagname":"method","name":"addManagedListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":419}],"doc":"<p>The addManagedListener method is used when some object (call it \"A\") is listening\nto an event on another observable object (\"B\") and you want to remove that listener\nfrom \"B\" when \"A\" is destroyed. This is not an issue when \"B\" is destroyed because\nall of its listeners will be removed at that time.</p>\n\n<p>Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Foo', {\n    extend: '<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>',\n\n    initComponent: function () {\n        this.addManagedListener(MyApp.SomeGlobalSharedMenu, 'show', this.doSomething);\n        this.callParent();\n    }\n});\n</code></pre>\n\n<p>As you can see, when an instance of Foo is destroyed, it ensures that the 'show'\nlistener on the menu (<code>MyApp.SomeGlobalSharedMenu</code>) is also removed.</p>\n\n<p>As of version 5.1 it is no longer necessary to use this method in most cases because\nlisteners are automatically managed if the scope object provided to <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a>\nis an Observable instance. However, if the observable instance and scope are not the\nsame object you still need to use <code>mon</code> or <code>addManagedListener</code> if you want the listener\nto be managed.</p>\n","params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item to which to add a listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","html_type":"Object/String"},{"tagname":"params","type":"Function/String","name":"fn","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event\nname, this is the handler function or the name of a method on the specified\n<code>scope</code>.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n","html_type":"Object"}],"return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners = myButton.mon({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["addManagedListener"],"id":"method-addManagedListener","owner":"Ext.mixin.Observable","short_doc":"The addManagedListener method is used when some object (call it \"A\") is listening\nto an event on another observable o..."},{"tagname":"method","name":"afterCommit","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":813}],"doc":"<p>A model instance should call this method on the Store it has been <a href=\"#!/api/Ext.data.Model-method-join\" rel=\"Ext.data.Model-method-join\" class=\"docClass\">joined</a> to.</p>\n","private":true,"params":[{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The model instance that was edited</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"}],"since":"3.4.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":["<a href=\"#!/api/Ext.data.ProxyStore-event-update\" rel=\"Ext.data.ProxyStore-event-update\" class=\"docClass\">update</a>"],"method_calls":["contains","fireEvent","onUpdate"],"id":"method-afterCommit","owner":"Ext.data.ProxyStore","short_doc":"A model instance should call this method on the Store it has been joined to. ..."},{"tagname":"method","name":"afterErase","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":830}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":830,"params":[{"name":"record","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["onErase"],"id":"method-afterErase","owner":"Ext.data.ProxyStore","short_doc":" ..."},{"tagname":"method","name":"afterReject","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":794}],"doc":"<p>A model instance should call this method on the Store it has been <a href=\"#!/api/Ext.data.Model-method-join\" rel=\"Ext.data.Model-method-join\" class=\"docClass\">joined</a> to..</p>\n","private":true,"params":[{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The model instance that was edited</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"}],"since":"3.4.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":["<a href=\"#!/api/Ext.data.ProxyStore-event-update\" rel=\"Ext.data.ProxyStore-event-update\" class=\"docClass\">update</a>"],"method_calls":["contains","fireEvent","onUpdate"],"id":"method-afterReject","owner":"Ext.data.ProxyStore","short_doc":"A model instance should call this method on the Store it has been joined to.. ..."},{"tagname":"method","name":"applyData","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":125}],"doc":"<p>We are using applyData so that we can return nothing and prevent the <code>this.data</code>\nproperty to be overridden.</p>\n","params":[{"tagname":"params","type":"Array/Object","name":"data","doc":"\n","html_type":"Array/Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["createDataCollection"],"id":"method-applyData","owner":"Ext.data.BufferedStore","short_doc":"We are using applyData so that we can return nothing and prevent the this.data\nproperty to be overridden. ..."},{"tagname":"method","name":"applyFields","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":273}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":273,"params":[{"name":"fields","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["getProxy","setModel"],"id":"method-applyFields","owner":"Ext.data.ProxyStore","short_doc":" ..."},{"tagname":"method","name":"applyFilters","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":470}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":470,"params":[{"name":"filters","type":"Object","html_type":"Object"},{"name":"filtersCollection","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["createFiltersCollection","getRemoteFilter","onRemoteFilterSet"],"id":"method-applyFilters","owner":"Ext.data.AbstractStore","short_doc":" ..."},{"tagname":"method","name":"applyGrouper","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":1079}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1079,"params":[{"name":"grouper","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.data.AbstractStore-event-datachanged\" rel=\"Ext.data.AbstractStore-event-datachanged\" class=\"docClass\">datachanged</a>","groupchange","<a href=\"#!/api/Ext.data.AbstractStore-event-refresh\" rel=\"Ext.data.AbstractStore-event-refresh\" class=\"docClass\">refresh</a>"],"method_calls":["getData","group"],"id":"method-applyGrouper","owner":"Ext.data.AbstractStore","short_doc":" ..."},{"tagname":"method","name":"applyModel","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":294}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":294,"params":[{"name":"model","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["getFields","getModel"],"id":"method-applyModel","owner":"Ext.data.ProxyStore","short_doc":" ..."},{"tagname":"method","name":"applyProxy","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":142}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":142,"params":[{"name":"proxy","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["callParent"],"id":"method-applyProxy","owner":"Ext.data.BufferedStore","return":null,"throws":null,"type":null,"overrides":[{"name":"applyProxy","owner":"Ext.data.ProxyStore","link":"<a href=\"#!/api/Ext.data.ProxyStore-method-applyProxy\" rel=\"Ext.data.ProxyStore-method-applyProxy\" class=\"docClass\">Ext.data.ProxyStore.applyProxy</a>"}],"short_doc":" ..."},{"tagname":"method","name":"applySorters","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":501}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":501,"params":[{"name":"sorters","type":"Object","html_type":"Object"},{"name":"sortersCollection","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["createSortersCollection","getRemoteSort","onRemoteSortSet"],"id":"method-applySorters","owner":"Ext.data.AbstractStore","short_doc":" ..."},{"tagname":"method","name":"applyState","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":341}],"doc":"<p>Restores state to the passed state</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":341,"params":[{"name":"state","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["blockLoad","callParent","getAutoLoad","isLoaded","unblockLoad"],"id":"method-applyState","owner":"Ext.data.ProxyStore","overrides":[{"name":"applyState","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-applyState\" rel=\"Ext.data.AbstractStore-method-applyState\" class=\"docClass\">Ext.data.AbstractStore.applyState</a>"}],"return":null,"throws":null,"type":null,"short_doc":"Restores state to the passed state ..."},{"tagname":"method","name":"beginUpdate","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":678}],"doc":"<p>This method may be called to indicate the start of multiple changes to the store.</p>\n\n<p>Automatic synchronization as configured by the <a href=\"#!/api/Ext.data.ProxyStore-cfg-autoSync\" rel=\"Ext.data.ProxyStore-cfg-autoSync\" class=\"docClass\">autoSync</a> flag is deferred\nuntil the <a href=\"#!/api/Ext.data.AbstractStore-method-endUpdate\" rel=\"Ext.data.AbstractStore-method-endUpdate\" class=\"docClass\">endUpdate</a> method is called, so multiple mutations can be coalesced\ninto one synchronization operation.</p>\n\n<p>Internally this method increments a counter that is decremented by <code>endUpdate</code>. It\nis important, therefore, that if you call <code>beginUpdate</code> directly you match that\ncall with a call to <code>endUpdate</code> or you will prevent the collection from updating\nproperly.</p>\n\n<p>For example:</p>\n\n<pre><code> var store = <a href=\"#!/api/Ext.data.StoreManager-method-lookup\" rel=\"Ext.data.StoreManager-method-lookup\" class=\"docClass\">Ext.StoreManager.lookup</a>({\n     //...\n     autoSync: true\n });\n\n store.beginUpdate();\n\n record.set('fieldName', 'newValue');\n\n store.add(item);\n // ...\n\n store.insert(index, otherItem);\n //...\n\n // Interested parties will listen for the endupdate event\n store.endUpdate();\n</code></pre>\n","since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":["<a href=\"#!/api/Ext.data.AbstractStore-event-beginupdate\" rel=\"Ext.data.AbstractStore-event-beginupdate\" class=\"docClass\">beginupdate</a>"],"method_calls":["fireEvent"],"id":"method-beginUpdate","owner":"Ext.data.AbstractStore","short_doc":"This method may be called to indicate the start of multiple changes to the store. ..."},{"tagname":"method","name":"cachePage","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":878}],"doc":"<p>Caches the records in the prefetch and stripes them with their server-side\nindex.</p>\n","private":true,"params":[{"tagname":"params","type":"Ext.data.Model[]","name":"records","doc":"<p>The records to cache</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},{"tagname":"params","type":"Ext.data.operation.Operation","name":"page","doc":"<p>The associated operation</p>\n","html_type":"<a href=\"#!/api/Ext.data.operation.Operation\" rel=\"Ext.data.operation.Operation\" class=\"docClass\">Ext.data.operation.Operation</a>"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":["totalcountchange"],"method_calls":["fireEvent","getData"],"id":"method-cachePage","owner":"Ext.data.BufferedStore","short_doc":"Caches the records in the prefetch and stripes them with their server-side\nindex. ..."},{"tagname":"method","name":"calculatePageCacheSize","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":568}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":568,"params":[{"name":"rangeSizeRequested","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["getData","getLeadingBufferZone","getPageSize","getPurgePageCount","getTrailingBufferZone"],"id":"method-calculatePageCacheSize","owner":"Ext.data.BufferedStore","short_doc":" ..."},{"tagname":"method","name":"callOverridden","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1581}],"doc":"<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n","params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n","html_type":"Array/Arguments"}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the overridden method</p>\n","properties":null,"html_type":"Object"},"protected":true,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-callOverridden","owner":"Ext.Base","short_doc":"Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi..."},{"tagname":"method","name":"callParent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1143}],"doc":"<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10));     // alerts 10\n alert(My.Derived2.method(10)); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n","protected":true,"params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n","html_type":"Array/Arguments"}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the parent method</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-callParent","owner":"Ext.Base","short_doc":"Call the \"parent\" method of the current method. ..."},{"tagname":"method","name":"callSuper","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1258}],"doc":"<p>This method is used by an override to call the superclass method but bypass any\noverridden method. This is often done to \"patch\" a method that contains a bug\nbut for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function () {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     extend: 'Ext.some.Class',\n\n     method: function () {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>Ext.some.DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.patches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function () {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <code>callParent</code> to call the superclass <code>method</code> since\nthat would call the overridden method containing the bug. In other words, the\nabove patch would only produce \"Fixed\" then \"Good\" in the console log, whereas,\nusing <code>callParent</code> would produce \"Fixed\" then \"Bad\" then \"Good\".</p>\n","protected":true,"params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n","html_type":"Array/Arguments"}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the superclass method</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-callSuper","owner":"Ext.Base","short_doc":"This method is used by an override to call the superclass method but bypass any\noverridden method. ..."},{"tagname":"method","name":"captureArgs","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":120}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"o","type":"Object","html_type":"Object"},{"name":"fn","type":"Object","html_type":"Object"},{"name":"scope","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-captureArgs","owner":"Ext.mixin.Observable","short_doc":" ..."},{"tagname":"method","name":"clearAndLoad","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":1067}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1067,"params":[{"name":"options","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.data.BufferedStore-event-beforeload\" rel=\"Ext.data.BufferedStore-event-beforeload\" class=\"docClass\">beforeload</a>","beforeprefetch","cachefilled","cachemiss","<a href=\"#!/api/Ext.data.BufferedStore-event-datachanged\" rel=\"Ext.data.BufferedStore-event-datachanged\" class=\"docClass\">datachanged</a>","guaranteedrange","<a href=\"#!/api/Ext.data.BufferedStore-event-load\" rel=\"Ext.data.BufferedStore-event-load\" class=\"docClass\">load</a>","<a href=\"#!/api/Ext.data.BufferedStore-event-refresh\" rel=\"Ext.data.BufferedStore-event-refresh\" class=\"docClass\">refresh</a>"],"method_calls":["getData","isLoadBlocked","loadPage"],"id":"method-clearAndLoad","owner":"Ext.data.BufferedStore","short_doc":" ..."},{"tagname":"method","name":"clearData","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":376}],"doc":"<p>to be implemented by subclasses</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":376,"params":[{"name":"isLoad","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["getData"],"id":"method-clearData","owner":"Ext.data.BufferedStore","return":null,"throws":null,"type":null,"overrides":[{"name":"clearData","owner":"Ext.data.ProxyStore","link":"<a href=\"#!/api/Ext.data.ProxyStore-method-clearData\" rel=\"Ext.data.ProxyStore-method-clearData\" class=\"docClass\">Ext.data.ProxyStore.clearData</a>"}],"short_doc":"to be implemented by subclasses ..."},{"tagname":"method","name":"clearFilter","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":344}],"doc":"<p>Reverts to a view of the Record cache with no filtering applied.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":344,"params":[],"chainable":false,"fires":[],"method_calls":["callParent","getData"],"id":"method-clearFilter","owner":"Ext.data.BufferedStore","overrides":[{"name":"clearFilter","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-clearFilter\" rel=\"Ext.data.AbstractStore-method-clearFilter\" class=\"docClass\">Ext.data.AbstractStore.clearFilter</a>"}],"short_doc":"Reverts to a view of the Record cache with no filtering applied. ..."},{"tagname":"method","name":"clearGrouping","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":1054}],"doc":"<p>Clear the store grouping</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":["<a href=\"#!/api/Ext.data.AbstractStore-event-datachanged\" rel=\"Ext.data.AbstractStore-event-datachanged\" class=\"docClass\">datachanged</a>","groupchange","<a href=\"#!/api/Ext.data.AbstractStore-event-refresh\" rel=\"Ext.data.AbstractStore-event-refresh\" class=\"docClass\">refresh</a>"],"method_calls":["group"],"id":"method-clearGrouping","owner":"Ext.data.AbstractStore","short_doc":"Clear the store grouping ..."},{"tagname":"method","name":"clearListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1062}],"doc":"<p>Removes all listeners for this object including the managed listeners</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["clearManagedListeners"],"id":"method-clearListeners","owner":"Ext.mixin.Observable","short_doc":"Removes all listeners for this object including the managed listeners ..."},{"tagname":"method","name":"clearManagedListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1096}],"doc":"<p>Removes all managed listeners for this object.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["removeManagedListenerItem"],"id":"method-clearManagedListeners","owner":"Ext.mixin.Observable","short_doc":"Removes all managed listeners for this object. ..."},{"tagname":"method","name":"contains","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":306}],"doc":"<p>Checks if a record is in the current active data set.</p>\n","params":[{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The record</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the record is in the current active data set.</p>\n","properties":null,"html_type":"Boolean"},"id":"method-contains","owner":"Ext.data.AbstractStore","short_doc":"Checks if a record is in the current active data set. ..."},{"tagname":"method","name":"create","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":364}],"doc":"<p>saves any phantom records</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[{"name":"data","type":"Object","html_type":"Object"},{"name":"options","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["createOperation","getModel"],"id":"method-create","owner":"Ext.data.ProxyStore","short_doc":"saves any phantom records ..."},{"tagname":"method","name":"createDataCollection","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":203}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":203,"params":[],"chainable":false,"fires":[],"method_calls":["getPageSize","getPurgePageCount","relayEvents"],"id":"method-createDataCollection","owner":"Ext.data.BufferedStore","short_doc":" ..."},{"tagname":"method","name":"createFiltersCollection","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":153}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":153,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-createFiltersCollection","owner":"Ext.data.BufferedStore","short_doc":" ..."},{"tagname":"method","name":"createRelayer","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1315}],"doc":"<p>Creates an event handling function which re-fires the event from this object as the passed event name.</p>\n","private":true,"params":[{"tagname":"params","type":"String","name":"newName","doc":"<p>The name under which to re-fire the passed parameters.</p>\n","html_type":"String"},{"tagname":"params","type":"Array","name":"beginEnd","optional":true,"doc":"<p>The caller can specify on which indices to slice.</p>\n","html_type":"Array"}],"return":{"type":"Function","name":"return","doc":"\n","properties":null,"html_type":"Function"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-createRelayer","owner":"Ext.mixin.Observable","short_doc":"Creates an event handling function which re-fires the event from this object as the passed event name. ..."},{"tagname":"method","name":"createSortersCollection","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":157}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":157,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-createSortersCollection","owner":"Ext.data.BufferedStore","short_doc":" ..."},{"tagname":"method","name":"destroy","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":838}],"doc":"<p>This method is called to cleanup an object and its resources. After calling\nthis method, the object should not be used any further.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":838,"params":[],"chainable":false,"fires":[],"method_calls":["callParent","clearListeners","getStoreId","onDestroy"],"id":"method-destroy","owner":"Ext.data.AbstractStore","overrides":[{"name":"destroy","owner":"Ext.Base","link":"<a href=\"#!/api/Ext.Base-method-destroy\" rel=\"Ext.Base-method-destroy\" class=\"docClass\">Ext.Base.destroy</a>"}],"protected":true,"short_doc":"This method is called to cleanup an object and its resources. ..."},{"tagname":"method","name":"doFireEvent","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":652}],"doc":"<p>Continue to fire event.</p>\n","private":true,"params":[{"tagname":"params","type":"String","name":"eventName","doc":"\n","html_type":"String"},{"tagname":"params","type":"Array","name":"args","doc":"\n","html_type":"Array"},{"tagname":"params","type":"Boolean","name":"bubbles","doc":"\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getBubbleParent"],"id":"method-doFireEvent","owner":"Ext.mixin.Observable","short_doc":"Continue to fire event. ..."},{"tagname":"method","name":"enableBubble","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1329}],"doc":"<p>Enables events fired by this Observable to bubble up an owner hierarchy by calling <code>this.getBubbleTarget()</code> if\npresent. There is no implementation in the Observable base class.</p>\n\n<p>This is commonly used by Ext.Components to bubble events to owner Containers.\nSee <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>. The default implementation in <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> returns the\nComponent's immediate owner. But if a known target is required, this can be overridden to access the\nrequired target more quickly.</p>\n\n<p>Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.overrides.form.field.Base', {\n    override: '<a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a>',\n\n    //  Add functionality to Field's initComponent to enable the change event to bubble\n    initComponent: function () {\n        this.callParent();\n        this.enableBubble('change');\n    }\n});\n\nvar myForm = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.form.Panel\" rel=\"Ext.form.Panel\" class=\"docClass\">Ext.form.Panel</a>', {\n    title: 'User Details',\n    items: [{\n        ...\n    }],\n    listeners: {\n        change: function() {\n            // Title goes red if form has been modified.\n            myForm.header.setStyle('color', 'red');\n        }\n    }\n});\n</code></pre>\n","params":[{"tagname":"params","type":"String/String[]","name":"eventNames","doc":"<p>The event name to bubble, or an Array of event names.</p>\n","html_type":"String/String[]"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["_initEvent"],"id":"method-enableBubble","owner":"Ext.mixin.Observable","short_doc":"Enables events fired by this Observable to bubble up an owner hierarchy by calling this.getBubbleTarget() if\npresent. ..."},{"tagname":"method","name":"endUpdate","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":718}],"doc":"<p>This method is called after modifications are complete on a store. For details\nsee <code><a href=\"#!/api/Ext.data.AbstractStore-method-beginUpdate\" rel=\"Ext.data.AbstractStore-method-beginUpdate\" class=\"docClass\">beginUpdate</a></code>.</p>\n","since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":["beforesync","<a href=\"#!/api/Ext.data.AbstractStore-event-endupdate\" rel=\"Ext.data.AbstractStore-event-endupdate\" class=\"docClass\">endupdate</a>"],"method_calls":["fireEvent","onEndUpdate"],"id":"method-endUpdate","owner":"Ext.data.AbstractStore","short_doc":"This method is called after modifications are complete on a store. ..."},{"tagname":"method","name":"erase","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":448}],"doc":"<p>tells the attached proxy to destroy the given records</p>\n","since":"3.4.0","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[{"name":"options","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["createOperation","getRemovedRecords"],"id":"method-erase","owner":"Ext.data.ProxyStore","short_doc":"tells the attached proxy to destroy the given records ..."},{"tagname":"method","name":"filter","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":330}],"doc":"<p>Filters the data in the Store by one or more fields. Example usage:</p>\n\n<pre><code>//filter with a single field\nmyStore.filter('firstName', 'Don');\n\n//filtering with multiple filters\nmyStore.filter([\n    {\n        property : 'firstName',\n        value    : 'Don'\n    },\n    {\n        property : 'lastName',\n        direction: 'Griffin'\n    }\n]);\n</code></pre>\n\n<p>Internally, Store converts the passed arguments into an array of <a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a> instances, and delegates\nthe actual filtering to its internal <a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":330,"params":[],"chainable":false,"fires":[],"method_calls":["callParent","getData","getRemoteFilter"],"id":"method-filter","owner":"Ext.data.BufferedStore","return":{"type":"Ext.util.Filter[]","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a>[]"},"overrides":[{"name":"filter","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-filter\" rel=\"Ext.data.AbstractStore-method-filter\" class=\"docClass\">Ext.data.AbstractStore.filter</a>"}],"short_doc":"Filters the data in the Store by one or more fields. ..."},{"tagname":"method","name":"filterBy","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":352}],"doc":"<p>Filters by a function. The specified function will be called for each\nRecord in this Store. If the function returns <code>true</code> the Record is included,\notherwise it is filtered out.</p>\n\n<p>When store is filtered, most of the methods for accessing store data will be working only\nwithin the set of filtered records. The notable exception is <a href=\"#!/api/Ext.data.BufferedStore-method-getById\" rel=\"Ext.data.BufferedStore-method-getById\" class=\"docClass\">getById</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":352,"params":[{"name":"fn","type":"Object","html_type":"Object"},{"name":"scope","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["getFilters"],"id":"method-filterBy","owner":"Ext.data.BufferedStore","overrides":[{"name":"filterBy","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-filterBy\" rel=\"Ext.data.AbstractStore-method-filterBy\" class=\"docClass\">Ext.data.AbstractStore.filterBy</a>"}],"short_doc":"Filters by a function. ..."},{"tagname":"method","name":"filterNew","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":510}],"doc":"<p>Filter function for new records.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"item","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-filterNew","owner":"Ext.data.ProxyStore","short_doc":"Filter function for new records. ..."},{"tagname":"method","name":"filterUpdated","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":546}],"doc":"<p>Filter function for updated records.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"item","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-filterUpdated","owner":"Ext.data.ProxyStore","short_doc":"Filter function for updated records. ..."},{"tagname":"method","name":"find","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":313}],"doc":"<p>Finds the index of the first matching Record in this store by a specific field value.</p>\n\n<p>When store is filtered, finds records only within filter.</p>\n\n<p>**IMPORTANT</p>\n\n<p>If this store is <a href=\"#!/api/Ext.data.BufferedStore\" rel=\"Ext.data.BufferedStore\" class=\"docClass\">Buffered</a>, this can ONLY find records which happen to be cached in the page cache.\nThis will be parts of the dataset around the currently visible zone, or recently visited zones if the pages\nhave not yet been purged from the cache.**</p>\n","params":[{"tagname":"params","type":"String","name":"property","doc":"<p>The name of the Record field to test.</p>\n","html_type":"String"},{"tagname":"params","type":"String/RegExp","name":"value","doc":"<p>Either a string that the field value\nshould begin with, or a RegExp to test against the field.</p>\n","html_type":"String/RegExp"},{"tagname":"params","type":"Number","name":"startIndex","default":"0","optional":true,"doc":"<p>The index to start searching at</p>\n","html_type":"Number"},{"tagname":"params","type":"Boolean","name":"anyMatch","default":"false","optional":true,"doc":"<p>True to match any part of the string, not just the\nbeginning.</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"caseSensitive","default":"false","optional":true,"doc":"<p>True for case sensitive comparison</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"exactMatch","default":"false","optional":true,"doc":"<p>True to force exact match (^ and $ characters\nadded to the regex). Ignored if <code>anyMatch</code> is <code>true</code>.</p>\n","html_type":"Boolean"}],"return":{"type":"Number","name":"return","doc":"<p>The matched index or -1</p>\n","properties":null,"html_type":"Number"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getData"],"id":"method-find","owner":"Ext.data.AbstractStore","short_doc":"Finds the index of the first matching Record in this store by a specific field value. ..."},{"tagname":"method","name":"findBy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":399}],"doc":"<p>Find the index of the first matching Record in this Store by a function.\nIf the function returns <code>true</code> it is considered a match.</p>\n\n<p>When store is filtered, finds records only within filter.</p>\n\n<p>**IMPORTANT</p>\n\n<p>If this store is <a href=\"#!/api/Ext.data.BufferedStore\" rel=\"Ext.data.BufferedStore\" class=\"docClass\">Buffered</a>, this can ONLY find records which happen to be cached in the page cache.\nThis will be parts of the dataset around the currently visible zone, or recently visited zones if the pages\nhave not yet been purged from the cache.**</p>\n","params":[{"tagname":"params","type":"Function","name":"fn","doc":"<p>The function to be called. It will be passed the following parameters:</p>\n","properties":[{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The record to test for filtering. Access field values\n using <a href=\"#!/api/Ext.data.Model-method-get\" rel=\"Ext.data.Model-method-get\" class=\"docClass\">Ext.data.Model.get</a>.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},{"tagname":"params","type":"Object","name":"id","doc":"<p>The ID of the Record passed.</p>\n","html_type":"Object"}],"html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (this reference) in which the function is executed.\nDefaults to this Store.</p>\n","html_type":"Object"},{"tagname":"params","type":"Number","name":"startIndex","default":"0","optional":true,"doc":"<p>The index to start searching at</p>\n","html_type":"Number"}],"return":{"type":"Number","name":"return","doc":"<p>The matched index or -1</p>\n","properties":null,"html_type":"Number"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getData"],"id":"method-findBy","owner":"Ext.data.AbstractStore","short_doc":"Find the index of the first matching Record in this Store by a function. ..."},{"tagname":"method","name":"findExact","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":377}],"doc":"<p>Finds the index of the first matching Record in this store by a specific field value.</p>\n\n<p>When store is filtered, finds records only within filter.</p>\n\n<p>**IMPORTANT</p>\n\n<p>If this store is <a href=\"#!/api/Ext.data.BufferedStore\" rel=\"Ext.data.BufferedStore\" class=\"docClass\">Buffered</a>, this can ONLY find records which happen to be cached in the page cache.\nThis will be parts of the dataset around the currently visible zone, or recently visited zones if the pages\nhave not yet been purged from the cache.**</p>\n","params":[{"tagname":"params","type":"String","name":"fieldName","doc":"<p>The name of the Record field to test.</p>\n","html_type":"String"},{"tagname":"params","type":"Object","name":"value","doc":"<p>The value to match the field against.</p>\n","html_type":"Object"},{"tagname":"params","type":"Number","name":"startIndex","default":"0","optional":true,"doc":"<p>The index to start searching at</p>\n","html_type":"Number"}],"return":{"type":"Number","name":"return","doc":"<p>The matched index or -1</p>\n","properties":null,"html_type":"Number"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getData"],"id":"method-findExact","owner":"Ext.data.AbstractStore","short_doc":"Finds the index of the first matching Record in this store by a specific field value. ..."},{"tagname":"method","name":"findRecord","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":349}],"doc":"<p>Finds the first matching Record in this store by a specific field value.</p>\n\n<p>When store is filtered, finds records only within filter.</p>\n\n<p>**IMPORTANT</p>\n\n<p>If this store is <a href=\"#!/api/Ext.data.BufferedStore\" rel=\"Ext.data.BufferedStore\" class=\"docClass\">Buffered</a>, this can ONLY find records which happen to be cached in the page cache.\nThis will be parts of the dataset around the currently visible zone, or recently visited zones if the pages\nhave not yet been purged from the cache.**</p>\n","params":[{"tagname":"params","type":"String","name":"fieldName","doc":"<p>The name of the Record field to test.</p>\n","html_type":"String"},{"tagname":"params","type":"String/RegExp","name":"value","doc":"<p>Either a string that the field value\nshould begin with, or a RegExp to test against the field.</p>\n","html_type":"String/RegExp"},{"tagname":"params","type":"Number","name":"startIndex","default":"0","optional":true,"doc":"<p>The index to start searching at</p>\n","html_type":"Number"},{"tagname":"params","type":"Boolean","name":"anyMatch","default":"false","optional":true,"doc":"<p>True to match any part of the string, not just the\nbeginning.</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"caseSensitive","default":"false","optional":true,"doc":"<p>True for case sensitive comparison</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"exactMatch","default":"false","optional":true,"doc":"<p>True to force exact match (^ and $ characters\nadded to the regex). Ignored if <code>anyMatch</code> is <code>true</code>.</p>\n","html_type":"Boolean"}],"return":{"type":"Ext.data.Model","name":"return","doc":"<p>The matched record or null</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getAt"],"id":"method-findRecord","owner":"Ext.data.AbstractStore","short_doc":"Finds the first matching Record in this store by a specific field value. ..."},{"tagname":"method","name":"fireAction","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":614}],"doc":"<p>Fires the specified event with the passed parameters and executes a function (action).\nBy default, the action function will be executed after any \"before\" event handlers\n(as specified using the <code>order</code> option of <code><a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a></code>), but before any\nother handlers are fired.  This gives the \"before\" handlers an opportunity to\ncancel the event by returning <code>false</code>, and prevent the action function from being\ncalled.</p>\n\n<p>The action can also be configured to run after normal handlers, but before any \"after\"\nhandlers (as specified using the <code>order</code> event option) by passing <code>'after'</code>\nas the <code>order</code> parameter.  This configuration gives any event handlers except\nfor \"after\" handlers the opportunity to cancel the event and prevent the action\nfunction from being called.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n","html_type":"String"},{"tagname":"params","type":"Array","name":"args","doc":"<p>Arguments to pass to handlers and to the action function.</p>\n","html_type":"Array"},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The action function.</p>\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>Event options for the action function.  Accepts any\nof the options of <code><a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a></code></p>\n","html_type":"Object"},{"tagname":"params","type":"String","name":"order","default":"'before'","optional":true,"doc":"<p>The order to call the action function relative\ntoo the event handlers (<code>'before'</code> or <code>'after'</code>).  Note that this option is\nsimply used to sort the action function relative to the event handlers by \"priority\".\nAn order of <code>'before'</code> is equivalent to a priority of <code>99.5</code>, while an order of\n<code>'after'</code> is equivalent to a priority of <code>-99.5</code>.  See the <code>priority</code> option\nof <code><a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a></code> for more details.</p>\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["doAddListener","fireEventArgs"],"id":"method-fireAction","owner":"Ext.mixin.Observable","short_doc":"Fires the specified event with the passed parameters and executes a function (action). ..."},{"tagname":"method","name":"fireEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":550}],"doc":"<p>Fires the specified event with the passed parameters (minus the event name, plus the <code>options</code> object passed\nto <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a>).</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy (See <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by\ncalling <a href=\"#!/api/Ext.mixin.Observable-method-enableBubble\" rel=\"Ext.mixin.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n","html_type":"String"},{"tagname":"params","type":"Object...","name":"args","doc":"<p>Variable number of parameters are passed to handlers.</p>\n","html_type":"Object..."}],"return":{"type":"Boolean","name":"return","doc":"<p>returns false if any of the handlers return false otherwise it returns true.</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["fireEventArgs"],"id":"method-fireEvent","owner":"Ext.mixin.Observable","short_doc":"Fires the specified event with the passed parameters (minus the event name, plus the options object passed\nto addList..."},{"tagname":"method","name":"fireEventArgs","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":588}],"doc":"<p>Fires the specified event with the passed parameter list.</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy (See <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by\ncalling <a href=\"#!/api/Ext.mixin.Observable-method-enableBubble\" rel=\"Ext.mixin.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n","html_type":"String"},{"tagname":"params","type":"Object[]","name":"args","doc":"<p>An array of parameters which are passed to handlers.</p>\n","html_type":"Object[]"}],"return":{"type":"Boolean","name":"return","doc":"<p>returns false if any of the handlers return false otherwise it returns true.</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["doFireEvent"],"id":"method-fireEventArgs","owner":"Ext.mixin.Observable","short_doc":"Fires the specified event with the passed parameter list. ..."},{"tagname":"method","name":"fireGroupChange","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":1050}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1050,"params":[],"chainable":false,"fires":["groupchange"],"method_calls":["fireEvent","getGrouper"],"id":"method-fireGroupChange","owner":"Ext.data.AbstractStore","short_doc":" ..."},{"tagname":"method","name":"getAt","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":477}],"doc":"<p>Get the Record at the specified index.</p>\n\n<p>The index is effected by filtering.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"Number","name":"index","doc":"<p>The index of the Record to find.</p>\n","html_type":"Number"}],"chainable":false,"fires":[],"method_calls":["getData"],"id":"method-getAt","owner":"Ext.data.BufferedStore","return":{"type":"Ext.data.Model","name":"return","doc":"<p>The Record at the passed index. Returns null if not found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},"throws":null,"type":null,"overrides":[{"name":"getAt","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-getAt\" rel=\"Ext.data.AbstractStore-method-getAt\" class=\"docClass\">Ext.data.AbstractStore.getAt</a>"}],"short_doc":"Get the Record at the specified index. ..."},{"tagname":"method","name":"getAutoDestroy","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.AbstractStore-cfg-autoDestroy\" rel=\"Ext.data.AbstractStore-cfg-autoDestroy\" class=\"docClass\">autoDestroy</a>.</p>\n","params":[],"return":{"type":"Boolean","doc":"\n","html_type":"Boolean"},"id":"method-getAutoDestroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":45}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.AbstractStore","short_doc":"Returns the value of autoDestroy. ..."},{"tagname":"method","name":"getAutoLoad","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.ProxyStore-cfg-autoLoad\" rel=\"Ext.data.ProxyStore-cfg-autoLoad\" class=\"docClass\">autoLoad</a>.</p>\n","params":[],"return":{"type":"Boolean/Object","doc":"\n","html_type":"Boolean/Object"},"id":"method-getAutoLoad","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":70}],"properties":null,"since":"2.3.0","static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.ProxyStore","short_doc":"Returns the value of autoLoad. ..."},{"tagname":"method","name":"getAutoLoadDelay","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.ProxyStore-cfg-autoLoadDelay\" rel=\"Ext.data.ProxyStore-cfg-autoLoadDelay\" class=\"docClass\">autoLoadDelay</a>.</p>\n","params":[],"return":{"type":"Number","doc":"\n","html_type":"Number"},"id":"method-getAutoLoadDelay","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":112}],"private":true,"static":null,"inheritable":null,"linenr":null,"owner":"Ext.data.ProxyStore","short_doc":"Returns the value of autoLoadDelay. ..."},{"tagname":"method","name":"getAutoSync","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.ProxyStore-cfg-autoSync\" rel=\"Ext.data.ProxyStore-cfg-autoSync\" class=\"docClass\">autoSync</a>.</p>\n","params":[],"return":{"type":"Boolean","doc":"\n","html_type":"Boolean"},"id":"method-getAutoSync","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":83}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.ProxyStore","short_doc":"Returns the value of autoSync. ..."},{"tagname":"method","name":"getBatchListeners","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":649}],"doc":"<p>Returns an object which is passed in as the listeners argument to proxy.batch inside this.sync.\nThis is broken out into a separate function to allow for customisation of the listeners</p>\n","private":true,"return":{"type":"Object","name":"return","doc":"<p>The listeners object</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getBatchListeners","owner":"Ext.data.ProxyStore","short_doc":"Returns an object which is passed in as the listeners argument to proxy.batch inside this.sync. ..."},{"tagname":"method","name":"getBatchUpdateMode","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.ProxyStore-cfg-batchUpdateMode\" rel=\"Ext.data.ProxyStore-cfg-batchUpdateMode\" class=\"docClass\">batchUpdateMode</a>.</p>\n","params":[],"return":{"type":"String","doc":"\n","html_type":"String"},"id":"method-getBatchUpdateMode","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":89}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.ProxyStore","short_doc":"Returns the value of batchUpdateMode. ..."},{"tagname":"method","name":"getBubbleParent","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":685}],"doc":"<p>Gets the bubbling parent for an Observable</p>\n","private":true,"return":{"type":"Ext.util.Observable","name":"return","doc":"<p>The bubble parent. null is returned if no bubble target exists</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getBubbleTarget"],"id":"method-getBubbleParent","owner":"Ext.mixin.Observable","short_doc":"Gets the bubbling parent for an Observable ..."},{"tagname":"method","name":"getById","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":461}],"doc":"<p>Get the Record with the specified id.</p>\n\n<p>This method is not affected by filtering, lookup will be performed from all records\ninside the store, filtered or not.</p>\n","params":[{"tagname":"params","type":"Mixed","name":"id","doc":"<p>The id of the Record to find.</p>\n","html_type":"Mixed"}],"return":{"type":"Ext.data.Model","name":"return","doc":"<p>The Record with the passed id. Returns null if not found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getById","owner":"Ext.data.BufferedStore","overrides":[{"name":"getById","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-getById\" rel=\"Ext.data.AbstractStore-method-getById\" class=\"docClass\">Ext.data.AbstractStore.getById</a>"}],"short_doc":"Get the Record with the specified id. ..."},{"tagname":"method","name":"getByInternalId","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":488}],"doc":"<p>Get the Record with the specified internalId.</p>\n\n<p>This method is not effected by filtering, lookup will be performed from all records\ninside the store, filtered or not.</p>\n","private":true,"params":[{"tagname":"params","type":"Mixed","name":"internalId","doc":"<p>The id of the Record to find.</p>\n","html_type":"Mixed"}],"return":{"type":"Ext.data.Model","name":"return","doc":"<p>The Record with the passed internalId. Returns null if not found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getByInternalId","owner":"Ext.data.BufferedStore","short_doc":"Get the Record with the specified internalId. ..."},{"tagname":"method","name":"getConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1431}],"doc":"<p>Returns a specified config property value. If the name parameter is not passed,\nall current configuration options will be returned as key value pairs.</p>\n","params":[{"tagname":"params","type":"String","name":"name","optional":true,"doc":"<p>The name of the config property to get.</p>\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"peek","default":"false","optional":true,"doc":"<p><code>true</code> to peek at the raw value without calling the getter.</p>\n","html_type":"Boolean"}],"return":{"type":"Object","name":"return","doc":"<p>The config property value.</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-getConfig","owner":"Ext.Base","short_doc":"Returns a specified config property value. ..."},{"tagname":"method","name":"getCount","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":385}],"doc":"<p>A BufferedStore always reports that it contains the full dataset.\nIf it is not paged, it encapsulates the full dataset.\nThe number of records that happen to be cached at any one time is never useful.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getCount","owner":"Ext.data.BufferedStore","overrides":[{"name":"getCount","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-getCount\" rel=\"Ext.data.AbstractStore-method-getCount\" class=\"docClass\">Ext.data.AbstractStore.getCount</a>"}],"short_doc":"A BufferedStore always reports that it contains the full dataset. ..."},{"tagname":"method","name":"getCurrentConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1471}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getConfigurator"],"id":"method-getCurrentConfig","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"getData","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.BufferedStore-cfg-data\" rel=\"Ext.data.BufferedStore-cfg-data\" class=\"docClass\">data</a>.</p>\n","params":[],"return":{"type":"Number","doc":"\n","html_type":"Number"},"id":"method-getData","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":74}],"static":null,"private":null,"inheritable":null,"linenr":74,"owner":"Ext.data.BufferedStore","short_doc":"Returns the value of data. ..."},{"tagname":"method","name":"getDefaultViewSize","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.BufferedStore-cfg-defaultViewSize\" rel=\"Ext.data.BufferedStore-cfg-defaultViewSize\" class=\"docClass\">defaultViewSize</a>.</p>\n","params":[],"return":{"type":"Number","doc":"\n","html_type":"Number"},"id":"method-getDefaultViewSize","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":106}],"properties":null,"private":true,"static":null,"inheritable":null,"linenr":null,"owner":"Ext.data.BufferedStore","short_doc":"Returns the value of defaultViewSize. ..."},{"tagname":"method","name":"getFields","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.ProxyStore-cfg-fields\" rel=\"Ext.data.ProxyStore-cfg-fields\" class=\"docClass\">fields</a>.</p>\n","params":[],"return":{"type":"Object[]","doc":"\n","html_type":"Object[]"},"id":"method-getFields","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":49}],"properties":null,"since":"2.3.0","static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.ProxyStore","short_doc":"Returns the value of fields. ..."},{"tagname":"method","name":"getFilters","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":978}],"doc":"<p>The current <a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">filters</a> applied to the store.</p>\n","return":{"type":"Ext.util.Collection","name":"return","doc":"<p>The collection of filters applied to the\nstore</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"},"params":[],"id":"method-getFilters","owner":"Ext.data.AbstractStore","short_doc":"The current filters applied to the store. ..."},{"tagname":"method","name":"getGroupDir","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.AbstractStore-cfg-groupDir\" rel=\"Ext.data.AbstractStore-cfg-groupDir\" class=\"docClass\">groupDir</a>.</p>\n","params":[],"return":{"type":"String","doc":"\n","html_type":"String"},"id":"method-getGroupDir","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":100}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.AbstractStore","short_doc":"Returns the value of groupDir. ..."},{"tagname":"method","name":"getGroupField","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":1061}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1061,"params":[],"chainable":false,"fires":[],"method_calls":["getGrouper"],"id":"method-getGroupField","owner":"Ext.data.AbstractStore","short_doc":" ..."},{"tagname":"method","name":"getGrouper","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":195}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.BufferedStore-cfg-grouper\" rel=\"Ext.data.BufferedStore-cfg-grouper\" class=\"docClass\">grouper</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":195,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getGrouper","owner":"Ext.data.BufferedStore","return":{"type":"Object/Ext.util.Grouper","doc":"\n","html_type":"Object/<a href=\"#!/api/Ext.util.Grouper\" rel=\"Ext.util.Grouper\" class=\"docClass\">Ext.util.Grouper</a>"},"properties":null,"overrides":[{"name":"getGrouper","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-getGrouper\" rel=\"Ext.data.AbstractStore-method-getGrouper\" class=\"docClass\">Ext.data.AbstractStore.getGrouper</a>"}],"short_doc":"Returns the value of grouper. ..."},{"tagname":"method","name":"getGroups","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":1084}],"doc":"<p>Returns a collection of readonly sub-collections of your store's records\nwith grouping applied. These sub-collections are maintained internally by\nthe collection.</p>\n\n<p>See <a href=\"#!/api/Ext.data.AbstractStore-cfg-groupField\" rel=\"Ext.data.AbstractStore-cfg-groupField\" class=\"docClass\">groupField</a>, <a href=\"#!/api/Ext.data.AbstractStore-cfg-groupDir\" rel=\"Ext.data.AbstractStore-cfg-groupDir\" class=\"docClass\">groupDir</a>. Example for a store\ncontaining records with a color field:</p>\n\n<pre><code>var myStore = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>', {\n    groupField: 'color',\n    groupDir  : 'DESC'\n});\n\nmyStore.getGroups(); \n</code></pre>\n\n<p>The above should result in the following format:</p>\n\n<pre><code>[\n    {\n        name: 'yellow',\n        children: [\n            // all records where the color field is 'yellow'\n        ]\n    },\n    {\n        name: 'red',\n        children: [\n            // all records where the color field is 'red'\n        ]\n    }\n]\n</code></pre>\n\n<p>Group contents are effected by filtering.</p>\n","return":{"type":"Ext.util.Collection","name":"return","doc":"<p>The grouped data</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getData"],"id":"method-getGroups","owner":"Ext.data.AbstractStore","short_doc":"Returns a collection of readonly sub-collections of your store's records\nwith grouping applied. ..."},{"tagname":"method","name":"getInitialConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1488}],"doc":"<p>Returns the initial configuration passed to constructor when instantiating\nthis class.</p>\n","params":[{"tagname":"params","type":"String","name":"name","optional":true,"doc":"<p>Name of the config option to return.</p>\n","html_type":"String"}],"return":{"type":"Object/Mixed","name":"return","doc":"<p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n","properties":null,"html_type":"Object/Mixed"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getInitialConfig","owner":"Ext.Base","short_doc":"Returns the initial configuration passed to constructor when instantiating\nthis class. ..."},{"tagname":"method","name":"getLeadingBufferZone","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.BufferedStore-cfg-leadingBufferZone\" rel=\"Ext.data.BufferedStore-cfg-leadingBufferZone\" class=\"docClass\">leadingBufferZone</a>.</p>\n","params":[],"return":{"type":"Number","doc":"\n","html_type":"Number"},"id":"method-getLeadingBufferZone","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":99}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.BufferedStore","short_doc":"Returns the value of leadingBufferZone. ..."},{"tagname":"method","name":"getModel","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.ProxyStore-cfg-model\" rel=\"Ext.data.ProxyStore-cfg-model\" class=\"docClass\">model</a>.</p>\n","params":[],"return":{"type":"String/Ext.data.Model","doc":"\n","html_type":"String/<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},"id":"method-getModel","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":37}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.ProxyStore","short_doc":"Returns the value of model. ..."},{"tagname":"method","name":"getModifiedRecords","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":536}],"doc":"<p>Gets all <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">records</a> added or updated since the last commit. Note that the order of records\nreturned is not deterministic and does not indicate the order in which records were modified. Note also that\nremoved records are not included (use <a href=\"#!/api/Ext.data.ProxyStore-method-getRemovedRecords\" rel=\"Ext.data.ProxyStore-method-getRemovedRecords\" class=\"docClass\">getRemovedRecords</a> for that).</p>\n","return":{"type":"Ext.data.Model[]","name":"return","doc":"<p>The added and updated Model instances</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getNewRecords","getUpdatedRecords"],"id":"method-getModifiedRecords","owner":"Ext.data.ProxyStore","short_doc":"Gets all records added or updated since the last commit. ..."},{"tagname":"method","name":"getNewRecords","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":519}],"doc":"<p>Returns all Model instances that are either currently a phantom (e.g. have no id), or have an ID but have not\nyet been saved on this Store (this happens when adding a non-phantom record from another Store into this one)</p>\n","return":{"type":"Ext.data.Model[]","name":"return","doc":"<p>The Model instances</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getNewRecords","owner":"Ext.data.ProxyStore","short_doc":"Returns all Model instances that are either currently a phantom (e.g. ..."},{"tagname":"method","name":"getPageFromRecordIndex","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":559}],"doc":"<p>Determines the page from a record index</p>\n","params":[{"tagname":"params","type":"Number","name":"index","doc":"<p>The record index</p>\n","html_type":"Number"}],"return":{"type":"Number","name":"return","doc":"<p>The page the record belongs to</p>\n","properties":null,"html_type":"Number"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getPageSize"],"id":"method-getPageFromRecordIndex","owner":"Ext.data.BufferedStore","short_doc":"Determines the page from a record index ..."},{"tagname":"method","name":"getPageSize","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.BufferedStore-cfg-pageSize\" rel=\"Ext.data.BufferedStore-cfg-pageSize\" class=\"docClass\">pageSize</a>.</p>\n","params":[],"return":{"type":"Number","doc":"\n","html_type":"Number"},"id":"method-getPageSize","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":75}],"static":null,"private":null,"inheritable":null,"linenr":75,"owner":"Ext.data.BufferedStore","overrides":[{"name":"getPageSize","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-getPageSize\" rel=\"Ext.data.AbstractStore-method-getPageSize\" class=\"docClass\">Ext.data.AbstractStore.getPageSize</a>"}],"short_doc":"Returns the value of pageSize. ..."},{"tagname":"method","name":"getProxy","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.ProxyStore-cfg-proxy\" rel=\"Ext.data.ProxyStore-cfg-proxy\" class=\"docClass\">proxy</a>.</p>\n","params":[],"return":{"type":"String/Ext.data.proxy.Proxy/Object","doc":"\n","html_type":"String/<a href=\"#!/api/Ext.data.proxy.Proxy\" rel=\"Ext.data.proxy.Proxy\" class=\"docClass\">Ext.data.proxy.Proxy</a>/Object"},"id":"method-getProxy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":62}],"properties":null,"since":"1.1.0","static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.ProxyStore","short_doc":"Returns the value of proxy. ..."},{"tagname":"method","name":"getPurgePageCount","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.BufferedStore-cfg-purgePageCount\" rel=\"Ext.data.BufferedStore-cfg-purgePageCount\" class=\"docClass\">purgePageCount</a>.</p>\n","params":[],"return":{"type":"Number","doc":"\n","html_type":"Number"},"id":"method-getPurgePageCount","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":79}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.BufferedStore","short_doc":"Returns the value of purgePageCount. ..."},{"tagname":"method","name":"getRange","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":396}],"doc":"<p>Gathers a range of Records between specified indices.</p>\n\n<p>This method is affected by filtering.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":396,"params":[{"name":"start","type":"Object","html_type":"Object"},{"name":"end","type":"Object","html_type":"Object"},{"name":"options","type":"Object","html_type":"Object"}],"chainable":false,"fires":["beforeprefetch","cachefilled","cachemiss","guaranteedrange"],"method_calls":["fireEvent","getData","getPageFromRecordIndex","onRangeAvailable","prefetchRange","primeCache","rangeCached"],"id":"method-getRange","owner":"Ext.data.BufferedStore","return":{"type":"Ext.data.Model[]","name":"return","doc":"<p>An array of records.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},"overrides":[{"name":"getRange","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-getRange\" rel=\"Ext.data.AbstractStore-method-getRange\" class=\"docClass\">Ext.data.AbstractStore.getRange</a>"}],"short_doc":"Gathers a range of Records between specified indices. ..."},{"tagname":"method","name":"getRemoteFilter","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.BufferedStore-cfg-remoteFilter\" rel=\"Ext.data.BufferedStore-cfg-remoteFilter\" class=\"docClass\">remoteFilter</a>.</p>\n","params":[],"return":{"type":"Boolean","doc":"\n","html_type":"Boolean"},"id":"method-getRemoteFilter","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":77}],"static":null,"private":null,"inheritable":null,"linenr":77,"owner":"Ext.data.BufferedStore","overrides":[{"name":"getRemoteFilter","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-getRemoteFilter\" rel=\"Ext.data.AbstractStore-method-getRemoteFilter\" class=\"docClass\">Ext.data.AbstractStore.getRemoteFilter</a>"}],"short_doc":"Returns the value of remoteFilter. ..."},{"tagname":"method","name":"getRemoteSort","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.BufferedStore-cfg-remoteSort\" rel=\"Ext.data.BufferedStore-cfg-remoteSort\" class=\"docClass\">remoteSort</a>.</p>\n","params":[],"return":{"type":"Boolean","doc":"\n","html_type":"Boolean"},"id":"method-getRemoteSort","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":76}],"static":null,"private":null,"inheritable":null,"linenr":76,"owner":"Ext.data.BufferedStore","overrides":[{"name":"getRemoteSort","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-getRemoteSort\" rel=\"Ext.data.AbstractStore-method-getRemoteSort\" class=\"docClass\">Ext.data.AbstractStore.getRemoteSort</a>"}],"short_doc":"Returns the value of remoteSort. ..."},{"tagname":"method","name":"getRemovedRecords","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":555}],"doc":"<p>Returns any records that have been removed from the store but not yet destroyed on the proxy.</p>\n","return":{"type":"Ext.data.Model[]","name":"return","doc":"<p>The removed Model instances</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getRemovedRecords","owner":"Ext.data.ProxyStore","short_doc":"Returns any records that have been removed from the store but not yet destroyed on the proxy. ..."},{"tagname":"method","name":"getSortOnLoad","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.BufferedStore-cfg-sortOnLoad\" rel=\"Ext.data.BufferedStore-cfg-sortOnLoad\" class=\"docClass\">sortOnLoad</a>.</p>\n","params":[],"return":{"type":"Boolean","doc":"\n","html_type":"Boolean"},"id":"method-getSortOnLoad","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":78}],"static":null,"private":null,"inheritable":null,"linenr":78,"owner":"Ext.data.BufferedStore","overrides":[{"name":"getSortOnLoad","owner":"Ext.data.ProxyStore","link":"<a href=\"#!/api/Ext.data.ProxyStore-method-getSortOnLoad\" rel=\"Ext.data.ProxyStore-method-getSortOnLoad\" class=\"docClass\">Ext.data.ProxyStore.getSortOnLoad</a>"}],"short_doc":"Returns the value of sortOnLoad. ..."},{"tagname":"method","name":"getSorters","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":990}],"doc":"<p>The current <a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">sorters</a> applied to the store.</p>\n","return":{"type":"Ext.util.Collection","name":"return","doc":"<p>The collection of sorters applied to the\nstore</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"},"params":[],"id":"method-getSorters","owner":"Ext.data.AbstractStore","short_doc":"The current sorters applied to the store. ..."},{"tagname":"method","name":"getState","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":730}],"doc":"<p>Returns the grouping, sorting and filtered state of this Store.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getFilters","getGrouper","getSorters"],"id":"method-getState","owner":"Ext.data.AbstractStore","short_doc":"Returns the grouping, sorting and filtered state of this Store. ..."},{"tagname":"method","name":"getStatefulFilters","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.AbstractStore-cfg-statefulFilters\" rel=\"Ext.data.AbstractStore-cfg-statefulFilters\" class=\"docClass\">statefulFilters</a>.</p>\n","params":[],"return":{"type":"Boolean","doc":"\n","html_type":"Boolean"},"id":"method-getStatefulFilters","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":62}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.AbstractStore","short_doc":"Returns the value of statefulFilters. ..."},{"tagname":"method","name":"getStoreId","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.AbstractStore-cfg-storeId\" rel=\"Ext.data.AbstractStore-cfg-storeId\" class=\"docClass\">storeId</a>.</p>\n","params":[],"return":{"type":"String","doc":"\n","html_type":"String"},"id":"method-getStoreId","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":52}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.AbstractStore","short_doc":"Returns the value of storeId. ..."},{"tagname":"method","name":"getTotalCount","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":261}],"doc":"<p>Returns the total number of <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Model</a> instances that the <a href=\"#!/api/Ext.data.proxy.Proxy\" rel=\"Ext.data.proxy.Proxy\" class=\"docClass\">Proxy</a>\nindicates exist. This will usually differ from <a href=\"#!/api/Ext.data.ProxyStore-method-getCount\" rel=\"Ext.data.ProxyStore-method-getCount\" class=\"docClass\">getCount</a> when using paging - getCount returns the\nnumber of records loaded into the Store at the moment, getTotalCount returns the number of records that\ncould be loaded into the Store if the Store contained all data</p>\n","return":{"type":"Number","name":"return","doc":"<p>The total number of Model instances available via the Proxy. 0 returned if\nno value has been set via the reader.</p>\n","properties":null,"html_type":"Number"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getTotalCount","owner":"Ext.data.ProxyStore","short_doc":"Returns the total number of Model instances that the Proxy\nindicates exist. ..."},{"tagname":"method","name":"getTrackRemoved","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.BufferedStore-cfg-trackRemoved\" rel=\"Ext.data.BufferedStore-cfg-trackRemoved\" class=\"docClass\">trackRemoved</a>.</p>\n","params":[],"return":{"type":"Boolean","doc":"\n","html_type":"Boolean"},"id":"method-getTrackRemoved","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":119}],"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.BufferedStore","overrides":[{"name":"getTrackRemoved","owner":"Ext.data.ProxyStore","link":"<a href=\"#!/api/Ext.data.ProxyStore-method-getTrackRemoved\" rel=\"Ext.data.ProxyStore-method-getTrackRemoved\" class=\"docClass\">Ext.data.ProxyStore.getTrackRemoved</a>"}],"short_doc":"Returns the value of trackRemoved. ..."},{"tagname":"method","name":"getTrailingBufferZone","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.BufferedStore-cfg-trailingBufferZone\" rel=\"Ext.data.BufferedStore-cfg-trailingBufferZone\" class=\"docClass\">trailingBufferZone</a>.</p>\n","params":[],"return":{"type":"Number","doc":"\n","html_type":"Number"},"id":"method-getTrailingBufferZone","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":92}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.BufferedStore","short_doc":"Returns the value of trailingBufferZone. ..."},{"tagname":"method","name":"getUpdatedRecords","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":528}],"doc":"<p>Returns all valid, non-phantom Model instances that have been updated in the Store but not yet synchronized with the Proxy.</p>\n","return":{"type":"Ext.data.Model[]","name":"return","doc":"<p>The updated Model instances</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getUpdatedRecords","owner":"Ext.data.ProxyStore","short_doc":"Returns all valid, non-phantom Model instances that have been updated in the Store but not yet synchronized with the ..."},{"tagname":"method","name":"getViewSize","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.BufferedStore-cfg-viewSize\" rel=\"Ext.data.BufferedStore-cfg-viewSize\" class=\"docClass\">viewSize</a>.</p>\n","params":[],"return":{"type":"Number","doc":"\n","html_type":"Number"},"id":"method-getViewSize","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":112}],"properties":null,"private":true,"static":null,"inheritable":null,"linenr":null,"owner":"Ext.data.BufferedStore","short_doc":"Returns the value of viewSize. ..."},{"tagname":"method","name":"group","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":526}],"doc":"<p>Groups data inside the store.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":526,"params":[{"name":"grouper","type":"Object","html_type":"Object"},{"name":"direction","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.data.BufferedStore-event-beforeload\" rel=\"Ext.data.BufferedStore-event-beforeload\" class=\"docClass\">beforeload</a>","beforeprefetch","cachefilled","cachemiss","<a href=\"#!/api/Ext.data.BufferedStore-event-datachanged\" rel=\"Ext.data.BufferedStore-event-datachanged\" class=\"docClass\">datachanged</a>","groupchange","guaranteedrange","<a href=\"#!/api/Ext.data.BufferedStore-event-load\" rel=\"Ext.data.BufferedStore-event-load\" class=\"docClass\">load</a>","<a href=\"#!/api/Ext.data.BufferedStore-event-refresh\" rel=\"Ext.data.BufferedStore-event-refresh\" class=\"docClass\">refresh</a>"],"method_calls":["fireEvent","getData","getGrouper","getSorters","isLoadBlocked","loadPage"],"id":"method-group","owner":"Ext.data.BufferedStore","overrides":[{"name":"group","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-group\" rel=\"Ext.data.AbstractStore-method-group\" class=\"docClass\">Ext.data.AbstractStore.group</a>"}],"short_doc":"Groups data inside the store. ..."},{"tagname":"method","name":"guaranteeRange","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":974}],"doc":"<p>Guarantee a specific range, this will load the store with a range (that\nmust be the <code>pageSize</code> or smaller) and take care of any loading that may\nbe necessary.</p>\n","deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.data.BufferedStore-method-getRange\" rel=\"Ext.data.BufferedStore-method-getRange\" class=\"docClass\">getRange</a></p>\n"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"name":"start","type":"Object","html_type":"Object"},{"name":"end","type":"Object","html_type":"Object"},{"name":"callback","type":"Object","html_type":"Object"},{"name":"scope","type":"Object","html_type":"Object"},{"name":"options","type":"Object","html_type":"Object"}],"chainable":false,"fires":["beforeprefetch","cachefilled","cachemiss","guaranteedrange"],"method_calls":["getRange"],"id":"method-guaranteeRange","owner":"Ext.data.BufferedStore","short_doc":"Guarantee a specific range, this will load the store with a range (that\nmust be the pageSize or smaller) and take car..."},{"tagname":"method","name":"hasConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1480}],"doc":"\n","private":true,"params":[{"tagname":"params","name":"config","doc":"\n","type":"Object","html_type":"Object"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-hasConfig","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"hasListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1138}],"doc":"<p>Checks to see if this object has any listeners for a specified event, or whether the event bubbles. The answer\nindicates whether the event needs firing or not.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to check for</p>\n","html_type":"String"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the event is being listened for or bubbles, else <code>false</code></p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-hasListener","owner":"Ext.mixin.Observable","short_doc":"Checks to see if this object has any listeners for a specified event, or whether the event bubbles. ..."},{"tagname":"method","name":"hasPendingLoad","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":855}],"doc":"<p>Returns true if the store has a pending load task.</p>\n","return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the store has a pending load task.</p>\n","properties":null,"html_type":"Boolean"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["isLoading"],"id":"method-hasPendingLoad","owner":"Ext.data.ProxyStore","overrides":[{"name":"hasPendingLoad","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-hasPendingLoad\" rel=\"Ext.data.AbstractStore-method-hasPendingLoad\" class=\"docClass\">Ext.data.AbstractStore.hasPendingLoad</a>"}],"short_doc":"Returns true if the store has a pending load task. ..."},{"tagname":"method","name":"indexOf","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":502}],"doc":"<p>Get the index of the record within the store.</p>\n\n<p>When store is filtered, records outside of filter will not be found.</p>\n","params":[{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a> object to find.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"}],"return":{"type":"Number","name":"return","doc":"<p>The index of the passed Record. Returns -1 if not found.</p>\n","properties":null,"html_type":"Number"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getData"],"id":"method-indexOf","owner":"Ext.data.BufferedStore","short_doc":"Get the index of the record within the store. ..."},{"tagname":"method","name":"indexOfId","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":514}],"doc":"<p>Get the index within the store of the Record with the passed id.</p>\n\n<p>Like <a href=\"#!/api/Ext.data.BufferedStore-method-indexOf\" rel=\"Ext.data.BufferedStore-method-indexOf\" class=\"docClass\">indexOf</a>, this method is effected by filtering.</p>\n","params":[{"tagname":"params","type":"String","name":"id","doc":"<p>The id of the Record to find.</p>\n","html_type":"String"}],"return":{"type":"Number","name":"return","doc":"<p>The index of the Record. Returns -1 if not found.</p>\n","properties":null,"html_type":"Number"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getById","indexOf"],"id":"method-indexOfId","owner":"Ext.data.BufferedStore","short_doc":"Get the index within the store of the Record with the passed id. ..."},{"tagname":"method","name":"initConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1393}],"doc":"<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n","protected":true,"params":[{"tagname":"params","type":"Object","name":"config","doc":"\n","html_type":"Object"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["getConfigurator"],"id":"method-initConfig","owner":"Ext.Base","short_doc":"Initialize configuration for this class. ..."},{"tagname":"method","name":"insert","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":229}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":229,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-insert","owner":"Ext.data.BufferedStore","short_doc":" ..."},{"tagname":"method","name":"isFiltered","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":641}],"doc":"<p>Tests whether the store currently has any active filters.</p>\n","return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the store is filtered.</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getFilters"],"id":"method-isFiltered","owner":"Ext.data.AbstractStore","short_doc":"Tests whether the store currently has any active filters. ..."},{"tagname":"method","name":"isGrouped","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":199}],"doc":"<p>Tests whether the store currently has an active grouper.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":199,"params":[],"chainable":false,"fires":[],"method_calls":["getGrouper"],"id":"method-isGrouped","owner":"Ext.data.BufferedStore","return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the store is grouped.</p>\n","properties":null,"html_type":"Boolean"},"overrides":[{"name":"isGrouped","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-isGrouped\" rel=\"Ext.data.AbstractStore-method-isGrouped\" class=\"docClass\">Ext.data.AbstractStore.isGrouped</a>"}],"short_doc":"Tests whether the store currently has an active grouper. ..."},{"tagname":"method","name":"isLoaded","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":872}],"doc":"<p>Returns <code>true</code> if the Store has been loaded.</p>\n","return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the Store has been loaded.</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-isLoaded","owner":"Ext.data.ProxyStore","overrides":[{"name":"isLoaded","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-isLoaded\" rel=\"Ext.data.AbstractStore-method-isLoaded\" class=\"docClass\">Ext.data.AbstractStore.isLoaded</a>"}],"short_doc":"Returns true if the Store has been loaded. ..."},{"tagname":"method","name":"isLoading","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":864}],"doc":"<p>Returns true if the Store is currently performing a load operation</p>\n","return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the Store is currently loading</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-isLoading","owner":"Ext.data.ProxyStore","overrides":[{"name":"isLoading","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-isLoading\" rel=\"Ext.data.AbstractStore-method-isLoading\" class=\"docClass\">Ext.data.AbstractStore.isLoading</a>"}],"short_doc":"Returns true if the Store is currently performing a load operation ..."},{"tagname":"method","name":"isSorted","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":649}],"doc":"<p>Tests whether the store currently has any active sorters.</p>\n","return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the store is sorted.</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getSorters","isGrouped"],"id":"method-isSorted","owner":"Ext.data.AbstractStore","short_doc":"Tests whether the store currently has any active sorters. ..."},{"tagname":"method","name":"isSuspended","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1150}],"doc":"<p>Checks if all events, or a specific event, is suspended.</p>\n","params":[{"tagname":"params","type":"String","name":"event","optional":true,"doc":"<p>The name of the specific event to check</p>\n","html_type":"String"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if events are suspended</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-isSuspended","owner":"Ext.mixin.Observable","short_doc":"Checks if all events, or a specific event, is suspended. ..."},{"tagname":"method","name":"link","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1508}],"doc":"<p>Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (via <code><a href=\"#!/api/Ext.Base-method-destroy\" rel=\"Ext.Base-method-destroy\" class=\"docClass\">destroy</a></code>).</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"\n","html_type":"String"},{"tagname":"params","type":"Object","name":"value","doc":"\n","html_type":"Object"}],"return":{"type":"Object","name":"return","doc":"<p>The <code>value</code> passed.</p>\n","properties":null,"html_type":"Object"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-link","owner":"Ext.Base","short_doc":"Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (vi..."},{"tagname":"method","name":"load","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":249}],"doc":"<p>Loads the Store using its configured <a href=\"#!/api/Ext.data.BufferedStore-cfg-proxy\" rel=\"Ext.data.BufferedStore-cfg-proxy\" class=\"docClass\">proxy</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":249,"params":[{"name":"options","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.data.BufferedStore-event-beforeload\" rel=\"Ext.data.BufferedStore-event-beforeload\" class=\"docClass\">beforeload</a>","beforeprefetch","<a href=\"#!/api/Ext.data.BufferedStore-event-beforesort\" rel=\"Ext.data.BufferedStore-event-beforesort\" class=\"docClass\">beforesort</a>","cachefilled","cachemiss","<a href=\"#!/api/Ext.data.BufferedStore-event-datachanged\" rel=\"Ext.data.BufferedStore-event-datachanged\" class=\"docClass\">datachanged</a>","guaranteedrange","<a href=\"#!/api/Ext.data.BufferedStore-event-load\" rel=\"Ext.data.BufferedStore-event-load\" class=\"docClass\">load</a>","<a href=\"#!/api/Ext.data.BufferedStore-event-refresh\" rel=\"Ext.data.BufferedStore-event-refresh\" class=\"docClass\">refresh</a>"],"method_calls":["getData","getDefaultViewSize","getViewSize","loadToPrefetch"],"id":"method-load","owner":"Ext.data.BufferedStore","return":{"type":"Ext.data.Store","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},"since":"1.1.0","overrides":[{"name":"load","owner":"Ext.data.ProxyStore","link":"<a href=\"#!/api/Ext.data.ProxyStore-method-load\" rel=\"Ext.data.ProxyStore-method-load\" class=\"docClass\">Ext.data.ProxyStore.load</a>"}],"short_doc":"Loads the Store using its configured proxy. ..."},{"tagname":"method","name":"loadData","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":358}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":358,"params":[{"name":"data","type":"Object","html_type":"Object"},{"name":"append","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-loadData","owner":"Ext.data.BufferedStore","short_doc":" ..."},{"tagname":"method","name":"loadPage","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":364}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":364,"params":[{"name":"page","type":"Object","html_type":"Object"},{"name":"options","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.data.BufferedStore-event-beforeload\" rel=\"Ext.data.BufferedStore-event-beforeload\" class=\"docClass\">beforeload</a>","beforeprefetch","cachefilled","cachemiss","<a href=\"#!/api/Ext.data.BufferedStore-event-datachanged\" rel=\"Ext.data.BufferedStore-event-datachanged\" class=\"docClass\">datachanged</a>","guaranteedrange","<a href=\"#!/api/Ext.data.BufferedStore-event-load\" rel=\"Ext.data.BufferedStore-event-load\" class=\"docClass\">load</a>","<a href=\"#!/api/Ext.data.BufferedStore-event-refresh\" rel=\"Ext.data.BufferedStore-event-refresh\" class=\"docClass\">refresh</a>"],"method_calls":["getDefaultViewSize","getPageSize","getViewSize","loadToPrefetch"],"id":"method-loadPage","owner":"Ext.data.BufferedStore","short_doc":" ..."},{"tagname":"method","name":"loadToPrefetch","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":578}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":578,"params":[{"name":"options","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.data.BufferedStore-event-beforeload\" rel=\"Ext.data.BufferedStore-event-beforeload\" class=\"docClass\">beforeload</a>","beforeprefetch","cachefilled","cachemiss","<a href=\"#!/api/Ext.data.BufferedStore-event-datachanged\" rel=\"Ext.data.BufferedStore-event-datachanged\" class=\"docClass\">datachanged</a>","guaranteedrange","<a href=\"#!/api/Ext.data.BufferedStore-event-load\" rel=\"Ext.data.BufferedStore-event-load\" class=\"docClass\">load</a>","<a href=\"#!/api/Ext.data.BufferedStore-event-refresh\" rel=\"Ext.data.BufferedStore-event-refresh\" class=\"docClass\">refresh</a>"],"method_calls":["calculatePageCacheSize","fireEvent","getData","getLeadingBufferZone","getPageFromRecordIndex","getTotalCount","getTrailingBufferZone","getViewSize","guaranteeRange","on","prefetchPage","rangeCached"],"id":"method-loadToPrefetch","owner":"Ext.data.BufferedStore","short_doc":" ..."},{"tagname":"method","name":"mon","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1665}],"doc":"<p>Shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-addManagedListener\" rel=\"Ext.mixin.Observable-method-addManagedListener\" class=\"docClass\">addManagedListener</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item to which to add a listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","html_type":"Object/String"},{"tagname":"params","type":"Function/String","name":"fn","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event\nname, this is the handler function or the name of a method on the specified\n<code>scope</code>.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n","html_type":"Object"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-mon","owner":"Ext.mixin.Observable","return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners = myButton.mon({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","properties":null,"html_type":"Object"},"throws":null,"type":null,"short_doc":"Shorthand for addManagedListener. ..."},{"tagname":"method","name":"mun","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1671}],"doc":"<p>Shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-removeManagedListener\" rel=\"Ext.mixin.Observable-method-removeManagedListener\" class=\"docClass\">removeManagedListener</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item from which to remove a listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","html_type":"Object/String"},{"tagname":"params","type":"Function","name":"fn","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","html_type":"Object"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-mun","owner":"Ext.mixin.Observable","return":null,"throws":null,"type":null,"short_doc":"Shorthand for removeManagedListener. ..."},{"tagname":"method","name":"on","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1654}],"doc":"<p>The <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> method is shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a>.</p>\n\n<p>Appends an event handler to this object.  For example:</p>\n\n<pre><code>myGridPanel.on(\"itemclick\", this.onItemClick, this);\n</code></pre>\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple events. For example:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: this.onCellClick,\n    select: this.onSelect,\n    viewready: this.onViewReady,\n    scope: this // Important. Ensure \"this\" is correct during handler execution\n});\n</code></pre>\n\n<p>One can also specify options for each event handler separately:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: this.onCellClick, scope: this, single: true},\n    viewready: {fn: panel.onViewReady, scope: panel}\n});\n</code></pre>\n\n<p><em>Names</em> of methods in a specified scope may also be used:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: 'onCellClick', scope: this, single: true},\n    viewready: {fn: 'onViewReady', scope: panel}\n});\n</code></pre>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"String/Object","name":"eventName","doc":"<p>The name of the event to listen for.\nMay also be an object who's property names are event names.</p>\n\n","html_type":"String/Object"},{"tagname":"params","type":"Function/String","name":"fn","optional":true,"doc":"<p>The method the event invokes or the <em>name</em> of\nthe method within the specified <code>scope</code>.  Will be called with arguments\ngiven to <a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">Ext.util.Observable.fireEvent</a> plus the <code>options</code> parameter described\nbelow.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>An object containing handler configuration.</p>\n\n\n\n\n<p><strong>Note:</strong> The options object will also be passed as the last argument to every\nevent handler.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n","properties":[{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted,\n  defaults to the object which fired the event.</strong></p>\n\n","html_type":"Object"},{"tagname":"params","type":"Number","name":"delay","doc":"<p>The number of milliseconds to delay the invocation of the handler after the event\n  fires.</p>\n\n","html_type":"Number"},{"tagname":"params","type":"Boolean","name":"single","doc":"<p>True to add a handler to handle just the next firing of the event, and then remove\n  itself.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Number","name":"buffer","doc":"<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"onFrame","doc":"<p>Causes the handler to be scheduled to run at the next\n  <a href=\"#!/api/Ext.Function-method-requestAnimationFrame\" rel=\"Ext.Function-method-requestAnimationFrame\" class=\"docClass\">animation frame event</a>. If the\n  event fires again before that time, the handler is not rescheduled - the handler\n  will only be called once when the next animation frame is fired, with the last set\n  of arguments passed.</p>\n\n","html_type":"Number"},{"tagname":"params","type":"Ext.util.Observable","name":"target","doc":"<p>Only call the handler if the event was fired on the target Observable, <em>not</em> if the\n  event was bubbled up from a child Observable.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},{"tagname":"params","type":"String","name":"element","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</strong>\n  The name of a Component property which references an <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">element</a>\n  to add a listener to.</p>\n\n\n\n\n<p>  This option is useful during Component construction to add DOM event listeners to\n  elements of <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which will exist only after the\n  Component is rendered.</p>\n\n\n\n\n<p>  For example, to add a click listener to a Panel's body:</p>\n\n\n\n\n<pre><code>  var panel = new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n\n\n\n<p>In order to remove listeners attached using the element, you'll need to reference\nthe element itself as seen below.</p>\n\n\n\n\n<pre><code> panel.body.un(...)\n</code></pre>\n\n","html_type":"String"},{"tagname":"params","type":"String","name":"delegate","optional":true,"doc":"<p>A simple selector to filter the event target or look for a descendant of the target.</p>\n\n\n\n\n<p>  The \"delegate\" option is only available on <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instances (or\n  when attaching a listener to a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> via a Component using the\n  element option).</p>\n\n\n\n\n<p>  See the <em>delegate</em> example below.</p>\n\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"stopPropagation","optional":true,"doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopPropagation\" rel=\"Ext.event.Event-method-stopPropagation\" class=\"docClass\">stopPropagation</a> on the event object\n  before firing the handler.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"preventDefault","optional":true,"doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-preventDefault\" rel=\"Ext.event.Event-method-preventDefault\" class=\"docClass\">preventDefault</a> on the event object\n  before firing the handler.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"stopEvent","optional":true,"doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopEvent\" rel=\"Ext.event.Event-method-stopEvent\" class=\"docClass\">stopEvent</a> on the event object\n  before firing the handler.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Array","name":"args","optional":true,"doc":"<p>Optional arguments to pass to the handler function. Any additional arguments\n  passed to <a href=\"#!/api/Ext.mixin.Observable-method-fireEvent\" rel=\"Ext.mixin.Observable-method-fireEvent\" class=\"docClass\">fireEvent</a> will be appended to these arguments.</p>\n\n","html_type":"Array"},{"tagname":"params","type":"Boolean","name":"destroyable","default":"false","optional":true,"doc":"<p>When specified as <code>true</code>, the function returns a <code>destroyable</code> object. An object\n  which implements the <code>destroy</code> method which removes all listeners added in this call.\n  This syntax can be a helpful shortcut to using <a href=\"#!/api/Ext.mixin.Observable-method-un\" rel=\"Ext.mixin.Observable-method-un\" class=\"docClass\">un</a>; particularly when\n  removing multiple listeners.  <em>NOTE</em> - not compatible when using the <em>element</em>\n  option.  See <a href=\"#!/api/Ext.mixin.Observable-method-un\" rel=\"Ext.mixin.Observable-method-un\" class=\"docClass\">un</a> for the proper syntax for removing listeners added using the\n  <em>element</em> config.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Number","name":"priority","optional":true,"doc":"<p>An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handlers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.\n  A priority must be an integer to be valid.  Fractional values are reserved for\n  internal framework use.</p>\n\n","html_type":"Number"},{"tagname":"params","type":"String","name":"order","default":"'current'","optional":true,"doc":"<p>A legacy option that is provided for backward compatibility.\n  It is recommended to use the <code>priority</code> option instead.  Available options are:</p>\n\n\n\n\n<ul>\n<li><code>'before'</code>: equal to a priority of <code>100</code></li>\n<li><code>'current'</code>: equal to a priority of <code>0</code> or default priority</li>\n<li><code>'after'</code>: equal to a priority of <code>-100</code></li>\n</ul>\n\n\n\n","html_type":"String"}],"html_type":"Object"},{"tagname":"params","type":"String","name":"order","default":"'current'","optional":true,"doc":"<p>A shortcut for the <code>order</code> event option.  Provided for backward compatibility.\n  Please use the <code>priority</code> event option instead.</p>\n\n\n\n\n<p><strong>Combining Options</strong></p>\n\n\n\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n\n\n\n<p>A delayed, one-time listener.</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n\n\n\n<p><strong>Attaching multiple handlers in 1 call</strong></p>\n\n\n\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple handlers and handler configs.</p>\n\n\n\n\n<pre><code>grid.on({\n    itemclick: 'onItemClick',\n    itemcontextmenu: grid.onItemContextmenu,\n    destroy: {\n        fn: function () {\n            // function called within the 'altCmp' scope instead of grid\n        },\n        scope: altCmp // unique scope for the destroy handler\n    },\n    scope: grid       // default scope - provided for example clarity\n});\n</code></pre>\n\n\n\n\n<p><strong>Delegate</strong></p>\n\n\n\n\n<p>This is a configuration option that you can pass along when registering a handler for\nan event to assist with event delegation. By setting this configuration option\nto a simple selector, the target element will be filtered to look for a\ndescendant of the target. For example:</p>\n\n\n\n\n<pre><code>var panel = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n    xtype: 'panel',\n    renderTo: document.body,\n    title: 'Delegate Handler Example',\n    frame: true,\n    height: 220,\n    width: 220,\n    html: '&lt;h1 class=\"myTitle\"&gt;BODY TITLE&lt;/h1&gt;Body content'\n});\n\n// The click handler will only be called when the click occurs on the\n// delegate: h1.myTitle (\"h1\" tag with class \"myTitle\")\npanel.on({\n    click: function (e) {\n        console.log(e.getTarget().innerHTML);\n    },\n    element: 'body',\n    delegate: 'h1.myTitle'\n });\n</code></pre>\n\n","html_type":"String"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-on","owner":"Ext.mixin.Observable","return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes\n all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.on({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","properties":null,"html_type":"Object"},"throws":null,"type":null,"short_doc":"The on method is shorthand for addListener. ..."},{"tagname":"method","name":"onAfter","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1557}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-addAfterListener\" rel=\"Ext.mixin.Observable-method-addAfterListener\" class=\"docClass\">addAfterListener</a>.</p>\n","inheritdoc":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> instead.</p>\n","version":"5.1"},"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event to listen for.</p>\n\n","html_type":"String/String[]/Object"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The method the event invokes.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope for <code>fn</code>.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>An object containing handler configuration.</p>\n\n","html_type":"Object"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-onAfter","owner":"Ext.mixin.Observable","return":null,"throws":null,"type":null,"short_doc":"Alias for addAfterListener. ..."},{"tagname":"method","name":"onBatchComplete","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":474}],"doc":"<p>Attached as the 'complete' event listener to a proxy's Batch object. Iterates over the batch operations\nand updates the Store's internal data MixedCollection.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"batch","type":"Object","html_type":"Object"},{"name":"operation","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.data.ProxyStore-event-datachanged\" rel=\"Ext.data.ProxyStore-event-datachanged\" class=\"docClass\">datachanged</a>","<a href=\"#!/api/Ext.data.ProxyStore-event-write\" rel=\"Ext.data.ProxyStore-event-write\" class=\"docClass\">write</a>"],"method_calls":["fireEvent","onProxyWrite","resumeEvents","suspendEvents"],"id":"method-onBatchComplete","owner":"Ext.data.ProxyStore","short_doc":"Attached as the 'complete' event listener to a proxy's Batch object. ..."},{"tagname":"method","name":"onBatchException","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":499}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"batch","type":"Object","html_type":"Object"},{"name":"operation","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-onBatchException","owner":"Ext.data.ProxyStore","short_doc":" ..."},{"tagname":"method","name":"onBatchOperationComplete","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":465}],"doc":"<p>Attached as the 'operationcomplete' event listener to a proxy's Batch object. By default just calls through\nto onProxyWrite.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"batch","type":"Object","html_type":"Object"},{"name":"operation","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.data.ProxyStore-event-datachanged\" rel=\"Ext.data.ProxyStore-event-datachanged\" class=\"docClass\">datachanged</a>","<a href=\"#!/api/Ext.data.ProxyStore-event-write\" rel=\"Ext.data.ProxyStore-event-write\" class=\"docClass\">write</a>"],"method_calls":["onProxyWrite"],"id":"method-onBatchOperationComplete","owner":"Ext.data.ProxyStore","short_doc":"Attached as the 'operationcomplete' event listener to a proxy's Batch object. ..."},{"tagname":"method","name":"onBefore","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1550}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-addBeforeListener\" rel=\"Ext.mixin.Observable-method-addBeforeListener\" class=\"docClass\">addBeforeListener</a>.</p>\n","inheritdoc":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> instead.</p>\n","version":"5.1"},"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event to listen for.</p>\n\n","html_type":"String/String[]/Object"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The method the event invokes.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope for <code>fn</code>.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>An object containing handler configuration.</p>\n\n","html_type":"Object"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-onBefore","owner":"Ext.mixin.Observable","return":null,"throws":null,"type":null,"short_doc":"Alias for addBeforeListener. ..."},{"tagname":"method","name":"onBeforeCollectionSort","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":898}],"doc":"<p>This is attached to the data Collection's beforesort event only if not remoteSort\nIf remoteSort, the event is fired before the reload call in <a href=\"#!/api/Ext.data.ProxyStore-event-load\" rel=\"Ext.data.ProxyStore-event-load\" class=\"docClass\">Ext.data.ProxyStore.load</a>.</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[{"name":"store","type":"Object","html_type":"Object"},{"name":"sorters","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.data.AbstractStore-event-beforesort\" rel=\"Ext.data.AbstractStore-event-beforesort\" class=\"docClass\">beforesort</a>"],"method_calls":["fireEvent"],"id":"method-onBeforeCollectionSort","owner":"Ext.data.AbstractStore","short_doc":"This is attached to the data Collection's beforesort event only if not remoteSort\nIf remoteSort, the event is fired b..."},{"tagname":"method","name":"onClassExtended","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":119}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":119,"params":[{"name":"cls","type":"Object","html_type":"Object"},{"name":"data","type":"Object","html_type":"Object"},{"name":"hooks","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-onClassExtended","owner":"Ext.data.ProxyStore","short_doc":" ..."},{"tagname":"method","name":"onClassMixedIn","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Factoryable.js","linenr":268}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":268,"params":[{"name":"targetClass","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-onClassMixedIn","owner":"Ext.mixin.Factoryable","short_doc":" ..."},{"tagname":"method","name":"onCreateRecords","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":429}],"doc":"<p>may be implemented by store subclasses</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-onCreateRecords","owner":"Ext.data.ProxyStore","short_doc":"may be implemented by store subclasses ..."},{"tagname":"method","name":"onDestroy","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":838}],"doc":"<p>private</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["blockLoad","clearData","getProxy","setModel","setProxy"],"id":"method-onDestroy","owner":"Ext.data.ProxyStore","short_doc":"private ..."},{"tagname":"method","name":"onDestroyRecords","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":435}],"doc":"<p>Removes any records when a write is returned from the server.</p>\n","private":true,"params":[{"tagname":"params","type":"Ext.data.Model[]","name":"records","doc":"<p>The array of removed records</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},{"tagname":"params","type":"Ext.data.operation.Operation","name":"operation","doc":"<p>The operation that just completed</p>\n","html_type":"<a href=\"#!/api/Ext.data.operation.Operation\" rel=\"Ext.data.operation.Operation\" class=\"docClass\">Ext.data.operation.Operation</a>"},{"tagname":"params","type":"Boolean","name":"success","doc":"<p>True if the operation was successful</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["cleanRemoved"],"id":"method-onDestroyRecords","owner":"Ext.data.ProxyStore","short_doc":"Removes any records when a write is returned from the server. ..."},{"tagname":"method","name":"onEndUpdate","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":786}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":786,"params":[],"chainable":false,"fires":["<a href=\"#!/api/Ext.data.ProxyStore-event-beforesync\" rel=\"Ext.data.ProxyStore-event-beforesync\" class=\"docClass\">beforesync</a>"],"method_calls":["sync"],"id":"method-onEndUpdate","owner":"Ext.data.ProxyStore","overrides":[{"name":"onEndUpdate","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-onEndUpdate\" rel=\"Ext.data.AbstractStore-method-onEndUpdate\" class=\"docClass\">Ext.data.AbstractStore.onEndUpdate</a>"}],"return":null,"throws":null,"type":null,"short_doc":" ..."},{"tagname":"method","name":"onErase","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":834}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":834,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-onErase","owner":"Ext.data.ProxyStore","short_doc":" ..."},{"tagname":"method","name":"onFilterEndUpdate","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":937}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":937,"params":[],"chainable":false,"fires":["<a href=\"#!/api/Ext.data.AbstractStore-event-datachanged\" rel=\"Ext.data.AbstractStore-event-datachanged\" class=\"docClass\">datachanged</a>","filterchange","<a href=\"#!/api/Ext.data.AbstractStore-event-refresh\" rel=\"Ext.data.AbstractStore-event-refresh\" class=\"docClass\">refresh</a>"],"method_calls":["attemptLoad","fireEvent","getFilters","getRemoteFilter"],"id":"method-onFilterEndUpdate","owner":"Ext.data.AbstractStore","short_doc":" ..."},{"tagname":"method","name":"onMetaChange","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":359}],"doc":"<p>private</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[{"name":"proxy","type":"Object","html_type":"Object"},{"name":"meta","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.data.ProxyStore-event-metachange\" rel=\"Ext.data.ProxyStore-event-metachange\" class=\"docClass\">metachange</a>"],"method_calls":["fireEvent"],"id":"method-onMetaChange","owner":"Ext.data.ProxyStore","short_doc":"private ..."},{"tagname":"method","name":"onPageMapClear","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":763}],"doc":"<p>Cancels all pending prefetch requests.</p>\n\n<p>This is called when the page map is cleared.</p>\n\n<p>Any requests which still make it through will be for the previous pageMapGeneration\n(pageMapGeneration is incremented upon clear), and so will be rejected upon arrival.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":["<a href=\"#!/api/Ext.data.BufferedStore-event-clear\" rel=\"Ext.data.BufferedStore-event-clear\" class=\"docClass\">clear</a>"],"method_calls":["fireEvent","getData","relayEvents"],"id":"method-onPageMapClear","owner":"Ext.data.BufferedStore","short_doc":"Cancels all pending prefetch requests. ..."},{"tagname":"method","name":"onProxyPrefetch","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":834}],"doc":"<p>Called after the configured proxy completes a prefetch operation.</p>\n","private":true,"params":[{"tagname":"params","type":"Ext.data.operation.Operation","name":"operation","doc":"<p>The operation that completed</p>\n","html_type":"<a href=\"#!/api/Ext.data.operation.Operation\" rel=\"Ext.data.operation.Operation\" class=\"docClass\">Ext.data.operation.Operation</a>"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":["prefetch","totalcountchange"],"method_calls":["cachePage","fireEvent","getData"],"id":"method-onProxyPrefetch","owner":"Ext.data.BufferedStore","short_doc":"Called after the configured proxy completes a prefetch operation. ..."},{"tagname":"method","name":"onProxyWrite","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":401}],"doc":"<p>Callback for any write Operation over the Proxy. Updates the Store's MixedCollection to reflect\nthe updates provided by the Proxy</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"operation","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.data.ProxyStore-event-datachanged\" rel=\"Ext.data.ProxyStore-event-datachanged\" class=\"docClass\">datachanged</a>","<a href=\"#!/api/Ext.data.ProxyStore-event-write\" rel=\"Ext.data.ProxyStore-event-write\" class=\"docClass\">write</a>"],"method_calls":["fireEvent","onCreateRecords","onDestroyRecords","onUpdateRecords"],"id":"method-onProxyWrite","owner":"Ext.data.ProxyStore","short_doc":"Callback for any write Operation over the Proxy. ..."},{"tagname":"method","name":"onRangeAvailable","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":941}],"doc":"<p>Handles the availability of a requested range that was not previously available</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"options","type":"Object","html_type":"Object"}],"chainable":false,"fires":["guaranteedrange"],"method_calls":["fireEvent","getData","getTotalCount"],"id":"method-onRangeAvailable","owner":"Ext.data.BufferedStore","short_doc":"Handles the availability of a requested range that was not previously available ..."},{"tagname":"method","name":"onSorterEndUpdate","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":1050}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1050,"params":[],"chainable":false,"fires":["<a href=\"#!/api/Ext.data.BufferedStore-event-beforeload\" rel=\"Ext.data.BufferedStore-event-beforeload\" class=\"docClass\">beforeload</a>","beforeprefetch","cachefilled","cachemiss","<a href=\"#!/api/Ext.data.BufferedStore-event-datachanged\" rel=\"Ext.data.BufferedStore-event-datachanged\" class=\"docClass\">datachanged</a>","guaranteedrange","<a href=\"#!/api/Ext.data.BufferedStore-event-load\" rel=\"Ext.data.BufferedStore-event-load\" class=\"docClass\">load</a>","<a href=\"#!/api/Ext.data.BufferedStore-event-refresh\" rel=\"Ext.data.BufferedStore-event-refresh\" class=\"docClass\">refresh</a>","<a href=\"#!/api/Ext.data.BufferedStore-event-sort\" rel=\"Ext.data.BufferedStore-event-sort\" class=\"docClass\">sort</a>"],"method_calls":["clearAndLoad","fireEvent","getSorters"],"id":"method-onSorterEndUpdate","owner":"Ext.data.BufferedStore","return":null,"throws":null,"type":null,"overrides":[{"name":"onSorterEndUpdate","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-onSorterEndUpdate\" rel=\"Ext.data.AbstractStore-method-onSorterEndUpdate\" class=\"docClass\">Ext.data.AbstractStore.onSorterEndUpdate</a>"}],"short_doc":" ..."},{"tagname":"method","name":"onUpdate","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":836}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":836,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-onUpdate","owner":"Ext.data.ProxyStore","short_doc":" ..."},{"tagname":"method","name":"onUpdateRecords","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":432}],"doc":"<p>may be implemented by store subclasses</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-onUpdateRecords","owner":"Ext.data.ProxyStore","short_doc":"may be implemented by store subclasses ..."},{"tagname":"method","name":"pageCached","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":911}],"doc":"<p>Determines if the passed page is available in the page cache.</p>\n","private":true,"params":[{"tagname":"params","type":"Number","name":"page","doc":"<p>The page to find in the page cache.</p>\n","html_type":"Number"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getData"],"id":"method-pageCached","owner":"Ext.data.BufferedStore","short_doc":"Determines if the passed page is available in the page cache. ..."},{"tagname":"method","name":"pagePending","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":920}],"doc":"<p>Determines if a request for a page is currently running</p>\n","private":true,"params":[{"tagname":"params","type":"Number","name":"page","doc":"<p>The page to check for</p>\n","html_type":"Number"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-pagePending","owner":"Ext.data.BufferedStore","short_doc":"Determines if a request for a page is currently running ..."},{"tagname":"method","name":"prefetch","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":698}],"doc":"<p>Prefetches data into the store using its configured <a href=\"#!/api/Ext.data.BufferedStore-cfg-proxy\" rel=\"Ext.data.BufferedStore-cfg-proxy\" class=\"docClass\">proxy</a>.</p>\n","params":[{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>config object, passed into the <a href=\"#!/api/Ext.data.operation.Operation\" rel=\"Ext.data.operation.Operation\" class=\"docClass\">Ext.data.operation.Operation</a> object before loading.\nSee <a href=\"#!/api/Ext.data.BufferedStore-method-load\" rel=\"Ext.data.BufferedStore-method-load\" class=\"docClass\">load</a></p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":["beforeprefetch"],"method_calls":["createOperation","fireEvent","getData","getFilters","getGrouper","getPageFromRecordIndex","getPageSize","getProxy","getSorters"],"id":"method-prefetch","owner":"Ext.data.BufferedStore","short_doc":"Prefetches data into the store using its configured proxy. ..."},{"tagname":"method","name":"prefetchPage","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":809}],"doc":"<p>Prefetches a page of data.</p>\n","params":[{"tagname":"params","type":"Number","name":"page","doc":"<p>The page to prefetch</p>\n","html_type":"Number"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>config object, passed into the <a href=\"#!/api/Ext.data.operation.Operation\" rel=\"Ext.data.operation.Operation\" class=\"docClass\">Ext.data.operation.Operation</a> object before loading.\nSee <a href=\"#!/api/Ext.data.BufferedStore-method-load\" rel=\"Ext.data.BufferedStore-method-load\" class=\"docClass\">load</a></p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":["beforeprefetch"],"method_calls":["getPageSize","prefetch"],"id":"method-prefetchPage","owner":"Ext.data.BufferedStore","short_doc":"Prefetches a page of data. ..."},{"tagname":"method","name":"prefetchRange","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":988}],"doc":"<p>Ensures that the specified range of rows is present in the cache.</p>\n\n<p>Converts the row range to a page range and then only load pages which are not already\npresent in the page cache.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"name":"start","type":"Object","html_type":"Object"},{"name":"end","type":"Object","html_type":"Object"}],"chainable":false,"fires":["beforeprefetch"],"method_calls":["calculatePageCacheSize","getData","getPageFromRecordIndex","pageCached","prefetchPage","rangeCached"],"id":"method-prefetchRange","owner":"Ext.data.BufferedStore","short_doc":"Ensures that the specified range of rows is present in the cache. ..."},{"tagname":"method","name":"prepareClass","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":157}],"doc":"<p>Prepares a given class for observable instances. This method is called when a\nclass derives from this class or uses this class as a mixin.</p>\n","params":[{"tagname":"params","type":"Function","name":"T","doc":"<p>The class constructor to prepare.</p>\n","html_type":"Function"},{"tagname":"params","type":"Ext.util.Observable","name":"mixin","doc":"<p>The mixin if being used as a mixin.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},{"tagname":"params","type":"Object","name":"data","doc":"<p>The raw class creation data if this is an extend.</p>\n","html_type":"Object"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-prepareClass","owner":"Ext.mixin.Observable","short_doc":"Prepares a given class for observable instances. ..."},{"tagname":"method","name":"primeCache","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":1017}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1017,"params":[{"name":"start","type":"Object","html_type":"Object"},{"name":"end","type":"Object","html_type":"Object"},{"name":"direction","type":"Object","html_type":"Object"}],"chainable":false,"fires":["beforeprefetch"],"method_calls":["getLeadingBufferZone","getPageSize","getTrailingBufferZone","prefetchRange"],"id":"method-primeCache","owner":"Ext.data.BufferedStore","short_doc":" ..."},{"tagname":"method","name":"rangeCached","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":901}],"doc":"<p>Determines if the passed range is available in the page cache.</p>\n","private":true,"params":[{"tagname":"params","type":"Number","name":"start","doc":"<p>The start index</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"end","doc":"<p>The end index in the range</p>\n","html_type":"Number"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getData"],"id":"method-rangeCached","owner":"Ext.data.BufferedStore","overrides":[{"name":"rangeCached","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-rangeCached\" rel=\"Ext.data.AbstractStore-method-rangeCached\" class=\"docClass\">Ext.data.AbstractStore.rangeCached</a>"}],"short_doc":"Determines if the passed range is available in the page cache. ..."},{"tagname":"method","name":"rangeSatisfied","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":929}],"doc":"<p>Determines if the passed range is available in the page cache.</p>\n","private":true,"deprecated":{"text":"<p>use <a href=\"#!/api/Ext.data.BufferedStore-method-rangeCached\" rel=\"Ext.data.BufferedStore-method-rangeCached\" class=\"docClass\">rangeCached</a> instead</p>\n","version":"4.1.0"},"params":[{"tagname":"params","type":"Number","name":"start","doc":"<p>The start index</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"end","doc":"<p>The end index in the range</p>\n","html_type":"Number"}],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["rangeCached"],"id":"method-rangeSatisfied","owner":"Ext.data.BufferedStore","short_doc":"Determines if the passed range is available in the page cache. ..."},{"tagname":"method","name":"read","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":382}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":382,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-read","owner":"Ext.data.ProxyStore","short_doc":" ..."},{"tagname":"method","name":"relayEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1260}],"doc":"<p>Relays selected events from the specified Observable as if the events were fired by <code>this</code>.</p>\n\n<p>For example if you are extending Grid, you might decide to forward some events from store.\nSo you can do this inside your initComponent:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load']);\n</code></pre>\n\n<p>The grid instance will then have an observable 'load' event which will be passed\nthe parameters of the store's load event and any function fired with the grid's\nload event would have access to the grid using the this keyword (unless the event\nis handled by a controller's control/listen event listener in which case 'this'\nwill be the controller rather than the grid).</p>\n","params":[{"tagname":"params","type":"Object","name":"origin","doc":"<p>The Observable whose events this object is to relay.</p>\n","html_type":"Object"},{"tagname":"params","type":"String[]","name":"events","doc":"<p>Array of event names to relay.</p>\n","html_type":"String[]"},{"tagname":"params","type":"String","name":"prefix","optional":true,"doc":"<p>A common prefix to prepend to the event names. For example:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>Now the grid will forward 'load' and 'clear' events of store as 'storeload' and 'storeclear'.</p>\n","html_type":"String"}],"return":{"type":"Object","name":"return","doc":"<p>A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which, when destroyed, removes all relayers. For example:</p>\n\n<pre><code>this.storeRelayers = this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>Can be undone by calling</p>\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.storeRelayers);\n</code></pre>\n\n<p>or\n    this.store.relayers.destroy();</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["createRelayer","mon"],"id":"method-relayEvents","owner":"Ext.mixin.Observable","short_doc":"Relays selected events from the specified Observable as if the events were fired by this. ..."},{"tagname":"method","name":"reload","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":266}],"doc":"<p>Reloads the store using the last options passed to the <a href=\"#!/api/Ext.data.BufferedStore-method-load\" rel=\"Ext.data.BufferedStore-method-load\" class=\"docClass\">load</a> method. You can use the reload method to reload the\nstore using the parameters from the last load() call. For example:</p>\n\n<pre><code>store.load({\n    params : {\n        userid : 22216\n    }\n});\n\n//...\n\nstore.reload();\n</code></pre>\n\n<p>The initial <a href=\"#!/api/Ext.data.BufferedStore-method-load\" rel=\"Ext.data.BufferedStore-method-load\" class=\"docClass\">load</a> execution will pass the <code>userid</code> parameter in the request. The <a href=\"#!/api/Ext.data.BufferedStore-method-reload\" rel=\"Ext.data.BufferedStore-method-reload\" class=\"docClass\">reload</a> execution\nwill also send the same <code>userid</code> parameter in its request as it will reuse the <code>params</code> object from the last <a href=\"#!/api/Ext.data.BufferedStore-method-load\" rel=\"Ext.data.BufferedStore-method-load\" class=\"docClass\">load</a> call.</p>\n\n<p>You can override a param by passing in the config object with the <code>params</code> object:</p>\n\n<pre><code>store.load({\n    params : {\n        userid : 22216,\n        foo    : 'bar'\n    }\n});\n\n//...\n\nstore.reload({\n    params : {\n        userid : 1234\n    }\n});\n</code></pre>\n\n<p>The initial <a href=\"#!/api/Ext.data.BufferedStore-method-load\" rel=\"Ext.data.BufferedStore-method-load\" class=\"docClass\">load</a> execution sends the <code>userid</code> and <code>foo</code> parameters but in the <a href=\"#!/api/Ext.data.BufferedStore-method-reload\" rel=\"Ext.data.BufferedStore-method-reload\" class=\"docClass\">reload</a> it only sends\nthe <code>userid</code> paramter because you are overriding the <code>params</code> config not just overriding the one param. To only change a single param\nbut keep other params, you will have to get the last params from the <a href=\"#!/api/Ext.data.BufferedStore-property-lastOptions\" rel=\"Ext.data.BufferedStore-property-lastOptions\" class=\"docClass\">lastOptions</a> property:</p>\n\n<pre><code>var lastOptions = store.lastOptions,\n    lastParams = <a href=\"#!/api/Ext-method-clone\" rel=\"Ext-method-clone\" class=\"docClass\">Ext.clone</a>(lastOptions.params); // make a copy of the last params so we don't affect future reload() calls\n\nlastParams.userid = 1234;\n\nstore.reload({\n    params : lastParams\n});\n</code></pre>\n\n<p>This will now send the <code>userid</code> parameter as <code>1234</code> and the <code>foo</code> param as <code>'bar'</code>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":266,"params":[{"name":"options","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.data.BufferedStore-event-beforeload\" rel=\"Ext.data.BufferedStore-event-beforeload\" class=\"docClass\">beforeload</a>","beforeprefetch","<a href=\"#!/api/Ext.data.BufferedStore-event-load\" rel=\"Ext.data.BufferedStore-event-load\" class=\"docClass\">load</a>","<a href=\"#!/api/Ext.data.BufferedStore-event-refresh\" rel=\"Ext.data.BufferedStore-event-refresh\" class=\"docClass\">refresh</a>"],"method_calls":["fireEvent","getData","getLeadingBufferZone","getPageFromRecordIndex","getPageSize","getTotalCount","getTrailingBufferZone","prefetchPage","rangeCached"],"id":"method-reload","owner":"Ext.data.BufferedStore","overrides":[{"name":"reload","owner":"Ext.data.ProxyStore","link":"<a href=\"#!/api/Ext.data.ProxyStore-method-reload\" rel=\"Ext.data.ProxyStore-method-reload\" class=\"docClass\">Ext.data.ProxyStore.reload</a>"}],"short_doc":"Reloads the store using the last options passed to the load method. ..."},{"tagname":"method","name":"removeAfterListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1535}],"doc":"<p>Removes a before-event handler.</p>\n\n<p>Same as <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a> with <code>order</code> set to <code>'after'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event the handler was associated with.</p>\n\n","html_type":"String/String[]/Object"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The handler to remove.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope originally specified for <code>fn</code>.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>Extra options object.</p>\n\n","html_type":"Object"}],"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a> instead.</p>\n","version":"5.1"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["removeListener"],"id":"method-removeAfterListener","owner":"Ext.mixin.Observable","short_doc":"Removes a before-event handler. ..."},{"tagname":"method","name":"removeAll","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":232}],"doc":"<p></p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"name":"silent","type":"Object","html_type":"Object"}],"chainable":null,"fires":[],"method_calls":["getData","resumeEvent","suspendEvent"],"id":"method-removeAll","owner":"Ext.data.BufferedStore","since":"1.1.0","overrides":[{"name":"removeAll","owner":"Ext.data.ProxyStore","link":"<a href=\"#!/api/Ext.data.ProxyStore-method-removeAll\" rel=\"Ext.data.ProxyStore-method-removeAll\" class=\"docClass\">Ext.data.ProxyStore.removeAll</a>"}],"short_doc":" ..."},{"tagname":"method","name":"removeBeforeListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1520}],"doc":"<p>Removes a before-event handler.</p>\n\n<p>Same as <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a> with <code>order</code> set to <code>'before'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event the handler was associated with.</p>\n\n","html_type":"String/String[]/Object"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The handler to remove.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope originally specified for <code>fn</code>.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>Extra options object.</p>\n\n","html_type":"Object"}],"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a> instead.</p>\n","version":"5.1"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["removeListener"],"id":"method-removeBeforeListener","owner":"Ext.mixin.Observable","short_doc":"Removes a before-event handler. ..."},{"tagname":"method","name":"removeFilter","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":556}],"doc":"<p>Removes an individual Filter from the current <a href=\"#!/api/Ext.data.AbstractStore-cfg-filters\" rel=\"Ext.data.AbstractStore-cfg-filters\" class=\"docClass\">filter set</a> using the passed Filter/Filter id and\nby default, applies the updated filter set to the Store's unfiltered dataset.</p>\n","params":[{"tagname":"params","type":"String/Ext.util.Filter","name":"toRemove","doc":"<p>The id of a Filter to remove from the filter set, or a Filter instance to remove.</p>\n","html_type":"String/<a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a>"},{"tagname":"params","type":"Boolean","name":"suppressEvent","optional":true,"doc":"<p>If <code>true</code> the filter is cleared silently.</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getFilters"],"id":"method-removeFilter","owner":"Ext.data.AbstractStore","short_doc":"Removes an individual Filter from the current filter set using the passed Filter/Filter id and\nby default, applies th..."},{"tagname":"method","name":"removeListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":992}],"doc":"<p>Removes an event handler.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The type of event the handler was associated with.</p>\n\n","html_type":"String"},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The handler to remove. <strong>This must be a reference to the function\npassed into the\n<a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope originally specified for the handler. It\nmust be the same as the scope argument specified in the original call to\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a> or the listener will not be removed.</p>\n\n\n\n\n<p><strong>Convenience Syntax</strong></p>\n\n\n\n\n<p>You can use the {link <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> addListener destroyable: true} config option in\nplace of calling un().  For example:</p>\n\n\n\n\n<pre><code>var listeners = cmp.on({\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide,\n    destroyable: true\n});\n\n// Remove listeners\nlisteners.destroy();\n// or\ncmp.un(\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide\n);\n</code></pre>\n\n\n\n\n<p><strong>Exception - DOM event handlers using the element config option</strong></p>\n\n\n\n\n<p>You must go directly through the element to detach an event handler attached using\nthe <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> <em>element</em> option.</p>\n\n\n\n\n<pre><code>panel.on({\n    element: 'body',\n    click: 'onBodyCLick'\n});\n\npanel.body.un({\n    click: 'onBodyCLick'\n});\n</code></pre>\n\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["doRemoveListener"],"id":"method-removeListener","owner":"Ext.mixin.Observable","short_doc":"Removes an event handler. ..."},{"tagname":"method","name":"removeManagedListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":512}],"doc":"<p>Removes listeners that were added by the <a href=\"#!/api/Ext.mixin.Observable-method-mon\" rel=\"Ext.mixin.Observable-method-mon\" class=\"docClass\">mon</a> method.</p>\n","params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item from which to remove a listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","html_type":"Object/String"},{"tagname":"params","type":"Function","name":"fn","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["removeManagedListener","removeManagedListenerItem"],"id":"method-removeManagedListener","owner":"Ext.mixin.Observable","short_doc":"Removes listeners that were added by the mon method. ..."},{"tagname":"method","name":"removeManagedListenerItem","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1112}],"doc":"<p>Remove a single managed listener item</p>\n","private":true,"params":[{"tagname":"params","type":"Boolean","name":"isClear","doc":"<p>True if this is being called during a clear</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Object","name":"managedListener","doc":"<p>The managed listener item\nSee removeManagedListener for other args</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-removeManagedListenerItem","owner":"Ext.mixin.Observable","short_doc":"Remove a single managed listener item ..."},{"tagname":"method","name":"resolveListenerScope","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":565}],"doc":"<p>Gets the default scope for firing late bound events (string names with\nno scope attached) at runtime.</p>\n","params":[{"tagname":"params","type":"Object","name":"defaultScope","default":"this","optional":true,"doc":"<p>The default scope to return if none is found.</p>\n","html_type":"Object"}],"return":{"type":"Object","name":"return","doc":"<p>The default event scope</p>\n\n","properties":null,"html_type":"Object"},"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-resolveListenerScope","owner":"Ext.mixin.Observable","overrides":[{"name":"resolveListenerScope","owner":"Ext.mixin.Inheritable","link":"<a href=\"#!/api/Ext.mixin.Inheritable-method-resolveListenerScope\" rel=\"Ext.mixin.Inheritable-method-resolveListenerScope\" class=\"docClass\">Ext.mixin.Inheritable.resolveListenerScope</a>"},{"name":"resolveListenerScope","owner":"Ext.plugin.Abstract","link":"<a href=\"#!/api/Ext.plugin.Abstract-method-resolveListenerScope\" rel=\"Ext.plugin.Abstract-method-resolveListenerScope\" class=\"docClass\">Ext.plugin.Abstract.resolveListenerScope</a>"}],"short_doc":"Gets the default scope for firing late bound events (string names with\nno scope attached) at runtime. ..."},{"tagname":"method","name":"resumeAutoSync","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":887}],"doc":"<p>Resumes automatically syncing the Store with its Proxy.  Only applicable if <a href=\"#!/api/Ext.data.ProxyStore-cfg-autoSync\" rel=\"Ext.data.ProxyStore-cfg-autoSync\" class=\"docClass\">autoSync</a> is <code>true</code></p>\n","params":[{"tagname":"params","type":"Boolean","name":"syncNow","doc":"<p>Pass <code>true</code> to synchronize now. Only synchronizes with the Proxy if the suspension\ncount has gone to zero (We are not under a higher level of suspension)</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":["<a href=\"#!/api/Ext.data.ProxyStore-event-beforesync\" rel=\"Ext.data.ProxyStore-event-beforesync\" class=\"docClass\">beforesync</a>"],"method_calls":["sync"],"id":"method-resumeAutoSync","owner":"Ext.data.ProxyStore","short_doc":"Resumes automatically syncing the Store with its Proxy. ..."},{"tagname":"method","name":"resumeEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1209}],"doc":"<p>Resumes firing of the named event(s).</p>\n\n<p>After calling this method to resume events, the events will fire when requested to fire.</p>\n\n<p><strong>Note that if the <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvent\" rel=\"Ext.mixin.Observable-method-suspendEvent\" class=\"docClass\">suspendEvent</a> method is called multiple times for a certain event,\nthis converse method will have to be called the same number of times for it to resume firing.</strong></p>\n","params":[{"tagname":"params","type":"String...","name":"eventName","doc":"<p>Multiple event names to resume.</p>\n","html_type":"String..."}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-resumeEvent","owner":"Ext.mixin.Observable","short_doc":"Resumes firing of the named event(s). ..."},{"tagname":"method","name":"resumeEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1233}],"doc":"<p>Resumes firing events (see <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvents\" rel=\"Ext.mixin.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a>).</p>\n\n<p>If events were suspended using the <code>queueSuspended</code> parameter, then all events fired\nduring event suspension will be sent to any listeners now.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"discardQueue","optional":true,"doc":"<p><code>true</code> to prevent any previously queued events from firing\nwhile we were suspended. See <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvents\" rel=\"Ext.mixin.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a>.</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-resumeEvents","owner":"Ext.mixin.Observable","short_doc":"Resumes firing events (see suspendEvents). ..."},{"tagname":"method","name":"save","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":670}],"doc":"<p>Saves all pending changes via the configured <a href=\"#!/api/Ext.data.ProxyStore-cfg-proxy\" rel=\"Ext.data.ProxyStore-cfg-proxy\" class=\"docClass\">proxy</a>. Use <a href=\"#!/api/Ext.data.ProxyStore-method-sync\" rel=\"Ext.data.ProxyStore-method-sync\" class=\"docClass\">sync</a> instead.</p>\n","deprecated":{"text":"<p>Will be removed in the next major version</p>\n","version":"4.0.0"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-save","owner":"Ext.data.ProxyStore","short_doc":"Saves all pending changes via the configured proxy. ..."},{"tagname":"method","name":"setAutoDestroy","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.AbstractStore-cfg-autoDestroy\" rel=\"Ext.data.AbstractStore-cfg-autoDestroy\" class=\"docClass\">autoDestroy</a>.</p>\n","params":[{"type":"Boolean","name":"autoDestroy","doc":"<p>The new value.</p>\n","html_type":"Boolean"}],"id":"method-setAutoDestroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":45}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.AbstractStore","short_doc":"Sets the value of autoDestroy. ..."},{"tagname":"method","name":"setAutoLoad","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.ProxyStore-cfg-autoLoad\" rel=\"Ext.data.ProxyStore-cfg-autoLoad\" class=\"docClass\">autoLoad</a>.</p>\n","params":[{"type":"Boolean/Object","name":"autoLoad","doc":"<p>The new value.</p>\n","html_type":"Boolean/Object"}],"id":"method-setAutoLoad","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":70}],"properties":null,"since":"2.3.0","static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.ProxyStore","short_doc":"Sets the value of autoLoad. ..."},{"tagname":"method","name":"setAutoLoadDelay","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.ProxyStore-cfg-autoLoadDelay\" rel=\"Ext.data.ProxyStore-cfg-autoLoadDelay\" class=\"docClass\">autoLoadDelay</a>.</p>\n","params":[{"type":"Number","name":"autoLoadDelay","doc":"<p>The new value.</p>\n","html_type":"Number"}],"id":"method-setAutoLoadDelay","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":112}],"private":true,"static":null,"inheritable":null,"linenr":null,"owner":"Ext.data.ProxyStore","short_doc":"Sets the value of autoLoadDelay. ..."},{"tagname":"method","name":"setAutoSync","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.ProxyStore-cfg-autoSync\" rel=\"Ext.data.ProxyStore-cfg-autoSync\" class=\"docClass\">autoSync</a>.</p>\n","params":[{"type":"Boolean","name":"autoSync","doc":"<p>The new value.</p>\n","html_type":"Boolean"}],"id":"method-setAutoSync","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":83}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.ProxyStore","short_doc":"Sets the value of autoSync. ..."},{"tagname":"method","name":"setBatchUpdateMode","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.ProxyStore-cfg-batchUpdateMode\" rel=\"Ext.data.ProxyStore-cfg-batchUpdateMode\" class=\"docClass\">batchUpdateMode</a>.</p>\n","params":[{"type":"String","name":"batchUpdateMode","doc":"<p>The new value.</p>\n","html_type":"String"}],"id":"method-setBatchUpdateMode","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":89}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.ProxyStore","short_doc":"Sets the value of batchUpdateMode. ..."},{"tagname":"method","name":"setConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1441}],"doc":"<p>Sets a single/multiple configuration options.</p>\n","params":[{"tagname":"params","type":"String/Object","name":"name","doc":"<p>The name of the property to set, or a set of key value pairs to set.</p>\n","html_type":"String/Object"},{"tagname":"params","type":"Object","name":"value","optional":true,"doc":"<p>The value to set for the name parameter.</p>\n","html_type":"Object"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["getConfigurator"],"id":"method-setConfig","owner":"Ext.Base","short_doc":"Sets a single/multiple configuration options. ..."},{"tagname":"method","name":"setData","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.BufferedStore-cfg-data\" rel=\"Ext.data.BufferedStore-cfg-data\" class=\"docClass\">data</a>.</p>\n","params":[{"type":"Number","name":"data","doc":"<p>The new value.</p>\n","html_type":"Number"}],"id":"method-setData","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":74}],"static":null,"private":null,"inheritable":null,"linenr":74,"owner":"Ext.data.BufferedStore","short_doc":"Sets the value of data. ..."},{"tagname":"method","name":"setDefaultViewSize","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.BufferedStore-cfg-defaultViewSize\" rel=\"Ext.data.BufferedStore-cfg-defaultViewSize\" class=\"docClass\">defaultViewSize</a>.</p>\n","params":[{"type":"Number","name":"defaultViewSize","doc":"<p>The new value.</p>\n","html_type":"Number"}],"id":"method-setDefaultViewSize","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":106}],"properties":null,"private":true,"static":null,"inheritable":null,"linenr":null,"owner":"Ext.data.BufferedStore","short_doc":"Sets the value of defaultViewSize. ..."},{"tagname":"method","name":"setFields","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.ProxyStore-cfg-fields\" rel=\"Ext.data.ProxyStore-cfg-fields\" class=\"docClass\">fields</a>.</p>\n","params":[{"type":"Object[]","name":"fields","doc":"<p>The new value.</p>\n","html_type":"Object[]"}],"id":"method-setFields","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":49}],"properties":null,"since":"2.3.0","static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.ProxyStore","short_doc":"Sets the value of fields. ..."},{"tagname":"method","name":"setGroupDir","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.AbstractStore-cfg-groupDir\" rel=\"Ext.data.AbstractStore-cfg-groupDir\" class=\"docClass\">groupDir</a>.</p>\n","params":[{"type":"String","name":"groupDir","doc":"<p>The new value.</p>\n","html_type":"String"}],"id":"method-setGroupDir","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":100}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.AbstractStore","short_doc":"Sets the value of groupDir. ..."},{"tagname":"method","name":"setGroupField","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.AbstractStore-cfg-groupField\" rel=\"Ext.data.AbstractStore-cfg-groupField\" class=\"docClass\">groupField</a>.</p>\n","params":[{"type":"String","name":"groupField","doc":"<p>The new value.</p>\n","html_type":"String"}],"id":"method-setGroupField","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":92}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.AbstractStore","short_doc":"Sets the value of groupField. ..."},{"tagname":"method","name":"setGrouper","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.AbstractStore-cfg-grouper\" rel=\"Ext.data.AbstractStore-cfg-grouper\" class=\"docClass\">grouper</a>.</p>\n","params":[{"type":"Object/Ext.util.Grouper","name":"grouper","doc":"<p>The new value.</p>\n","html_type":"Object/<a href=\"#!/api/Ext.util.Grouper\" rel=\"Ext.util.Grouper\" class=\"docClass\">Ext.util.Grouper</a>"}],"id":"method-setGrouper","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":106}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.AbstractStore","short_doc":"Sets the value of grouper. ..."},{"tagname":"method","name":"setLeadingBufferZone","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.BufferedStore-cfg-leadingBufferZone\" rel=\"Ext.data.BufferedStore-cfg-leadingBufferZone\" class=\"docClass\">leadingBufferZone</a>.</p>\n","params":[{"type":"Number","name":"leadingBufferZone","doc":"<p>The new value.</p>\n","html_type":"Number"}],"id":"method-setLeadingBufferZone","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":99}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.BufferedStore","short_doc":"Sets the value of leadingBufferZone. ..."},{"tagname":"method","name":"setListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1677}],"doc":"<p>An alias for <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a>.  In versions prior to 5.1, <a href=\"#!/api/Ext.mixin.Observable-cfg-listeners\" rel=\"Ext.mixin.Observable-cfg-listeners\" class=\"docClass\">listeners</a>\nhad a generated setter which could be called to add listeners.  In 5.1 the listeners\nconfig is not processed using the config system and has no generated setter, so\nthis method is provided for backward compatibility.  The preferred way of\nadding listeners is to use the <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> method.</p>\n","params":[{"tagname":"params","type":"Object","name":"listeners","doc":"<p>The listeners</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-setListeners","owner":"Ext.mixin.Observable","short_doc":"An alias for addListener. ..."},{"tagname":"method","name":"setModel","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.ProxyStore-cfg-model\" rel=\"Ext.data.ProxyStore-cfg-model\" class=\"docClass\">model</a>.</p>\n","params":[{"type":"String/Ext.data.Model","name":"model","doc":"<p>The new value.</p>\n","html_type":"String/<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"}],"id":"method-setModel","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":37}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.ProxyStore","short_doc":"Sets the value of model. ..."},{"tagname":"method","name":"setPageSize","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.BufferedStore-cfg-pageSize\" rel=\"Ext.data.BufferedStore-cfg-pageSize\" class=\"docClass\">pageSize</a>.</p>\n","params":[{"type":"Number","name":"pageSize","doc":"<p>The new value.</p>\n","html_type":"Number"}],"id":"method-setPageSize","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":75}],"static":null,"private":null,"inheritable":null,"linenr":75,"owner":"Ext.data.BufferedStore","overrides":[{"name":"setPageSize","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-setPageSize\" rel=\"Ext.data.AbstractStore-method-setPageSize\" class=\"docClass\">Ext.data.AbstractStore.setPageSize</a>"}],"short_doc":"Sets the value of pageSize. ..."},{"tagname":"method","name":"setProxy","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.ProxyStore-cfg-proxy\" rel=\"Ext.data.ProxyStore-cfg-proxy\" class=\"docClass\">proxy</a>.</p>\n","params":[{"type":"String/Ext.data.proxy.Proxy/Object","name":"proxy","doc":"<p>The new value.</p>\n","html_type":"String/<a href=\"#!/api/Ext.data.proxy.Proxy\" rel=\"Ext.data.proxy.Proxy\" class=\"docClass\">Ext.data.proxy.Proxy</a>/Object"}],"id":"method-setProxy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":62}],"properties":null,"since":"1.1.0","static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.ProxyStore","short_doc":"Sets the value of proxy. ..."},{"tagname":"method","name":"setPurgePageCount","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.BufferedStore-cfg-purgePageCount\" rel=\"Ext.data.BufferedStore-cfg-purgePageCount\" class=\"docClass\">purgePageCount</a>.</p>\n","params":[{"type":"Number","name":"purgePageCount","doc":"<p>The new value.</p>\n","html_type":"Number"}],"id":"method-setPurgePageCount","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":79}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.BufferedStore","short_doc":"Sets the value of purgePageCount. ..."},{"tagname":"method","name":"setRemoteFilter","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.BufferedStore-cfg-remoteFilter\" rel=\"Ext.data.BufferedStore-cfg-remoteFilter\" class=\"docClass\">remoteFilter</a>.</p>\n","params":[{"type":"Boolean","name":"remoteFilter","doc":"<p>The new value.</p>\n","html_type":"Boolean"}],"id":"method-setRemoteFilter","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":77}],"static":null,"private":null,"inheritable":null,"linenr":77,"owner":"Ext.data.BufferedStore","overrides":[{"name":"setRemoteFilter","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-setRemoteFilter\" rel=\"Ext.data.AbstractStore-method-setRemoteFilter\" class=\"docClass\">Ext.data.AbstractStore.setRemoteFilter</a>"}],"short_doc":"Sets the value of remoteFilter. ..."},{"tagname":"method","name":"setRemoteSort","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.BufferedStore-cfg-remoteSort\" rel=\"Ext.data.BufferedStore-cfg-remoteSort\" class=\"docClass\">remoteSort</a>.</p>\n","params":[{"type":"Boolean","name":"remoteSort","doc":"<p>The new value.</p>\n","html_type":"Boolean"}],"id":"method-setRemoteSort","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":76}],"static":null,"private":null,"inheritable":null,"linenr":76,"owner":"Ext.data.BufferedStore","overrides":[{"name":"setRemoteSort","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-setRemoteSort\" rel=\"Ext.data.AbstractStore-method-setRemoteSort\" class=\"docClass\">Ext.data.AbstractStore.setRemoteSort</a>"}],"short_doc":"Sets the value of remoteSort. ..."},{"tagname":"method","name":"setSortOnLoad","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.BufferedStore-cfg-sortOnLoad\" rel=\"Ext.data.BufferedStore-cfg-sortOnLoad\" class=\"docClass\">sortOnLoad</a>.</p>\n","params":[{"type":"Boolean","name":"sortOnLoad","doc":"<p>The new value.</p>\n","html_type":"Boolean"}],"id":"method-setSortOnLoad","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":78}],"static":null,"private":null,"inheritable":null,"linenr":78,"owner":"Ext.data.BufferedStore","overrides":[{"name":"setSortOnLoad","owner":"Ext.data.ProxyStore","link":"<a href=\"#!/api/Ext.data.ProxyStore-method-setSortOnLoad\" rel=\"Ext.data.ProxyStore-method-setSortOnLoad\" class=\"docClass\">Ext.data.ProxyStore.setSortOnLoad</a>"}],"short_doc":"Sets the value of sortOnLoad. ..."},{"tagname":"method","name":"setStatefulFilters","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.AbstractStore-cfg-statefulFilters\" rel=\"Ext.data.AbstractStore-cfg-statefulFilters\" class=\"docClass\">statefulFilters</a>.</p>\n","params":[{"type":"Boolean","name":"statefulFilters","doc":"<p>The new value.</p>\n","html_type":"Boolean"}],"id":"method-setStatefulFilters","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":62}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.AbstractStore","short_doc":"Sets the value of statefulFilters. ..."},{"tagname":"method","name":"setStoreId","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.AbstractStore-cfg-storeId\" rel=\"Ext.data.AbstractStore-cfg-storeId\" class=\"docClass\">storeId</a>.</p>\n","params":[{"type":"String","name":"storeId","doc":"<p>The new value.</p>\n","html_type":"String"}],"id":"method-setStoreId","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":52}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.AbstractStore","short_doc":"Sets the value of storeId. ..."},{"tagname":"method","name":"setTrackRemoved","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.BufferedStore-cfg-trackRemoved\" rel=\"Ext.data.BufferedStore-cfg-trackRemoved\" class=\"docClass\">trackRemoved</a>.</p>\n","params":[{"type":"Boolean","name":"trackRemoved","doc":"<p>The new value.</p>\n","html_type":"Boolean"}],"id":"method-setTrackRemoved","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":119}],"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.BufferedStore","overrides":[{"name":"setTrackRemoved","owner":"Ext.data.ProxyStore","link":"<a href=\"#!/api/Ext.data.ProxyStore-method-setTrackRemoved\" rel=\"Ext.data.ProxyStore-method-setTrackRemoved\" class=\"docClass\">Ext.data.ProxyStore.setTrackRemoved</a>"}],"short_doc":"Sets the value of trackRemoved. ..."},{"tagname":"method","name":"setTrailingBufferZone","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.BufferedStore-cfg-trailingBufferZone\" rel=\"Ext.data.BufferedStore-cfg-trailingBufferZone\" class=\"docClass\">trailingBufferZone</a>.</p>\n","params":[{"type":"Number","name":"trailingBufferZone","doc":"<p>The new value.</p>\n","html_type":"Number"}],"id":"method-setTrailingBufferZone","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":92}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.BufferedStore","short_doc":"Sets the value of trailingBufferZone. ..."},{"tagname":"method","name":"setViewSize","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.BufferedStore-cfg-viewSize\" rel=\"Ext.data.BufferedStore-cfg-viewSize\" class=\"docClass\">viewSize</a>.</p>\n","params":[{"type":"Number","name":"viewSize","doc":"<p>The new value.</p>\n","html_type":"Number"}],"id":"method-setViewSize","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":112}],"properties":null,"private":true,"static":null,"inheritable":null,"linenr":null,"owner":"Ext.data.BufferedStore","short_doc":"Sets the value of viewSize. ..."},{"tagname":"method","name":"sort","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":1042}],"doc":"<p>Sorts the data in the Store by one or more of its properties. Example usage:</p>\n\n<pre><code>//sort by a single field\nmyStore.sort('myField', 'DESC');\n\n//sorting by multiple fields\nmyStore.sort([\n    {\n        property : 'age',\n        direction: 'ASC'\n    },\n    {\n        property : 'name',\n        direction: 'DESC'\n    }\n]);\n</code></pre>\n\n<p>Internally, Store converts the passed arguments into an array of <a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a> instances, and delegates\nthe actual sorting to its internal <a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a>.</p>\n\n<p>When passing a single string argument to sort, Store maintains a ASC/DESC toggler per field, so this code:</p>\n\n<pre><code>store.sort('myField');\nstore.sort('myField');\n</code></pre>\n\n<p>Is equivalent to this code, because Store handles the toggling automatically:</p>\n\n<pre><code>store.sort('myField', 'ASC');\nstore.sort('myField', 'DESC');\n</code></pre>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":1042,"params":[{"name":"field","type":"Object","html_type":"Object"},{"name":"direction","type":"Object","html_type":"Object"},{"name":"mode","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.data.BufferedStore-event-beforeload\" rel=\"Ext.data.BufferedStore-event-beforeload\" class=\"docClass\">beforeload</a>","beforeprefetch","cachefilled","cachemiss","<a href=\"#!/api/Ext.data.BufferedStore-event-datachanged\" rel=\"Ext.data.BufferedStore-event-datachanged\" class=\"docClass\">datachanged</a>","guaranteedrange","<a href=\"#!/api/Ext.data.BufferedStore-event-load\" rel=\"Ext.data.BufferedStore-event-load\" class=\"docClass\">load</a>","<a href=\"#!/api/Ext.data.BufferedStore-event-refresh\" rel=\"Ext.data.BufferedStore-event-refresh\" class=\"docClass\">refresh</a>"],"method_calls":["clearAndLoad","getSorters"],"id":"method-sort","owner":"Ext.data.BufferedStore","return":{"type":"Ext.util.Sorter[]","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a>[]"},"overrides":[{"name":"sort","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-sort\" rel=\"Ext.data.AbstractStore-method-sort\" class=\"docClass\">Ext.data.AbstractStore.sort</a>"}],"short_doc":"Sorts the data in the Store by one or more of its properties. ..."},{"tagname":"method","name":"statics","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1075}],"doc":"<p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self();   // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n","protected":true,"return":{"type":"Ext.Class","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-statics","owner":"Ext.Base","short_doc":"Get the reference to the class from which this object was instantiated. ..."},{"tagname":"method","name":"suspendAutoSync","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":880}],"doc":"<p>Suspends automatically syncing the Store with its Proxy.  Only applicable if <a href=\"#!/api/Ext.data.ProxyStore-cfg-autoSync\" rel=\"Ext.data.ProxyStore-cfg-autoSync\" class=\"docClass\">autoSync</a> is <code>true</code></p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-suspendAutoSync","owner":"Ext.data.ProxyStore","short_doc":"Suspends automatically syncing the Store with its Proxy. ..."},{"tagname":"method","name":"suspendEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1181}],"doc":"<p>Suspends firing of the named event(s).</p>\n\n<p>After calling this method to suspend events, the events will no longer fire when requested to fire.</p>\n\n<p><strong>Note that if this is called multiple times for a certain event, the converse method\n<a href=\"#!/api/Ext.mixin.Observable-method-resumeEvent\" rel=\"Ext.mixin.Observable-method-resumeEvent\" class=\"docClass\">resumeEvent</a> will have to be called the same number of times for it to resume firing.</strong></p>\n","params":[{"tagname":"params","type":"String...","name":"eventName","doc":"<p>Multiple event names to suspend.</p>\n","html_type":"String..."}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["_initEvent"],"id":"method-suspendEvent","owner":"Ext.mixin.Observable","short_doc":"Suspends firing of the named event(s). ..."},{"tagname":"method","name":"suspendEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1168}],"doc":"<p>Suspends the firing of all events. (see <a href=\"#!/api/Ext.mixin.Observable-method-resumeEvents\" rel=\"Ext.mixin.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a>)</p>\n","params":[{"tagname":"params","type":"Boolean","name":"queueSuspended","doc":"<p><code>true</code> to queue up suspended events to be fired\nafter the <a href=\"#!/api/Ext.mixin.Observable-method-resumeEvents\" rel=\"Ext.mixin.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> call instead of discarding all suspended events.</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-suspendEvents","owner":"Ext.mixin.Observable","short_doc":"Suspends the firing of all events. ..."},{"tagname":"method","name":"sync","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":563}],"doc":"<p>Synchronizes the store with its <a href=\"#!/api/Ext.data.ProxyStore-cfg-proxy\" rel=\"Ext.data.ProxyStore-cfg-proxy\" class=\"docClass\">proxy</a>. This asks the proxy to batch together any new, updated\nand deleted records in the store, updating the store's internal representation of the records\nas each operation completes.</p>\n","params":[{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>Object containing one or more properties supported by the sync method (these get\npassed along to the underlying proxy's <a href=\"#!/api/Ext.data.proxy.Proxy-method-batch\" rel=\"Ext.data.proxy.Proxy-method-batch\" class=\"docClass\">batch</a> method):</p>\n","properties":[{"tagname":"params","type":"Ext.data.Batch/Object","name":"batch","optional":true,"doc":"<p>A <a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">Ext.data.Batch</a> object (or batch config to apply\nto the created batch). If unspecified a default batch will be auto-created as needed.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">Ext.data.Batch</a>/Object"},{"tagname":"params","type":"Function","name":"callback","optional":true,"doc":"<p>The function to be called upon completion of the sync.\nThe callback is called regardless of success or failure and is passed the following parameters:</p>\n","properties":[{"tagname":"params","type":"Ext.data.Batch","name":"batch","doc":"<p>The <a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">batch</a> that was processed,\ncontaining all operations in their current state after processing</p>\n","html_type":"<a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">Ext.data.Batch</a>"},{"tagname":"params","type":"Object","name":"options","doc":"<p>The options argument that was originally passed into sync</p>\n","html_type":"Object"}],"html_type":"Function"},{"tagname":"params","type":"Function","name":"success","optional":true,"doc":"<p>The function to be called upon successful completion of the sync. The\nsuccess function is called only if no exceptions were reported in any operations. If one or more exceptions\noccurred then the failure function will be called instead. The success function is called\nwith the following parameters:</p>\n","properties":[{"tagname":"params","type":"Ext.data.Batch","name":"batch","doc":"<p>The <a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">batch</a> that was processed,\ncontaining all operations in their current state after processing</p>\n","html_type":"<a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">Ext.data.Batch</a>"},{"tagname":"params","type":"Object","name":"options","doc":"<p>The options argument that was originally passed into sync</p>\n","html_type":"Object"}],"html_type":"Function"},{"tagname":"params","type":"Function","name":"failure","optional":true,"doc":"<p>The function to be called upon unsuccessful completion of the sync. The\nfailure function is called when one or more operations returns an exception during processing (even if some\noperations were also successful). In this case you can check the batch's <a href=\"#!/api/Ext.data.Batch-property-exceptions\" rel=\"Ext.data.Batch-property-exceptions\" class=\"docClass\">exceptions</a> array to see exactly which operations had exceptions. The failure function is called with the\nfollowing parameters:</p>\n","properties":[{"tagname":"params","type":"Ext.data.Batch","name":"batch","doc":"<p>The <a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">Ext.data.Batch</a> that was processed, containing all\noperations in their current state after processing</p>\n","html_type":"<a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">Ext.data.Batch</a>"},{"tagname":"params","type":"Object","name":"options","doc":"<p>The options argument that was originally passed into sync</p>\n","html_type":"Object"}],"html_type":"Function"},{"tagname":"params","type":"Object","name":"params","optional":true,"doc":"<p>Additional params to send during the sync Operation(s).</p>\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope in which to execute any callbacks (i.e. the <code>this</code> object inside\nthe callback, success and/or failure functions). Defaults to the store's proxy.</p>\n","html_type":"Object"}],"html_type":"Object"}],"return":{"type":"Ext.data.Store","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":["<a href=\"#!/api/Ext.data.ProxyStore-event-beforesync\" rel=\"Ext.data.ProxyStore-event-beforesync\" class=\"docClass\">beforesync</a>"],"method_calls":["fireEvent","getBatchListeners","getNewRecords","getRemovedRecords","getUpdatedRecords"],"id":"method-sync","owner":"Ext.data.ProxyStore","short_doc":"Synchronizes the store with its proxy. ..."},{"tagname":"method","name":"un","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1659}],"doc":"<p>Shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The type of event the handler was associated with.</p>\n\n","html_type":"String"},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The handler to remove. <strong>This must be a reference to the function\npassed into the\n<a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope originally specified for the handler. It\nmust be the same as the scope argument specified in the original call to\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a> or the listener will not be removed.</p>\n\n\n\n\n<p><strong>Convenience Syntax</strong></p>\n\n\n\n\n<p>You can use the {link <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> addListener destroyable: true} config option in\nplace of calling un().  For example:</p>\n\n\n\n\n<pre><code>var listeners = cmp.on({\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide,\n    destroyable: true\n});\n\n// Remove listeners\nlisteners.destroy();\n// or\ncmp.un(\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide\n);\n</code></pre>\n\n\n\n\n<p><strong>Exception - DOM event handlers using the element config option</strong></p>\n\n\n\n\n<p>You must go directly through the element to detach an event handler attached using\nthe <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> <em>element</em> option.</p>\n\n\n\n\n<pre><code>panel.on({\n    element: 'body',\n    click: 'onBodyCLick'\n});\n\npanel.body.un({\n    click: 'onBodyCLick'\n});\n</code></pre>\n\n","html_type":"Object"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-un","owner":"Ext.mixin.Observable","return":null,"throws":null,"type":null,"short_doc":"Shorthand for removeListener. ..."},{"tagname":"method","name":"unAfter","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1571}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-removeAfterListener\" rel=\"Ext.mixin.Observable-method-removeAfterListener\" class=\"docClass\">removeAfterListener</a>.</p>\n","inheritdoc":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-un\" rel=\"Ext.mixin.Observable-method-un\" class=\"docClass\">un</a> instead.</p>\n","version":"5.1"},"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event the handler was associated with.</p>\n\n","html_type":"String/String[]/Object"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The handler to remove.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope originally specified for <code>fn</code>.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>Extra options object.</p>\n\n","html_type":"Object"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-unAfter","owner":"Ext.mixin.Observable","return":null,"throws":null,"type":null,"short_doc":"Alias for removeAfterListener. ..."},{"tagname":"method","name":"unBefore","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1564}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-removeBeforeListener\" rel=\"Ext.mixin.Observable-method-removeBeforeListener\" class=\"docClass\">removeBeforeListener</a>.</p>\n","inheritdoc":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-un\" rel=\"Ext.mixin.Observable-method-un\" class=\"docClass\">un</a> instead.</p>\n","version":"5.1"},"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event the handler was associated with.</p>\n\n","html_type":"String/String[]/Object"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The handler to remove.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope originally specified for <code>fn</code>.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>Extra options object.</p>\n\n","html_type":"Object"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-unBefore","owner":"Ext.mixin.Observable","return":null,"throws":null,"type":null,"short_doc":"Alias for removeBeforeListener. ..."},{"tagname":"method","name":"unlink","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1526}],"doc":"<p>Destroys a given set of <code><a href=\"#!/api/Ext.Base-method-link\" rel=\"Ext.Base-method-link\" class=\"docClass\">linked</a></code> objects. This is only needed if\nthe linked object is being destroyed before this instance.</p>\n","params":[{"tagname":"params","type":"String[]","name":"names","doc":"<p>The names of the linked objects to destroy.</p>\n","html_type":"String[]"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"method-unlink","owner":"Ext.Base","short_doc":"Destroys a given set of linked objects. ..."},{"tagname":"method","name":"update","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":386}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":386,"params":[{"name":"options","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["createOperation","getUpdatedRecords"],"id":"method-update","owner":"Ext.data.ProxyStore","short_doc":" ..."},{"tagname":"method","name":"updateAutoLoad","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":247}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":247,"params":[{"name":"autoLoad","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["getData"],"id":"method-updateAutoLoad","owner":"Ext.data.ProxyStore","short_doc":" ..."},{"tagname":"method","name":"updateGroupField","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":182}],"doc":"<p></p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[{"name":"field","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.data.BufferedStore-event-beforeload\" rel=\"Ext.data.BufferedStore-event-beforeload\" class=\"docClass\">beforeload</a>","beforeprefetch","cachefilled","cachemiss","<a href=\"#!/api/Ext.data.BufferedStore-event-datachanged\" rel=\"Ext.data.BufferedStore-event-datachanged\" class=\"docClass\">datachanged</a>","groupchange","guaranteedrange","<a href=\"#!/api/Ext.data.BufferedStore-event-load\" rel=\"Ext.data.BufferedStore-event-load\" class=\"docClass\">load</a>","<a href=\"#!/api/Ext.data.BufferedStore-event-refresh\" rel=\"Ext.data.BufferedStore-event-refresh\" class=\"docClass\">refresh</a>"],"method_calls":["blockLoad","group","unblockLoad"],"id":"method-updateGroupField","owner":"Ext.data.BufferedStore","return":null,"throws":null,"type":null,"overrides":[{"name":"updateGroupField","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-updateGroupField\" rel=\"Ext.data.AbstractStore-method-updateGroupField\" class=\"docClass\">Ext.data.AbstractStore.updateGroupField</a>"}],"short_doc":" ..."},{"tagname":"method","name":"updateProxy","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":350}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":350,"params":[{"name":"proxy","type":"Object","html_type":"Object"},{"name":"oldProxy","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-updateProxy","owner":"Ext.data.ProxyStore","short_doc":" ..."},{"tagname":"method","name":"updateRemoteFilter","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":161}],"doc":"<p><debug></debug></p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[{"name":"remoteFilter","type":"Object","html_type":"Object"},{"name":"oldRemoteFilter","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["callParent"],"id":"method-updateRemoteFilter","owner":"Ext.data.BufferedStore","return":null,"throws":null,"type":null,"overrides":[{"name":"updateRemoteFilter","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-updateRemoteFilter\" rel=\"Ext.data.AbstractStore-method-updateRemoteFilter\" class=\"docClass\">Ext.data.AbstractStore.updateRemoteFilter</a>"}],"short_doc":" ..."},{"tagname":"method","name":"updateRemoteSort","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":169}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":169,"params":[{"name":"remoteSort","type":"Object","html_type":"Object"},{"name":"oldRemoteSort","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["callParent"],"id":"method-updateRemoteSort","owner":"Ext.data.BufferedStore","return":null,"throws":null,"type":null,"overrides":[{"name":"updateRemoteSort","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-updateRemoteSort\" rel=\"Ext.data.AbstractStore-method-updateRemoteSort\" class=\"docClass\">Ext.data.AbstractStore.updateRemoteSort</a>"}],"short_doc":" ..."},{"tagname":"method","name":"updateTrackRemoved","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/BufferedStore.js","linenr":176}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":176,"params":[{"name":"value","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["callParent"],"id":"method-updateTrackRemoved","owner":"Ext.data.BufferedStore","return":null,"throws":null,"type":null,"overrides":[{"name":"updateTrackRemoved","owner":"Ext.data.ProxyStore","link":"<a href=\"#!/api/Ext.data.ProxyStore-method-updateTrackRemoved\" rel=\"Ext.data.ProxyStore-method-updateTrackRemoved\" class=\"docClass\">Ext.data.ProxyStore.updateTrackRemoved</a>"}],"short_doc":" ..."},{"tagname":"method","name":"addConfig","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":911}],"doc":"<p>Adds new config properties to this class. This is called for classes when they\nare declared, then for any mixins that class may define and finally for any\noverrides defined that target the class.</p>\n","params":[{"tagname":"params","type":"Object","name":"config","doc":"\n","html_type":"Object"},{"tagname":"params","type":"Ext.Class","name":"mixinClass","optional":true,"doc":"<p>The mixin class if the configs are from a mixin.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"}],"private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["getConfigurator"],"id":"static-method-addConfig","owner":"Ext.Base","short_doc":"Adds new config properties to this class. ..."},{"tagname":"method","name":"addInheritableStatics","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":436}],"doc":"\n","private":true,"static":true,"inheritable":true,"params":[{"tagname":"params","type":"Object","name":"members","doc":"\n","html_type":"Object"}],"inheritdoc":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"static-method-addInheritableStatics","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"addMember","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":634}],"doc":"\n","private":true,"static":true,"inheritable":true,"params":[{"tagname":"params","name":"name","doc":"\n","type":"Object","html_type":"Object"},{"tagname":"params","name":"member","doc":"\n","type":"Object","html_type":"Object"}],"inheritdoc":null,"linenr":null,"chainable":true,"fires":null,"method_calls":["addMembers"],"id":"static-method-addMember","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"addMembers","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":480}],"doc":"<p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat();\n kitty.meow();\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"<p>The members to add to this class.</p>\n","html_type":"Object"},{"tagname":"params","type":"Boolean","name":"isStatic","default":"false","optional":true,"doc":"<p>Pass <code>true</code> if the members are static.</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"privacy","default":"false","optional":true,"doc":"<p>Pass <code>true</code> if the members are private. This\nonly has meaning in debug mode and only for methods.</p>\n","html_type":"Boolean"}],"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":true,"fires":null,"method_calls":["addConfig","addMembers"],"id":"static-method-addMembers","owner":"Ext.Base","short_doc":"Add methods / properties to the prototype of this class. ..."},{"tagname":"method","name":"addStatics","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":413}],"doc":"<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"\n","html_type":"Object"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":true,"fires":null,"method_calls":["addMembers"],"id":"static-method-addStatics","owner":"Ext.Base","short_doc":"Add / override static properties of this class. ..."},{"tagname":"method","name":"borrow","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":648}],"doc":"<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n","params":[{"tagname":"params","type":"Ext.Base","name":"fromClass","doc":"<p>The class to borrow members from</p>\n","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},{"tagname":"params","type":"Array/String","name":"members","doc":"<p>The names of the members to borrow</p>\n","html_type":"Array/String"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"inheritable":true,"private":true,"inheritdoc":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["addMembers"],"id":"static-method-borrow","owner":"Ext.Base","short_doc":"Borrow another class' members to the prototype of this class. ..."},{"tagname":"method","name":"callParent","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":785}],"doc":"\n","protected":true,"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[{"name":"args","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-callParent","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"callSuper","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":799}],"doc":"\n","protected":true,"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[{"name":"args","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-callSuper","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"create","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":94}],"doc":"<p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n","return":{"type":"Object","name":"return","doc":"<p>the created instance.</p>\n","properties":null,"html_type":"Object"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-create","owner":"Ext.Base","short_doc":"Create a new instance of this Class. ..."},{"tagname":"method","name":"createAlias","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":973}],"doc":"<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n","params":[{"tagname":"params","type":"String/Object","name":"alias","doc":"<p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n","html_type":"String/Object"},{"tagname":"params","type":"String/Object","name":"origin","doc":"<p>The original method name</p>\n","html_type":"String/Object"}],"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"static-method-createAlias","owner":"Ext.Base","short_doc":"Create aliases for existing prototype methods. ..."},{"tagname":"method","name":"extend","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":322}],"doc":"\n","private":true,"static":true,"inheritable":true,"params":[{"tagname":"params","name":"config","doc":"\n","type":"Object","html_type":"Object"}],"inheritdoc":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["getConfigurator","hasOwnProperty"],"id":"static-method-extend","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"getConfigurator","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":940}],"doc":"<p>Returns the <code><a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a></code> for this class.</p>\n","return":{"type":"Ext.Configurator","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a>"},"private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-getConfigurator","owner":"Ext.Base","short_doc":"Returns the Ext.Configurator for this class. ..."},{"tagname":"method","name":"getName","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":954}],"doc":"<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n","return":{"type":"String","name":"return","doc":"<p>className</p>\n","properties":null,"html_type":"String"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-getName","owner":"Ext.Base","short_doc":"Get the current class' name in string format. ..."},{"tagname":"method","name":"mixin","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":814}],"doc":"<p>Used internally by the mixins pre-processor</p>\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[{"name":"name","type":"Object","html_type":"Object"},{"name":"mixinClass","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":["addConfig","hasOwnProperty","mixin"],"id":"static-method-mixin","owner":"Ext.Base","short_doc":"Used internally by the mixins pre-processor ..."},{"tagname":"method","name":"onExtended","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":399}],"doc":"\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[{"name":"fn","type":"Object","html_type":"Object"},{"name":"scope","type":"Object","html_type":"Object"}],"chainable":true,"fires":null,"method_calls":null,"id":"static-method-onExtended","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"override","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":695}],"doc":"<p>Override members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>Direct use of this method should be rare. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n","html_type":"Object"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this class</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["addCachedConfig","addConfig","addInheritableStatics","addMembers","mixin"],"id":"static-method-override","owner":"Ext.Base","short_doc":"Override members of this class. ..."},{"tagname":"method","name":"triggerExtended","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":377}],"doc":"\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-triggerExtended","owner":"Ext.Base","short_doc":" ..."},{"tagname":"event","name":"add","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":167}],"doc":"<p>Fired when a Model instance has been added to this Store.</p>\n","params":[{"tagname":"params","type":"Ext.data.Store","name":"store","doc":"<p>The store.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"tagname":"params","type":"Ext.data.Model[]","name":"records","doc":"<p>The records that were added.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},{"tagname":"params","type":"Number","name":"index","doc":"<p>The index at which the records were inserted.</p>\n","html_type":"Number"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"since":"1.1.0","id":"event-add","owner":"Ext.data.AbstractStore","short_doc":"Fired when a Model instance has been added to this Store. ..."},{"tagname":"event","name":"beforeload","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":169}],"doc":"<p>Fires before a request is made for a new data object. If the beforeload handler returns false the load\naction will be canceled.</p>\n","params":[{"tagname":"params","type":"Ext.data.Store","name":"store","doc":"<p>This Store</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"tagname":"params","type":"Ext.data.operation.Operation","name":"operation","doc":"<p>The <a href=\"#!/api/Ext.data.operation.Operation\" rel=\"Ext.data.operation.Operation\" class=\"docClass\">Ext.data.operation.Operation</a> object that will be passed to the Proxy to\nload the Store</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.operation.Operation\" rel=\"Ext.data.operation.Operation\" class=\"docClass\">Ext.data.operation.Operation</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"since":"1.1.0","id":"event-beforeload","owner":"Ext.data.ProxyStore","short_doc":"Fires before a request is made for a new data object. ..."},{"tagname":"event","name":"beforesort","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":245}],"doc":"<p>Fires before a store is sorted.</p>\n\n<p>For <a href=\"#!/api/Ext.data.AbstractStore-cfg-remoteSort\" rel=\"Ext.data.AbstractStore-cfg-remoteSort\" class=\"docClass\">remotely sorted</a> stores, this will be just before the load operation triggered by changing the\nstore's sorters.</p>\n\n<p>For locally sorted stores, this will be just before the data items in the store's backing collection are sorted.</p>\n","params":[{"tagname":"params","type":"Ext.data.Store","name":"store","doc":"<p>The store being sorted</p>\n","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"tagname":"params","type":"Ext.util.Sorter[]","name":"sorters","doc":"<p>Array of sorters applied to the store</p>\n","html_type":"<a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a>[]"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-beforesort","owner":"Ext.data.AbstractStore","short_doc":"Fires before a store is sorted. ..."},{"tagname":"event","name":"beforesync","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":197}],"doc":"<p>Fired before a call to <a href=\"#!/api/Ext.data.ProxyStore-method-sync\" rel=\"Ext.data.ProxyStore-method-sync\" class=\"docClass\">sync</a> is executed. Return false from any listener to cancel the sync</p>\n","params":[{"tagname":"params","type":"Object","name":"options","doc":"<p>Hash of all records to be synchronized, broken down into create, update and destroy</p>\n","html_type":"Object"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-beforesync","owner":"Ext.data.ProxyStore","short_doc":"Fired before a call to sync is executed. ..."},{"tagname":"event","name":"beginupdate","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":231}],"doc":"<p>Fires when the <a href=\"#!/api/Ext.data.AbstractStore-method-beginUpdate\" rel=\"Ext.data.AbstractStore-method-beginUpdate\" class=\"docClass\">beginUpdate</a> method is called. Automatic synchronization as configured\nby the <a href=\"#!/api/Ext.data.ProxyStore-cfg-autoSync\" rel=\"Ext.data.ProxyStore-cfg-autoSync\" class=\"docClass\">autoSync</a> flag is deferred until the <a href=\"#!/api/Ext.data.AbstractStore-method-endUpdate\" rel=\"Ext.data.AbstractStore-method-endUpdate\" class=\"docClass\">endUpdate</a> method is called, so multiple\nmutations can be coalesced into one synchronization operation.</p>\n","params":[{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-beginupdate","owner":"Ext.data.AbstractStore","short_doc":"Fires when the beginUpdate method is called. ..."},{"tagname":"event","name":"clear","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":208}],"doc":"<p>Fired after the <a href=\"#!/api/Ext.data.Store-method-removeAll\" rel=\"Ext.data.Store-method-removeAll\" class=\"docClass\">removeAll</a> method is called.</p>\n","params":[{"tagname":"params","type":"Ext.data.Store","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"since":"1.1.0","id":"event-clear","owner":"Ext.data.AbstractStore","short_doc":"Fired after the removeAll method is called. ..."},{"tagname":"event","name":"datachanged","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":215}],"doc":"<p>Fires whenever records are added to or removed from the Store.</p>\n\n<p>To hook into modifications of records in this Store use the <a href=\"#!/api/Ext.data.AbstractStore-event-update\" rel=\"Ext.data.AbstractStore-event-update\" class=\"docClass\">update</a> event.</p>\n","params":[{"tagname":"params","type":"Ext.data.Store","name":"this","doc":"<p>The data store</p>\n","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"since":"1.1.0","id":"event-datachanged","owner":"Ext.data.AbstractStore","short_doc":"Fires whenever records are added to or removed from the Store. ..."},{"tagname":"event","name":"endupdate","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":238}],"doc":"<p>Fires when the <a href=\"#!/api/Ext.data.AbstractStore-method-endUpdate\" rel=\"Ext.data.AbstractStore-method-endUpdate\" class=\"docClass\">endUpdate</a> method is called. Automatic synchronization as configured\nby the <a href=\"#!/api/Ext.data.ProxyStore-cfg-autoSync\" rel=\"Ext.data.ProxyStore-cfg-autoSync\" class=\"docClass\">autoSync</a> flag is deferred until the <a href=\"#!/api/Ext.data.AbstractStore-method-endUpdate\" rel=\"Ext.data.AbstractStore-method-endUpdate\" class=\"docClass\">endUpdate</a> method is called, so multiple\nmutations can be coalesced into one synchronization operation.</p>\n","params":[{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-endupdate","owner":"Ext.data.AbstractStore","short_doc":"Fires when the endUpdate method is called. ..."},{"tagname":"event","name":"load","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":179}],"doc":"<p>Fires whenever the store reads data from a remote data source.</p>\n","params":[{"tagname":"params","type":"Ext.data.Store","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"tagname":"params","type":"Ext.data.Model[]","name":"records","doc":"<p>An array of records</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},{"tagname":"params","type":"Boolean","name":"successful","doc":"<p>True if the operation was successful.</p>\n","html_type":"Boolean"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"since":"1.1.0","id":"event-load","owner":"Ext.data.ProxyStore","short_doc":"Fires whenever the store reads data from a remote data source. ..."},{"tagname":"event","name":"metachange","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":203}],"doc":"<p>Fires when this store's underlying reader (available via the proxy) provides new metadata.\nMetadata usually consists of new field definitions, but can include any configuration data\nrequired by an application, and can be processed as needed in the event handler.\nThis event is currently only fired for JsonReaders.</p>\n","params":[{"tagname":"params","type":"Ext.data.Store","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"tagname":"params","type":"Object","name":"meta","doc":"<p>The JSON metadata</p>\n","html_type":"Object"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"since":"1.1.0","id":"event-metachange","owner":"Ext.data.ProxyStore","short_doc":"Fires when this store's underlying reader (available via the proxy) provides new metadata. ..."},{"tagname":"event","name":"refresh","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":224}],"doc":"<p>Fires when the data cache has changed in a bulk manner (e.g., it has been sorted, filtered, etc.) and a\nwidget that is using this Store as a Record cache should refresh its view.</p>\n","params":[{"tagname":"params","type":"Ext.data.Store","name":"this","doc":"<p>The data store</p>\n","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-refresh","owner":"Ext.data.AbstractStore","short_doc":"Fires when the data cache has changed in a bulk manner (e.g., it has been sorted, filtered, etc.) and a\nwidget that i..."},{"tagname":"event","name":"remove","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":177}],"doc":"<p>Fired when one or more records have been removed from this Store.</p>\n\n<p><strong>The signature for this event has changed in 5.0: </strong></p>\n","params":[{"tagname":"params","type":"Ext.data.Store","name":"store","doc":"<p>The Store object</p>\n","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"tagname":"params","type":"Ext.data.Model[]","name":"records","doc":"<p>The records that were removed. In previous\nreleases this was a single record, not an array.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},{"tagname":"params","type":"Number","name":"index","doc":"<p>The index at which the records were removed.</p>\n","html_type":"Number"},{"tagname":"params","type":"Boolean","name":"isMove","doc":"<p><code>true</code> if the child node is being removed so it can be\nmoved to another position in this Store.</p>\n","html_type":"Boolean"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"since":"5.0.0","id":"event-remove","owner":"Ext.data.AbstractStore","short_doc":"Fired when one or more records have been removed from this Store. ..."},{"tagname":"event","name":"sort","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":257}],"doc":"<p>Fires after a store is sorted.</p>\n\n<p>For <a href=\"#!/api/Ext.data.AbstractStore-cfg-remoteSort\" rel=\"Ext.data.AbstractStore-cfg-remoteSort\" class=\"docClass\">remotely sorted</a> stores, this will be upon the success of a load operation triggered by\nchanging the store's sorters.</p>\n\n<p>For locally sorted stores, this will be just after the data items in the store's backing collection are sorted.</p>\n","params":[{"tagname":"params","type":"Ext.data.Store","name":"store","doc":"<p>The store being sorted</p>\n","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-sort","owner":"Ext.data.AbstractStore","short_doc":"Fires after a store is sorted. ..."},{"tagname":"event","name":"update","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":192}],"doc":"<p>Fires when a Model instance has been updated.</p>\n","params":[{"tagname":"params","type":"Ext.data.Store","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The Model instance that was updated</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},{"tagname":"params","type":"String","name":"operation","doc":"<p>The update operation being performed. Value may be one of:</p>\n\n<pre><code><a href=\"#!/api/Ext.data.Model-static-property-EDIT\" rel=\"Ext.data.Model-static-property-EDIT\" class=\"docClass\">Ext.data.Model.EDIT</a>\n<a href=\"#!/api/Ext.data.Model-static-property-REJECT\" rel=\"Ext.data.Model-static-property-REJECT\" class=\"docClass\">Ext.data.Model.REJECT</a>\n<a href=\"#!/api/Ext.data.Model-static-property-COMMIT\" rel=\"Ext.data.Model-static-property-COMMIT\" class=\"docClass\">Ext.data.Model.COMMIT</a>\n</code></pre>\n","html_type":"String"},{"tagname":"params","type":"String[]","name":"modifiedFieldNames","doc":"<p>Array of field names changed during edit.</p>\n","html_type":"String[]"},{"tagname":"params","type":"Object","name":"details","doc":"<p>An object describing the change. See the\n<a href=\"#!/api/Ext.util.Collection-event-itemchange\" rel=\"Ext.util.Collection-event-itemchange\" class=\"docClass\">itemchange event</a> of the store's backing collection</p>\n","html_type":"Object"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"since":"1.1.0","id":"event-update","owner":"Ext.data.AbstractStore","short_doc":"Fires when a Model instance has been updated. ..."},{"tagname":"event","name":"write","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ProxyStore.js","linenr":188}],"doc":"<p>Fires whenever a successful write has been made via the configured <a href=\"#!/api/Ext.data.ProxyStore-cfg-proxy\" rel=\"Ext.data.ProxyStore-cfg-proxy\" class=\"docClass\">Proxy</a></p>\n","params":[{"tagname":"params","type":"Ext.data.Store","name":"store","doc":"<p>This Store</p>\n","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"tagname":"params","type":"Ext.data.operation.Operation","name":"operation","doc":"<p>The <a href=\"#!/api/Ext.data.operation.Operation\" rel=\"Ext.data.operation.Operation\" class=\"docClass\">Operation</a> object that was used in\nthe write</p>\n","html_type":"<a href=\"#!/api/Ext.data.operation.Operation\" rel=\"Ext.data.operation.Operation\" class=\"docClass\">Ext.data.operation.Operation</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"since":"3.4.0","id":"event-write","owner":"Ext.data.ProxyStore","short_doc":"Fires whenever a successful write has been made via the configured Proxy ..."}],"code_type":"ext_define","id":"class-Ext.data.BufferedStore","short_doc":"A BufferedStore maintains a sparsely populated map of pages corresponding to an extremely large server-side dataset. ..."}