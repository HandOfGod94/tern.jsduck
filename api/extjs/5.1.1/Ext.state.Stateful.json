{"tagname":"class","name":"Ext.state.Stateful","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/state/Stateful.js","linenr":1}],"doc":"<p>A mixin for being able to save the state of an object to an underlying\n<a href=\"#!/api/Ext.state.Provider\" rel=\"Ext.state.Provider\" class=\"docClass\">Ext.state.Provider</a>.</p>\n","private":true,"aliases":{},"alternateClassNames":[],"extends":"Ext.Base","mixins":[],"requires":["Ext.state.Manager"],"uses":[],"members":[{"tagname":"cfg","name":"saveDelay","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/state/Stateful.js","linenr":85}],"doc":"<p>A buffer to be applied if many state events are fired within a short period.</p>\n","type":"Number","default":"100","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-saveDelay","owner":"Ext.state.Stateful","short_doc":"A buffer to be applied if many state events are fired within a short period. ...","html_type":"Number"},{"tagname":"cfg","name":"stateEvents","autodetected":{},"files":[{"filename":"/tmp/test/ext-5.1.1/src/state/Stateful.js","linenr":74}],"doc":"<p>An array of events that, when fired, should trigger this object to\nsave its state. Defaults to none. <code>stateEvents</code> may be any type\nof event supported by this object, including browser or custom events\n(e.g., <code>['click', 'customerchange']</code>).</p>\n\n<p>See <code><a href=\"#!/api/Ext.state.Stateful-cfg-stateful\" rel=\"Ext.state.Stateful-cfg-stateful\" class=\"docClass\">stateful</a></code> for an explanation of saving and\nrestoring object state.</p>\n","type":"String[]","default":null,"properties":null,"id":"cfg-stateEvents","owner":"Ext.state.Stateful","short_doc":"An array of events that, when fired, should trigger this object to\nsave its state. ...","html_type":"String[]"},{"tagname":"cfg","name":"stateId","autodetected":{},"files":[{"filename":"/tmp/test/ext-5.1.1/src/state/Stateful.js","linenr":67}],"doc":"<p>The unique id for this object to use for state management purposes.</p>\n\n<p>See <a href=\"#!/api/Ext.state.Stateful-cfg-stateful\" rel=\"Ext.state.Stateful-cfg-stateful\" class=\"docClass\">stateful</a> for an explanation of saving and restoring state.</p>\n","type":"String","default":null,"properties":null,"id":"cfg-stateId","owner":"Ext.state.Stateful","short_doc":"The unique id for this object to use for state management purposes. ...","html_type":"String"},{"tagname":"cfg","name":"stateful","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/state/Stateful.js","linenr":12}],"doc":"<p>A flag which causes the object to attempt to restore the state of\ninternal properties from a saved state on startup. The object must have\na <a href=\"#!/api/Ext.state.Stateful-cfg-stateId\" rel=\"Ext.state.Stateful-cfg-stateId\" class=\"docClass\">stateId</a> for state to be managed.</p>\n\n<p>Auto-generated ids are not guaranteed to be stable across page loads and\ncannot be relied upon to save and restore the same state for a object.</p>\n\n<p>For state saving to work, the state manager's provider must have been\nset to an implementation of <a href=\"#!/api/Ext.state.Provider\" rel=\"Ext.state.Provider\" class=\"docClass\">Ext.state.Provider</a> which overrides the\n<a href=\"#!/api/Ext.state.Provider-method-set\" rel=\"Ext.state.Provider-method-set\" class=\"docClass\">set</a> and <a href=\"#!/api/Ext.state.Provider-method-get\" rel=\"Ext.state.Provider-method-get\" class=\"docClass\">get</a>\nmethods to save and recall name/value pairs. A built-in implementation,\n<a href=\"#!/api/Ext.state.CookieProvider\" rel=\"Ext.state.CookieProvider\" class=\"docClass\">Ext.state.CookieProvider</a> is available.</p>\n\n<p>To set the state provider for the current page:</p>\n\n<p>   <a href=\"#!/api/Ext.state.Manager-method-setProvider\" rel=\"Ext.state.Manager-method-setProvider\" class=\"docClass\">Ext.state.Manager.setProvider</a>(new <a href=\"#!/api/Ext.state.CookieProvider\" rel=\"Ext.state.CookieProvider\" class=\"docClass\">Ext.state.CookieProvider</a>({\n       expires: new Date(new Date().getTime()+(1000<em>60</em>60<em>24</em>7)), //7 days from now\n   }));</p>\n\n<p>A stateful object attempts to save state when one of the events\nlisted in the <a href=\"#!/api/Ext.state.Stateful-cfg-stateEvents\" rel=\"Ext.state.Stateful-cfg-stateEvents\" class=\"docClass\">stateEvents</a> configuration fires.</p>\n\n<p>To save state, a stateful object first serializes its state by\ncalling <em><a href=\"#!/api/Ext.state.Stateful-method-getState\" rel=\"Ext.state.Stateful-method-getState\" class=\"docClass\">getState</a></em>.</p>\n\n<p>The Component base class implements <a href=\"#!/api/Ext.state.Stateful-method-getState\" rel=\"Ext.state.Stateful-method-getState\" class=\"docClass\">getState</a> to save its width and height within the state\nonly if they were initially configured, and have changed from the configured value.</p>\n\n<p>The Panel class saves its collapsed state in addition to that.</p>\n\n<p>The Grid class saves its column state and store state (sorters and filters and grouper) in addition to its superclass state.</p>\n\n<p>If there is more application state to be save, the developer must provide an implementation which\nfirst calls the superclass method to inherit the above behaviour, and then injects new properties\ninto the returned object.</p>\n\n<p>The value yielded by getState is passed to <a href=\"#!/api/Ext.state.Manager-method-set\" rel=\"Ext.state.Manager-method-set\" class=\"docClass\">Ext.state.Manager.set</a>\nwhich uses the configured <a href=\"#!/api/Ext.state.Provider\" rel=\"Ext.state.Provider\" class=\"docClass\">Ext.state.Provider</a> to save the object\nkeyed by the <a href=\"#!/api/Ext.state.Stateful-cfg-stateId\" rel=\"Ext.state.Stateful-cfg-stateId\" class=\"docClass\">stateId</a>.</p>\n\n<p>During construction, a stateful object attempts to <em>restore</em> its state by calling\n<a href=\"#!/api/Ext.state.Manager-method-get\" rel=\"Ext.state.Manager-method-get\" class=\"docClass\">Ext.state.Manager.get</a> passing the <a href=\"#!/api/Ext.state.Stateful-cfg-stateId\" rel=\"Ext.state.Stateful-cfg-stateId\" class=\"docClass\">stateId</a></p>\n\n<p>The resulting object is passed to <a href=\"#!/api/Ext.state.Stateful-method-applyState\" rel=\"Ext.state.Stateful-method-applyState\" class=\"docClass\">applyState</a>*. The default implementation of\n<a href=\"#!/api/Ext.state.Stateful-method-applyState\" rel=\"Ext.state.Stateful-method-applyState\" class=\"docClass\">applyState</a> simply copies properties into the object, but a developer may\noverride this to support restoration of more complex application state.</p>\n\n<p>You can perform extra processing on state save and restore by attaching\nhandlers to the <a href=\"#!/api/Ext.state.Stateful-event-beforestaterestore\" rel=\"Ext.state.Stateful-event-beforestaterestore\" class=\"docClass\">beforestaterestore</a>, <a href=\"#!/api/Ext.state.Stateful-event-staterestore\" rel=\"Ext.state.Stateful-event-staterestore\" class=\"docClass\">staterestore</a>,\n<a href=\"#!/api/Ext.state.Stateful-event-beforestatesave\" rel=\"Ext.state.Stateful-event-beforestatesave\" class=\"docClass\">beforestatesave</a> and <a href=\"#!/api/Ext.state.Stateful-event-statesave\" rel=\"Ext.state.Stateful-event-statesave\" class=\"docClass\">statesave</a> events.</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-stateful","owner":"Ext.state.Stateful","short_doc":"A flag which causes the object to attempt to restore the state of\ninternal properties from a saved state on startup. ...","html_type":"Boolean"},{"tagname":"property","name":"mixinId","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/state/Stateful.js","linenr":8}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":8,"type":"String","default":"'state'","readonly":null,"id":"property-mixinId","owner":"Ext.state.Stateful","overrides":[{"name":"mixinId","owner":"Ext.util.Renderable","link":"<a href=\"#!/api/Ext.util.Renderable-property-mixinId\" rel=\"Ext.util.Renderable-property-mixinId\" class=\"docClass\">Ext.util.Renderable.mixinId</a>"}],"short_doc":" ...","html_type":"String"},{"tagname":"method","name":"addStateEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/state/Stateful.js","linenr":143}],"doc":"<p>Add events that will trigger the state to be saved. If the first argument is an\narray, each element of that array is the name of a state event. Otherwise, each\nargument passed to this method is the name of a state event.</p>\n","params":[{"tagname":"params","type":"String/String[]","name":"events","doc":"<p>The event name or an array of event names.</p>\n","html_type":"String/String[]"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getStateId","on"],"id":"method-addStateEvents","owner":"Ext.state.Stateful","short_doc":"Add events that will trigger the state to be saved. ..."},{"tagname":"method","name":"applyState","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/state/Stateful.js","linenr":252}],"doc":"<p>Applies the state to the object. This should be overridden in subclasses to do\nmore complex state operations. By default it applies the state properties onto\nthe current object.</p>\n","params":[{"tagname":"params","type":"Object","name":"state","doc":"<p>The state</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-applyState","owner":"Ext.state.Stateful","short_doc":"Applies the state to the object. ..."},{"tagname":"method","name":"destroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/state/Stateful.js","linenr":366}],"doc":"<p>Destroys this stateful object.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["clearListeners"],"id":"method-destroy","owner":"Ext.state.Stateful","overrides":[{"name":"destroy","owner":"Ext.util.ElementContainer","link":"<a href=\"#!/api/Ext.util.ElementContainer-method-destroy\" rel=\"Ext.util.ElementContainer-method-destroy\" class=\"docClass\">Ext.util.ElementContainer.destroy</a>"}],"short_doc":"Destroys this stateful object. ..."},{"tagname":"method","name":"getState","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/state/Stateful.js","linenr":243}],"doc":"<p>Gets the current state of the object. By default this function returns null,\nit should be overridden in subclasses to implement methods for getting the state.</p>\n","return":{"type":"Object","name":"return","doc":"<p>The current state</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getState","owner":"Ext.state.Stateful","short_doc":"Gets the current state of the object. ..."},{"tagname":"method","name":"getStateId","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/state/Stateful.js","linenr":264}],"doc":"<p>Gets the state id for this object.</p>\n","return":{"type":"String","name":"return","doc":"<p>The 'stateId' or the implicit 'id' specified by component configuration.</p>\n","properties":null,"html_type":"String"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getStateId","owner":"Ext.state.Stateful","short_doc":"Gets the state id for this object. ..."},{"tagname":"method","name":"initState","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/state/Stateful.js","linenr":274}],"doc":"<p>Initializes the state of the object upon construction.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":["<a href=\"#!/api/Ext.state.Stateful-event-beforestaterestore\" rel=\"Ext.state.Stateful-event-beforestaterestore\" class=\"docClass\">beforestaterestore</a>","<a href=\"#!/api/Ext.state.Stateful-event-staterestore\" rel=\"Ext.state.Stateful-event-staterestore\" class=\"docClass\">staterestore</a>"],"method_calls":["applyState","fireEvent","getPlugins","getStateId"],"id":"method-initState","owner":"Ext.state.Stateful","short_doc":"Initializes the state of the object upon construction. ..."},{"tagname":"method","name":"onStateChange","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/state/Stateful.js","linenr":171}],"doc":"<p>This method is called when any of the <a href=\"#!/api/Ext.state.Stateful-cfg-stateEvents\" rel=\"Ext.state.Stateful-cfg-stateEvents\" class=\"docClass\">stateEvents</a> are fired.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":["<a href=\"#!/api/Ext.state.Stateful-event-beforestatesave\" rel=\"Ext.state.Stateful-event-beforestatesave\" class=\"docClass\">beforestatesave</a>","<a href=\"#!/api/Ext.state.Stateful-event-statesave\" rel=\"Ext.state.Stateful-event-statesave\" class=\"docClass\">statesave</a>"],"method_calls":["saveState"],"id":"method-onStateChange","owner":"Ext.state.Stateful","short_doc":"This method is called when any of the stateEvents are fired. ..."},{"tagname":"method","name":"savePropToState","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/state/Stateful.js","linenr":317}],"doc":"<p>Conditionally saves a single property from this object to the given state object.\nThe idea is to only save state which has changed from the initial state so that\ncurrent software settings do not override future software settings. Only those\nvalues that are user-changed state should be saved.</p>\n","params":[{"tagname":"params","type":"String","name":"propName","doc":"<p>The name of the property to save.</p>\n","html_type":"String"},{"tagname":"params","type":"Object","name":"state","doc":"<p>The state object in to which to save the property.</p>\n","html_type":"Object"},{"tagname":"params","type":"String","name":"stateName","optional":true,"doc":"<p>The name to use for the property in state.</p>\n","html_type":"String"}],"return":{"type":"Boolean","name":"return","doc":"<p>True if the property was saved, false if not.</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["hasOwnProperty"],"id":"method-savePropToState","owner":"Ext.state.Stateful","short_doc":"Conditionally saves a single property from this object to the given state object. ..."},{"tagname":"method","name":"savePropsToState","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/state/Stateful.js","linenr":344}],"doc":"<p>Gathers additional named properties of the instance and adds their current values\nto the passed state object.</p>\n","params":[{"tagname":"params","type":"String/String[]","name":"propNames","doc":"<p>The name (or array of names) of the property to save.</p>\n","html_type":"String/String[]"},{"tagname":"params","type":"Object","name":"state","doc":"<p>The state object in to which to save the property values.</p>\n","html_type":"Object"}],"return":{"type":"Object","name":"return","doc":"<p>state</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["savePropToState"],"id":"method-savePropsToState","owner":"Ext.state.Stateful","short_doc":"Gathers additional named properties of the instance and adds their current values\nto the passed state object. ..."},{"tagname":"method","name":"saveState","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/state/Stateful.js","linenr":204}],"doc":"<p>Saves the state of the object to the persistence store.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":["<a href=\"#!/api/Ext.state.Stateful-event-beforestatesave\" rel=\"Ext.state.Stateful-event-beforestatesave\" class=\"docClass\">beforestatesave</a>","<a href=\"#!/api/Ext.state.Stateful-event-statesave\" rel=\"Ext.state.Stateful-event-statesave\" class=\"docClass\">statesave</a>"],"method_calls":["fireEvent","getPlugins","getState","getStateId"],"id":"method-saveState","owner":"Ext.state.Stateful","short_doc":"Saves the state of the object to the persistence store. ..."},{"tagname":"event","name":"beforestaterestore","autodetected":{},"files":[{"filename":"/tmp/test/ext-5.1.1/src/state/Stateful.js","linenr":91}],"doc":"<p>Fires before the state of the object is restored. Return false from an event handler to stop the restore.</p>\n","params":[{"tagname":"params","type":"Ext.state.Stateful","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.state.Stateful\" rel=\"Ext.state.Stateful\" class=\"docClass\">Ext.state.Stateful</a>"},{"tagname":"params","type":"Object","name":"state","doc":"<p>The hash of state values returned from the StateProvider. If this\nevent is not vetoed, then the state object is passed to <em><code>applyState</code></em>. By default,\nthat simply copies property values into this object. The method maybe overriden to\nprovide custom state restoration.</p>\n","html_type":"Object"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-beforestaterestore","owner":"Ext.state.Stateful","short_doc":"Fires before the state of the object is restored. ..."},{"tagname":"event","name":"beforestatesave","autodetected":{},"files":[{"filename":"/tmp/test/ext-5.1.1/src/state/Stateful.js","linenr":110}],"doc":"<p>Fires before the state of the object is saved to the configured state provider. Return false to stop the save.</p>\n","params":[{"tagname":"params","type":"Ext.state.Stateful","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.state.Stateful\" rel=\"Ext.state.Stateful\" class=\"docClass\">Ext.state.Stateful</a>"},{"tagname":"params","type":"Object","name":"state","doc":"<p>The hash of state values. This is determined by calling\n<em><code>getState()</code></em> on the object. This method must be provided by the\ndeveloper to return whatever representation of state is required, by default, <a href=\"#!/api/Ext.state.Stateful\" rel=\"Ext.state.Stateful\" class=\"docClass\">Ext.state.Stateful</a>\nhas a null implementation.</p>\n","html_type":"Object"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-beforestatesave","owner":"Ext.state.Stateful","short_doc":"Fires before the state of the object is saved to the configured state provider. ..."},{"tagname":"event","name":"staterestore","autodetected":{},"files":[{"filename":"/tmp/test/ext-5.1.1/src/state/Stateful.js","linenr":101}],"doc":"<p>Fires after the state of the object is restored.</p>\n","params":[{"tagname":"params","type":"Ext.state.Stateful","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.state.Stateful\" rel=\"Ext.state.Stateful\" class=\"docClass\">Ext.state.Stateful</a>"},{"tagname":"params","type":"Object","name":"state","doc":"<p>The hash of state values returned from the StateProvider. This is passed\nto <em><code>applyState</code></em>. By default, that simply copies property values into this\nobject. The method maybe overridden to provide custom state restoration.</p>\n","html_type":"Object"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-staterestore","owner":"Ext.state.Stateful","short_doc":"Fires after the state of the object is restored. ..."},{"tagname":"event","name":"statesave","autodetected":{},"files":[{"filename":"/tmp/test/ext-5.1.1/src/state/Stateful.js","linenr":120}],"doc":"<p>Fires after the state of the object is saved to the configured state provider.</p>\n","params":[{"tagname":"params","type":"Ext.state.Stateful","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.state.Stateful\" rel=\"Ext.state.Stateful\" class=\"docClass\">Ext.state.Stateful</a>"},{"tagname":"params","type":"Object","name":"state","doc":"<p>The hash of state values. This is determined by calling\n<em><code>getState()</code></em> on the object. This method must be provided by the\ndeveloper to return whatever representation of state is required, by default, <a href=\"#!/api/Ext.state.Stateful\" rel=\"Ext.state.Stateful\" class=\"docClass\">Ext.state.Stateful</a>\nhas a null implementation.</p>\n","html_type":"Object"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-statesave","owner":"Ext.state.Stateful","short_doc":"Fires after the state of the object is saved to the configured state provider. ..."}],"code_type":"ext_define","id":"class-Ext.state.Stateful"}