{"tagname":"class","name":"Ext.dom.ButtonElement","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"/tmp/ext-5.1.1/src/dom/ButtonElement.js","linenr":1}],"doc":"<p>A special <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> used by Buttons.  Since buttons use <code>display:table</code> elements\nfor their layout, some special adjustments are needed when the width switches from\nauto to fixed width and back.</p>\n\n<p>When the button has a width other than <code>auto</code>, and a right-aligned arrow, long button\ntext will cause the arrow to disappear off the right edge of the button if the btnWrap\nelement has table-layout:auto.  To prevent this, we need to set table-layout:fixed\non the btnWrap when the button has a width, however, when the button is shrinkwrap\nwidth the btnWrap cannot have table-layout:fixed because its width:100% style will\ncause the button to expand outward.</p>\n\n<p>Additionally, in shrinkWrap height mode, the button css sets a height on the btnEl\nelement, but if the height is being stretched, the btnEl's height will cause the contents\nto be incorrectly vertically centered, so we dynamically set the btnEl's height to\n\"auto\" in fixed-height mode.</p>\n","private":true,"aliases":{},"alternateClassNames":[],"extends":"Ext.dom.Element","mixins":[],"requires":[],"uses":[],"members":[{"tagname":"cfg","name":"listeners","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":240}],"doc":"<p>A config object containing one or more event handlers to be added to this object during initialization. This\nshould be a valid listeners config object as specified in the <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> example for attaching multiple\nhandlers at once.</p>\n\n<p><strong>DOM events from Ext JS <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a></strong></p>\n\n<p>While <em>some</em> Ext JS Component classes export selected DOM events (e.g. \"click\", \"mouseover\" etc), this is usually\nonly done when extra value can be added. For example the <a href=\"#!/api/Ext.view.View\" rel=\"Ext.view.View\" class=\"docClass\">DataView</a>'s <strong><code><a href=\"#!/api/Ext.view.View-event-itemclick\" rel=\"Ext.view.View-event-itemclick\" class=\"docClass\">itemclick</a></code></strong> event passing the node clicked on. To access DOM events directly from a\nchild element of a Component, we need to specify the <code>element</code> option to identify the Component property to add a\nDOM listener to:</p>\n\n<pre><code>new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n    width: 400,\n    height: 200,\n    dockedItems: [{\n        xtype: 'toolbar'\n    }],\n    listeners: {\n        click: {\n            element: 'el', //bind to the underlying el property on the panel\n            fn: function(){ console.log('click el'); }\n        },\n        dblclick: {\n            element: 'body', //bind to the underlying body property on the panel\n            fn: function(){ console.log('dblclick body'); }\n        }\n    }\n});\n</code></pre>\n","type":"Object","default":null,"properties":null,"id":"cfg-listeners","owner":"Ext.mixin.Observable","short_doc":"A config object containing one or more event handlers to be added to this object during initialization. ...","html_type":"Object"},{"tagname":"property","name":"$className","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1025}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"String","default":"'Ext.Base'","readonly":null,"id":"property-S-className","owner":"Ext.Base","short_doc":" ...","html_type":"String"},{"tagname":"property","name":"$configPrefixed","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1037}],"doc":"<p>The value <code>true</code> causes <code>config</code> values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\") character. A value of <code>false</code>\nstores <code>config</code> values as properties using their exact name (no prefix).</p>\n","type":"Boolean","default":"true","properties":null,"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-S-configPrefixed","owner":"Ext.Base","overrides":[{"name":"$configPrefixed","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-S-configPrefixed\" rel=\"Ext.Component-property-S-configPrefixed\" class=\"docClass\">Ext.Component.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-property-S-configPrefixed\" rel=\"Ext.layout.Layout-property-S-configPrefixed\" class=\"docClass\">Ext.layout.Layout.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-property-S-configPrefixed\" rel=\"Ext.data.AbstractStore-property-S-configPrefixed\" class=\"docClass\">Ext.data.AbstractStore.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.layout.container.boxOverflow.None","link":"<a href=\"#!/api/Ext.layout.container.boxOverflow.None-property-S-configPrefixed\" rel=\"Ext.layout.container.boxOverflow.None-property-S-configPrefixed\" class=\"docClass\">Ext.layout.container.boxOverflow.None.$configPrefixed</a>"}],"short_doc":"The value true causes config values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\")...","html_type":"Boolean"},{"tagname":"property","name":"$configStrict","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1047}],"doc":"<p>The value <code>true</code> instructs the <code>initConfig</code> method to only honor values for\nproperties declared in the <code>config</code> block of a class. When <code>false</code>, properties\nthat are not declared in a <code>config</code> block will be placed on the instance.</p>\n","type":"Boolean","default":"true","properties":null,"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-S-configStrict","owner":"Ext.Base","overrides":[{"name":"$configStrict","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-S-configStrict\" rel=\"Ext.Component-property-S-configStrict\" class=\"docClass\">Ext.Component.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-property-S-configStrict\" rel=\"Ext.layout.Layout-property-S-configStrict\" class=\"docClass\">Ext.layout.Layout.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-property-S-configStrict\" rel=\"Ext.data.AbstractStore-property-S-configStrict\" class=\"docClass\">Ext.data.AbstractStore.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.layout.container.boxOverflow.None","link":"<a href=\"#!/api/Ext.layout.container.boxOverflow.None-property-S-configStrict\" rel=\"Ext.layout.container.boxOverflow.None-property-S-configStrict\" class=\"docClass\">Ext.layout.container.boxOverflow.None.$configStrict</a>"}],"short_doc":"The value true instructs the initConfig method to only honor values for\nproperties declared in the config block of a ...","html_type":"Boolean"},{"tagname":"property","name":"_alignRe","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Positionable.js","linenr":11}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":11,"type":"RegExp","default":"/^([a-z]+)-([a-z]+)(\\?)?$/","readonly":null,"id":"property-_alignRe","owner":"Ext.util.Positionable","short_doc":" ...","html_type":"RegExp"},{"tagname":"property","name":"_positionTopLeft","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Positionable.js","linenr":9}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":9,"type":"Array","default":"['position', 'top', 'left']","readonly":null,"id":"property-_positionTopLeft","owner":"Ext.util.Positionable","short_doc":" ...","html_type":"Array"},{"tagname":"property","name":"component","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":257}],"doc":"<p>A reference to the <code>Component</code> that owns this element. This is <code>null</code> if there\nis no direct owner.</p>\n","type":"Ext.Component","default":null,"properties":null,"id":"property-component","owner":"Ext.dom.Element","short_doc":"A reference to the Component that owns this element. ...","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},{"tagname":"property","name":"convertPositionSpec","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Positionable.js","linenr":306}],"doc":"<p>By default this method does nothing but return the position spec passed to it. In\nrtl mode it is overridden to convert \"l\" to \"r\" and vice versa when required.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"Object","default":null,"readonly":null,"id":"property-convertPositionSpec","owner":"Ext.util.Positionable","short_doc":"By default this method does nothing but return the position spec passed to it. ...","html_type":"Object"},{"tagname":"property","name":"dom","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":558}],"doc":"<p>The DOM element</p>\n","default":null,"properties":null,"type":"HTMLElement","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-dom","owner":"Ext.dom.Element","html_type":"HTMLElement"},{"tagname":"property","name":"eventsSuspended","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":280}],"doc":"<p>Initial suspended call count. Incremented when <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvents\" rel=\"Ext.mixin.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a> is called, decremented when <a href=\"#!/api/Ext.mixin.Observable-method-resumeEvents\" rel=\"Ext.mixin.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> is called.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"Number","default":"0","readonly":null,"id":"property-eventsSuspended","owner":"Ext.mixin.Observable","short_doc":"Initial suspended call count. ...","html_type":"Number"},{"tagname":"property","name":"getTrueXY","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":4893}],"doc":"<p>Returns the <code>X,Y</code> position of this element without regard to any RTL\ndirection settings.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"Object","default":null,"readonly":null,"id":"property-getTrueXY","owner":"Ext.dom.Element","html_type":"Object"},{"tagname":"property","name":"hasListeners","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":286}],"doc":"<p>This object holds a key for any event that has a listener. The listener may be set\ndirectly on the instance, or on its class or a super class (via <a href=\"#!/api/Ext.mixin.Observable-static-method-observe\" rel=\"Ext.mixin.Observable-static-method-observe\" class=\"docClass\">observe</a>) or\non the <a href=\"#!/api/Ext.app.EventBus\" rel=\"Ext.app.EventBus\" class=\"docClass\">MVC EventBus</a>. The values of this object are truthy\n(a non-zero number) and falsy (0 or undefined). They do not represent an exact count\nof listeners. The value for an event is truthy if the event must be fired and is\nfalsy if there is no need to fire the event.</p>\n\n<p>The intended use of this property is to avoid the expense of fireEvent calls when\nthere are no listeners. This can be particularly helpful when one would otherwise\nhave to call fireEvent hundreds or thousands of times. It is used like this:</p>\n\n<pre><code> if (this.hasListeners.foo) {\n     this.fireEvent('foo', this, arg1);\n }\n</code></pre>\n","type":"Object","default":null,"properties":null,"readonly":true,"id":"property-hasListeners","owner":"Ext.mixin.Observable","short_doc":"This object holds a key for any event that has a listener. ...","html_type":"Object"},{"tagname":"property","name":"id","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":3731}],"doc":"<p>The DOM element ID</p>\n","default":null,"properties":null,"type":"String","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-id","owner":"Ext.dom.Element","html_type":"String"},{"tagname":"property","name":"isConfiguring","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1057}],"doc":"<p>This property is set to <code>true</code> during the call to <code>initConfig</code>.</p>\n","type":"Boolean","default":"false","properties":null,"protected":true,"readonly":true,"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-isConfiguring","owner":"Ext.Base","short_doc":"This property is set to true during the call to initConfig. ...","html_type":"Boolean"},{"tagname":"property","name":"isFirstInstance","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1066}],"doc":"<p>This property is set to <code>true</code> if this instance is the first of its class.</p>\n","type":"Boolean","default":"false","properties":null,"protected":true,"readonly":true,"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-isFirstInstance","owner":"Ext.Base","short_doc":"This property is set to true if this instance is the first of its class. ...","html_type":"Boolean"},{"tagname":"property","name":"isInstance","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1028}],"doc":"<p>This value is <code>true</code> and is used to identify plain objects from instances of\na defined class.</p>\n","type":"Boolean","default":"true","properties":null,"protected":true,"readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-isInstance","owner":"Ext.Base","short_doc":"This value is true and is used to identify plain objects from instances of\na defined class. ...","html_type":"Boolean"},{"tagname":"property","name":"isObservable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":274}],"doc":"<p><code>true</code> in this class to identify an object as an instantiated Observable, or subclass thereof.</p>\n","type":"Boolean","default":"true","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-isObservable","owner":"Ext.mixin.Observable","short_doc":"true in this class to identify an object as an instantiated Observable, or subclass thereof. ...","html_type":"Boolean"},{"tagname":"property","name":"mixinId","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Positionable.js","linenr":7}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":7,"type":"String","default":"'positionable'","readonly":null,"id":"property-mixinId","owner":"Ext.util.Positionable","overrides":[{"name":"mixinId","owner":"Ext.util.Floating","link":"<a href=\"#!/api/Ext.util.Floating-property-mixinId\" rel=\"Ext.util.Floating-property-mixinId\" class=\"docClass\">Ext.util.Floating.mixinId</a>"}],"short_doc":" ...","html_type":"String"},{"tagname":"property","name":"self","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1344}],"doc":"<p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n","type":"Ext.Class","default":null,"properties":null,"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-self","owner":"Ext.Base","short_doc":"Get the reference to the current class from which this object was instantiated. ...","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},{"tagname":"property","name":"$onExtended","autodetected":{"inheritdoc":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":370}],"doc":"\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"type":"Array","default":"[]","readonly":null,"id":"static-property-S-onExtended","owner":"Ext.Base","short_doc":" ...","html_type":"Array"},{"tagname":"method","name":"constructor","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":501}],"doc":"<p>Creates new Element directly by passing an id or the HTMLElement.  This\nconstructor should not be called directly.  Always use <a href=\"#!/api/Ext-method-get\" rel=\"Ext-method-get\" class=\"docClass\">Ext.get()</a>\nor <a href=\"#!/api/Ext-method-fly\" rel=\"Ext-method-fly\" class=\"docClass\">Ext#fly()</a> instead.</p>\n\n<p>In older versions of Ext JS and Sencha Touch this constructor checked to see if\nthere was already an instance of this element in the cache and if so, returned\nthe same instance. As of version 5 this behavior has been removed in order to\navoid a redundant cache lookup since the most common path is for the Element\nconstructor to be called from <a href=\"#!/api/Ext-method-get\" rel=\"Ext-method-get\" class=\"docClass\">Ext.get()</a>, which has already\nchecked for a cache entry.</p>\n\n<p>Correct way of creating a new <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> (or retrieving it from the cache):</p>\n\n<pre><code>var el = <a href=\"#!/api/Ext-method-get\" rel=\"Ext-method-get\" class=\"docClass\">Ext.get</a>('foo'); // by id\n\nvar el = <a href=\"#!/api/Ext-method-get\" rel=\"Ext-method-get\" class=\"docClass\">Ext.get</a>(document.getElementById('foo')); // by DOM reference\n</code></pre>\n\n<p>Incorrect way of creating a new <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a></p>\n\n<pre><code>var el = new <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>('foo');\n</code></pre>\n\n<p>For quick and easy access to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> methods use a flyweight:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-fly\" rel=\"Ext-method-fly\" class=\"docClass\">Ext.fly</a>('foo').addCls('foo-hovered');\n</code></pre>\n\n<p>This simply attaches the DOM node with id='foo' to the global flyweight Element\ninstance to avoid allocating an extra <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instance.  If, however,\nthe Element instance has already been cached by a previous call to <a href=\"#!/api/Ext-method-get\" rel=\"Ext-method-get\" class=\"docClass\">Ext.get</a>(),\nthen <a href=\"#!/api/Ext-method-fly\" rel=\"Ext-method-fly\" class=\"docClass\">Ext.fly</a>() will return the cached Element instance.  For more info see\n<a href=\"#!/api/Ext-method-fly\" rel=\"Ext-method-fly\" class=\"docClass\">Ext.fly</a>.</p>\n","params":[{"tagname":"params","type":"String/HTMLElement","name":"element","doc":"\n","html_type":"String/HTMLElement"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getUniqueId"],"id":"method-constructor","owner":"Ext.dom.Element","return":{"type":"Ext.dom.Element","doc":"\n","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"short_doc":"Creates new Element directly by passing an id or the HTMLElement. ..."},{"tagname":"method","name":"_addDeclaredListeners","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":400}],"doc":"<p>Adds declarative listeners as nested arrays of listener objects.</p>\n","private":true,"params":[{"tagname":"params","type":"Array","name":"listeners","doc":"\n","html_type":"Array"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if any listeners were added</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["addListener"],"id":"method-_addDeclaredListeners","owner":"Ext.mixin.Observable","short_doc":"Adds declarative listeners as nested arrays of listener objects. ..."},{"tagname":"method","name":"_getPublisher","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":4553}],"doc":"<p>Returns the publisher for a given event</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"\n","html_type":"String"}],"private":true,"return":{"type":"Ext.event.publisher.Publisher","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.event.publisher.Publisher\" rel=\"Ext.event.publisher.Publisher\" class=\"docClass\">Ext.event.publisher.Publisher</a>"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-_getPublisher","owner":"Ext.dom.Element","short_doc":"Returns the publisher for a given event ..."},{"tagname":"method","name":"addAfterListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1505}],"doc":"<p>Appends an after-event handler.</p>\n\n<p>Same as <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> with <code>order</code> set to <code>'after'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event to listen for.</p>\n\n","html_type":"String/String[]/Object"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The method the event invokes.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope for <code>fn</code>.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>An object containing handler configuration.</p>\n\n","html_type":"Object"}],"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> with the <code>priority</code> option instead.</p>\n","version":"5.1"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["addListener"],"id":"method-addAfterListener","owner":"Ext.mixin.Observable","short_doc":"Appends an after-event handler. ..."},{"tagname":"method","name":"addBeforeListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1490}],"doc":"<p>Appends a before-event handler.  Returning <code>false</code> from the handler will stop the event.</p>\n\n<p>Same as <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> with <code>order</code> set to <code>'before'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event to listen for.</p>\n\n","html_type":"String/String[]/Object"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The method the event invokes.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope for <code>fn</code>.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>An object containing handler configuration.</p>\n\n","html_type":"Object"}],"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> with the <code>priority</code> option instead.</p>\n","version":"5.1"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["addListener"],"id":"method-addBeforeListener","owner":"Ext.mixin.Observable","short_doc":"Appends a before-event handler. ..."},{"tagname":"method","name":"addCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":1256}],"doc":"<p>Adds the given CSS class(es) to this Element.</p>\n","params":[{"tagname":"params","type":"String/String[]","name":"names","doc":"<p>The CSS classes to add separated by space,\nor an array of classes</p>\n","html_type":"String/String[]"},{"tagname":"params","type":"String","name":"prefix","optional":true,"doc":"<p>Prefix to prepend to each class. The separator <code>-</code> will be\nappended to the prefix.</p>\n","html_type":"String"},{"tagname":"params","type":"String","name":"suffix","optional":true,"doc":"<p>Suffix to append to each class. The separator <code>-</code> will be\nprepended to the suffix.</p>\n","html_type":"String"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["getData","synchronize"],"id":"method-addCls","owner":"Ext.dom.Element","short_doc":"Adds the given CSS class(es) to this Element. ..."},{"tagname":"method","name":"addDeprecations","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":115}],"doc":"<p>This method applies a versioned, deprecation declaration to this class. This\nis typically called by the <code>deprecated</code> config.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"deprecations","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-addDeprecations","owner":"Ext.Base","short_doc":"This method applies a versioned, deprecation declaration to this class. ..."},{"tagname":"method","name":"addListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":698}],"doc":"<p>The <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> method is shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a>.</p>\n\n<p>Appends an event handler to this object.  For example:</p>\n\n<pre><code>myGridPanel.on(\"itemclick\", this.onItemClick, this);\n</code></pre>\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple events. For example:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: this.onCellClick,\n    select: this.onSelect,\n    viewready: this.onViewReady,\n    scope: this // Important. Ensure \"this\" is correct during handler execution\n});\n</code></pre>\n\n<p>One can also specify options for each event handler separately:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: this.onCellClick, scope: this, single: true},\n    viewready: {fn: panel.onViewReady, scope: panel}\n});\n</code></pre>\n\n<p><em>Names</em> of methods in a specified scope may also be used:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: 'onCellClick', scope: this, single: true},\n    viewready: {fn: 'onViewReady', scope: panel}\n});\n</code></pre>\n","params":[{"tagname":"params","type":"String/Object","name":"eventName","doc":"<p>The name of the event to listen for.\nMay also be an object who's property names are event names.</p>\n\n","html_type":"String/Object"},{"tagname":"params","type":"Function/String","name":"fn","optional":true,"doc":"<p>The method the event invokes or the <em>name</em> of\nthe method within the specified <code>scope</code>.  Will be called with arguments\ngiven to <a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">Ext.util.Observable.fireEvent</a> plus the <code>options</code> parameter described\nbelow.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>An object containing handler configuration.</p>\n\n\n\n\n<p><strong>Note:</strong> The options object will also be passed as the last argument to every\nevent handler.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n","properties":[{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted,\n  defaults to the object which fired the event.</strong></p>\n\n","html_type":"Object"},{"tagname":"params","type":"Number","name":"delay","doc":"<p>The number of milliseconds to delay the invocation of the handler after the event\n  fires.</p>\n\n","html_type":"Number"},{"tagname":"params","type":"Boolean","name":"single","doc":"<p>True to add a handler to handle just the next firing of the event, and then remove\n  itself.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Number","name":"buffer","doc":"<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"onFrame","doc":"<p>Causes the handler to be scheduled to run at the next\n  <a href=\"#!/api/Ext.Function-method-requestAnimationFrame\" rel=\"Ext.Function-method-requestAnimationFrame\" class=\"docClass\">animation frame event</a>. If the\n  event fires again before that time, the handler is not rescheduled - the handler\n  will only be called once when the next animation frame is fired, with the last set\n  of arguments passed.</p>\n\n","html_type":"Number"},{"tagname":"params","type":"Ext.util.Observable","name":"target","doc":"<p>Only call the handler if the event was fired on the target Observable, <em>not</em> if the\n  event was bubbled up from a child Observable.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},{"tagname":"params","type":"String","name":"element","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</strong>\n  The name of a Component property which references an <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">element</a>\n  to add a listener to.</p>\n\n\n\n\n<p>  This option is useful during Component construction to add DOM event listeners to\n  elements of <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which will exist only after the\n  Component is rendered.</p>\n\n\n\n\n<p>  For example, to add a click listener to a Panel's body:</p>\n\n\n\n\n<pre><code>  var panel = new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n\n\n\n<p>In order to remove listeners attached using the element, you'll need to reference\nthe element itself as seen below.</p>\n\n\n\n\n<pre><code> panel.body.un(...)\n</code></pre>\n\n","html_type":"String"},{"tagname":"params","type":"String","name":"delegate","optional":true,"doc":"<p>A simple selector to filter the event target or look for a descendant of the target.</p>\n\n\n\n\n<p>  The \"delegate\" option is only available on <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instances (or\n  when attaching a listener to a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> via a Component using the\n  element option).</p>\n\n\n\n\n<p>  See the <em>delegate</em> example below.</p>\n\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"stopPropagation","optional":true,"doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopPropagation\" rel=\"Ext.event.Event-method-stopPropagation\" class=\"docClass\">stopPropagation</a> on the event object\n  before firing the handler.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"preventDefault","optional":true,"doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-preventDefault\" rel=\"Ext.event.Event-method-preventDefault\" class=\"docClass\">preventDefault</a> on the event object\n  before firing the handler.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"stopEvent","optional":true,"doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopEvent\" rel=\"Ext.event.Event-method-stopEvent\" class=\"docClass\">stopEvent</a> on the event object\n  before firing the handler.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Array","name":"args","optional":true,"doc":"<p>Optional arguments to pass to the handler function. Any additional arguments\n  passed to <a href=\"#!/api/Ext.mixin.Observable-method-fireEvent\" rel=\"Ext.mixin.Observable-method-fireEvent\" class=\"docClass\">fireEvent</a> will be appended to these arguments.</p>\n\n","html_type":"Array"},{"tagname":"params","type":"Boolean","name":"destroyable","default":"false","optional":true,"doc":"<p>When specified as <code>true</code>, the function returns a <code>destroyable</code> object. An object\n  which implements the <code>destroy</code> method which removes all listeners added in this call.\n  This syntax can be a helpful shortcut to using <a href=\"#!/api/Ext.mixin.Observable-method-un\" rel=\"Ext.mixin.Observable-method-un\" class=\"docClass\">un</a>; particularly when\n  removing multiple listeners.  <em>NOTE</em> - not compatible when using the <em>element</em>\n  option.  See <a href=\"#!/api/Ext.mixin.Observable-method-un\" rel=\"Ext.mixin.Observable-method-un\" class=\"docClass\">un</a> for the proper syntax for removing listeners added using the\n  <em>element</em> config.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Number","name":"priority","optional":true,"doc":"<p>An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handlers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.\n  A priority must be an integer to be valid.  Fractional values are reserved for\n  internal framework use.</p>\n\n","html_type":"Number"},{"tagname":"params","type":"String","name":"order","default":"'current'","optional":true,"doc":"<p>A legacy option that is provided for backward compatibility.\n  It is recommended to use the <code>priority</code> option instead.  Available options are:</p>\n\n\n\n\n<ul>\n<li><code>'before'</code>: equal to a priority of <code>100</code></li>\n<li><code>'current'</code>: equal to a priority of <code>0</code> or default priority</li>\n<li><code>'after'</code>: equal to a priority of <code>-100</code></li>\n</ul>\n\n\n\n","html_type":"String"}],"html_type":"Object"},{"tagname":"params","type":"String","name":"order","default":"'current'","optional":true,"doc":"<p>A shortcut for the <code>order</code> event option.  Provided for backward compatibility.\n  Please use the <code>priority</code> event option instead.</p>\n\n\n\n\n<p><strong>Combining Options</strong></p>\n\n\n\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n\n\n\n<p>A delayed, one-time listener.</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n\n\n\n<p><strong>Attaching multiple handlers in 1 call</strong></p>\n\n\n\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple handlers and handler configs.</p>\n\n\n\n\n<pre><code>grid.on({\n    itemclick: 'onItemClick',\n    itemcontextmenu: grid.onItemContextmenu,\n    destroy: {\n        fn: function () {\n            // function called within the 'altCmp' scope instead of grid\n        },\n        scope: altCmp // unique scope for the destroy handler\n    },\n    scope: grid       // default scope - provided for example clarity\n});\n</code></pre>\n\n\n\n\n<p><strong>Delegate</strong></p>\n\n\n\n\n<p>This is a configuration option that you can pass along when registering a handler for\nan event to assist with event delegation. By setting this configuration option\nto a simple selector, the target element will be filtered to look for a\ndescendant of the target. For example:</p>\n\n\n\n\n<pre><code>var panel = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n    xtype: 'panel',\n    renderTo: document.body,\n    title: 'Delegate Handler Example',\n    frame: true,\n    height: 220,\n    width: 220,\n    html: '&lt;h1 class=\"myTitle\"&gt;BODY TITLE&lt;/h1&gt;Body content'\n});\n\n// The click handler will only be called when the click occurs on the\n// delegate: h1.myTitle (\"h1\" tag with class \"myTitle\")\npanel.on({\n    click: function (e) {\n        console.log(e.getTarget().innerHTML);\n    },\n    element: 'body',\n    delegate: 'h1.myTitle'\n });\n</code></pre>\n\n","html_type":"String"}],"return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes\n all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.on({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["doAddListener"],"id":"method-addListener","owner":"Ext.mixin.Observable","short_doc":"The on method is shorthand for addListener. ..."},{"tagname":"method","name":"addManagedListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":419}],"doc":"<p>The addManagedListener method is used when some object (call it \"A\") is listening\nto an event on another observable object (\"B\") and you want to remove that listener\nfrom \"B\" when \"A\" is destroyed. This is not an issue when \"B\" is destroyed because\nall of its listeners will be removed at that time.</p>\n\n<p>Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Foo', {\n    extend: '<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>',\n\n    initComponent: function () {\n        this.addManagedListener(MyApp.SomeGlobalSharedMenu, 'show', this.doSomething);\n        this.callParent();\n    }\n});\n</code></pre>\n\n<p>As you can see, when an instance of Foo is destroyed, it ensures that the 'show'\nlistener on the menu (<code>MyApp.SomeGlobalSharedMenu</code>) is also removed.</p>\n\n<p>As of version 5.1 it is no longer necessary to use this method in most cases because\nlisteners are automatically managed if the scope object provided to <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a>\nis an Observable instance. However, if the observable instance and scope are not the\nsame object you still need to use <code>mon</code> or <code>addManagedListener</code> if you want the listener\nto be managed.</p>\n","params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item to which to add a listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","html_type":"Object/String"},{"tagname":"params","type":"Function/String","name":"fn","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event\nname, this is the handler function or the name of a method on the specified\n<code>scope</code>.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n","html_type":"Object"}],"return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners = myButton.mon({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["addManagedListener"],"id":"method-addManagedListener","owner":"Ext.mixin.Observable","short_doc":"The addManagedListener method is used when some object (call it \"A\") is listening\nto an event on another observable o..."},{"tagname":"method","name":"adjustDirect2DDimension","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":1342}],"doc":"<p>Returns the fractional portion of this element's measurement in the given dimension.\n(IE9+ only)</p>\n","private":true,"return":{"type":"Number","name":"return","doc":"\n","properties":null,"html_type":"Number"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"dimension","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["getStyle"],"id":"method-adjustDirect2DDimension","owner":"Ext.dom.Element","short_doc":"Returns the fractional portion of this element's measurement in the given dimension. ..."},{"tagname":"method","name":"adjustForConstraints","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Positionable.js","linenr":170}],"doc":"<p>private ==>  used outside of core\nTODO: currently only used by ToolTip. does this method belong here?</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[{"name":"xy","type":"Object","html_type":"Object"},{"name":"parent","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["getConstrainVector"],"id":"method-adjustForConstraints","owner":"Ext.util.Positionable","short_doc":"private ==>  used outside of core\nTODO: currently only used by ToolTip. ..."},{"tagname":"method","name":"afterSetPosition","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Positionable.js","linenr":13}],"doc":"<p>Stub implementation called after positioning.\nMay be implemented in subclasses. Component has an implementation.</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-afterSetPosition","owner":"Ext.util.Positionable","short_doc":"Stub implementation called after positioning. ..."},{"tagname":"method","name":"alignTo","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Positionable.js","linenr":181}],"doc":"<p>Aligns the element with another element relative to the specified anchor points. If\nthe other element is the document it aligns it to the viewport. The position\nparameter is optional, and can be specified in any one of the following formats:</p>\n\n<ul>\n<li><strong>Blank</strong>: Defaults to aligning the element's top-left corner to the target's\nbottom-left corner (\"tl-bl\").</li>\n<li><strong>One anchor (deprecated)</strong>: The passed anchor position is used as the target\nelement's anchor point.  The element being aligned will position its top-left\ncorner (tl) to that point. <em>This method has been deprecated in favor of the newer\ntwo anchor syntax below</em>.</li>\n<li><strong>Two anchors</strong>: If two values from the table below are passed separated by a dash,\nthe first value is used as the element's anchor point, and the second value is\nused as the target's anchor point.</li>\n</ul>\n\n\n<p>In addition to the anchor points, the position parameter also supports the \"?\"\ncharacter. If \"?\" is passed at the end of the position string, the element will\nattempt to align as specified, but the position will be adjusted to constrain to\nthe viewport if necessary. Note that the element being aligned might be swapped to\nalign to a different position than that specified in order to enforce the viewport\nconstraints. Following are all of the supported anchor positions:</p>\n\n<pre>Value  Description\n-----  -----------------------------\ntl     The top left corner (default)\nt      The center of the top edge\ntr     The top right corner\nl      The center of the left edge\nc      In the center of the element\nr      The center of the right edge\nbl     The bottom left corner\nb      The center of the bottom edge\nbr     The bottom right corner\n</pre>\n\n\n<p>Example Usage:</p>\n\n<pre><code>// align el to other-el using the default positioning\n// (\"tl-bl\", non-constrained)\nel.alignTo(\"other-el\");\n\n// align the top left corner of el with the top right corner of other-el\n// (constrained to viewport)\nel.alignTo(\"other-el\", \"tr?\");\n\n// align the bottom right corner of el with the center left edge of other-el\nel.alignTo(\"other-el\", \"br-l?\");\n\n// align the center of el with the bottom left corner of other-el and\n// adjust the x position by -6 pixels (and the y position by 0)\nel.alignTo(\"other-el\", \"c-bl\", [-6, 0]);\n</code></pre>\n","params":[{"tagname":"params","type":"Ext.util.Positionable/HTMLElement/String","name":"element","doc":"<p>The Positionable,\nHTMLElement, or id of the element to align to.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>/HTMLElement/String"},{"tagname":"params","type":"String","name":"position","default":"\"tl-bl?\"","optional":true,"doc":"<p>The position to align to</p>\n","html_type":"String"},{"tagname":"params","type":"Number[]","name":"offsets","optional":true,"doc":"<p>Offset the positioning by [x, y]\nElement animation config object</p>\n","html_type":"Number[]"}],"return":{"type":"Ext.util.Positionable","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["getAlignToXY","setXY"],"id":"method-alignTo","owner":"Ext.util.Positionable","overrides":[{"name":"alignTo","owner":"Ext.util.Floating","link":"<a href=\"#!/api/Ext.util.Floating-method-alignTo\" rel=\"Ext.util.Floating-method-alignTo\" class=\"docClass\">Ext.util.Floating.alignTo</a>"}],"short_doc":"Aligns the element with another element relative to the specified anchor points. ..."},{"tagname":"method","name":"appendChild","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":1405}],"doc":"<p>Appends the passed element(s) to this element</p>\n","params":[{"tagname":"params","type":"String/HTMLElement/Ext.dom.Element/Object","name":"el","doc":"<p>The id or element to insert\nor a DomHelper config</p>\n","html_type":"String/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/Object"},{"tagname":"params","type":"Boolean","name":"returnDom","default":"false","optional":true,"doc":"<p>True to return the raw DOM element instead\nof <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a></p>\n","html_type":"Boolean"}],"return":{"type":"Ext.dom.Element/HTMLElement","name":"return","doc":"<p>The inserted <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> (or\nHTMLElement if <em>returnDom</em> is <em>true</em>).</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/HTMLElement"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["createChild"],"id":"method-appendChild","owner":"Ext.dom.Element","short_doc":"Appends the passed element(s) to this element ..."},{"tagname":"method","name":"appendTo","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":1439}],"doc":"<p>Appends this element to the passed element.</p>\n","params":[{"tagname":"params","type":"String/HTMLElement/Ext.dom.Element","name":"el","doc":"<p>The new parent element.\nThe id of the node, a DOM Node or an existing Element.</p>\n","html_type":"String/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>This element.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"method-appendTo","owner":"Ext.dom.Element","short_doc":"Appends this element to the passed element. ..."},{"tagname":"method","name":"applyStyles","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":1450}],"doc":"<p>More flexible version of <a href=\"#!/api/Ext.dom.Element-method-setStyle\" rel=\"Ext.dom.Element-method-setStyle\" class=\"docClass\">setStyle</a> for setting style properties.</p>\n","params":[{"tagname":"params","type":"String/Object/Function","name":"styles","doc":"<p>A style specification string, e.g. \"width:100px\", or object in the form <code>{width:\"100px\"}</code>, or\na function which returns such a specification.</p>\n","html_type":"String/Object/Function"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["setStyle"],"id":"method-applyStyles","owner":"Ext.dom.Element","short_doc":"More flexible version of setStyle for setting style properties. ..."},{"tagname":"method","name":"blur","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":1471}],"doc":"<p>Tries to blur the element. Any exceptions are caught and ignored.</p>\n","return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":true,"fires":[],"method_calls":["focus"],"id":"method-blur","owner":"Ext.dom.Element","short_doc":"Tries to blur the element. ..."},{"tagname":"method","name":"cacheScrollValues","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":1491}],"doc":"<p>When an element is moved around in the DOM, or is hidden using <code>display:none</code>, it loses layout, and therefore\nall scroll positions of all descendant elements are lost.</p>\n\n<p>This function caches them, and returns a function, which when run will restore the cached positions.\nIn the following example, the Panel is moved from one Container to another which will cause it to lose all scroll positions:</p>\n\n<pre><code>var restoreScroll = myPanel.el.cacheScrollValues();\nmyOtherContainer.add(myPanel);\nrestoreScroll();\n</code></pre>\n","return":{"type":"Function","name":"return","doc":"<p>A function which will restore all descendant elements of this Element to their scroll\npositions recorded when this function was executed. Be aware that the returned function is a closure which has\ncaptured the scope of <code>cacheScrollValues</code>, so take care to derefence it as soon as not needed - if is it is a <code>var</code>\nit will drop out of scope, and the reference will be freed.</p>\n","properties":null,"html_type":"Function"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["query"],"id":"method-cacheScrollValues","owner":"Ext.dom.Element","short_doc":"When an element is moved around in the DOM, or is hidden using display:none, it loses layout, and therefore\nall scrol..."},{"tagname":"method","name":"calculateAnchorXY","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Positionable.js","linenr":249}],"doc":"<p>Calculates x,y coordinates specified by the anchor position on the element, adding\nextraX and extraY values.</p>\n","params":[{"tagname":"params","type":"String","name":"anchor","default":"'tl'","optional":true,"doc":"<p>The specified anchor position.\nSee <a href=\"#!/api/Ext.util.Positionable-method-alignTo\" rel=\"Ext.util.Positionable-method-alignTo\" class=\"docClass\">alignTo</a> for details on supported anchor positions.</p>\n","html_type":"String"},{"tagname":"params","type":"Number","name":"extraX","optional":true,"doc":"<p>value to be added to the x coordinate</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"extraY","optional":true,"doc":"<p>value to be added to the y coordinate</p>\n","html_type":"Number"},{"tagname":"params","type":"Object","name":"size","optional":true,"doc":"<p>An object containing the size to use for calculating anchor\nposition {width: (target width), height: (target height)} (defaults to the\nelement's current size)</p>\n","html_type":"Object"}],"return":{"type":"Number[]","name":"return","doc":"<p>[x, y] An array containing the element's x and y coordinates</p>\n","properties":null,"html_type":"Number[]"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getHeight","getWidth"],"id":"method-calculateAnchorXY","owner":"Ext.util.Positionable","short_doc":"Calculates x,y coordinates specified by the anchor position on the element, adding\nextraX and extraY values. ..."},{"tagname":"method","name":"calculateConstrainedPosition","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Positionable.js","linenr":514}],"doc":"<p>Calculates the new [x,y] position to move this Positionable into a constrain region.</p>\n\n<p>By default, this Positionable is constrained to be within the container it was added to, or the element it was\nrendered to.</p>\n\n<p>Priority is given to constraining the top and left within the constraint.</p>\n\n<p>An alternative constraint may be passed.</p>\n","params":[{"tagname":"params","type":"String/HTMLElement/Ext.dom.Element/Ext.util.Region","name":"constrainTo","optional":true,"doc":"<p>The Element or <a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Region</a>\ninto which this Component is to be constrained. Defaults to the element into which this Positionable\nwas rendered, or this Component's {@link <a href=\"#!/api/Ext.Component-cfg-constrainTo\" rel=\"Ext.Component-cfg-constrainTo\" class=\"docClass\">Ext.Component.constrainTo</a>.</p>\n","html_type":"String/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/<a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a>"},{"tagname":"params","type":"Number[]","name":"proposedPosition","optional":true,"doc":"<p>A proposed <code>[X, Y]</code> position to test for validity\nand to coerce into constraints instead of using this Positionable's current position.</p>\n","html_type":"Number[]"},{"tagname":"params","type":"Boolean","name":"local","optional":true,"doc":"<p>The proposedPosition is local <em>(relative to floatParent if a floating Component)</em></p>\n","html_type":"Boolean"},{"tagname":"params","type":"Number[]","name":"proposedSize","optional":true,"doc":"<p>A proposed <code>[width, height]</code> size to use when calculating\nconstraints instead of using this Positionable's current size.</p>\n","html_type":"Number[]"}],"return":{"type":"Number[]","name":"return","doc":"<p><strong>If</strong> the element <em>needs</em> to be translated, the new <code>[X, Y]</code> position within\nconstraints if possible, giving priority to keeping the top and left edge in the constrain region.\nOtherwise, <code>false</code>.</p>\n","properties":null,"html_type":"Number[]"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getPosition","reverseTranslateXY"],"id":"method-calculateConstrainedPosition","owner":"Ext.util.Positionable","short_doc":"Calculates the new [x,y] position to move this Positionable into a constrain region. ..."},{"tagname":"method","name":"callOverridden","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1581}],"doc":"<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n","params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n","html_type":"Array/Arguments"}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the overridden method</p>\n","properties":null,"html_type":"Object"},"protected":true,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-callOverridden","owner":"Ext.Base","short_doc":"Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi..."},{"tagname":"method","name":"callParent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1143}],"doc":"<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10));     // alerts 10\n alert(My.Derived2.method(10)); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n","protected":true,"params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n","html_type":"Array/Arguments"}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the parent method</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-callParent","owner":"Ext.Base","short_doc":"Call the \"parent\" method of the current method. ..."},{"tagname":"method","name":"callSuper","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1258}],"doc":"<p>This method is used by an override to call the superclass method but bypass any\noverridden method. This is often done to \"patch\" a method that contains a bug\nbut for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function () {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     extend: 'Ext.some.Class',\n\n     method: function () {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>Ext.some.DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.patches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function () {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <code>callParent</code> to call the superclass <code>method</code> since\nthat would call the overridden method containing the bug. In other words, the\nabove patch would only produce \"Fixed\" then \"Good\" in the console log, whereas,\nusing <code>callParent</code> would produce \"Fixed\" then \"Bad\" then \"Good\".</p>\n","protected":true,"params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n","html_type":"Array/Arguments"}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the superclass method</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-callSuper","owner":"Ext.Base","short_doc":"This method is used by an override to call the superclass method but bypass any\noverridden method. ..."},{"tagname":"method","name":"captureArgs","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":120}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"o","type":"Object","html_type":"Object"},{"name":"fn","type":"Object","html_type":"Object"},{"name":"scope","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-captureArgs","owner":"Ext.mixin.Observable","short_doc":" ..."},{"tagname":"method","name":"center","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":1538}],"doc":"<p>Centers the Element in either the viewport, or another Element.</p>\n","params":[{"tagname":"params","type":"String/HTMLElement/Ext.dom.Element","name":"centerIn","doc":"<p>element in\nwhich to center the element.</p>\n","html_type":"String/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>This element</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["alignTo"],"id":"method-center","owner":"Ext.dom.Element","short_doc":"Centers the Element in either the viewport, or another Element. ..."},{"tagname":"method","name":"child","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":1548}],"doc":"<p>Selects a single <em>direct</em> child based on the passed CSS selector (the selector should not contain an id).</p>\n","params":[{"tagname":"params","type":"String","name":"selector","doc":"<p>The CSS selector.</p>\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"returnDom","default":"false","optional":true,"doc":"<p><code>true</code> to return the DOM node instead of <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>.</p>\n","html_type":"Boolean"}],"return":{"type":"HTMLElement/Ext.dom.Element","name":"return","doc":"<p>The child <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> (or DOM node if <code>returnDom</code> is <code>true</code>)</p>\n","properties":null,"html_type":"HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["selectNode"],"id":"method-child","owner":"Ext.dom.Element","short_doc":"Selects a single direct child based on the passed CSS selector (the selector should not contain an id). ..."},{"tagname":"method","name":"clearListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1062}],"doc":"<p>Removes all listeners for this object including the managed listeners</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["clearManagedListeners"],"id":"method-clearListeners","owner":"Ext.mixin.Observable","short_doc":"Removes all listeners for this object including the managed listeners ..."},{"tagname":"method","name":"clearManagedListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1096}],"doc":"<p>Removes all managed listeners for this object.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["removeManagedListenerItem"],"id":"method-clearManagedListeners","owner":"Ext.mixin.Observable","short_doc":"Removes all managed listeners for this object. ..."},{"tagname":"method","name":"collect","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":1934}],"doc":"<p>Removes the element from the cache and removes listeners.\nUsed for cleaning up orphaned elements after they have been removed from the dom.\nSimilar to <a href=\"#!/api/Ext.dom.Element-method-destroy\" rel=\"Ext.dom.Element-method-destroy\" class=\"docClass\">destroy</a> except it assumes the element has already been\nremoved from the dom.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-collect","owner":"Ext.dom.Element","short_doc":"Removes the element from the cache and removes listeners. ..."},{"tagname":"method","name":"constrainBox","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Positionable.js","linenr":819}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"box","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["calculateConstrainedPosition"],"id":"method-constrainBox","owner":"Ext.util.Positionable","short_doc":" ..."},{"tagname":"method","name":"contains","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":1595}],"doc":"<p>Returns <code>true</code> if this element is an ancestor of the passed element, or is\nthe element.</p>\n","params":[{"tagname":"params","type":"HTMLElement/String","name":"element","doc":"<p>The element to check.</p>\n","html_type":"HTMLElement/String"}],"return":{"type":"Boolean","name":"return","doc":"<p>True if this element is an ancestor of el or the el itself, else false</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["isAncestor"],"id":"method-contains","owner":"Ext.dom.Element","short_doc":"Returns true if this element is an ancestor of the passed element, or is\nthe element. ..."},{"tagname":"method","name":"createChild","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":1573}],"doc":"<p>Creates the passed DomHelper config and appends it to this element or optionally\ninserts it before the passed child element.</p>\n","params":[{"tagname":"params","type":"Object","name":"config","doc":"<p>DomHelper element config object.  If no tag is specified\n(e.g., {tag:'input'}) then a div will be automatically generated with the specified\nattributes.</p>\n","html_type":"Object"},{"tagname":"params","type":"HTMLElement","name":"insertBefore","optional":true,"doc":"<p>a child element of this element</p>\n","html_type":"HTMLElement"},{"tagname":"params","type":"Boolean","name":"returnDom","default":"false","optional":true,"doc":"<p>true to return the dom node instead of creating\nan Element</p>\n","html_type":"Boolean"}],"return":{"type":"Ext.dom.Element/HTMLElement","name":"return","doc":"<p>The new child element (or HTMLElement if\n<em>returnDom</em> is <em>true</em>)</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/HTMLElement"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-createChild","owner":"Ext.dom.Element","short_doc":"Creates the passed DomHelper config and appends it to this element or optionally\ninserts it before the passed child e..."},{"tagname":"method","name":"createRelayer","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1315}],"doc":"<p>Creates an event handling function which re-fires the event from this object as the passed event name.</p>\n","private":true,"params":[{"tagname":"params","type":"String","name":"newName","doc":"<p>The name under which to re-fire the passed parameters.</p>\n","html_type":"String"},{"tagname":"params","type":"Array","name":"beginEnd","optional":true,"doc":"<p>The caller can specify on which indices to slice.</p>\n","html_type":"Array"}],"return":{"type":"Function","name":"return","doc":"\n","properties":null,"html_type":"Function"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-createRelayer","owner":"Ext.mixin.Observable","short_doc":"Creates an event handling function which re-fires the event from this object as the passed event name. ..."},{"tagname":"method","name":"cssTranslate","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":4578}],"doc":"<p>Translates an element using CSS 3 in 2D.</p>\n","removed":{"text":"\n","version":"5.0.0"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-cssTranslate","owner":"Ext.dom.Element","short_doc":"Translates an element using CSS 3 in 2D. ..."},{"tagname":"method","name":"destroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":1614}],"doc":"<p>Destroys this element by removing it from the cache, removing its DOM reference,\nand removing all of its event listeners.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["collect"],"id":"method-destroy","owner":"Ext.dom.Element","overrides":[{"name":"destroy","owner":"Ext.Base","link":"<a href=\"#!/api/Ext.Base-method-destroy\" rel=\"Ext.Base-method-destroy\" class=\"docClass\">Ext.Base.destroy</a>"}],"short_doc":"Destroys this element by removing it from the cache, removing its DOM reference,\nand removing all of its event listen..."},{"tagname":"method","name":"disableShadow","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":1656}],"doc":"<p>Disables the shadow element created by <a href=\"#!/api/Ext.dom.Element-method-enableShadow\" rel=\"Ext.dom.Element-method-enableShadow\" class=\"docClass\">enableShadow</a>.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-disableShadow","owner":"Ext.dom.Element","short_doc":"Disables the shadow element created by enableShadow. ..."},{"tagname":"method","name":"disableShim","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":1669}],"doc":"<p>Disables the shim element created by <a href=\"#!/api/Ext.dom.Element-method-enableShim\" rel=\"Ext.dom.Element-method-enableShim\" class=\"docClass\">enableShim</a>.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-disableShim","owner":"Ext.dom.Element","short_doc":"Disables the shim element created by enableShim. ..."},{"tagname":"method","name":"disableTouchContextMenu","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":1682}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["on"],"id":"method-disableTouchContextMenu","owner":"Ext.dom.Element","short_doc":" ..."},{"tagname":"method","name":"disableTouchScroll","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":1696}],"doc":"<p>Disables native scrolling of an overflowing element using touch-screen input</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["addCls","on"],"id":"method-disableTouchScroll","owner":"Ext.dom.Element","short_doc":"Disables native scrolling of an overflowing element using touch-screen input ..."},{"tagname":"method","name":"doFireEvent","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":652}],"doc":"<p>Continue to fire event.</p>\n","private":true,"params":[{"tagname":"params","type":"String","name":"eventName","doc":"\n","html_type":"String"},{"tagname":"params","type":"Array","name":"args","doc":"\n","html_type":"Array"},{"tagname":"params","type":"Boolean","name":"bubbles","doc":"\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getBubbleParent"],"id":"method-doFireEvent","owner":"Ext.mixin.Observable","short_doc":"Continue to fire event. ..."},{"tagname":"method","name":"doReplaceWith","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":1714}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"element","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-doReplaceWith","owner":"Ext.dom.Element","short_doc":" ..."},{"tagname":"method","name":"doScrollIntoView","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":1722}],"doc":"<p>A scrollIntoView implementation for scrollIntoView/rtlScrollIntoView to call\nafter current scrollX has been determined.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"container","type":"Object","html_type":"Object"},{"name":"hscroll","type":"Object","html_type":"Object"},{"name":"animate","type":"Object","html_type":"Object"},{"name":"highlight","type":"Object","html_type":"Object"},{"name":"getScrollX","type":"Object","html_type":"Object"},{"name":"scrollTo","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["getScrollIntoViewXY"],"id":"method-doScrollIntoView","owner":"Ext.dom.Element","short_doc":"A scrollIntoView implementation for scrollIntoView/rtlScrollIntoView to call\nafter current scrollX has been determined. ..."},{"tagname":"method","name":"down","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":1763}],"doc":"<p>Selects a single child at any depth below this element based on the passed CSS selector (the selector should not contain an id).</p>\n","params":[{"tagname":"params","type":"String","name":"selector","doc":"<p>The CSS selector</p>\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"returnDom","default":"false","optional":true,"doc":"<p><code>true</code> to return the DOM node instead of <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a></p>\n","html_type":"Boolean"}],"return":{"type":"HTMLElement/Ext.dom.Element","name":"return","doc":"<p>The child <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> (or DOM node if <code>returnDom</code> is <code>true</code>)</p>\n","properties":null,"html_type":"HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["selectNode"],"id":"method-down","owner":"Ext.dom.Element","short_doc":"Selects a single child at any depth below this element based on the passed CSS selector (the selector should not cont..."},{"tagname":"method","name":"enableBubble","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1329}],"doc":"<p>Enables events fired by this Observable to bubble up an owner hierarchy by calling <code>this.getBubbleTarget()</code> if\npresent. There is no implementation in the Observable base class.</p>\n\n<p>This is commonly used by Ext.Components to bubble events to owner Containers.\nSee <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>. The default implementation in <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> returns the\nComponent's immediate owner. But if a known target is required, this can be overridden to access the\nrequired target more quickly.</p>\n\n<p>Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.overrides.form.field.Base', {\n    override: '<a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a>',\n\n    //  Add functionality to Field's initComponent to enable the change event to bubble\n    initComponent: function () {\n        this.callParent();\n        this.enableBubble('change');\n    }\n});\n\nvar myForm = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.form.Panel\" rel=\"Ext.form.Panel\" class=\"docClass\">Ext.form.Panel</a>', {\n    title: 'User Details',\n    items: [{\n        ...\n    }],\n    listeners: {\n        change: function() {\n            // Title goes red if form has been modified.\n            myForm.header.setStyle('color', 'red');\n        }\n    }\n});\n</code></pre>\n","params":[{"tagname":"params","type":"String/String[]","name":"eventNames","doc":"<p>The event name to bubble, or an Array of event names.</p>\n","html_type":"String/String[]"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["_initEvent"],"id":"method-enableBubble","owner":"Ext.mixin.Observable","short_doc":"Enables events fired by this Observable to bubble up an owner hierarchy by calling this.getBubbleTarget() if\npresent. ..."},{"tagname":"method","name":"enableShadow","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":1773}],"doc":"<p>Enables a shadow element that will always display behind this element</p>\n","params":[{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>Configuration options for the shadow</p>\n","properties":[{"tagname":"params","type":"Number","name":"offset","default":"4","optional":true,"doc":"<p>Number of pixels to offset the shadow</p>\n","html_type":"Number"},{"tagname":"params","type":"String","name":"mode","default":"'sides'","optional":true,"doc":"<p>The shadow display mode.  Supports the following\noptions:</p>\n\n<pre><code>- `'sides'`: Shadow displays on both sides and bottom only\n- `'frame'`: Shadow displays equally on all four sides\n- `'drop'`: Traditional bottom-right drop shadow\n- `'bottom'`: Shadow is offset to the bottom\n</code></pre>\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"animate","default":"false","optional":true,"doc":"<p><code>true</code> to animate the shadow while\nthe element is animating.  By default the shadow will be hidden during animation.</p>\n","html_type":"Boolean"}],"html_type":"Object"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["isVisible"],"id":"method-enableShadow","owner":"Ext.dom.Element","short_doc":"Enables a shadow element that will always display behind this element ..."},{"tagname":"method","name":"enableShim","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":1815}],"doc":"<p>Enables an iframe shim for this element to keep windowed objects from\nshowing through.  The position, size, and visibility of the shim will be\nautomatically synchronized as the position, size, and visibility of this\nElement are changed.</p>\n","params":[{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>Configuration options for the shim</p>\n","html_type":"Object"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>The new shim element</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["isVisible"],"id":"method-enableShim","owner":"Ext.dom.Element","short_doc":"Enables an iframe shim for this element to keep windowed objects from\nshowing through. ..."},{"tagname":"method","name":"findParent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":1850}],"doc":"<p>Looks at this node and then at parent nodes for a match of the passed simple selector.</p>\n","params":[{"tagname":"params","type":"String","name":"selector","doc":"<p>The simple selector to test. See <a href=\"#!/api/Ext.dom.Query\" rel=\"Ext.dom.Query\" class=\"docClass\">Ext.dom.Query</a> for information about simple selectors.</p>\n","html_type":"String"},{"tagname":"params","type":"Number/String/HTMLElement/Ext.dom.Element","name":"limit","optional":true,"doc":"<p>The max depth to search as a number or an element which causes the upward traversal to stop\nand is <strong>not</strong> considered for inclusion as the result. (defaults to 50 || document.documentElement)</p>\n","html_type":"Number/String/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"params","type":"Boolean","name":"returnEl","default":"false","optional":true,"doc":"<p>True to return a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> object instead of DOM node</p>\n","html_type":"Boolean"}],"return":{"type":"HTMLElement/Ext.dom.Element","name":"return","doc":"<p>The matching DOM node (or\n<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> if <em>returnEl</em> is <em>true</em>).  Or null if no match was found.</p>\n","properties":null,"html_type":"HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-findParent","owner":"Ext.dom.Element","short_doc":"Looks at this node and then at parent nodes for a match of the passed simple selector. ..."},{"tagname":"method","name":"findParentNode","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":1886}],"doc":"<p>Looks at parent nodes for a match of the passed simple selector.</p>\n","params":[{"tagname":"params","type":"String","name":"selector","doc":"<p>The simple selector to test. See <a href=\"#!/api/Ext.dom.Query\" rel=\"Ext.dom.Query\" class=\"docClass\">Ext.dom.Query</a> for information about simple selectors.</p>\n","html_type":"String"},{"tagname":"params","type":"Number/String/HTMLElement/Ext.dom.Element","name":"limit","optional":true,"doc":"<p>The max depth to search as a number or an element which causes the upward\ntraversal to stop and is <strong>not&lt;/</strong> considered for inclusion as the result.\n(defaults to 50 || document.documentElement)</p>\n","html_type":"Number/String/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"params","type":"Boolean","name":"returnEl","default":"false","optional":true,"doc":"<p>True to return a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> object instead of DOM node</p>\n","html_type":"Boolean"}],"return":{"type":"HTMLElement/Ext.dom.Element","name":"return","doc":"<p>The matching DOM node (or\n<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> if <em>returnEl</em> is <em>true</em>).  Or null if no match was found.</p>\n","properties":null,"html_type":"HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-findParentNode","owner":"Ext.dom.Element","short_doc":"Looks at parent nodes for a match of the passed simple selector. ..."},{"tagname":"method","name":"fireAction","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":614}],"doc":"<p>Fires the specified event with the passed parameters and executes a function (action).\nBy default, the action function will be executed after any \"before\" event handlers\n(as specified using the <code>order</code> option of <code><a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a></code>), but before any\nother handlers are fired.  This gives the \"before\" handlers an opportunity to\ncancel the event by returning <code>false</code>, and prevent the action function from being\ncalled.</p>\n\n<p>The action can also be configured to run after normal handlers, but before any \"after\"\nhandlers (as specified using the <code>order</code> event option) by passing <code>'after'</code>\nas the <code>order</code> parameter.  This configuration gives any event handlers except\nfor \"after\" handlers the opportunity to cancel the event and prevent the action\nfunction from being called.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n","html_type":"String"},{"tagname":"params","type":"Array","name":"args","doc":"<p>Arguments to pass to handlers and to the action function.</p>\n","html_type":"Array"},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The action function.</p>\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>Event options for the action function.  Accepts any\nof the options of <code><a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a></code></p>\n","html_type":"Object"},{"tagname":"params","type":"String","name":"order","default":"'before'","optional":true,"doc":"<p>The order to call the action function relative\ntoo the event handlers (<code>'before'</code> or <code>'after'</code>).  Note that this option is\nsimply used to sort the action function relative to the event handlers by \"priority\".\nAn order of <code>'before'</code> is equivalent to a priority of <code>99.5</code>, while an order of\n<code>'after'</code> is equivalent to a priority of <code>-99.5</code>.  See the <code>priority</code> option\nof <code><a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a></code> for more details.</p>\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["doAddListener","fireEventArgs"],"id":"method-fireAction","owner":"Ext.mixin.Observable","short_doc":"Fires the specified event with the passed parameters and executes a function (action). ..."},{"tagname":"method","name":"fireEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":550}],"doc":"<p>Fires the specified event with the passed parameters (minus the event name, plus the <code>options</code> object passed\nto <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a>).</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy (See <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by\ncalling <a href=\"#!/api/Ext.mixin.Observable-method-enableBubble\" rel=\"Ext.mixin.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n","html_type":"String"},{"tagname":"params","type":"Object...","name":"args","doc":"<p>Variable number of parameters are passed to handlers.</p>\n","html_type":"Object..."}],"return":{"type":"Boolean","name":"return","doc":"<p>returns false if any of the handlers return false otherwise it returns true.</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["fireEventArgs"],"id":"method-fireEvent","owner":"Ext.mixin.Observable","short_doc":"Fires the specified event with the passed parameters (minus the event name, plus the options object passed\nto addList..."},{"tagname":"method","name":"fireEventArgs","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":588}],"doc":"<p>Fires the specified event with the passed parameter list.</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy (See <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by\ncalling <a href=\"#!/api/Ext.mixin.Observable-method-enableBubble\" rel=\"Ext.mixin.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n","html_type":"String"},{"tagname":"params","type":"Object[]","name":"args","doc":"<p>An array of parameters which are passed to handlers.</p>\n","html_type":"Object[]"}],"return":{"type":"Boolean","name":"return","doc":"<p>returns false if any of the handlers return false otherwise it returns true.</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["doFireEvent"],"id":"method-fireEventArgs","owner":"Ext.mixin.Observable","short_doc":"Fires the specified event with the passed parameter list. ..."},{"tagname":"method","name":"first","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":1902}],"doc":"<p>Gets the first child, skipping text nodes</p>\n","params":[{"tagname":"params","type":"String","name":"selector","optional":true,"doc":"<p>Find the next sibling that matches the passed simple selector.\nSee <a href=\"#!/api/Ext.dom.Query\" rel=\"Ext.dom.Query\" class=\"docClass\">Ext.dom.Query</a> for information about simple selectors.</p>\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"returnDom","default":"false","optional":true,"doc":"<p><code>true</code> to return a raw DOM node instead of an <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a></p>\n","html_type":"Boolean"}],"return":{"type":"Ext.dom.Element/HTMLElement","name":"return","doc":"<p>The first child or null</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/HTMLElement"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["matchNode"],"id":"method-first","owner":"Ext.dom.Element","short_doc":"Gets the first child, skipping text nodes ..."},{"tagname":"method","name":"focus","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":1913}],"doc":"<p>Tries to focus the element. Any exceptions are caught and ignored.</p>\n","params":[{"tagname":"params","type":"Number","name":"defer","optional":true,"doc":"<p>Milliseconds to defer the focus</p>\n","html_type":"Number"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"method-focus","owner":"Ext.dom.Element","short_doc":"Tries to focus the element. ..."},{"tagname":"method","name":"getAlignToXY","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Positionable.js","linenr":313}],"doc":"<p>Gets the x,y coordinates to align this element with another element. See\n<a href=\"#!/api/Ext.util.Positionable-method-alignTo\" rel=\"Ext.util.Positionable-method-alignTo\" class=\"docClass\">alignTo</a> for more info on the supported position values.</p>\n","params":[{"tagname":"params","type":"Ext.util.Positionable/HTMLElement/String","name":"element","doc":"<p>The Positionable,\nHTMLElement, or id of the element to align to.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>/HTMLElement/String"},{"tagname":"params","type":"String","name":"position","default":"\"tl-bl?\"","optional":true,"doc":"<p>The position to align to</p>\n","html_type":"String"},{"tagname":"params","type":"Number[]","name":"offsets","optional":true,"doc":"<p>Offset the positioning by [x, y]</p>\n","html_type":"Number[]"}],"return":{"type":"Number[]","name":"return","doc":"<p>[x, y]</p>\n","properties":null,"html_type":"Number[]"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["convertPositionSpec","getAnchorToXY","getAnchorXY","getHeight","getWidth"],"id":"method-getAlignToXY","owner":"Ext.util.Positionable","short_doc":"Gets the x,y coordinates to align this element with another element. ..."},{"tagname":"method","name":"getAnchorToXY","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Positionable.js","linenr":22}],"doc":"<p>Gets the x,y coordinates of an element specified by the anchor position on the\nelement.</p>\n","params":[{"tagname":"params","type":"Ext.dom.Element","name":"el","doc":"<p>The element</p>\n\n","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"params","type":"String","name":"anchor","default":"'tl'","optional":true,"doc":"<p>The specified anchor position.\nSee <a href=\"#!/api/Ext.Component-method-alignTo\" rel=\"Ext.Component-method-alignTo\" class=\"docClass\">alignTo</a> for details on supported anchor positions.</p>\n\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"local","optional":true,"doc":"<p>True to get the local (element top/left-relative) anchor\nposition instead of page coordinates</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Object","name":"size","optional":true,"doc":"<p>An object containing the size to use for calculating anchor\nposition {width: (target width), height: (target height)} (defaults to the\nelement's current size)</p>\n\n","html_type":"Object"}],"return":{"type":"Number[]","name":"return","doc":"<p>[x, y] An array containing the element's x and y coordinates</p>\n\n","properties":null,"html_type":"Number[]"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getAnchorToXY","owner":"Ext.util.Positionable","short_doc":"Gets the x,y coordinates of an element specified by the anchor position on the\nelement. ..."},{"tagname":"method","name":"getAnchorXY","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Positionable.js","linenr":436}],"doc":"<p>Gets the x,y coordinates specified by the anchor position on the element.</p>\n","params":[{"tagname":"params","type":"String","name":"anchor","default":"'tl'","optional":true,"doc":"<p>The specified anchor position.\nSee <a href=\"#!/api/Ext.util.Positionable-method-alignTo\" rel=\"Ext.util.Positionable-method-alignTo\" class=\"docClass\">alignTo</a> for details on supported anchor positions.</p>\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"local","optional":true,"doc":"<p>True to get the local (element top/left-relative) anchor\nposition instead of page coordinates</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Object","name":"size","optional":true,"doc":"<p>An object containing the size to use for calculating anchor\nposition {width: (target width), height: (target height)} (defaults to the\nelement's current size)</p>\n","html_type":"Object"}],"return":{"type":"Number[]","name":"return","doc":"<p>[x, y] An array containing the element's x and y coordinates</p>\n","properties":null,"html_type":"Number[]"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["calculateAnchorXY","getXY"],"id":"method-getAnchorXY","owner":"Ext.util.Positionable","short_doc":"Gets the x,y coordinates specified by the anchor position on the element. ..."},{"tagname":"method","name":"getAttribute","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":1975}],"doc":"<p>Returns the value of an attribute from the element's underlying DOM node.</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"<p>The attribute name.</p>\n","html_type":"String"},{"tagname":"params","type":"String","name":"namespace","optional":true,"doc":"<p>The namespace in which to look for the attribute.</p>\n","html_type":"String"}],"return":{"type":"String","name":"return","doc":"<p>The attribute value.</p>\n","properties":null,"html_type":"String"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getAttribute","owner":"Ext.dom.Element","short_doc":"Returns the value of an attribute from the element's underlying DOM node. ..."},{"tagname":"method","name":"getAttributes","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":1989}],"doc":"<p>Returns an object containing a map of all attributes of this element's DOM node.</p>\n","return":{"type":"Object","name":"return","doc":"<p>Key/value pairs of attribute names and their values.</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getAttributes","owner":"Ext.dom.Element","short_doc":"Returns an object containing a map of all attributes of this element's DOM node. ..."},{"tagname":"method","name":"getBorderPadding","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Positionable.js","linenr":40}],"doc":"<p>Returns the size of the element's borders and padding.</p>\n","return":{"type":"Object","name":"return","doc":"<p>an object with the following numeric properties\n- beforeX\n- afterX\n- beforeY\n- afterY</p>\n\n","properties":null,"html_type":"Object"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getBorderPadding","owner":"Ext.util.Positionable","short_doc":"Returns the size of the element's borders and padding. ..."},{"tagname":"method","name":"getBorderWidth","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2060}],"doc":"<p>Gets the width of the border(s) for the specified side(s)</p>\n","params":[{"tagname":"params","type":"String","name":"side","doc":"<p>Can be t, l, r, b or any combination of those to add\nmultiple values. For example, passing <code>'lr'</code> would get the border <strong>l</strong>eft\nwidth + the border <strong>r</strong>ight width.</p>\n","html_type":"String"}],"return":{"type":"Number","name":"return","doc":"<p>The width of the sides passed added together</p>\n","properties":null,"html_type":"Number"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["addStyles"],"id":"method-getBorderWidth","owner":"Ext.dom.Element","short_doc":"Gets the width of the border(s) for the specified side(s) ..."},{"tagname":"method","name":"getBorders","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2046}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getStyle"],"id":"method-getBorders","owner":"Ext.dom.Element","short_doc":" ..."},{"tagname":"method","name":"getBottom","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2008}],"doc":"<p>Gets the bottom Y coordinate of the element (element Y position + element height)</p>\n","params":[{"tagname":"params","type":"Boolean","name":"local","doc":"<p>True to get the local css position instead of page\ncoordinate</p>\n","html_type":"Boolean"}],"return":{"type":"Number","name":"return","doc":"\n","properties":null,"html_type":"Number"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getHeight","getLocalY","getY"],"id":"method-getBottom","owner":"Ext.dom.Element","short_doc":"Gets the bottom Y coordinate of the element (element Y position + element height) ..."},{"tagname":"method","name":"getBox","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Positionable.js","linenr":460}],"doc":"<p>Return an object defining the area of this Element which can be passed to\n<a href=\"#!/api/Ext.util.Positionable-method-setBox\" rel=\"Ext.util.Positionable-method-setBox\" class=\"docClass\">setBox</a> to set another Element's size/location to match this element.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"contentBox","optional":true,"doc":"<p>If true a box for the content of the element is\nreturned.</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"local","optional":true,"doc":"<p>If true the element's left and top relative to its\n<code>offsetParent</code> are returned instead of page x/y.</p>\n","html_type":"Boolean"}],"return":{"type":"Object","name":"return","doc":"<p>An object in the format</p>\n","properties":[{"tagname":"return","type":"Number","name":"x","doc":"<p>The element's X position.</p>\n","html_type":"Number"},{"tagname":"return","type":"Number","name":"y","doc":"<p>The element's Y position.</p>\n","html_type":"Number"},{"tagname":"return","type":"Number","name":"width","doc":"<p>The element's width.</p>\n","html_type":"Number"},{"tagname":"return","type":"Number","name":"height","doc":"<p>The element's height.</p>\n","html_type":"Number"},{"tagname":"return","type":"Number","name":"bottom","doc":"<p>The element's lower bound.</p>\n","html_type":"Number"},{"tagname":"return","type":"Number","name":"right","doc":"<p>The element's rightmost bound.</p>\n\n<p>The returned object may also be addressed as an Array where index 0 contains the X\nposition and index 1 contains the Y position. The result may also be used for\n<a href=\"#!/api/Ext.util.Positionable-method-setXY\" rel=\"Ext.util.Positionable-method-setXY\" class=\"docClass\">setXY</a></p>\n","html_type":"Number"}],"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getBorderPadding","getHeight","getLocalXY","getWidth","getXY"],"id":"method-getBox","owner":"Ext.util.Positionable","short_doc":"Return an object defining the area of this Element which can be passed to\nsetBox to set another Element's size/locati..."},{"tagname":"method","name":"getBubbleParent","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":685}],"doc":"<p>Gets the bubbling parent for an Observable</p>\n","private":true,"return":{"type":"Ext.util.Observable","name":"return","doc":"<p>The bubble parent. null is returned if no bubble target exists</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getBubbleTarget"],"id":"method-getBubbleParent","owner":"Ext.mixin.Observable","short_doc":"Gets the bubbling parent for an Observable ..."},{"tagname":"method","name":"getById","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2018}],"doc":"<p>Returns a child element of this element given its <code>id</code>.</p>\n","params":[{"tagname":"params","type":"String","name":"id","doc":"<p>The id of the desired child element.</p>\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"asDom","default":"false","optional":true,"doc":"<p>True to return the DOM element, false to return a\nwrapped Element object.</p>\n","html_type":"Boolean"}],"return":{"type":"Ext.dom.Element/HTMLElement","name":"return","doc":"<p>The child element (or HTMLElement if\n<em>asDom</em> is <em>true</em>).  Or null if no match was found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/HTMLElement"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getById","owner":"Ext.dom.Element","short_doc":"Returns a child element of this element given its id. ..."},{"tagname":"method","name":"getConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1431}],"doc":"<p>Returns a specified config property value. If the name parameter is not passed,\nall current configuration options will be returned as key value pairs.</p>\n","params":[{"tagname":"params","type":"String","name":"name","optional":true,"doc":"<p>The name of the config property to get.</p>\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"peek","default":"false","optional":true,"doc":"<p><code>true</code> to peek at the raw value without calling the getter.</p>\n","html_type":"Boolean"}],"return":{"type":"Object","name":"return","doc":"<p>The config property value.</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-getConfig","owner":"Ext.Base","short_doc":"Returns a specified config property value. ..."},{"tagname":"method","name":"getConstrainRegion","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Positionable.js","linenr":582}],"doc":"<p>Returns the content region of this element for purposes of constraining floating\nchildren.  That is the region within the borders and scrollbars, but not within the padding.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getConstrainRegion","owner":"Ext.util.Positionable","short_doc":"Returns the content region of this element for purposes of constraining floating\nchildren. ..."},{"tagname":"method","name":"getConstrainVector","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Positionable.js","linenr":612}],"doc":"<p>Returns the <code>[X, Y]</code> vector by which this Positionable's element must be translated to make a best\nattempt to constrain within the passed constraint. Returns <code>false</code> if the element\ndoes not need to be moved.</p>\n\n<p>Priority is given to constraining the top and left within the constraint.</p>\n\n<p>The constraint may either be an existing element into which the element is to be\nconstrained, or a <a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Region</a> into which this element is to be\nconstrained.</p>\n\n<p>By default, any extra shadow around the element is <strong>not</strong> included in the constrain calculations - the edges\nof the element are used as the element bounds. To constrain the shadow within the constrain region, set the\n<code>constrainShadow</code> property on this element to <code>true</code>.</p>\n","params":[{"tagname":"params","type":"Ext.util.Positionable/HTMLElement/String/Ext.util.Region","name":"constrainTo","optional":true,"doc":"<p>The\nPositionable, HTMLElement, element id, or Region into which the element is to be\nconstrained.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>/HTMLElement/String/<a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a>"},{"tagname":"params","type":"Number[]","name":"proposedPosition","optional":true,"doc":"<p>A proposed <code>[X, Y]</code> position to test for validity\nand to produce a vector for instead of using the element's current position</p>\n","html_type":"Number[]"},{"tagname":"params","type":"Number[]","name":"proposedSize","optional":true,"doc":"<p>A proposed <code>[width, height]</code> size to constrain\ninstead of using the element's current size</p>\n","html_type":"Number[]"}],"return":{"type":"Number[]/Boolean","name":"return","doc":"<p><strong>If</strong> the element <em>needs</em> to be translated, an <code>[X, Y]</code>\nvector by which this element must be translated. Otherwise, <code>false</code>.</p>\n","properties":null,"html_type":"Number[]/Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getRegion"],"id":"method-getConstrainVector","owner":"Ext.util.Positionable","short_doc":"Returns the [X, Y] vector by which this Positionable's element must be translated to make a best\nattempt to constrain..."},{"tagname":"method","name":"getCurrentConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1471}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getConfigurator"],"id":"method-getCurrentConfig","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"getHTML","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":4585}],"doc":"<p>Returns the <code>innerHTML</code> of an Element or an empty string if the element's\ndom no longer exists.</p>\n","inheritdoc":null,"deprecated":{"text":"<p>Please use <a href=\"#!/api/Ext.dom.Element-method-getHtml\" rel=\"Ext.dom.Element-method-getHtml\" class=\"docClass\">getHtml</a> instead.</p>\n","version":"5.0.0"},"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-getHTML","owner":"Ext.dom.Element","return":{"type":"String","name":"return","doc":"\n","properties":null,"html_type":"String"},"throws":null,"type":null,"short_doc":"Returns the innerHTML of an Element or an empty string if the element's\ndom no longer exists. ..."},{"tagname":"method","name":"getHeight","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2088}],"doc":"<p>Returns the offset height of the element.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"contentHeight","optional":true,"doc":"<p><code>true</code> to get the height minus borders and padding.</p>\n","html_type":"Boolean"}],"return":{"type":"Number","name":"return","doc":"<p>The element's height.</p>\n","properties":null,"html_type":"Number"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["adjustDirect2DDimension","getBorderWidth","getPadding","isStyle"],"id":"method-getHeight","owner":"Ext.dom.Element","short_doc":"Returns the offset height of the element. ..."},{"tagname":"method","name":"getHtml","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2123}],"doc":"<p>Returns the <code>innerHTML</code> of an Element or an empty string if the element's\ndom no longer exists.</p>\n","return":{"type":"String","name":"return","doc":"\n","properties":null,"html_type":"String"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getHtml","owner":"Ext.dom.Element","short_doc":"Returns the innerHTML of an Element or an empty string if the element's\ndom no longer exists. ..."},{"tagname":"method","name":"getInitialConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1488}],"doc":"<p>Returns the initial configuration passed to constructor when instantiating\nthis class.</p>\n","params":[{"tagname":"params","type":"String","name":"name","optional":true,"doc":"<p>Name of the config option to return.</p>\n","html_type":"String"}],"return":{"type":"Object/Mixed","name":"return","doc":"<p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n","properties":null,"html_type":"Object/Mixed"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getInitialConfig","owner":"Ext.Base","short_doc":"Returns the initial configuration passed to constructor when instantiating\nthis class. ..."},{"tagname":"method","name":"getLeft","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2132}],"doc":"<p>Gets the left X coordinate</p>\n","params":[{"tagname":"params","type":"Boolean","name":"local","doc":"<p>True to get the local css position instead of\npage coordinate</p>\n","html_type":"Boolean"}],"return":{"type":"Number","name":"return","doc":"\n","properties":null,"html_type":"Number"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getLocalX","getX"],"id":"method-getLeft","owner":"Ext.dom.Element","short_doc":"Gets the left X coordinate ..."},{"tagname":"method","name":"getLocalX","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Positionable.js","linenr":53}],"doc":"<p>Returns the x coordinate of this element reletive to its <code>offsetParent</code>.</p>\n","return":{"type":"Number","name":"return","doc":"<p>The local x coordinate</p>\n\n","properties":null,"html_type":"Number"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getLocalX","owner":"Ext.util.Positionable","short_doc":"Returns the x coordinate of this element reletive to its offsetParent. ..."},{"tagname":"method","name":"getLocalXY","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Positionable.js","linenr":61}],"doc":"<p>Returns the x and y coordinates of this element relative to its <code>offsetParent</code>.</p>\n","return":{"type":"Number[]","name":"return","doc":"<p>The local XY position of the element</p>\n\n","properties":null,"html_type":"Number[]"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getLocalXY","owner":"Ext.util.Positionable","short_doc":"Returns the x and y coordinates of this element relative to its offsetParent. ..."},{"tagname":"method","name":"getLocalY","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Positionable.js","linenr":69}],"doc":"<p>Returns the y coordinate of this element reletive to its <code>offsetParent</code>.</p>\n","return":{"type":"Number","name":"return","doc":"<p>The local y coordinate</p>\n\n","properties":null,"html_type":"Number"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getLocalY","owner":"Ext.util.Positionable","short_doc":"Returns the y coordinate of this element reletive to its offsetParent. ..."},{"tagname":"method","name":"getMargin","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2228}],"doc":"<p>Returns an object with properties top, left, right and bottom representing the margins of this element unless sides is passed,\nthen it returns the calculated width of the sides (see <a href=\"#!/api/Ext.dom.Element-method-getPadding\" rel=\"Ext.dom.Element-method-getPadding\" class=\"docClass\">getPadding</a>).</p>\n","params":[{"tagname":"params","type":"String","name":"sides","optional":true,"doc":"<p>Any combination of 'l', 'r', 't', 'b' to get the sum of those sides.</p>\n","html_type":"String"}],"return":{"type":"Object/Number","name":"return","doc":"\n","properties":null,"html_type":"Object/Number"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-getMargin","owner":"Ext.dom.Element","short_doc":"Returns an object with properties top, left, right and bottom representing the margins of this element unless sides i..."},{"tagname":"method","name":"getOffsetsTo","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Positionable.js","linenr":699}],"doc":"<p>Returns the offsets of this element from the passed element. The element must both\nbe part of the DOM tree and not have display:none to have page coordinates.</p>\n","params":[{"tagname":"params","type":"Ext.util.Positionable/HTMLElement/String","name":"offsetsTo","doc":"<p>The Positionable,\nHTMLElement, or element id to get get the offsets from.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>/HTMLElement/String"}],"return":{"type":"Number[]","name":"return","doc":"<p>The XY page offsets (e.g. <code>[100, -200]</code>)</p>\n","properties":null,"html_type":"Number[]"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getXY"],"id":"method-getOffsetsTo","owner":"Ext.util.Positionable","short_doc":"Returns the offsets of this element from the passed element. ..."},{"tagname":"method","name":"getOuterHeight","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":4592}],"doc":"<p>Retrieves the height of the element account for the top and bottom margins.</p>\n","removed":{"text":"\n","version":"5.0.0"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-getOuterHeight","owner":"Ext.dom.Element","short_doc":"Retrieves the height of the element account for the top and bottom margins. ..."},{"tagname":"method","name":"getOuterWidth","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":4599}],"doc":"<p>Retrieves the width of the element accounting for the left and right margins.</p>\n","removed":{"text":"\n","version":"5.0.0"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-getOuterWidth","owner":"Ext.dom.Element","short_doc":"Retrieves the width of the element accounting for the left and right margins. ..."},{"tagname":"method","name":"getPadding","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2258}],"doc":"<p>Gets the width of the padding(s) for the specified side(s).</p>\n","params":[{"tagname":"params","type":"String","name":"side","doc":"<p>Can be t, l, r, b or any combination of those to add\nmultiple values. For example, passing <code>'lr'</code> would get the padding <strong>l</strong>eft +\nthe padding <strong>r</strong>ight.</p>\n","html_type":"String"}],"return":{"type":"Number","name":"return","doc":"<p>The padding of the sides passed added together.</p>\n","properties":null,"html_type":"Number"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["addStyles"],"id":"method-getPadding","owner":"Ext.dom.Element","short_doc":"Gets the width of the padding(s) for the specified side(s). ..."},{"tagname":"method","name":"getPageBox","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":4606}],"doc":"<p>Returns an object defining the area of this Element which can be passed to\n<a href=\"#!/api/Ext.util.Positionable-method-setBox\" rel=\"Ext.util.Positionable-method-setBox\" class=\"docClass\">Ext.util.Positionable.setBox</a> to set another Element's size/location to match this element.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"asRegion","optional":true,"doc":"<p>If true an <a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a> will be returned</p>\n","html_type":"Boolean"}],"return":{"type":"Object/Ext.util.Region","name":"return","doc":"<p>box An object in the following format:</p>\n\n<pre><code>{\n    left: &lt;Element's X position&gt;,\n    top: &lt;Element's Y position&gt;,\n    width: &lt;Element's width&gt;,\n    height: &lt;Element's height&gt;,\n    bottom: &lt;Element's lower bound&gt;,\n    right: &lt;Element's rightmost bound&gt;\n}\n</code></pre>\n\n<p>The returned object may also be addressed as an Array where index 0 contains\nthe X position and index 1 contains the Y position. So the result may also be\nused for <a href=\"#!/api/Ext.dom.Element-method-setXY\" rel=\"Ext.dom.Element-method-setXY\" class=\"docClass\">setXY</a></p>\n","properties":null,"html_type":"Object/<a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a>"},"deprecated":{"text":"<p>use <a href=\"#!/api/Ext.util.Positionable-method-getBox\" rel=\"Ext.util.Positionable-method-getBox\" class=\"docClass\">Ext.util.Positionable.getBox</a> to get a box object, and\n<a href=\"#!/api/Ext.util.Positionable-method-getRegion\" rel=\"Ext.util.Positionable-method-getRegion\" class=\"docClass\">Ext.util.Positionable.getRegion</a> to get a <a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Region</a>.</p>\n","version":"5.0.0"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getXY"],"id":"method-getPageBox","owner":"Ext.dom.Element","short_doc":"Returns an object defining the area of this Element which can be passed to\nExt.util.Positionable.setBox to set anothe..."},{"tagname":"method","name":"getRegion","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Positionable.js","linenr":712}],"doc":"<p>Returns a region object that defines the area of this element.</p>\n","return":{"type":"Ext.util.Region","name":"return","doc":"<p>A Region containing \"top, left, bottom, right\" properties.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getBox"],"id":"method-getRegion","owner":"Ext.util.Positionable","short_doc":"Returns a region object that defines the area of this element. ..."},{"tagname":"method","name":"getRight","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2273}],"doc":"<p>Gets the right X coordinate of the element (element X position + element width)</p>\n","params":[{"tagname":"params","type":"Boolean","name":"local","doc":"<p>True to get the local css position instead of page\ncoordinates</p>\n","html_type":"Boolean"}],"return":{"type":"Number","name":"return","doc":"\n","properties":null,"html_type":"Number"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getLocalX","getWidth","getX"],"id":"method-getRight","owner":"Ext.dom.Element","short_doc":"Gets the right X coordinate of the element (element X position + element width) ..."},{"tagname":"method","name":"getScroll","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2283}],"doc":"<p>Returns the current scroll position of the element.</p>\n","return":{"type":"Object","name":"return","doc":"<p>An object containing the scroll position in the format\n<code>{left: (scrollLeft), top: (scrollTop)}</code></p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getScroll","owner":"Ext.dom.Element","short_doc":"Returns the current scroll position of the element. ..."},{"tagname":"method","name":"getScrollIntoViewXY","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2317}],"doc":"<p>Gets the x and y coordinates needed for scrolling an element into view within\na given container.  These coordinates translate into the scrollLeft and scrollTop\npositions that will need to be set on an ancestor of the element in order to make\nthis element visible within its container.</p>\n","params":[{"tagname":"params","type":"String/HTMLElement/Ext.Element","name":"The","doc":"<p>container</p>\n","html_type":"String/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},{"tagname":"params","type":"Number","name":"scrollX","doc":"<p>The container's current scroll position on the x axis</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"scrollY","doc":"<p>The container's current scroll position on the y axis</p>\n","html_type":"Number"}],"return":{"type":"Object","name":"return","doc":"<p>An object with \"x\" and \"y\" properties</p>\n","properties":null,"html_type":"Object"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getOffsetsTo"],"id":"method-getScrollIntoViewXY","owner":"Ext.dom.Element","short_doc":"Gets the x and y coordinates needed for scrolling an element into view within\na given container. ..."},{"tagname":"method","name":"getScrollLeft","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2366}],"doc":"<p>Gets the left scroll position</p>\n","return":{"type":"Number","name":"return","doc":"<p>The left scroll position</p>\n","properties":null,"html_type":"Number"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getScroll"],"id":"method-getScrollLeft","owner":"Ext.dom.Element","short_doc":"Gets the left scroll position ..."},{"tagname":"method","name":"getScrollParent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":4655}],"doc":"<p>Gets the Scroller instance of the first parent that has one.</p>\n","removed":{"text":"\n","version":"5.0.0"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-getScrollParent","owner":"Ext.dom.Element","short_doc":"Gets the Scroller instance of the first parent that has one. ..."},{"tagname":"method","name":"getScrollTop","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2380}],"doc":"<p>Gets the top scroll position</p>\n","return":{"type":"Number","name":"return","doc":"<p>The top scroll position</p>\n","properties":null,"html_type":"Number"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getScroll"],"id":"method-getScrollTop","owner":"Ext.dom.Element","short_doc":"Gets the top scroll position ..."},{"tagname":"method","name":"getSize","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2394}],"doc":"<p>Returns the size of the element.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"contentSize","optional":true,"doc":"<p><code>true</code> to get the width/size minus borders and padding.</p>\n","html_type":"Boolean"}],"return":{"type":"Object","name":"return","doc":"<p>An object containing the element's size:</p>\n","properties":[{"tagname":"return","type":"Number","name":"width","doc":"\n","html_type":"Number"},{"tagname":"return","type":"Number","name":"height","doc":"\n","html_type":"Number"}],"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getHeight","getWidth"],"id":"method-getSize","owner":"Ext.dom.Element","short_doc":"Returns the size of the element. ..."},{"tagname":"method","name":"getStyle","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2405}],"doc":"<p>Returns a named style property based on computed/currentStyle (primary) and\ninline-style if primary is not available.</p>\n","params":[{"tagname":"params","type":"String/String[]","name":"property","doc":"<p>The style property (or multiple property names\nin an array) whose value is returned.</p>\n","html_type":"String/String[]"},{"tagname":"params","type":"Boolean","name":"inline","default":"false","optional":true,"doc":"<p>if <code>true</code> only inline styles will be returned.</p>\n","html_type":"Boolean"}],"return":{"type":"String/Object","name":"return","doc":"<p>The current value of the style property for this element\n(or a hash of named style values if multiple property arguments are requested).</p>\n","properties":null,"html_type":"String/Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getStyle","owner":"Ext.dom.Element","short_doc":"Returns a named style property based on computed/currentStyle (primary) and\ninline-style if primary is not available. ..."},{"tagname":"method","name":"getTextWidth","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/TextMetrics.js","linenr":150}],"doc":"<p>Returns the width in pixels of the passed text, or the width of the text in this Element.</p>\n","params":[{"tagname":"params","type":"String","name":"text","doc":"<p>The text to measure. Defaults to the innerHTML of the element.</p>\n","html_type":"String"},{"tagname":"params","type":"Number","name":"min","optional":true,"doc":"<p>The minumum value to return.</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"max","optional":true,"doc":"<p>The maximum value to return.</p>\n","html_type":"Number"}],"return":{"type":"Number","name":"return","doc":"<p>The text width in pixels.</p>\n","properties":null,"html_type":"Number"},"owner":"Ext.dom.Element","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getTextWidth","short_doc":"Returns the width in pixels of the passed text, or the width of the text in this Element. ..."},{"tagname":"method","name":"getTop","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2486}],"doc":"<p>Gets the top Y coordinate</p>\n","params":[{"tagname":"params","type":"Boolean","name":"local","doc":"<p>True to get the local css position instead of page\ncoordinates</p>\n","html_type":"Boolean"}],"return":{"type":"Number","name":"return","doc":"\n","properties":null,"html_type":"Number"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getLocalY","getY"],"id":"method-getTop","owner":"Ext.dom.Element","short_doc":"Gets the top Y coordinate ..."},{"tagname":"method","name":"getValue","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2496}],"doc":"<p>Returns the value of the <code>value</code> attribute.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"asNumber","doc":"<p><code>true</code> to parse the value as a number.</p>\n","html_type":"Boolean"}],"return":{"type":"String/Number","name":"return","doc":"\n","properties":null,"html_type":"String/Number"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getValue","owner":"Ext.dom.Element","short_doc":"Returns the value of the value attribute. ..."},{"tagname":"method","name":"getViewRegion","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Positionable.js","linenr":721}],"doc":"<p>Returns the <strong>content</strong> region of this element. That is the region within the borders\nand padding.</p>\n","return":{"type":"Ext.util.Region","name":"return","doc":"<p>A Region containing \"top, left, bottom, right\" member data.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getBorderPadding","getHeight","getWidth","getXY"],"id":"method-getViewRegion","owner":"Ext.util.Positionable","short_doc":"Returns the content region of this element. ..."},{"tagname":"method","name":"getViewSize","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2507}],"doc":"<p>Returns the dimensions of the element available to lay content out in.  For\nmost elements this is the clientHeight/clientWidth.  If the element is\nthe document/document.body the window's innerHeight/innerWidth is returned</p>\n\n<p>If the element (or any ancestor element) has CSS style <code>display: none</code>, the\ndimensions will be zero.</p>\n","return":{"type":"Object","name":"return","doc":"<p>Object describing width and height.</p>\n","properties":[{"tagname":"return","type":"Number","name":"width","doc":"\n","html_type":"Number"},{"tagname":"return","type":"Number","name":"height","doc":"\n","html_type":"Number"}],"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getViewSize","owner":"Ext.dom.Element","short_doc":"Returns the dimensions of the element available to lay content out in. ..."},{"tagname":"method","name":"getWidth","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2548}],"doc":"<p>Returns the offset width of the element.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"contentWidth","optional":true,"doc":"<p><code>true</code> to get the width minus borders and padding.</p>\n","html_type":"Boolean"}],"return":{"type":"Number","name":"return","doc":"<p>The element's width.</p>\n","properties":null,"html_type":"Number"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["adjustDirect2DDimension","getBorderWidth","getPadding","isStyle"],"id":"method-getWidth","owner":"Ext.dom.Element","short_doc":"Returns the offset width of the element. ..."},{"tagname":"method","name":"getX","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2602}],"doc":"<p>Gets element X position in page coordinates</p>\n","return":{"type":"Number","name":"return","doc":"\n","properties":null,"html_type":"Number"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getXY"],"id":"method-getX","owner":"Ext.dom.Element","overrides":[{"name":"getX","owner":"Ext.util.Positionable","link":"<a href=\"#!/api/Ext.util.Positionable-method-getX\" rel=\"Ext.util.Positionable-method-getX\" class=\"docClass\">Ext.util.Positionable.getX</a>"}],"short_doc":"Gets element X position in page coordinates ..."},{"tagname":"method","name":"getXY","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2611}],"doc":"<p>Gets element X and Y positions in page coordinates</p>\n","return":{"type":"Array","name":"return","doc":"<p>[x, y]</p>\n","properties":null,"html_type":"Array"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getXY","owner":"Ext.dom.Element","overrides":[{"name":"getXY","owner":"Ext.util.Positionable","link":"<a href=\"#!/api/Ext.util.Positionable-method-getXY\" rel=\"Ext.util.Positionable-method-getXY\" class=\"docClass\">Ext.util.Positionable.getXY</a>"}],"short_doc":"Gets element X and Y positions in page coordinates ..."},{"tagname":"method","name":"getY","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2643}],"doc":"<p>Gets element Y position in page coordinates</p>\n","return":{"type":"Number","name":"return","doc":"\n","properties":null,"html_type":"Number"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getXY"],"id":"method-getY","owner":"Ext.dom.Element","overrides":[{"name":"getY","owner":"Ext.util.Positionable","link":"<a href=\"#!/api/Ext.util.Positionable-method-getY\" rel=\"Ext.util.Positionable-method-getY\" class=\"docClass\">Ext.util.Positionable.getY</a>"}],"short_doc":"Gets element Y position in page coordinates ..."},{"tagname":"method","name":"getZIndex","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2652}],"doc":"<p>Returns this element's z-index</p>\n","return":{"type":"Number","name":"return","doc":"\n","properties":null,"html_type":"Number"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getStyle"],"id":"method-getZIndex","owner":"Ext.dom.Element","short_doc":"Returns this element's z-index ..."},{"tagname":"method","name":"hasCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2660}],"doc":"<p>Checks if the specified CSS class exists on this element's DOM node.</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"<p>The CSS class to check for.</p>\n","html_type":"String"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the class exists, else <code>false</code>.</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getData","synchronize"],"id":"method-hasCls","owner":"Ext.dom.Element","short_doc":"Checks if the specified CSS class exists on this element's DOM node. ..."},{"tagname":"method","name":"hasConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1480}],"doc":"\n","private":true,"params":[{"tagname":"params","name":"config","doc":"\n","type":"Object","html_type":"Object"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-hasConfig","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"hasListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1138}],"doc":"<p>Checks to see if this object has any listeners for a specified event, or whether the event bubbles. The answer\nindicates whether the event needs firing or not.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to check for</p>\n","html_type":"String"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the event is being listened for or bubbles, else <code>false</code></p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-hasListener","owner":"Ext.mixin.Observable","short_doc":"Checks to see if this object has any listeners for a specified event, or whether the event bubbles. ..."},{"tagname":"method","name":"hide","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2675}],"doc":"<p>Hide this element - Uses display mode to determine whether to use \"display\",\n\"visibility\", or \"offsets\". See <a href=\"#!/api/Ext.dom.Element-method-setVisible\" rel=\"Ext.dom.Element-method-setVisible\" class=\"docClass\">setVisible</a>.</p>\n","return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":true,"fires":[],"method_calls":["setVisible"],"id":"method-hide","owner":"Ext.dom.Element","short_doc":"Hide this element - Uses display mode to determine whether to use \"display\",\n\"visibility\", or \"offsets\". ..."},{"tagname":"method","name":"id","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":4746}],"doc":"<p>Generates unique ids. If the element already has an id, it is unchanged</p>\n","params":[{"tagname":"params","type":"Object/HTMLElement/Ext.dom.Element","name":"obj","optional":true,"doc":"<p>The element to generate an id for</p>\n","html_type":"Object/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"params","type":"String","name":"prefix","optional":true,"doc":"<p>Id prefix (defaults \"ext-gen\")</p>\n","html_type":"String"}],"return":{"type":"String","name":"return","doc":"<p>The generated Id.</p>\n","properties":null,"html_type":"String"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-id","owner":"Ext.dom.Element","short_doc":"Generates unique ids. ..."},{"tagname":"method","name":"initConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1393}],"doc":"<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n","protected":true,"params":[{"tagname":"params","type":"Object","name":"config","doc":"\n","html_type":"Object"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["getConfigurator"],"id":"method-initConfig","owner":"Ext.Base","short_doc":"Initialize configuration for this class. ..."},{"tagname":"method","name":"insertAfter","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2685}],"doc":"<p>Inserts this element after the passed element in the DOM.</p>\n","params":[{"tagname":"params","type":"String/HTMLElement/Ext.dom.Element","name":"el","doc":"<p>The element to insert after.\nThe <code>id</code> of the node, a DOM Node or an existing Element.</p>\n","html_type":"String/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>This element.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"method-insertAfter","owner":"Ext.dom.Element","short_doc":"Inserts this element after the passed element in the DOM. ..."},{"tagname":"method","name":"insertBefore","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2697}],"doc":"<p>Inserts this element before the passed element in the DOM.</p>\n","params":[{"tagname":"params","type":"String/HTMLElement/Ext.dom.Element","name":"el","doc":"<p>The element before which this element will be inserted.\nThe id of the node, a DOM Node or an existing Element.</p>\n","html_type":"String/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>This element.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"method-insertBefore","owner":"Ext.dom.Element","short_doc":"Inserts this element before the passed element in the DOM. ..."},{"tagname":"method","name":"insertFirst","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2709}],"doc":"<p>Inserts (or creates) an element as the first child of this element</p>\n","params":[{"tagname":"params","type":"String/HTMLElement/Ext.dom.Element/Object","name":"el","doc":"<p>The id or element to insert\nor a DomHelper config to create and insert</p>\n","html_type":"String/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/Object"},{"tagname":"params","type":"Boolean","name":"returnDom","default":"false","optional":true,"doc":"<p>True to return the raw DOM element instead\nof <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a></p>\n","html_type":"Boolean"}],"return":{"type":"Ext.dom.Element/HTMLElement","name":"return","doc":"<p>The new child element (or HTMLElement if\n<em>returnDom</em> is <em>true</em>).</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/HTMLElement"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["createChild"],"id":"method-insertFirst","owner":"Ext.dom.Element","short_doc":"Inserts (or creates) an element as the first child of this element ..."},{"tagname":"method","name":"insertHtml","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2730}],"doc":"<p>Inserts an html fragment into this element</p>\n","params":[{"tagname":"params","type":"String","name":"where","doc":"<p>Where to insert the html in relation to this element - beforeBegin, afterBegin, beforeEnd, afterEnd.\nSee <a href=\"#!/api/Ext.dom.Helper-method-insertHtml\" rel=\"Ext.dom.Helper-method-insertHtml\" class=\"docClass\">Ext.dom.Helper.insertHtml</a> for details.</p>\n","html_type":"String"},{"tagname":"params","type":"String","name":"html","doc":"<p>The HTML fragment</p>\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"returnEl","default":"false","optional":true,"doc":"<p>True to return an <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a></p>\n","html_type":"Boolean"}],"return":{"type":"HTMLElement/Ext.dom.Element","name":"return","doc":"<p>The inserted node (or nearest related if more than 1 inserted)</p>\n","properties":null,"html_type":"HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-insertHtml","owner":"Ext.dom.Element","short_doc":"Inserts an html fragment into this element ..."},{"tagname":"method","name":"insertSibling","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2743}],"doc":"<p>Inserts (or creates) the passed element (or DomHelper config) as a sibling of this element</p>\n","params":[{"tagname":"params","type":"String/HTMLElement/Ext.dom.Element/Object/Array","name":"el","doc":"<p>The id, element to insert or a DomHelper config\nto create and insert <em>or</em> an array of any of those.</p>\n","html_type":"String/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/Object/Array"},{"tagname":"params","type":"String","name":"where","default":"'before'","optional":true,"doc":"<p>'before' or 'after'</p>\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"returnDom","default":"false","optional":true,"doc":"<p>True to return the raw DOM element instead of <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a></p>\n","html_type":"Boolean"}],"return":{"type":"Ext.dom.Element/HTMLElement","name":"return","doc":"<p>The inserted <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> (or\nHTMLElement if <em>returnDom</em> is <em>true</em>). If an array is passed, the last\ninserted element is returned.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/HTMLElement"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-insertSibling","owner":"Ext.dom.Element","short_doc":"Inserts (or creates) the passed element (or DomHelper config) as a sibling of this element ..."},{"tagname":"method","name":"is","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2802}],"doc":"<p>Returns <code>true</code> if this element matches the passed simple selector\n(e.g. 'div.some-class' or 'span:first-child').</p>\n","params":[{"tagname":"params","type":"String/Function","name":"selector","doc":"<p>The simple selector to test or a function which is passed\ncandidate nodes, and should return <code>true</code> for nodes which match.</p>\n","html_type":"String/Function"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if this element matches the selector, else <code>false</code>.</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-is","owner":"Ext.dom.Element","short_doc":"Returns true if this element matches the passed simple selector\n(e.g. ..."},{"tagname":"method","name":"isAncestor","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2834}],"doc":"<p>Returns <code>true</code> if this element is an ancestor of the passed element</p>\n","params":[{"tagname":"params","type":"String/HTMLElement/Ext.dom.Element","name":"el","doc":"<p>The element or id of the element\nto search for in this elements descendants.</p>\n","html_type":"String/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"}],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-isAncestor","owner":"Ext.dom.Element","short_doc":"Returns true if this element is an ancestor of the passed element ..."},{"tagname":"method","name":"isDescendent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":4662}],"doc":"<p>Determines if this element is a descendant of the passed in Element.</p>\n","removed":{"text":"\n","version":"5.0.0"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-isDescendent","owner":"Ext.dom.Element","short_doc":"Determines if this element is a descendant of the passed in Element. ..."},{"tagname":"method","name":"isStyle","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2869}],"doc":"<p>Checks if the current value of a style is equal to a given value.</p>\n","params":[{"tagname":"params","type":"String","name":"style","doc":"<p>property whose value is returned.</p>\n","html_type":"String"},{"tagname":"params","type":"String","name":"value","doc":"<p>to check against.</p>\n","html_type":"String"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> for when the current value equals the given value.</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getStyle"],"id":"method-isStyle","owner":"Ext.dom.Element","short_doc":"Checks if the current value of a style is equal to a given value. ..."},{"tagname":"method","name":"isSuspended","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1150}],"doc":"<p>Checks if all events, or a specific event, is suspended.</p>\n","params":[{"tagname":"params","type":"String","name":"event","optional":true,"doc":"<p>The name of the specific event to check</p>\n","html_type":"String"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if events are suspended</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-isSuspended","owner":"Ext.mixin.Observable","short_doc":"Checks if all events, or a specific event, is suspended. ..."},{"tagname":"method","name":"isTransparent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":4669}],"doc":"<p>Returns <code>true</code> if the value of the given property is visually transparent. This\nmay be due to a 'transparent' style value or an rgba value with 0 in the alpha\ncomponent.</p>\n","params":[{"tagname":"params","type":"String","name":"prop","doc":"<p>The style property whose value is to be tested.</p>\n","html_type":"String"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the style property is visually transparent.</p>\n","properties":null,"html_type":"Boolean"},"deprecated":{"text":"\n","version":"5.0.0"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getStyle"],"id":"method-isTransparent","owner":"Ext.dom.Element","short_doc":"Returns true if the value of the given property is visually transparent. ..."},{"tagname":"method","name":"isVisible","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2879}],"doc":"<p>Checks whether the element is currently visible using both visibility and display properties.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"deep","default":"false","optional":true,"doc":"<p>True to walk the dom and see if parent elements are hidden.\nIf false, the function only checks the visibility of the element itself and it may return\n<code>true</code> even though a parent is not visible.</p>\n","html_type":"Boolean"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the element is currently visible, else <code>false</code></p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-isVisible","owner":"Ext.dom.Element","short_doc":"Checks whether the element is currently visible using both visibility and display properties. ..."},{"tagname":"method","name":"last","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2912}],"doc":"<p>Gets the last child, skipping text nodes</p>\n","params":[{"tagname":"params","type":"String","name":"selector","optional":true,"doc":"<p>Find the previous sibling that matches the passed simple selector.\nSee <a href=\"#!/api/Ext.dom.Query\" rel=\"Ext.dom.Query\" class=\"docClass\">Ext.dom.Query</a> for information about simple selectors.</p>\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"returnDom","default":"false","optional":true,"doc":"<p><code>true</code> to return a raw DOM node instead of an <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a></p>\n","html_type":"Boolean"}],"return":{"type":"Ext.dom.Element/HTMLElement","name":"return","doc":"<p>The last child <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> (or\nHTMLElement if <em>returnDom</em> is <em>true</em>).  Or null if no match is found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/HTMLElement"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["matchNode"],"id":"method-last","owner":"Ext.dom.Element","short_doc":"Gets the last child, skipping text nodes ..."},{"tagname":"method","name":"link","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1508}],"doc":"<p>Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (via <code><a href=\"#!/api/Ext.Base-method-destroy\" rel=\"Ext.Base-method-destroy\" class=\"docClass\">destroy</a></code>).</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"\n","html_type":"String"},{"tagname":"params","type":"Object","name":"value","doc":"\n","html_type":"Object"}],"return":{"type":"Object","name":"return","doc":"<p>The <code>value</code> passed.</p>\n","properties":null,"html_type":"Object"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-link","owner":"Ext.Base","short_doc":"Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (vi..."},{"tagname":"method","name":"mon","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1665}],"doc":"<p>Shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-addManagedListener\" rel=\"Ext.mixin.Observable-method-addManagedListener\" class=\"docClass\">addManagedListener</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item to which to add a listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","html_type":"Object/String"},{"tagname":"params","type":"Function/String","name":"fn","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event\nname, this is the handler function or the name of a method on the specified\n<code>scope</code>.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n","html_type":"Object"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-mon","owner":"Ext.mixin.Observable","return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners = myButton.mon({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","properties":null,"html_type":"Object"},"throws":null,"type":null,"short_doc":"Shorthand for addManagedListener. ..."},{"tagname":"method","name":"move","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Positionable.js","linenr":752}],"doc":"<p>Move the element relative to its current position.</p>\n","params":[{"tagname":"params","type":"String","name":"direction","doc":"<p>Possible values are:</p>\n\n<ul>\n<li><code>\"l\"</code> (or <code>\"left\"</code>)</li>\n<li><code>\"r\"</code> (or <code>\"right\"</code>)</li>\n<li><code>\"t\"</code> (or <code>\"top\"</code>, or <code>\"up\"</code>)</li>\n<li><code>\"b\"</code> (or <code>\"bottom\"</code>, or <code>\"down\"</code>)</li>\n</ul>\n\n","html_type":"String"},{"tagname":"params","type":"Number","name":"distance","doc":"<p>How far to move the element in pixels</p>\n","html_type":"Number"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getXY","setXY"],"id":"method-move","owner":"Ext.util.Positionable","short_doc":"Move the element relative to its current position. ..."},{"tagname":"method","name":"mun","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1671}],"doc":"<p>Shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-removeManagedListener\" rel=\"Ext.mixin.Observable-method-removeManagedListener\" class=\"docClass\">removeManagedListener</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item from which to remove a listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","html_type":"Object/String"},{"tagname":"params","type":"Function","name":"fn","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","html_type":"Object"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-mun","owner":"Ext.mixin.Observable","return":null,"throws":null,"type":null,"short_doc":"Shorthand for removeManagedListener. ..."},{"tagname":"method","name":"next","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2942}],"doc":"<p>Gets the next sibling, skipping text nodes</p>\n","params":[{"tagname":"params","type":"String","name":"selector","optional":true,"doc":"<p>Find the next sibling that matches the passed simple selector.\nSee <a href=\"#!/api/Ext.dom.Query\" rel=\"Ext.dom.Query\" class=\"docClass\">Ext.dom.Query</a> for information about simple selectors.</p>\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"returnDom","default":"false","optional":true,"doc":"<p><code>true</code> to return a raw dom node instead of an <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a></p>\n","html_type":"Boolean"}],"return":{"type":"Ext.dom.Element/HTMLElement","name":"return","doc":"<p>The next sibling <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> (or\nHTMLElement if <em>asDom</em> is <em>true</em>).  Or null if no match is found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/HTMLElement"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["matchNode"],"id":"method-next","owner":"Ext.dom.Element","short_doc":"Gets the next sibling, skipping text nodes ..."},{"tagname":"method","name":"on","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1654}],"doc":"<p>The <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> method is shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a>.</p>\n\n<p>Appends an event handler to this object.  For example:</p>\n\n<pre><code>myGridPanel.on(\"itemclick\", this.onItemClick, this);\n</code></pre>\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple events. For example:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: this.onCellClick,\n    select: this.onSelect,\n    viewready: this.onViewReady,\n    scope: this // Important. Ensure \"this\" is correct during handler execution\n});\n</code></pre>\n\n<p>One can also specify options for each event handler separately:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: this.onCellClick, scope: this, single: true},\n    viewready: {fn: panel.onViewReady, scope: panel}\n});\n</code></pre>\n\n<p><em>Names</em> of methods in a specified scope may also be used:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: 'onCellClick', scope: this, single: true},\n    viewready: {fn: 'onViewReady', scope: panel}\n});\n</code></pre>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"String/Object","name":"eventName","doc":"<p>The name of the event to listen for.\nMay also be an object who's property names are event names.</p>\n\n","html_type":"String/Object"},{"tagname":"params","type":"Function/String","name":"fn","optional":true,"doc":"<p>The method the event invokes or the <em>name</em> of\nthe method within the specified <code>scope</code>.  Will be called with arguments\ngiven to <a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">Ext.util.Observable.fireEvent</a> plus the <code>options</code> parameter described\nbelow.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>An object containing handler configuration.</p>\n\n\n\n\n<p><strong>Note:</strong> The options object will also be passed as the last argument to every\nevent handler.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n","properties":[{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted,\n  defaults to the object which fired the event.</strong></p>\n\n","html_type":"Object"},{"tagname":"params","type":"Number","name":"delay","doc":"<p>The number of milliseconds to delay the invocation of the handler after the event\n  fires.</p>\n\n","html_type":"Number"},{"tagname":"params","type":"Boolean","name":"single","doc":"<p>True to add a handler to handle just the next firing of the event, and then remove\n  itself.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Number","name":"buffer","doc":"<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"onFrame","doc":"<p>Causes the handler to be scheduled to run at the next\n  <a href=\"#!/api/Ext.Function-method-requestAnimationFrame\" rel=\"Ext.Function-method-requestAnimationFrame\" class=\"docClass\">animation frame event</a>. If the\n  event fires again before that time, the handler is not rescheduled - the handler\n  will only be called once when the next animation frame is fired, with the last set\n  of arguments passed.</p>\n\n","html_type":"Number"},{"tagname":"params","type":"Ext.util.Observable","name":"target","doc":"<p>Only call the handler if the event was fired on the target Observable, <em>not</em> if the\n  event was bubbled up from a child Observable.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},{"tagname":"params","type":"String","name":"element","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</strong>\n  The name of a Component property which references an <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">element</a>\n  to add a listener to.</p>\n\n\n\n\n<p>  This option is useful during Component construction to add DOM event listeners to\n  elements of <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which will exist only after the\n  Component is rendered.</p>\n\n\n\n\n<p>  For example, to add a click listener to a Panel's body:</p>\n\n\n\n\n<pre><code>  var panel = new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n\n\n\n<p>In order to remove listeners attached using the element, you'll need to reference\nthe element itself as seen below.</p>\n\n\n\n\n<pre><code> panel.body.un(...)\n</code></pre>\n\n","html_type":"String"},{"tagname":"params","type":"String","name":"delegate","optional":true,"doc":"<p>A simple selector to filter the event target or look for a descendant of the target.</p>\n\n\n\n\n<p>  The \"delegate\" option is only available on <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instances (or\n  when attaching a listener to a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> via a Component using the\n  element option).</p>\n\n\n\n\n<p>  See the <em>delegate</em> example below.</p>\n\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"stopPropagation","optional":true,"doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopPropagation\" rel=\"Ext.event.Event-method-stopPropagation\" class=\"docClass\">stopPropagation</a> on the event object\n  before firing the handler.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"preventDefault","optional":true,"doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-preventDefault\" rel=\"Ext.event.Event-method-preventDefault\" class=\"docClass\">preventDefault</a> on the event object\n  before firing the handler.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"stopEvent","optional":true,"doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopEvent\" rel=\"Ext.event.Event-method-stopEvent\" class=\"docClass\">stopEvent</a> on the event object\n  before firing the handler.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Array","name":"args","optional":true,"doc":"<p>Optional arguments to pass to the handler function. Any additional arguments\n  passed to <a href=\"#!/api/Ext.mixin.Observable-method-fireEvent\" rel=\"Ext.mixin.Observable-method-fireEvent\" class=\"docClass\">fireEvent</a> will be appended to these arguments.</p>\n\n","html_type":"Array"},{"tagname":"params","type":"Boolean","name":"destroyable","default":"false","optional":true,"doc":"<p>When specified as <code>true</code>, the function returns a <code>destroyable</code> object. An object\n  which implements the <code>destroy</code> method which removes all listeners added in this call.\n  This syntax can be a helpful shortcut to using <a href=\"#!/api/Ext.mixin.Observable-method-un\" rel=\"Ext.mixin.Observable-method-un\" class=\"docClass\">un</a>; particularly when\n  removing multiple listeners.  <em>NOTE</em> - not compatible when using the <em>element</em>\n  option.  See <a href=\"#!/api/Ext.mixin.Observable-method-un\" rel=\"Ext.mixin.Observable-method-un\" class=\"docClass\">un</a> for the proper syntax for removing listeners added using the\n  <em>element</em> config.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Number","name":"priority","optional":true,"doc":"<p>An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handlers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.\n  A priority must be an integer to be valid.  Fractional values are reserved for\n  internal framework use.</p>\n\n","html_type":"Number"},{"tagname":"params","type":"String","name":"order","default":"'current'","optional":true,"doc":"<p>A legacy option that is provided for backward compatibility.\n  It is recommended to use the <code>priority</code> option instead.  Available options are:</p>\n\n\n\n\n<ul>\n<li><code>'before'</code>: equal to a priority of <code>100</code></li>\n<li><code>'current'</code>: equal to a priority of <code>0</code> or default priority</li>\n<li><code>'after'</code>: equal to a priority of <code>-100</code></li>\n</ul>\n\n\n\n","html_type":"String"}],"html_type":"Object"},{"tagname":"params","type":"String","name":"order","default":"'current'","optional":true,"doc":"<p>A shortcut for the <code>order</code> event option.  Provided for backward compatibility.\n  Please use the <code>priority</code> event option instead.</p>\n\n\n\n\n<p><strong>Combining Options</strong></p>\n\n\n\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n\n\n\n<p>A delayed, one-time listener.</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n\n\n\n<p><strong>Attaching multiple handlers in 1 call</strong></p>\n\n\n\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple handlers and handler configs.</p>\n\n\n\n\n<pre><code>grid.on({\n    itemclick: 'onItemClick',\n    itemcontextmenu: grid.onItemContextmenu,\n    destroy: {\n        fn: function () {\n            // function called within the 'altCmp' scope instead of grid\n        },\n        scope: altCmp // unique scope for the destroy handler\n    },\n    scope: grid       // default scope - provided for example clarity\n});\n</code></pre>\n\n\n\n\n<p><strong>Delegate</strong></p>\n\n\n\n\n<p>This is a configuration option that you can pass along when registering a handler for\nan event to assist with event delegation. By setting this configuration option\nto a simple selector, the target element will be filtered to look for a\ndescendant of the target. For example:</p>\n\n\n\n\n<pre><code>var panel = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n    xtype: 'panel',\n    renderTo: document.body,\n    title: 'Delegate Handler Example',\n    frame: true,\n    height: 220,\n    width: 220,\n    html: '&lt;h1 class=\"myTitle\"&gt;BODY TITLE&lt;/h1&gt;Body content'\n});\n\n// The click handler will only be called when the click occurs on the\n// delegate: h1.myTitle (\"h1\" tag with class \"myTitle\")\npanel.on({\n    click: function (e) {\n        console.log(e.getTarget().innerHTML);\n    },\n    element: 'body',\n    delegate: 'h1.myTitle'\n });\n</code></pre>\n\n","html_type":"String"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-on","owner":"Ext.mixin.Observable","return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes\n all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.on({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","properties":null,"html_type":"Object"},"throws":null,"type":null,"short_doc":"The on method is shorthand for addListener. ..."},{"tagname":"method","name":"onAfter","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1557}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-addAfterListener\" rel=\"Ext.mixin.Observable-method-addAfterListener\" class=\"docClass\">addAfterListener</a>.</p>\n","inheritdoc":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> instead.</p>\n","version":"5.1"},"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event to listen for.</p>\n\n","html_type":"String/String[]/Object"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The method the event invokes.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope for <code>fn</code>.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>An object containing handler configuration.</p>\n\n","html_type":"Object"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-onAfter","owner":"Ext.mixin.Observable","return":null,"throws":null,"type":null,"short_doc":"Alias for addAfterListener. ..."},{"tagname":"method","name":"onBefore","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1550}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-addBeforeListener\" rel=\"Ext.mixin.Observable-method-addBeforeListener\" class=\"docClass\">addBeforeListener</a>.</p>\n","inheritdoc":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> instead.</p>\n","version":"5.1"},"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event to listen for.</p>\n\n","html_type":"String/String[]/Object"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The method the event invokes.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope for <code>fn</code>.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>An object containing handler configuration.</p>\n\n","html_type":"Object"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-onBefore","owner":"Ext.mixin.Observable","return":null,"throws":null,"type":null,"short_doc":"Alias for addBeforeListener. ..."},{"tagname":"method","name":"parent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2954}],"doc":"<p>Gets the parent node for this element, optionally chaining up trying to match a selector</p>\n","params":[{"tagname":"params","type":"String","name":"selector","optional":true,"doc":"<p>Find a parent node that matches the passed simple selector.\nSee <a href=\"#!/api/Ext.dom.Query\" rel=\"Ext.dom.Query\" class=\"docClass\">Ext.dom.Query</a> for information about simple selectors.</p>\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"returnDom","default":"false","optional":true,"doc":"<p>True to return a raw dom node instead of an <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a></p>\n","html_type":"Boolean"}],"return":{"type":"Ext.dom.Element/HTMLElement","name":"return","doc":"<p>The parent node (<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> or\nHTMLElement if <em>returnDom</em> is <em>true</em>).  Or null if no match is found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/HTMLElement"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["matchNode"],"id":"method-parent","owner":"Ext.dom.Element","short_doc":"Gets the parent node for this element, optionally chaining up trying to match a selector ..."},{"tagname":"method","name":"position","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2966}],"doc":"<p>Initializes positioning on this element. If a desired position is not passed,\nit will make the the element positioned relative IF it is not already positioned.</p>\n","params":[{"tagname":"params","type":"String","name":"pos","optional":true,"doc":"<p>Positioning to use \"relative\", \"absolute\" or \"fixed\"</p>\n","html_type":"String"},{"tagname":"params","type":"Number","name":"zIndex","optional":true,"doc":"<p>The zIndex to apply</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"x","optional":true,"doc":"<p>Set the page X position</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"y","optional":true,"doc":"<p>Set the page Y position</p>\n","html_type":"Number"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["isStyle","setStyle","setXY"],"id":"method-position","owner":"Ext.dom.Element","short_doc":"Initializes positioning on this element. ..."},{"tagname":"method","name":"prepareClass","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":157}],"doc":"<p>Prepares a given class for observable instances. This method is called when a\nclass derives from this class or uses this class as a mixin.</p>\n","params":[{"tagname":"params","type":"Function","name":"T","doc":"<p>The class constructor to prepare.</p>\n","html_type":"Function"},{"tagname":"params","type":"Ext.util.Observable","name":"mixin","doc":"<p>The mixin if being used as a mixin.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},{"tagname":"params","type":"Object","name":"data","doc":"<p>The raw class creation data if this is an extend.</p>\n","html_type":"Object"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-prepareClass","owner":"Ext.mixin.Observable","short_doc":"Prepares a given class for observable instances. ..."},{"tagname":"method","name":"prev","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":2992}],"doc":"<p>Gets the previous sibling, skipping text nodes</p>\n","params":[{"tagname":"params","type":"String","name":"selector","optional":true,"doc":"<p>Find the previous sibling that matches the passed simple selector.\nSee <a href=\"#!/api/Ext.dom.Query\" rel=\"Ext.dom.Query\" class=\"docClass\">Ext.dom.Query</a> for information about simple selectors.</p>\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"returnDom","default":"false","optional":true,"doc":"<p><code>true</code> to return a raw DOM node instead of an <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a></p>\n","html_type":"Boolean"}],"return":{"type":"Ext.dom.Element/HTMLElement","name":"return","doc":"<p>The previous sibling (<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> or\nHTMLElement if <em>returnDom</em> is <em>true</em>).  Or null if no match is found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/HTMLElement"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["matchNode"],"id":"method-prev","owner":"Ext.dom.Element","short_doc":"Gets the previous sibling, skipping text nodes ..."},{"tagname":"method","name":"purgeAllListeners","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":4683}],"doc":"<p>Removes all listeners for this object including the managed listeners</p>\n","inheritdoc":null,"deprecated":{"text":"<p>Please use <a href=\"#!/api/Ext.dom.Element-method-clearListeners\" rel=\"Ext.dom.Element-method-clearListeners\" class=\"docClass\">clearListeners</a> instead.</p>\n","version":"5.0.0"},"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-purgeAllListeners","owner":"Ext.dom.Element","return":null,"throws":null,"type":null,"short_doc":"Removes all listeners for this object including the managed listeners ..."},{"tagname":"method","name":"query","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":3004}],"doc":"<p>Selects child nodes based on the passed CSS selector.\nDelegates to document.querySelectorAll. More information can be found at\n<a href=\"http://www.w3.org/TR/css3-selectors/\">http://www.w3.org/TR/css3-selectors/</a></p>\n\n<p>All selectors, attribute filters and pseudos below can be combined infinitely\nin any order. For example <code>div.foo:nth-child(odd)[@foo=bar].bar:first</code> would be\na perfectly valid selector.</p>\n\n<h2>Element Selectors:</h2>\n\n<ul>\n<li>* any element</li>\n<li>E an element with the tag E</li>\n<li>E F All descendant elements of E that have the tag F</li>\n<li>E > F or E/F all direct children elements of E that have the tag F</li>\n<li>E + F all elements with the tag F that are immediately preceded by an element with the tag E</li>\n<li>E ~ F all elements with the tag F that are preceded by a sibling element with the tag E</li>\n</ul>\n\n\n<h2>Attribute Selectors:</h2>\n\n<p>The use of  and quotes are optional. For example, div[@foo='bar'] is also a valid attribute selector.</p>\n\n<ul>\n<li>E[foo] has an attribute \"foo\"</li>\n<li>E[foo=bar] has an attribute \"foo\" that equals \"bar\"</li>\n<li>E[foo^=bar] has an attribute \"foo\" that starts with \"bar\"</li>\n<li>E[foo$=bar] has an attribute \"foo\" that ends with \"bar\"</li>\n<li>E[foo*=bar] has an attribute \"foo\" that contains the substring \"bar\"</li>\n<li>E[foo%=2] has an attribute \"foo\" that is evenly divisible by 2</li>\n<li>E[foo!=bar] has an attribute \"foo\" that does not equal \"bar\"</li>\n</ul>\n\n\n<h2>Pseudo Classes:</h2>\n\n<ul>\n<li>E:first-child E is the first child of its parent</li>\n<li>E:last-child E is the last child of its parent</li>\n<li>E:nth-child(n) E is the nth child of its parent (1 based as per the spec)</li>\n<li>E:nth-child(odd) E is an odd child of its parent</li>\n<li>E:nth-child(even) E is an even child of its parent</li>\n<li>E:only-child E is the only child of its parent</li>\n<li>E:checked E is an element that is has a checked attribute that is true (e.g. a radio or checkbox)</li>\n<li>E:first the first E in the resultset</li>\n<li>E:last the last E in the resultset</li>\n<li>E:nth(n) the nth E in the resultset (1 based)</li>\n<li>E:odd shortcut for :nth-child(odd)</li>\n<li>E:even shortcut for :nth-child(even)</li>\n<li>E:not(S) an E element that does not match simple selector S</li>\n<li>E:has(S) an E element that has a descendant that matches simple selector S</li>\n<li>E:next(S) an E element whose next sibling matches simple selector S</li>\n<li>E:prev(S) an E element whose previous sibling matches simple selector S</li>\n<li>E:any(S1|S2|S2) an E element which matches any of the simple selectors S1, S2 or S3//\\</li>\n</ul>\n\n\n<h2>CSS Value Selectors:</h2>\n\n<ul>\n<li>E{display=none} CSS value \"display\" that equals \"none\"</li>\n<li>E{display^=none} CSS value \"display\" that starts with \"none\"</li>\n<li>E{display$=none} CSS value \"display\" that ends with \"none\"</li>\n<li>E{display*=none} CSS value \"display\" that contains the substring \"none\"</li>\n<li>E{display%=2} CSS value \"display\" that is evenly divisible by 2</li>\n<li>E{display!=none} CSS value \"display\" that does not equal \"none\"</li>\n</ul>\n\n","params":[{"tagname":"params","type":"String","name":"selector","doc":"<p>The CSS selector.</p>\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"asDom","default":"true","optional":true,"doc":"<p><code>false</code> to return an array of <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a></p>\n","html_type":"Boolean"}],"return":{"type":"HTMLElement[]/Ext.dom.Element[]","name":"return","doc":"<p>An Array of elements (\nHTMLElement or <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> if <em>asDom</em> is <em>false</em>) that match the selector.<br/>\nIf there are no matches, an empty Array is returned.</p>\n","properties":null,"html_type":"HTMLElement[]/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>[]"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-query","owner":"Ext.dom.Element","short_doc":"Selects child nodes based on the passed CSS selector. ..."},{"tagname":"method","name":"radioCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":3106}],"doc":"<p>Adds one or more CSS classes to this element and removes the same class(es) from all siblings.</p>\n","params":[{"tagname":"params","type":"String/String[]","name":"className","doc":"<p>The CSS class to add, or an array of classes.</p>\n","html_type":"String/String[]"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["addCls"],"id":"method-radioCls","owner":"Ext.dom.Element","short_doc":"Adds one or more CSS classes to this element and removes the same class(es) from all siblings. ..."},{"tagname":"method","name":"relayEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1260}],"doc":"<p>Relays selected events from the specified Observable as if the events were fired by <code>this</code>.</p>\n\n<p>For example if you are extending Grid, you might decide to forward some events from store.\nSo you can do this inside your initComponent:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load']);\n</code></pre>\n\n<p>The grid instance will then have an observable 'load' event which will be passed\nthe parameters of the store's load event and any function fired with the grid's\nload event would have access to the grid using the this keyword (unless the event\nis handled by a controller's control/listen event listener in which case 'this'\nwill be the controller rather than the grid).</p>\n","params":[{"tagname":"params","type":"Object","name":"origin","doc":"<p>The Observable whose events this object is to relay.</p>\n","html_type":"Object"},{"tagname":"params","type":"String[]","name":"events","doc":"<p>Array of event names to relay.</p>\n","html_type":"String[]"},{"tagname":"params","type":"String","name":"prefix","optional":true,"doc":"<p>A common prefix to prepend to the event names. For example:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>Now the grid will forward 'load' and 'clear' events of store as 'storeload' and 'storeclear'.</p>\n","html_type":"String"}],"return":{"type":"Object","name":"return","doc":"<p>A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which, when destroyed, removes all relayers. For example:</p>\n\n<pre><code>this.storeRelayers = this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>Can be undone by calling</p>\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.storeRelayers);\n</code></pre>\n\n<p>or\n    this.store.relayers.destroy();</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["createRelayer","mon"],"id":"method-relayEvents","owner":"Ext.mixin.Observable","short_doc":"Relays selected events from the specified Observable as if the events were fired by this. ..."},{"tagname":"method","name":"remove","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":3134}],"doc":"<p>Destroys this element by removing it from the cache, removing its DOM reference,\nand removing all of its event listeners.</p>\n","inheritdoc":null,"deprecated":{"text":"<p>Please use <a href=\"#!/api/Ext.dom.Element-method-destroy\" rel=\"Ext.dom.Element-method-destroy\" class=\"docClass\">destroy</a> instead.</p>\n","version":"5.0.0"},"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["destroy"],"id":"method-remove","owner":"Ext.dom.Element","return":null,"throws":null,"type":null,"short_doc":"Destroys this element by removing it from the cache, removing its DOM reference,\nand removing all of its event listen..."},{"tagname":"method","name":"removeAfterListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1535}],"doc":"<p>Removes a before-event handler.</p>\n\n<p>Same as <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a> with <code>order</code> set to <code>'after'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event the handler was associated with.</p>\n\n","html_type":"String/String[]/Object"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The handler to remove.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope originally specified for <code>fn</code>.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>Extra options object.</p>\n\n","html_type":"Object"}],"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a> instead.</p>\n","version":"5.1"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["removeListener"],"id":"method-removeAfterListener","owner":"Ext.mixin.Observable","short_doc":"Removes a before-event handler. ..."},{"tagname":"method","name":"removeAllListeners","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":4690}],"doc":"<p>Removes all listeners for this object including the managed listeners</p>\n","inheritdoc":null,"deprecated":{"text":"<p>Please use <a href=\"#!/api/Ext.dom.Element-method-clearListeners\" rel=\"Ext.dom.Element-method-clearListeners\" class=\"docClass\">clearListeners</a> instead.</p>\n","version":"5.0.0"},"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-removeAllListeners","owner":"Ext.dom.Element","return":null,"throws":null,"type":null,"short_doc":"Removes all listeners for this object including the managed listeners ..."},{"tagname":"method","name":"removeBeforeListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1520}],"doc":"<p>Removes a before-event handler.</p>\n\n<p>Same as <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a> with <code>order</code> set to <code>'before'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event the handler was associated with.</p>\n\n","html_type":"String/String[]/Object"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The handler to remove.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope originally specified for <code>fn</code>.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>Extra options object.</p>\n\n","html_type":"Object"}],"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a> instead.</p>\n","version":"5.1"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["removeListener"],"id":"method-removeBeforeListener","owner":"Ext.mixin.Observable","short_doc":"Removes a before-event handler. ..."},{"tagname":"method","name":"removeCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":3148}],"doc":"<p>Removes the given CSS class(es) from this Element.</p>\n","params":[{"tagname":"params","type":"String/String[]","name":"names","doc":"<p>The CSS classes to remove separated by space,\nor an array of classes</p>\n","html_type":"String/String[]"},{"tagname":"params","type":"String","name":"prefix","optional":true,"doc":"<p>Prefix to prepend to each class. The separator <code>-</code> will be\nappended to the prefix.</p>\n","html_type":"String"},{"tagname":"params","type":"String","name":"suffix","optional":true,"doc":"<p>Suffix to append to each class. The separator <code>-</code> will be\nprepended to the suffix.\nreturn {<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>} this</p>\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getData","synchronize"],"id":"method-removeCls","owner":"Ext.dom.Element","short_doc":"Removes the given CSS class(es) from this Element. ..."},{"tagname":"method","name":"removeListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":992}],"doc":"<p>Removes an event handler.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The type of event the handler was associated with.</p>\n\n","html_type":"String"},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The handler to remove. <strong>This must be a reference to the function\npassed into the\n<a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope originally specified for the handler. It\nmust be the same as the scope argument specified in the original call to\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a> or the listener will not be removed.</p>\n\n\n\n\n<p><strong>Convenience Syntax</strong></p>\n\n\n\n\n<p>You can use the {link <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> addListener destroyable: true} config option in\nplace of calling un().  For example:</p>\n\n\n\n\n<pre><code>var listeners = cmp.on({\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide,\n    destroyable: true\n});\n\n// Remove listeners\nlisteners.destroy();\n// or\ncmp.un(\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide\n);\n</code></pre>\n\n\n\n\n<p><strong>Exception - DOM event handlers using the element config option</strong></p>\n\n\n\n\n<p>You must go directly through the element to detach an event handler attached using\nthe <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> <em>element</em> option.</p>\n\n\n\n\n<pre><code>panel.on({\n    element: 'body',\n    click: 'onBodyCLick'\n});\n\npanel.body.un({\n    click: 'onBodyCLick'\n});\n</code></pre>\n\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["doRemoveListener"],"id":"method-removeListener","owner":"Ext.mixin.Observable","short_doc":"Removes an event handler. ..."},{"tagname":"method","name":"removeManagedListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":512}],"doc":"<p>Removes listeners that were added by the <a href=\"#!/api/Ext.mixin.Observable-method-mon\" rel=\"Ext.mixin.Observable-method-mon\" class=\"docClass\">mon</a> method.</p>\n","params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item from which to remove a listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","html_type":"Object/String"},{"tagname":"params","type":"Function","name":"fn","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["removeManagedListener","removeManagedListenerItem"],"id":"method-removeManagedListener","owner":"Ext.mixin.Observable","short_doc":"Removes listeners that were added by the mon method. ..."},{"tagname":"method","name":"removeManagedListenerItem","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1112}],"doc":"<p>Remove a single managed listener item</p>\n","private":true,"params":[{"tagname":"params","type":"Boolean","name":"isClear","doc":"<p>True if this is being called during a clear</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Object","name":"managedListener","doc":"<p>The managed listener item\nSee removeManagedListener for other args</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-removeManagedListenerItem","owner":"Ext.mixin.Observable","short_doc":"Remove a single managed listener item ..."},{"tagname":"method","name":"repaint","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":3202}],"doc":"<p>Forces the browser to repaint this element.</p>\n","return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":true,"fires":[],"method_calls":["addCls"],"id":"method-repaint","owner":"Ext.dom.Element","short_doc":"Forces the browser to repaint this element. ..."},{"tagname":"method","name":"replace","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":3217}],"doc":"<p>Replaces the passed element with this element</p>\n","params":[{"tagname":"params","type":"String/HTMLElement/Ext.dom.Element","name":"el","doc":"<p>The element to replace.\nThe id of the node, a DOM Node or an existing Element.</p>\n","html_type":"String/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"params","type":"Boolean","name":"destroy","default":"true","optional":true,"doc":"<p><code>false</code> to prevent destruction of the replaced\nelement</p>\n","html_type":"Boolean"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>This element</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"method-replace","owner":"Ext.dom.Element","short_doc":"Replaces the passed element with this element ..."},{"tagname":"method","name":"replaceCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":3248}],"doc":"<p>Replaces a CSS class on the element with another.\nIf the old name does not exist, the new name will simply be added.</p>\n","params":[{"tagname":"params","type":"String","name":"oldName","doc":"<p>The CSS class to replace.</p>\n","html_type":"String"},{"tagname":"params","type":"String","name":"newName","doc":"<p>The replacement CSS class.</p>\n","html_type":"String"},{"tagname":"params","type":"String","name":"prefix","default":"''","optional":true,"doc":"<p>Prefix to prepend to each class to be replaced.</p>\n","html_type":"String"},{"tagname":"params","type":"String","name":"suffix","default":"''","optional":true,"doc":"<p>Suffix to append to each class to be replaced.</p>\n","html_type":"String"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["getData","synchronize"],"id":"method-replaceCls","owner":"Ext.dom.Element","short_doc":"Replaces a CSS class on the element with another. ..."},{"tagname":"method","name":"replaceWith","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":3314}],"doc":"<p>Replaces this element with the passed element</p>\n","params":[{"tagname":"params","type":"String/HTMLElement/Ext.dom.Element/Object","name":"el","doc":"<p>The new element (id of the\nnode, a DOM Node or an existing Element) or a DomHelper config of an element to create</p>\n","html_type":"String/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/Object"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>This element</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["clearListeners"],"id":"method-replaceWith","owner":"Ext.dom.Element","short_doc":"Replaces this element with the passed element ..."},{"tagname":"method","name":"resolveListenerScope","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":565}],"doc":"<p>Gets the default scope for firing late bound events (string names with\nno scope attached) at runtime.</p>\n","params":[{"tagname":"params","type":"Object","name":"defaultScope","default":"this","optional":true,"doc":"<p>The default scope to return if none is found.</p>\n","html_type":"Object"}],"return":{"type":"Object","name":"return","doc":"<p>The default event scope</p>\n\n","properties":null,"html_type":"Object"},"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-resolveListenerScope","owner":"Ext.mixin.Observable","overrides":[{"name":"resolveListenerScope","owner":"Ext.mixin.Inheritable","link":"<a href=\"#!/api/Ext.mixin.Inheritable-method-resolveListenerScope\" rel=\"Ext.mixin.Inheritable-method-resolveListenerScope\" class=\"docClass\">Ext.mixin.Inheritable.resolveListenerScope</a>"},{"name":"resolveListenerScope","owner":"Ext.plugin.Abstract","link":"<a href=\"#!/api/Ext.plugin.Abstract-method-resolveListenerScope\" rel=\"Ext.plugin.Abstract-method-resolveListenerScope\" class=\"docClass\">Ext.plugin.Abstract.resolveListenerScope</a>"}],"short_doc":"Gets the default scope for firing late bound events (string names with\nno scope attached) at runtime. ..."},{"tagname":"method","name":"resumeEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1209}],"doc":"<p>Resumes firing of the named event(s).</p>\n\n<p>After calling this method to resume events, the events will fire when requested to fire.</p>\n\n<p><strong>Note that if the <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvent\" rel=\"Ext.mixin.Observable-method-suspendEvent\" class=\"docClass\">suspendEvent</a> method is called multiple times for a certain event,\nthis converse method will have to be called the same number of times for it to resume firing.</strong></p>\n","params":[{"tagname":"params","type":"String...","name":"eventName","doc":"<p>Multiple event names to resume.</p>\n","html_type":"String..."}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-resumeEvent","owner":"Ext.mixin.Observable","short_doc":"Resumes firing of the named event(s). ..."},{"tagname":"method","name":"resumeEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1233}],"doc":"<p>Resumes firing events (see <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvents\" rel=\"Ext.mixin.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a>).</p>\n\n<p>If events were suspended using the <code>queueSuspended</code> parameter, then all events fired\nduring event suspension will be sent to any listeners now.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"discardQueue","optional":true,"doc":"<p><code>true</code> to prevent any previously queued events from firing\nwhile we were suspended. See <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvents\" rel=\"Ext.mixin.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a>.</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-resumeEvents","owner":"Ext.mixin.Observable","short_doc":"Resumes firing events (see suspendEvents). ..."},{"tagname":"method","name":"reverseTranslateXY","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Positionable.js","linenr":897}],"doc":"<p>Converts local coordinates into page-level coordinates</p>\n","params":[{"tagname":"params","type":"Number[]","name":"xy","doc":"<p>The local x and y coordinates</p>\n","html_type":"Number[]"}],"return":{"type":"Number[]","name":"return","doc":"<p>The translated coordinates</p>\n","properties":null,"html_type":"Number[]"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-reverseTranslateXY","owner":"Ext.util.Positionable","short_doc":"Converts local coordinates into page-level coordinates ..."},{"tagname":"method","name":"scroll","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":3353}],"doc":"<p>Scrolls this element the specified direction. Does bounds checking to make sure the scroll is\nwithin this element's scrollable range.</p>\n","params":[{"tagname":"params","type":"String","name":"direction","doc":"<p>Possible values are:</p>\n\n<ul>\n<li><code>\"l\"</code> (or <code>\"left\"</code>)</li>\n<li><code>\"r\"</code> (or <code>\"right\"</code>)</li>\n<li><code>\"t\"</code> (or <code>\"top\"</code>, or <code>\"up\"</code>)</li>\n<li><code>\"b\"</code> (or <code>\"bottom\"</code>, or <code>\"down\"</code>)</li>\n</ul>\n\n","html_type":"String"},{"tagname":"params","type":"Number","name":"distance","doc":"<p>How far to scroll the element in pixels</p>\n","html_type":"Number"},{"tagname":"params","type":"Boolean/Object","name":"animate","optional":true,"doc":"<p>true for the default animation or a standard Element\nanimation config object</p>\n","html_type":"Boolean/Object"}],"return":{"type":"Boolean","name":"return","doc":"<p>Returns true if a scroll was triggered or false if the element\nwas scrolled as far as it could go.</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["constrainScrollLeft","constrainScrollTop","isScrollable","scrollTo"],"id":"method-scroll","owner":"Ext.dom.Element","short_doc":"Scrolls this element the specified direction. ..."},{"tagname":"method","name":"scrollBy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":3403}],"doc":"<p>Scrolls this element by the passed delta values, optionally animating.</p>\n\n<p>All of the following are equivalent:</p>\n\n<pre><code> el.scrollBy(10, 10, true);\n el.scrollBy([10, 10], true);\n el.scrollBy({ x: 10, y: 10 }, true);\n</code></pre>\n","params":[{"tagname":"params","type":"Number/Number[]/Object","name":"deltaX","doc":"<p>Either the x delta, an Array specifying x and y deltas or\nan object with \"x\" and \"y\" properties.</p>\n","html_type":"Number/Number[]/Object"},{"tagname":"params","type":"Number/Boolean/Object","name":"deltaY","doc":"<p>Either the y delta, or an animate flag or config object.</p>\n","html_type":"Number/Boolean/Object"},{"tagname":"params","type":"Boolean/Object","name":"animate","doc":"<p>Animate flag/config object if the delta values were passed separately.</p>\n","html_type":"Boolean/Object"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["constrainScrollLeft","constrainScrollTop","scrollTo"],"id":"method-scrollBy","owner":"Ext.dom.Element","short_doc":"Scrolls this element by the passed delta values, optionally animating. ..."},{"tagname":"method","name":"scrollIntoView","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":3449}],"doc":"<p>Scrolls this element into view within the passed container.</p>\n\n<pre><code>  <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>', {\n      storeId:'simpsonsStore',\n      fields:['name', 'email', 'phone'],\n      data:{'items':[\n          { 'name': 'Lisa',  \"email\":\"lisa@simpsons.com\",  \"phone\":\"555-111-1224\"  },\n          { 'name': 'Bart',  \"email\":\"bart@simpsons.com\",  \"phone\":\"555-222-1234\" },\n          { 'name': 'Homer', \"email\":\"homer@simpsons.com\",  \"phone\":\"555-222-1244\"  },\n          { 'name': 'Marge', \"email\":\"marge@simpsons.com\", \"phone\":\"555-222-1254\"  },\n          { 'name': 'Milhouse', \"email\":\"milhouse@simpsons.com\",  \"phone\":\"555-222-1244\"  },\n          { 'name': 'Willy', \"email\":\"willy@simpsons.com\", \"phone\":\"555-222-1254\"  },\n          { 'name': 'Skinner', \"email\":\"skinner@simpsons.com\",  \"phone\":\"555-222-1244\"  },\n          { 'name': 'Hank (last row)', \"email\":\"hank@simpsons.com\", \"phone\":\"555-222-1254\"  }\n      ]},\n      proxy: {\n          type: 'memory',\n          reader: {\n              type: 'json',\n              rootProperty: 'items'\n          }\n      }\n  });\n\n  var grid = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.grid.Panel\" rel=\"Ext.grid.Panel\" class=\"docClass\">Ext.grid.Panel</a>', {\n      title: 'Simpsons',\n      store: <a href=\"#!/api/Ext.data.StoreManager-method-lookup\" rel=\"Ext.data.StoreManager-method-lookup\" class=\"docClass\">Ext.data.StoreManager.lookup</a>('simpsonsStore'),\n      columns: [\n          { text: 'Name',  dataIndex: 'name', width: 125 },\n          { text: 'Email', dataIndex: 'email', flex: 1 },\n          { text: 'Phone', dataIndex: 'phone' }\n      ],\n      height: 190,\n      width: 400,\n      renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>(),\n      tbar: [{\n          text: 'Scroll row 7 into view',\n          handler: function () {\n              var view = grid.getView();\n\n              <a href=\"#!/api/Ext-method-get\" rel=\"Ext-method-get\" class=\"docClass\">Ext.get</a>(view.getRow(7)).scrollIntoView(view.getEl(), null, true);\n          }\n      }]\n  });\n</code></pre>\n","params":[{"tagname":"params","type":"String/HTMLElement/Ext.Element","name":"container","default":"document.body","optional":true,"doc":"<p>The container element\nto scroll.  Should be a string (id), dom node, or <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>.</p>\n","html_type":"String/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},{"tagname":"params","type":"Boolean","name":"hscroll","default":"true","optional":true,"doc":"<p>False to disable horizontal scroll.</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean/Object","name":"animate","optional":true,"doc":"<p>true for the default animation or a standard Element\nanimation config object</p>\n","html_type":"Boolean/Object"},{"tagname":"params","type":"Boolean","name":"highlight","default":"false","optional":true,"doc":"<p>true to highlight the element when it is in view.</p>\n","html_type":"Boolean"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["doScrollIntoView"],"id":"method-scrollIntoView","owner":"Ext.dom.Element","short_doc":"Scrolls this element into view within the passed container. ..."},{"tagname":"method","name":"scrollTo","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":3516}],"doc":"<p>Scrolls this element the specified scroll point. It does NOT do bounds checking so\nif you scroll to a weird value it will try to do it. For auto bounds checking, use <a href=\"#!/api/Ext.dom.Element-event-scroll\" rel=\"Ext.dom.Element-event-scroll\" class=\"docClass\">scroll</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"side","doc":"<p>Either \"left\" for scrollLeft values or \"top\" for scrollTop values.</p>\n","html_type":"String"},{"tagname":"params","type":"Number","name":"value","doc":"<p>The new scroll value</p>\n","html_type":"Number"},{"tagname":"params","type":"Boolean/Object","name":"animate","optional":true,"doc":"<p>true for the default animation or a standard Element\nanimation config object</p>\n","html_type":"Boolean/Object"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["animate"],"id":"method-scrollTo","owner":"Ext.dom.Element","short_doc":"Scrolls this element the specified scroll point. ..."},{"tagname":"method","name":"select","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":3549}],"doc":"<p>Selects descendant elements of this element based on the passed CSS selector to\nenable <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Element</a> methods to be applied to many related\nelements in one statement through the returned\n<a href=\"#!/api/Ext.dom.CompositeElementLite\" rel=\"Ext.dom.CompositeElementLite\" class=\"docClass\">CompositeElementLite</a> object.</p>\n","params":[{"tagname":"params","type":"String/HTMLElement[]","name":"selector","doc":"<p>The CSS selector or an array of elements</p>\n","html_type":"String/HTMLElement[]"},{"tagname":"params","type":"Boolean","name":"composite","doc":"<p>Return a CompositeElement as opposed to a\nCompositeElementLite. Defaults to false.</p>\n","html_type":"Boolean"}],"return":{"type":"Ext.dom.CompositeElementLite/Ext.dom.CompositeElement","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.CompositeElementLite\" rel=\"Ext.dom.CompositeElementLite\" class=\"docClass\">Ext.dom.CompositeElementLite</a>/<a href=\"#!/api/Ext.dom.CompositeElement\" rel=\"Ext.dom.CompositeElement\" class=\"docClass\">Ext.dom.CompositeElement</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["query"],"id":"method-select","owner":"Ext.dom.Element","short_doc":"Selects descendant elements of this element based on the passed CSS selector to\nenable Element methods to be applied ..."},{"tagname":"method","name":"selectNode","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":3588}],"doc":"<p>Selects a single descendant element of this element using a CSS selector\n(see <a href=\"#!/api/Ext.dom.Element-method-query\" rel=\"Ext.dom.Element-method-query\" class=\"docClass\">query</a>).</p>\n","params":[{"tagname":"params","type":"String","name":"selector","doc":"<p>The selector query</p>\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"asDom","default":"true","optional":true,"doc":"<p><code>false</code> to return an <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a></p>\n","html_type":"Boolean"}],"return":{"type":"HTMLElement/Ext.dom.Element","name":"return","doc":"<p>The DOM element (or <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> if\n<em>asDom</em> is <em>false</em>) which matched the selector.</p>\n","properties":null,"html_type":"HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["query"],"id":"method-selectNode","owner":"Ext.dom.Element","short_doc":"Selects a single descendant element of this element using a CSS selector\n(see query). ..."},{"tagname":"method","name":"set","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":3600}],"doc":"<p>Sets the passed attributes as attributes of this element (a style attribute can be a string, object or function).</p>\n","params":[{"tagname":"params","type":"Object","name":"attributes","doc":"<p>The object with the attributes.</p>\n","html_type":"Object"},{"tagname":"params","type":"Boolean","name":"useSet","default":"true","optional":true,"doc":"<p><code>false</code> to override the default <code>setAttribute</code> to use expandos.</p>\n","html_type":"Boolean"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["applyStyles"],"id":"method-set","owner":"Ext.dom.Element","short_doc":"Sets the passed attributes as attributes of this element (a style attribute can be a string, object or function). ..."},{"tagname":"method","name":"setBottom","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":3637}],"doc":"<p>Sets the element's CSS bottom style.</p>\n","params":[{"tagname":"params","type":"Number/String","name":"bottom","doc":"<p>Number of pixels or CSS string value to set as\nthe bottom CSS property value</p>\n","html_type":"Number/String"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"method-setBottom","owner":"Ext.dom.Element","short_doc":"Sets the element's CSS bottom style. ..."},{"tagname":"method","name":"setBox","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Positionable.js","linenr":789}],"doc":"<p>Sets the element's box.</p>\n","params":[{"tagname":"params","type":"Object","name":"box","doc":"<p>The box to fill {x, y, width, height}</p>\n","html_type":"Object"}],"return":{"type":"Ext.util.Positionable","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":["move"],"method_calls":["afterSetPosition","constrainBox","setSize","setXY"],"id":"method-setBox","owner":"Ext.util.Positionable","short_doc":"Sets the element's box. ..."},{"tagname":"method","name":"setCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":3664}],"doc":"<p>Sets the specified CSS class on this element's DOM node.</p>\n","params":[{"tagname":"params","type":"String/Array","name":"className","doc":"<p>The CSS class to set on this element.</p>\n","html_type":"String/Array"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getData","synchronize"],"id":"method-setCls","owner":"Ext.dom.Element","short_doc":"Sets the specified CSS class on this element's DOM node. ..."},{"tagname":"method","name":"setConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1441}],"doc":"<p>Sets a single/multiple configuration options.</p>\n","params":[{"tagname":"params","type":"String/Object","name":"name","doc":"<p>The name of the property to set, or a set of key value pairs to set.</p>\n","html_type":"String/Object"},{"tagname":"params","type":"Object","name":"value","optional":true,"doc":"<p>The value to set for the name parameter.</p>\n","html_type":"Object"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["getConfigurator"],"id":"method-setConfig","owner":"Ext.Base","short_doc":"Sets a single/multiple configuration options. ..."},{"tagname":"method","name":"setHTML","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":4697}],"doc":"<p>Sets the <code>innerHTML</code> of this element.</p>\n","inheritdoc":null,"deprecated":{"text":"<p>Please use <a href=\"#!/api/Ext.dom.Element-method-setHtml\" rel=\"Ext.dom.Element-method-setHtml\" class=\"docClass\">setHtml</a> instead.</p>\n","version":"5.0.0"},"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"String","name":"html","doc":"<p>The new HTML.</p>\n\n\n\n","html_type":"String"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-setHTML","owner":"Ext.dom.Element","return":null,"throws":null,"type":null,"short_doc":"Sets the innerHTML of this element. ..."},{"tagname":"method","name":"setHeight","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/dom/ButtonElement.js","linenr":71}],"doc":"<p>Set the height of this Element.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":71,"params":[{"name":"height","type":"Object","html_type":"Object"},{"name":"animate","type":"Object","html_type":"Object"}],"chainable":true,"fires":[],"method_calls":["callParent"],"id":"method-setHeight","owner":"Ext.dom.ButtonElement","return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"overrides":[{"name":"setHeight","owner":"Ext.dom.Element","link":"<a href=\"#!/api/Ext.dom.Element-method-setHeight\" rel=\"Ext.dom.Element-method-setHeight\" class=\"docClass\">Ext.dom.Element.setHeight</a>"}],"short_doc":"Set the height of this Element. ..."},{"tagname":"method","name":"setHtml","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":3710}],"doc":"<p>Sets the <code>innerHTML</code> of this element.</p>\n","params":[{"tagname":"params","type":"String","name":"html","doc":"<p>The new HTML.</p>\n\n\n\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-setHtml","owner":"Ext.dom.Element","short_doc":"Sets the innerHTML of this element. ..."},{"tagname":"method","name":"setLeft","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":3743}],"doc":"<p>Sets the element's left position directly using CSS style\n(instead of <a href=\"#!/api/Ext.dom.Element-method-setX\" rel=\"Ext.dom.Element-method-setX\" class=\"docClass\">setX</a>).</p>\n","params":[{"tagname":"params","type":"Number/String","name":"left","doc":"<p>Number of pixels or CSS string value to\nset as the left CSS property value</p>\n","html_type":"Number/String"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["syncUnderlays"],"id":"method-setLeft","owner":"Ext.dom.Element","short_doc":"Sets the element's left position directly using CSS style\n(instead of setX). ..."},{"tagname":"method","name":"setListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1677}],"doc":"<p>An alias for <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a>.  In versions prior to 5.1, <a href=\"#!/api/Ext.mixin.Observable-cfg-listeners\" rel=\"Ext.mixin.Observable-cfg-listeners\" class=\"docClass\">listeners</a>\nhad a generated setter which could be called to add listeners.  In 5.1 the listeners\nconfig is not processed using the config system and has no generated setter, so\nthis method is provided for backward compatibility.  The preferred way of\nadding listeners is to use the <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> method.</p>\n","params":[{"tagname":"params","type":"Object","name":"listeners","doc":"<p>The listeners</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-setListeners","owner":"Ext.mixin.Observable","short_doc":"An alias for addListener. ..."},{"tagname":"method","name":"setLocalX","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Positionable.js","linenr":101}],"doc":"<p>Sets the local x coordinate of this element using CSS style. When used on an\nabsolute positioned element this method is symmetrical with <a href=\"#!/api/Ext.util.Positionable-method-getLocalX\" rel=\"Ext.util.Positionable-method-getLocalX\" class=\"docClass\">getLocalX</a>, but\nmay not be symmetrical when used on a relatively positioned element.</p>\n","params":[{"tagname":"params","type":"Number","name":"x","doc":"<p>The x coordinate. A value of <code>null</code> sets the left style to 'auto'.</p>\n","html_type":"Number"}],"return":{"type":"Ext.util.Positionable","name":"return","doc":"<p>this</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"method-setLocalX","owner":"Ext.util.Positionable","short_doc":"Sets the local x coordinate of this element using CSS style. ..."},{"tagname":"method","name":"setLocalXY","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Positionable.js","linenr":112}],"doc":"<p>Sets the local x and y coordinates of this element using CSS style. When used on an\nabsolute positioned element this method is symmetrical with <a href=\"#!/api/Ext.util.Positionable-method-getLocalXY\" rel=\"Ext.util.Positionable-method-getLocalXY\" class=\"docClass\">getLocalXY</a>, but\nmay not be symmetrical when used on a relatively positioned element.</p>\n","params":[{"tagname":"params","type":"Number/Array","name":"x","doc":"<p>The x coordinate or an array containing [x, y]. A value of\n<code>null</code> sets the left style to 'auto'</p>\n","html_type":"Number/Array"},{"tagname":"params","type":"Number","name":"y","optional":true,"doc":"<p>The y coordinate, required if x is not an array. A value of\n<code>null</code> sets the top style to 'auto'</p>\n","html_type":"Number"}],"return":{"type":"Ext.util.Positionable","name":"return","doc":"<p>this</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"method-setLocalXY","owner":"Ext.util.Positionable","short_doc":"Sets the local x and y coordinates of this element using CSS style. ..."},{"tagname":"method","name":"setLocalY","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Positionable.js","linenr":126}],"doc":"<p>Sets the local y coordinate of this element using CSS style. When used on an\nabsolute positioned element this method is symmetrical with <a href=\"#!/api/Ext.util.Positionable-method-getLocalY\" rel=\"Ext.util.Positionable-method-getLocalY\" class=\"docClass\">getLocalY</a>, but\nmay not be symmetrical when used on a relatively positioned element.</p>\n","params":[{"tagname":"params","type":"Number","name":"y","doc":"<p>The y coordinate. A value of <code>null</code> sets the top style to 'auto'.</p>\n","html_type":"Number"}],"return":{"type":"Ext.util.Positionable","name":"return","doc":"<p>this</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"method-setLocalY","owner":"Ext.util.Positionable","short_doc":"Sets the local y coordinate of this element using CSS style. ..."},{"tagname":"method","name":"setMaxHeight","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":3836}],"doc":"<p>Set the maximum height of this Element.</p>\n","params":[{"tagname":"params","type":"Number/String","name":"height","doc":"<p>The new maximum height.</p>\n","html_type":"Number/String"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"method-setMaxHeight","owner":"Ext.dom.Element","short_doc":"Set the maximum height of this Element. ..."},{"tagname":"method","name":"setMaxWidth","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":3846}],"doc":"<p>Set the maximum width of this Element.</p>\n","params":[{"tagname":"params","type":"Number/String","name":"width","doc":"<p>The new maximum width.</p>\n","html_type":"Number/String"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"method-setMaxWidth","owner":"Ext.dom.Element","short_doc":"Set the maximum width of this Element. ..."},{"tagname":"method","name":"setMinHeight","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":3856}],"doc":"<p>Set the minimum height of this Element.</p>\n","params":[{"tagname":"params","type":"Number/String","name":"height","doc":"<p>The new minimum height.</p>\n","html_type":"Number/String"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"method-setMinHeight","owner":"Ext.dom.Element","short_doc":"Set the minimum height of this Element. ..."},{"tagname":"method","name":"setMinWidth","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":3866}],"doc":"<p>Set the minimum width of this Element.</p>\n","params":[{"tagname":"params","type":"Number/String","name":"width","doc":"<p>The new minimum width.</p>\n","html_type":"Number/String"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"method-setMinWidth","owner":"Ext.dom.Element","short_doc":"Set the minimum width of this Element. ..."},{"tagname":"method","name":"setRight","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":3892}],"doc":"<p>Sets the element's CSS right style.</p>\n","params":[{"tagname":"params","type":"Number/String","name":"right","doc":"<p>Number of pixels or CSS string value to\nset as the right CSS property value</p>\n","html_type":"Number/String"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"method-setRight","owner":"Ext.dom.Element","short_doc":"Sets the element's CSS right style. ..."},{"tagname":"method","name":"setScrollLeft","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":3903}],"doc":"<p>Sets the left scroll position</p>\n","params":[{"tagname":"params","type":"Number","name":"left","doc":"<p>The left scroll position</p>\n","html_type":"Number"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"method-setScrollLeft","owner":"Ext.dom.Element","short_doc":"Sets the left scroll position ..."},{"tagname":"method","name":"setScrollTop","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":3913}],"doc":"<p>Sets the top scroll position</p>\n","params":[{"tagname":"params","type":"Number","name":"top","doc":"<p>The top scroll position</p>\n","html_type":"Number"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"method-setScrollTop","owner":"Ext.dom.Element","short_doc":"Sets the top scroll position ..."},{"tagname":"method","name":"setSize","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/dom/ButtonElement.js","linenr":23}],"doc":"<p>Set the size of this Element.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":23,"params":[{"name":"width","type":"Object","html_type":"Object"},{"name":"height","type":"Object","html_type":"Object"},{"name":"animate","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["callParent"],"id":"method-setSize","owner":"Ext.dom.ButtonElement","return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"overrides":[{"name":"setSize","owner":"Ext.dom.Element","link":"<a href=\"#!/api/Ext.dom.Element-method-setSize\" rel=\"Ext.dom.Element-method-setSize\" class=\"docClass\">Ext.dom.Element.setSize</a>"}],"short_doc":"Set the size of this Element. ..."},{"tagname":"method","name":"setStyle","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/dom/ButtonElement.js","linenr":42}],"doc":"<p>Wrapper for setting style properties, also takes single object parameter of multiple styles.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":42,"params":[{"name":"prop","type":"Object","html_type":"Object"},{"name":"value","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["callParent"],"id":"method-setStyle","owner":"Ext.dom.ButtonElement","return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"overrides":[{"name":"setStyle","owner":"Ext.dom.Element","link":"<a href=\"#!/api/Ext.dom.Element-method-setStyle\" rel=\"Ext.dom.Element-method-setStyle\" class=\"docClass\">Ext.dom.Element.setStyle</a>"}],"short_doc":"Wrapper for setting style properties, also takes single object parameter of multiple styles. ..."},{"tagname":"method","name":"setTop","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":4039}],"doc":"<p>Sets the element's top position directly using CSS style\n(instead of <a href=\"#!/api/Ext.dom.Element-method-setY\" rel=\"Ext.dom.Element-method-setY\" class=\"docClass\">setY</a>).</p>\n","params":[{"tagname":"params","type":"Number/String","name":"top","doc":"<p>Number of pixels or CSS string value to\nset as the top CSS property value</p>\n","html_type":"Number/String"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["syncUnderlays"],"id":"method-setTop","owner":"Ext.dom.Element","short_doc":"Sets the element's top position directly using CSS style\n(instead of setY). ..."},{"tagname":"method","name":"setTopLeft","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":4704}],"doc":"<p>Sets the element's top and left positions directly using CSS style.</p>\n","removed":{"text":"\n","version":"5.0.0"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-setTopLeft","owner":"Ext.dom.Element","short_doc":"Sets the element's top and left positions directly using CSS style. ..."},{"tagname":"method","name":"setVisibility","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":4079}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"isVisible","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-setVisibility","owner":"Ext.dom.Element","short_doc":" ..."},{"tagname":"method","name":"setVisibilityMode","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":4093}],"doc":"<p>Use this to change the visibility mode between <a href=\"#!/api/Ext.dom.Element-static-property-VISIBILITY\" rel=\"Ext.dom.Element-static-property-VISIBILITY\" class=\"docClass\">VISIBILITY</a>,\n<a href=\"#!/api/Ext.dom.Element-static-property-DISPLAY\" rel=\"Ext.dom.Element-static-property-DISPLAY\" class=\"docClass\">DISPLAY</a> or <a href=\"#!/api/Ext.dom.Element-static-property-OFFSETS\" rel=\"Ext.dom.Element-static-property-OFFSETS\" class=\"docClass\">OFFSETS</a>.</p>\n","params":[{"tagname":"params","type":"Ext.dom.Element.VISIBILITY/Ext.dom.Element.DISPLAY/Ext.dom.Element.OFFSETS","doc":"<p>mode The method by which the element will be <a href=\"#!/api/Ext.dom.Element-method-hide\" rel=\"Ext.dom.Element-method-hide\" class=\"docClass\">hidden</a> (you can\nalso use the <a href=\"#!/api/Ext.dom.Element-method-setVisible\" rel=\"Ext.dom.Element-method-setVisible\" class=\"docClass\">setVisible</a> or <a href=\"#!/api/Ext.dom.Element-method-toggle\" rel=\"Ext.dom.Element-method-toggle\" class=\"docClass\">toggle</a> method to toggle element\nvisibility).</p>\n","html_type":"Ext.dom.Element.VISIBILITY/Ext.dom.Element.DISPLAY/Ext.dom.Element.OFFSETS"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["getData"],"id":"method-setVisibilityMode","owner":"Ext.dom.Element","short_doc":"Use this to change the visibility mode between VISIBILITY,\nDISPLAY or OFFSETS. ..."},{"tagname":"method","name":"setVisible","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":4113}],"doc":"<p>Sets the visibility of the element based on the current visibility mode. Use\n<a href=\"#!/api/Ext.dom.Element-method-setVisibilityMode\" rel=\"Ext.dom.Element-method-setVisibilityMode\" class=\"docClass\">setVisibilityMode</a> to switch between the following visibility modes:</p>\n\n<ul>\n<li><a href=\"#!/api/Ext.dom.Element-static-property-DISPLAY\" rel=\"Ext.dom.Element-static-property-DISPLAY\" class=\"docClass\">DISPLAY</a> (the default)</li>\n<li><a href=\"#!/api/Ext.dom.Element-static-property-VISIBILITY\" rel=\"Ext.dom.Element-static-property-VISIBILITY\" class=\"docClass\">VISIBILITY</a></li>\n<li><a href=\"#!/api/Ext.dom.Element-static-property-OFFSETS\" rel=\"Ext.dom.Element-static-property-OFFSETS\" class=\"docClass\">OFFSETS</a></li>\n</ul>\n\n","params":[{"tagname":"params","type":"Boolean","name":"visible","doc":"<p>Whether the element is visible.</p>\n","html_type":"Boolean"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["getVisibilityMode","removeCls","setUnderlaysVisible"],"id":"method-setVisible","owner":"Ext.dom.Element","short_doc":"Sets the visibility of the element based on the current visibility mode. ..."},{"tagname":"method","name":"setWidth","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/src/dom/ButtonElement.js","linenr":82}],"doc":"<p>Set the width of this Element.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":82,"params":[{"name":"width","type":"Object","html_type":"Object"},{"name":"animate","type":"Object","html_type":"Object"}],"chainable":true,"fires":[],"method_calls":["callParent"],"id":"method-setWidth","owner":"Ext.dom.ButtonElement","return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"overrides":[{"name":"setWidth","owner":"Ext.dom.Element","link":"<a href=\"#!/api/Ext.dom.Element-method-setWidth\" rel=\"Ext.dom.Element-method-setWidth\" class=\"docClass\">Ext.dom.Element.setWidth</a>"}],"short_doc":"Set the width of this Element. ..."},{"tagname":"method","name":"setX","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":4170}],"doc":"<p>Sets this Element's page-level x coordinate</p>\n","params":[{"tagname":"params","type":"Number","name":"x","doc":"\n","html_type":"Number"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["setXY"],"id":"method-setX","owner":"Ext.dom.Element","overrides":[{"name":"setX","owner":"Ext.util.Positionable","link":"<a href=\"#!/api/Ext.util.Positionable-method-setX\" rel=\"Ext.util.Positionable-method-setX\" class=\"docClass\">Ext.util.Positionable.setX</a>"}],"short_doc":"Sets this Element's page-level x coordinate ..."},{"tagname":"method","name":"setXY","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":4179}],"doc":"<p>Sets this Element's page-level x and y coordinates</p>\n","params":[{"tagname":"params","type":"Number[]","name":"xy","doc":"\n","html_type":"Number[]"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["position","syncUnderlays","translatePoints"],"id":"method-setXY","owner":"Ext.dom.Element","overrides":[{"name":"setXY","owner":"Ext.util.Positionable","link":"<a href=\"#!/api/Ext.util.Positionable-method-setXY\" rel=\"Ext.util.Positionable-method-setXY\" class=\"docClass\">Ext.util.Positionable.setXY</a>"}],"short_doc":"Sets this Element's page-level x and y coordinates ..."},{"tagname":"method","name":"setY","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":4208}],"doc":"<p>Sets this Element's page-level y coordinate</p>\n","params":[{"tagname":"params","type":"Number","name":"y","doc":"\n","html_type":"Number"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["setXY"],"id":"method-setY","owner":"Ext.dom.Element","overrides":[{"name":"setY","owner":"Ext.util.Positionable","link":"<a href=\"#!/api/Ext.util.Positionable-method-setY\" rel=\"Ext.util.Positionable-method-setY\" class=\"docClass\">Ext.util.Positionable.setY</a>"}],"short_doc":"Sets this Element's page-level y coordinate ..."},{"tagname":"method","name":"setZIndex","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":4217}],"doc":"<p>Sets the z-index of this Element and synchronizes the z-index of shadow and/or\nshim if present.</p>\n","params":[{"tagname":"params","type":"Number","name":"zindex","doc":"<p>The new z-index to set</p>\n","html_type":"Number"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["setStyle"],"id":"method-setZIndex","owner":"Ext.dom.Element","short_doc":"Sets the z-index of this Element and synchronizes the z-index of shadow and/or\nshim if present. ..."},{"tagname":"method","name":"show","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":4238}],"doc":"<p>Show this element - Uses display mode to determine whether to use \"display\",\n\"visibility\", or \"offsets\". See <a href=\"#!/api/Ext.dom.Element-method-setVisible\" rel=\"Ext.dom.Element-method-setVisible\" class=\"docClass\">setVisible</a>.</p>\n","return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":true,"fires":[],"method_calls":["setVisible"],"id":"method-show","owner":"Ext.dom.Element","short_doc":"Show this element - Uses display mode to determine whether to use \"display\",\n\"visibility\", or \"offsets\". ..."},{"tagname":"method","name":"statics","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1075}],"doc":"<p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self();   // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n","protected":true,"return":{"type":"Ext.Class","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-statics","owner":"Ext.Base","short_doc":"Get the reference to the class from which this object was instantiated. ..."},{"tagname":"method","name":"suspendEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1181}],"doc":"<p>Suspends firing of the named event(s).</p>\n\n<p>After calling this method to suspend events, the events will no longer fire when requested to fire.</p>\n\n<p><strong>Note that if this is called multiple times for a certain event, the converse method\n<a href=\"#!/api/Ext.mixin.Observable-method-resumeEvent\" rel=\"Ext.mixin.Observable-method-resumeEvent\" class=\"docClass\">resumeEvent</a> will have to be called the same number of times for it to resume firing.</strong></p>\n","params":[{"tagname":"params","type":"String...","name":"eventName","doc":"<p>Multiple event names to suspend.</p>\n","html_type":"String..."}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["_initEvent"],"id":"method-suspendEvent","owner":"Ext.mixin.Observable","short_doc":"Suspends firing of the named event(s). ..."},{"tagname":"method","name":"suspendEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1168}],"doc":"<p>Suspends the firing of all events. (see <a href=\"#!/api/Ext.mixin.Observable-method-resumeEvents\" rel=\"Ext.mixin.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a>)</p>\n","params":[{"tagname":"params","type":"Boolean","name":"queueSuspended","doc":"<p><code>true</code> to queue up suspended events to be fired\nafter the <a href=\"#!/api/Ext.mixin.Observable-method-resumeEvents\" rel=\"Ext.mixin.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> call instead of discarding all suspended events.</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-suspendEvents","owner":"Ext.mixin.Observable","short_doc":"Suspends the firing of all events. ..."},{"tagname":"method","name":"swapCls","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":4248}],"doc":"\n","private":true,"params":[{"tagname":"params","type":"String","name":"firstClass","doc":"\n","html_type":"String"},{"tagname":"params","type":"String","name":"secondClass","doc":"\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"flag","doc":"\n","html_type":"Boolean"},{"tagname":"params","type":"String","name":"prefix","doc":"\n","html_type":"String"}],"return":{"type":"Mixed","name":"return","doc":"\n","properties":null,"html_type":"Mixed"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["addCls","removeCls"],"id":"method-swapCls","owner":"Ext.dom.Element","short_doc":" ..."},{"tagname":"method","name":"syncUnderlays","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":4306}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getXY","isVisible"],"id":"method-syncUnderlays","owner":"Ext.dom.Element","short_doc":" ..."},{"tagname":"method","name":"synchronize","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":4276}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getData"],"id":"method-synchronize","owner":"Ext.dom.Element","short_doc":" ..."},{"tagname":"method","name":"toggle","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":4346}],"doc":"<p>Toggles the element's visibility, depending on visibility mode.</p>\n","return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":true,"fires":[],"method_calls":["isVisible","setVisible"],"id":"method-toggle","owner":"Ext.dom.Element","short_doc":"Toggles the element's visibility, depending on visibility mode. ..."},{"tagname":"method","name":"toggleCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":4333}],"doc":"<p>Toggles the specified CSS class on this element (removes it if it already exists, otherwise adds it).</p>\n","params":[{"tagname":"params","type":"String","name":"className","doc":"<p>The CSS class to toggle.</p>\n","html_type":"String"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["addCls","hasCls","removeCls"],"id":"method-toggleCls","owner":"Ext.dom.Element","short_doc":"Toggles the specified CSS class on this element (removes it if it already exists, otherwise adds it). ..."},{"tagname":"method","name":"translatePoints","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Positionable.js","linenr":846}],"doc":"<p>Translates the passed page coordinates into left/top css values for the element</p>\n","params":[{"tagname":"params","type":"Number/Array","name":"x","doc":"<p>The page x or an array containing [x, y]</p>\n","html_type":"Number/Array"},{"tagname":"params","type":"Number","name":"y","optional":true,"doc":"<p>The page y, required if x is not an array</p>\n","html_type":"Number"}],"return":{"type":"Object","name":"return","doc":"<p>An object with left and top properties. e.g.\n{left: (value), top: (value)}</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["translateXY"],"id":"method-translatePoints","owner":"Ext.util.Positionable","short_doc":"Translates the passed page coordinates into left/top css values for the element ..."},{"tagname":"method","name":"translateXY","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/util/Positionable.js","linenr":862}],"doc":"<p>Translates the passed page coordinates into x and y css values for the element</p>\n","params":[{"tagname":"params","type":"Number/Array","name":"x","doc":"<p>The page x or an array containing [x, y]</p>\n","html_type":"Number/Array"},{"tagname":"params","type":"Number","name":"y","optional":true,"doc":"<p>The page y, required if x is not an array</p>\n","html_type":"Number"}],"return":{"type":"Object","name":"return","doc":"<p>An object with x and y properties. e.g.\n{x: (value), y: (value)}</p>\n","properties":null,"html_type":"Object"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getXY"],"id":"method-translateXY","owner":"Ext.util.Positionable","short_doc":"Translates the passed page coordinates into x and y css values for the element ..."},{"tagname":"method","name":"un","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1659}],"doc":"<p>Shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The type of event the handler was associated with.</p>\n\n","html_type":"String"},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The handler to remove. <strong>This must be a reference to the function\npassed into the\n<a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope originally specified for the handler. It\nmust be the same as the scope argument specified in the original call to\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a> or the listener will not be removed.</p>\n\n\n\n\n<p><strong>Convenience Syntax</strong></p>\n\n\n\n\n<p>You can use the {link <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> addListener destroyable: true} config option in\nplace of calling un().  For example:</p>\n\n\n\n\n<pre><code>var listeners = cmp.on({\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide,\n    destroyable: true\n});\n\n// Remove listeners\nlisteners.destroy();\n// or\ncmp.un(\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide\n);\n</code></pre>\n\n\n\n\n<p><strong>Exception - DOM event handlers using the element config option</strong></p>\n\n\n\n\n<p>You must go directly through the element to detach an event handler attached using\nthe <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> <em>element</em> option.</p>\n\n\n\n\n<pre><code>panel.on({\n    element: 'body',\n    click: 'onBodyCLick'\n});\n\npanel.body.un({\n    click: 'onBodyCLick'\n});\n</code></pre>\n\n","html_type":"Object"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-un","owner":"Ext.mixin.Observable","return":null,"throws":null,"type":null,"short_doc":"Shorthand for removeListener. ..."},{"tagname":"method","name":"unAfter","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1571}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-removeAfterListener\" rel=\"Ext.mixin.Observable-method-removeAfterListener\" class=\"docClass\">removeAfterListener</a>.</p>\n","inheritdoc":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-un\" rel=\"Ext.mixin.Observable-method-un\" class=\"docClass\">un</a> instead.</p>\n","version":"5.1"},"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event the handler was associated with.</p>\n\n","html_type":"String/String[]/Object"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The handler to remove.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope originally specified for <code>fn</code>.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>Extra options object.</p>\n\n","html_type":"Object"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-unAfter","owner":"Ext.mixin.Observable","return":null,"throws":null,"type":null,"short_doc":"Alias for removeAfterListener. ..."},{"tagname":"method","name":"unBefore","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1564}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-removeBeforeListener\" rel=\"Ext.mixin.Observable-method-removeBeforeListener\" class=\"docClass\">removeBeforeListener</a>.</p>\n","inheritdoc":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-un\" rel=\"Ext.mixin.Observable-method-un\" class=\"docClass\">un</a> instead.</p>\n","version":"5.1"},"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event the handler was associated with.</p>\n\n","html_type":"String/String[]/Object"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The handler to remove.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope originally specified for <code>fn</code>.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>Extra options object.</p>\n\n","html_type":"Object"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-unBefore","owner":"Ext.mixin.Observable","return":null,"throws":null,"type":null,"short_doc":"Alias for removeBeforeListener. ..."},{"tagname":"method","name":"unlink","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1526}],"doc":"<p>Destroys a given set of <code><a href=\"#!/api/Ext.Base-method-link\" rel=\"Ext.Base-method-link\" class=\"docClass\">linked</a></code> objects. This is only needed if\nthe linked object is being destroyed before this instance.</p>\n","params":[{"tagname":"params","type":"String[]","name":"names","doc":"<p>The names of the linked objects to destroy.</p>\n","html_type":"String[]"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"method-unlink","owner":"Ext.Base","short_doc":"Destroys a given set of linked objects. ..."},{"tagname":"method","name":"unwrap","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":4363}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":true,"fires":[],"method_calls":["contains"],"id":"method-unwrap","owner":"Ext.dom.Element","return":{"type":"Ext.dom.Element","doc":"<p>this</p>\n","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"short_doc":" ..."},{"tagname":"method","name":"up","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":4396}],"doc":"<p>.\nWalks up the dom looking for a parent node that matches the passed simple selector (e.g. 'div.some-class' or 'span:first-child').\nThis is a shortcut for findParentNode() that always returns an <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"selector","doc":"<p>The simple selector to test. See <a href=\"#!/api/Ext.dom.Query\" rel=\"Ext.dom.Query\" class=\"docClass\">Ext.dom.Query</a> for information about simple selectors.</p>\n","html_type":"String"},{"tagname":"params","type":"Number/String/HTMLElement/Ext.dom.Element","name":"limit","optional":true,"doc":"<p>The max depth to search as a number or an element which causes the upward traversal to stop\nand is <strong>not</strong> considered for inclusion as the result. (defaults to 50 || document.documentElement)</p>\n","html_type":"Number/String/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"params","type":"Boolean","name":"returnDom","default":"false","optional":true,"doc":"<p>True to return the DOM node instead of <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a></p>\n","html_type":"Boolean"}],"return":{"type":"Ext.dom.Element/HTMLElement","name":"return","doc":"<p>The matching DOM node (or HTMLElement if\n<em>returnDom</em> is <em>true</em>).  Or null if no match was found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/HTMLElement"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["findParentNode"],"id":"method-up","owner":"Ext.dom.Element","short_doc":".\nWalks up the dom looking for a parent node that matches the passed simple selector (e.g. ..."},{"tagname":"method","name":"update","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":4411}],"doc":"<p>Sets the <code>innerHTML</code> of this element.</p>\n","inheritdoc":null,"deprecated":{"text":"<p>Please use <a href=\"#!/api/Ext.dom.Element-method-setHtml\" rel=\"Ext.dom.Element-method-setHtml\" class=\"docClass\">setHtml</a> instead.</p>\n","version":"5.0.0"},"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"String","name":"html","doc":"<p>The new HTML.</p>\n\n\n\n","html_type":"String"}],"chainable":false,"fires":[],"method_calls":["setHtml"],"id":"method-update","owner":"Ext.dom.Element","return":null,"throws":null,"type":null,"short_doc":"Sets the innerHTML of this element. ..."},{"tagname":"method","name":"wrap","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":4419}],"doc":"<p>Creates and wraps this element with another element</p>\n","params":[{"tagname":"params","type":"Object","name":"config","optional":true,"doc":"<p>DomHelper element config object for the wrapper element or null for an empty div</p>\n","html_type":"Object"},{"tagname":"params","type":"Boolean","name":"returnDom","default":"false","optional":true,"doc":"<p>True to return the raw DOM element instead of <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a></p>\n","html_type":"Boolean"},{"tagname":"params","type":"String","name":"selector","optional":true,"doc":"<p>A CSS selector to select a descendant node within the created element to use as the wrapping element.</p>\n","html_type":"String"}],"return":{"type":"HTMLElement/Ext.dom.Element","name":"return","doc":"<p>The newly created wrapper element</p>\n","properties":null,"html_type":"HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["contains"],"id":"method-wrap","owner":"Ext.dom.Element","short_doc":"Creates and wraps this element with another element ..."},{"tagname":"method","name":"addConfig","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":911}],"doc":"<p>Adds new config properties to this class. This is called for classes when they\nare declared, then for any mixins that class may define and finally for any\noverrides defined that target the class.</p>\n","params":[{"tagname":"params","type":"Object","name":"config","doc":"\n","html_type":"Object"},{"tagname":"params","type":"Ext.Class","name":"mixinClass","optional":true,"doc":"<p>The mixin class if the configs are from a mixin.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"}],"private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["getConfigurator"],"id":"static-method-addConfig","owner":"Ext.Base","short_doc":"Adds new config properties to this class. ..."},{"tagname":"method","name":"addInheritableStatics","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":436}],"doc":"\n","private":true,"static":true,"inheritable":true,"params":[{"tagname":"params","type":"Object","name":"members","doc":"\n","html_type":"Object"}],"inheritdoc":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"static-method-addInheritableStatics","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"addMember","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":634}],"doc":"\n","private":true,"static":true,"inheritable":true,"params":[{"tagname":"params","name":"name","doc":"\n","type":"Object","html_type":"Object"},{"tagname":"params","name":"member","doc":"\n","type":"Object","html_type":"Object"}],"inheritdoc":null,"linenr":null,"chainable":true,"fires":null,"method_calls":["addMembers"],"id":"static-method-addMember","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"addMembers","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":480}],"doc":"<p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat();\n kitty.meow();\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"<p>The members to add to this class.</p>\n","html_type":"Object"},{"tagname":"params","type":"Boolean","name":"isStatic","default":"false","optional":true,"doc":"<p>Pass <code>true</code> if the members are static.</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"privacy","default":"false","optional":true,"doc":"<p>Pass <code>true</code> if the members are private. This\nonly has meaning in debug mode and only for methods.</p>\n","html_type":"Boolean"}],"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":true,"fires":null,"method_calls":["addConfig","addMembers"],"id":"static-method-addMembers","owner":"Ext.Base","short_doc":"Add methods / properties to the prototype of this class. ..."},{"tagname":"method","name":"addStatics","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":413}],"doc":"<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"\n","html_type":"Object"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":true,"fires":null,"method_calls":["addMembers"],"id":"static-method-addStatics","owner":"Ext.Base","short_doc":"Add / override static properties of this class. ..."},{"tagname":"method","name":"borrow","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":648}],"doc":"<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n","params":[{"tagname":"params","type":"Ext.Base","name":"fromClass","doc":"<p>The class to borrow members from</p>\n","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},{"tagname":"params","type":"Array/String","name":"members","doc":"<p>The names of the members to borrow</p>\n","html_type":"Array/String"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"inheritable":true,"private":true,"inheritdoc":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["addMembers"],"id":"static-method-borrow","owner":"Ext.Base","short_doc":"Borrow another class' members to the prototype of this class. ..."},{"tagname":"method","name":"callParent","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":785}],"doc":"\n","protected":true,"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[{"name":"args","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-callParent","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"callSuper","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":799}],"doc":"\n","protected":true,"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[{"name":"args","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-callSuper","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"create","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":94}],"doc":"<p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n","return":{"type":"Object","name":"return","doc":"<p>the created instance.</p>\n","properties":null,"html_type":"Object"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-create","owner":"Ext.Base","short_doc":"Create a new instance of this Class. ..."},{"tagname":"method","name":"createAlias","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":973}],"doc":"<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n","params":[{"tagname":"params","type":"String/Object","name":"alias","doc":"<p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n","html_type":"String/Object"},{"tagname":"params","type":"String/Object","name":"origin","doc":"<p>The original method name</p>\n","html_type":"String/Object"}],"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"static-method-createAlias","owner":"Ext.Base","short_doc":"Create aliases for existing prototype methods. ..."},{"tagname":"method","name":"extend","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":322}],"doc":"\n","private":true,"static":true,"inheritable":true,"params":[{"tagname":"params","name":"config","doc":"\n","type":"Object","html_type":"Object"}],"inheritdoc":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["getConfigurator","hasOwnProperty"],"id":"static-method-extend","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"getConfigurator","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":940}],"doc":"<p>Returns the <code><a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a></code> for this class.</p>\n","return":{"type":"Ext.Configurator","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a>"},"private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-getConfigurator","owner":"Ext.Base","short_doc":"Returns the Ext.Configurator for this class. ..."},{"tagname":"method","name":"getName","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":954}],"doc":"<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n","return":{"type":"String","name":"return","doc":"<p>className</p>\n","properties":null,"html_type":"String"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-getName","owner":"Ext.Base","short_doc":"Get the current class' name in string format. ..."},{"tagname":"method","name":"mixin","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":814}],"doc":"<p>Used internally by the mixins pre-processor</p>\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[{"name":"name","type":"Object","html_type":"Object"},{"name":"mixinClass","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":["addConfig","hasOwnProperty","mixin"],"id":"static-method-mixin","owner":"Ext.Base","short_doc":"Used internally by the mixins pre-processor ..."},{"tagname":"method","name":"onExtended","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":399}],"doc":"\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[{"name":"fn","type":"Object","html_type":"Object"},{"name":"scope","type":"Object","html_type":"Object"}],"chainable":true,"fires":null,"method_calls":null,"id":"static-method-onExtended","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"override","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":695}],"doc":"<p>Override members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>Direct use of this method should be rare. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n","html_type":"Object"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this class</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["addCachedConfig","addConfig","addInheritableStatics","addMembers","mixin"],"id":"static-method-override","owner":"Ext.Base","short_doc":"Override members of this class. ..."},{"tagname":"method","name":"triggerExtended","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":377}],"doc":"\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-triggerExtended","owner":"Ext.Base","short_doc":" ..."},{"tagname":"event","name":"DOMActivate","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":450}],"doc":"<p>Where supported. Fires when an element is activated, for instance, through a mouse click or a keypress.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-DOMActivate","owner":"Ext.dom.Element","short_doc":"Where supported. ..."},{"tagname":"event","name":"DOMAttrModified","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":488}],"doc":"<p>Where supported. Fires when an attribute has been modified.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-DOMAttrModified","owner":"Ext.dom.Element","short_doc":"Where supported. ..."},{"tagname":"event","name":"DOMCharacterDataModified","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":494}],"doc":"<p>Where supported. Fires when the character data has been modified.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-DOMCharacterDataModified","owner":"Ext.dom.Element","short_doc":"Where supported. ..."},{"tagname":"event","name":"DOMFocusIn","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":438}],"doc":"<p>Where supported. Similar to HTML focus event, but can be applied to any focusable element.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-DOMFocusIn","owner":"Ext.dom.Element","short_doc":"Where supported. ..."},{"tagname":"event","name":"DOMFocusOut","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":444}],"doc":"<p>Where supported. Similar to HTML blur event, but can be applied to any focusable element.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-DOMFocusOut","owner":"Ext.dom.Element","short_doc":"Where supported. ..."},{"tagname":"event","name":"DOMNodeInserted","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":464}],"doc":"<p>Where supported. Fires when a node has been added as a child of another node.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-DOMNodeInserted","owner":"Ext.dom.Element","short_doc":"Where supported. ..."},{"tagname":"event","name":"DOMNodeInsertedIntoDocument","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":482}],"doc":"<p>Where supported. Fires when a node is being inserted into a document.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-DOMNodeInsertedIntoDocument","owner":"Ext.dom.Element","short_doc":"Where supported. ..."},{"tagname":"event","name":"DOMNodeRemoved","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":470}],"doc":"<p>Where supported. Fires when a descendant node of the element is removed.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-DOMNodeRemoved","owner":"Ext.dom.Element","short_doc":"Where supported. ..."},{"tagname":"event","name":"DOMNodeRemovedFromDocument","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":476}],"doc":"<p>Where supported. Fires when a node is being removed from a document.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-DOMNodeRemovedFromDocument","owner":"Ext.dom.Element","short_doc":"Where supported. ..."},{"tagname":"event","name":"DOMSubtreeModified","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":458}],"doc":"<p>Where supported. Fires when the subtree is modified.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-DOMSubtreeModified","owner":"Ext.dom.Element","short_doc":"Where supported. ..."},{"tagname":"event","name":"abort","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":360}],"doc":"<p>Fires when an object/image is stopped from loading before completely loaded.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-abort","owner":"Ext.dom.Element","short_doc":"Fires when an object/image is stopped from loading before completely loaded. ..."},{"tagname":"event","name":"blur","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":430}],"doc":"<p>Fires when an element loses focus either via the pointing device or by tabbing navigation.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-blur","owner":"Ext.dom.Element","short_doc":"Fires when an element loses focus either via the pointing device or by tabbing navigation. ..."},{"tagname":"event","name":"change","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":406}],"doc":"<p>Fires when a control loses the input focus and its value has been modified since gaining focus.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-change","owner":"Ext.dom.Element","short_doc":"Fires when a control loses the input focus and its value has been modified since gaining focus. ..."},{"tagname":"event","name":"click","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":264}],"doc":"<p>Fires when a mouse click is detected within the element.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-click","owner":"Ext.dom.Element","short_doc":"Fires when a mouse click is detected within the element. ..."},{"tagname":"event","name":"contextmenu","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":270}],"doc":"<p>Fires when a right click is detected within the element.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-contextmenu","owner":"Ext.dom.Element","short_doc":"Fires when a right click is detected within the element. ..."},{"tagname":"event","name":"dblclick","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":276}],"doc":"<p>Fires when a mouse double click is detected within the element.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-dblclick","owner":"Ext.dom.Element","short_doc":"Fires when a mouse double click is detected within the element. ..."},{"tagname":"event","name":"doubletap","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/event/gesture/DoubleTap.js","linenr":40}],"doc":"<p>Fires when there is a double tap.</p>\n","owner":"Ext.dom.Element","params":[{"tagname":"params","type":"Ext.event.Event","name":"event","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> event encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"node","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","type":"Object","name":"options","doc":"<p>The options object passed to <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">Ext.mixin.Observable.addListener</a>.</p>\n","html_type":"Object"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-doubletap","short_doc":"Fires when there is a double tap. ..."},{"tagname":"event","name":"error","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":366}],"doc":"<p>Fires when an object/image/frame cannot be loaded properly.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-error","owner":"Ext.dom.Element","short_doc":"Fires when an object/image/frame cannot be loaded properly. ..."},{"tagname":"event","name":"focus","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":424}],"doc":"<p>Fires when an element receives focus either via the pointing device or by tab navigation.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-focus","owner":"Ext.dom.Element","short_doc":"Fires when an element receives focus either via the pointing device or by tab navigation. ..."},{"tagname":"event","name":"keydown","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":332}],"doc":"<p>Fires when a keydown is detected within the element.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-keydown","owner":"Ext.dom.Element","short_doc":"Fires when a keydown is detected within the element. ..."},{"tagname":"event","name":"keypress","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":326}],"doc":"<p>Fires when a keypress is detected within the element.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-keypress","owner":"Ext.dom.Element","short_doc":"Fires when a keypress is detected within the element. ..."},{"tagname":"event","name":"keyup","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":338}],"doc":"<p>Fires when a keyup is detected within the element.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-keyup","owner":"Ext.dom.Element","short_doc":"Fires when a keyup is detected within the element. ..."},{"tagname":"event","name":"load","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":346}],"doc":"<p>Fires when the user agent finishes loading all content within the element. Only supported by window, frames,\nobjects and images.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-load","owner":"Ext.dom.Element","short_doc":"Fires when the user agent finishes loading all content within the element. ..."},{"tagname":"event","name":"longpress","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/event/gesture/LongPress.js","linenr":20}],"doc":"<p>Fires when you touch and hold still for more than 1 second.</p>\n","owner":"Ext.dom.Element","params":[{"tagname":"params","type":"Ext.event.Event","name":"event","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> event encapsulating the DOM event.</p>\n\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"node","doc":"<p>The target of the event.</p>\n\n","html_type":"HTMLElement"},{"tagname":"params","type":"Object","name":"options","doc":"<p>The options object passed to <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">Ext.mixin.Observable.addListener</a>.</p>\n\n","html_type":"Object"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-longpress","short_doc":"Fires when you touch and hold still for more than 1 second. ..."},{"tagname":"event","name":"mousedown","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":282}],"doc":"<p>Fires when a mousedown is detected within the element.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-mousedown","owner":"Ext.dom.Element","short_doc":"Fires when a mousedown is detected within the element. ..."},{"tagname":"event","name":"mouseenter","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":312}],"doc":"<p>Fires when the mouse enters the element.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-mouseenter","owner":"Ext.dom.Element","short_doc":"Fires when the mouse enters the element. ..."},{"tagname":"event","name":"mouseleave","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":318}],"doc":"<p>Fires when the mouse leaves the element.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-mouseleave","owner":"Ext.dom.Element","short_doc":"Fires when the mouse leaves the element. ..."},{"tagname":"event","name":"mousemove","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":300}],"doc":"<p>Fires when a mousemove is detected with the element.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-mousemove","owner":"Ext.dom.Element","short_doc":"Fires when a mousemove is detected with the element. ..."},{"tagname":"event","name":"mouseout","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":306}],"doc":"<p>Fires when a mouseout is detected with the element.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-mouseout","owner":"Ext.dom.Element","short_doc":"Fires when a mouseout is detected with the element. ..."},{"tagname":"event","name":"mouseover","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":294}],"doc":"<p>Fires when a mouseover is detected within the element.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-mouseover","owner":"Ext.dom.Element","short_doc":"Fires when a mouseover is detected within the element. ..."},{"tagname":"event","name":"mouseup","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":288}],"doc":"<p>Fires when a mouseup is detected within the element.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-mouseup","owner":"Ext.dom.Element","short_doc":"Fires when a mouseup is detected within the element. ..."},{"tagname":"event","name":"painted","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":372}],"doc":"<p>Fires whenever this Element actually becomes visible (painted) on the screen. This is useful when you need to\nperform 'read' operations on the DOM element, i.e: calculating natural sizes and positioning.</p>\n\n<p><strong>Note:</strong> This event is not available to be used with event delegation. Instead <code>painted</code> only fires if you explicitly\nadd at least one listener to it, for performance reasons.</p>\n","params":[{"tagname":"params","type":"Ext.dom.Element","name":"this","doc":"<p>The component instance.</p>\n","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-painted","owner":"Ext.dom.Element","short_doc":"Fires whenever this Element actually becomes visible (painted) on the screen. ..."},{"tagname":"event","name":"pinch","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/event/gesture/Pinch.js","linenr":20}],"doc":"<p>Fires continuously when there is pinching (the touch must move for this to be fired).</p>\n","owner":"Ext.dom.Element","params":[{"tagname":"params","type":"Ext.event.Event","name":"event","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> event encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"node","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","type":"Object","name":"options","doc":"<p>The options object passed to <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">Ext.mixin.Observable.addListener</a>.</p>\n","html_type":"Object"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-pinch","short_doc":"Fires continuously when there is pinching (the touch must move for this to be fired). ..."},{"tagname":"event","name":"pinchend","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/event/gesture/Pinch.js","linenr":29}],"doc":"<p>Fires when a pinch has ended.</p>\n","owner":"Ext.dom.Element","params":[{"tagname":"params","type":"Ext.event.Event","name":"event","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> event encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"node","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","type":"Object","name":"options","doc":"<p>The options object passed to <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">Ext.mixin.Observable.addListener</a>.</p>\n","html_type":"Object"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-pinchend","short_doc":"Fires when a pinch has ended. ..."},{"tagname":"event","name":"pinchstart","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/event/gesture/Pinch.js","linenr":11}],"doc":"<p>Fired once when a pinch has started.</p>\n","owner":"Ext.dom.Element","params":[{"tagname":"params","type":"Ext.event.Event","name":"event","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> event encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"node","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","type":"Object","name":"options","doc":"<p>The options object passed to <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">Ext.mixin.Observable.addListener</a>.</p>\n","html_type":"Object"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-pinchstart","short_doc":"Fired once when a pinch has started. ..."},{"tagname":"event","name":"reset","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":418}],"doc":"<p>Fires when a form is reset.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-reset","owner":"Ext.dom.Element","short_doc":"Fires when a form is reset. ..."},{"tagname":"event","name":"resize","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":382}],"doc":"<p>Important note: For the best performance on mobile devices, use this only when you absolutely need to monitor\na Element's size.</p>\n\n<p><strong>Note:</strong> This event is not available to be used with event delegation. Instead <code>resize</code> only fires if you explicitly\nadd at least one listener to it, for performance reasons.</p>\n","params":[{"tagname":"params","type":"Ext.dom.Element","name":"this","doc":"<p>The component instance.</p>\n","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-resize","owner":"Ext.dom.Element","short_doc":"Important note: For the best performance on mobile devices, use this only when you absolutely need to monitor\na Eleme..."},{"tagname":"event","name":"rotate","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/event/gesture/Rotate.js","linenr":20}],"doc":"<p>Fires continuously when there is rotation (the touch must move for this to be fired).\nWhen listening to this, ensure you know about the <a href=\"#!/api/Ext.event.Event-property-angle\" rel=\"Ext.event.Event-property-angle\" class=\"docClass\">Ext.event.Event.angle</a> and <a href=\"#!/api/Ext.event.Event-property-rotation\" rel=\"Ext.event.Event-property-rotation\" class=\"docClass\">Ext.event.Event.rotation</a>\nproperties in the <code>event</code> object.</p>\n","owner":"Ext.dom.Element","params":[{"tagname":"params","type":"Ext.event.Event","name":"event","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> event encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"node","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","type":"Object","name":"options","doc":"<p>The options object passed to <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">Ext.mixin.Observable.addListener</a>.</p>\n","html_type":"Object"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-rotate","short_doc":"Fires continuously when there is rotation (the touch must move for this to be fired). ..."},{"tagname":"event","name":"rotateend","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/event/gesture/Rotate.js","linenr":31}],"doc":"<p>Fires when a rotation event has ended.</p>\n","owner":"Ext.dom.Element","params":[{"tagname":"params","type":"Ext.event.Event","name":"event","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> event encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"node","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","type":"Object","name":"options","doc":"<p>The options object passed to <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">Ext.mixin.Observable.addListener</a>.</p>\n","html_type":"Object"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-rotateend","short_doc":"Fires when a rotation event has ended. ..."},{"tagname":"event","name":"rotatestart","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/event/gesture/Rotate.js","linenr":11}],"doc":"<p>Fired once when a rotation has started.</p>\n","owner":"Ext.dom.Element","params":[{"tagname":"params","type":"Ext.event.Event","name":"event","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> event encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"node","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","type":"Object","name":"options","doc":"<p>The options object passed to <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">Ext.mixin.Observable.addListener</a>.</p>\n","html_type":"Object"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-rotatestart","short_doc":"Fired once when a rotation has started. ..."},{"tagname":"event","name":"scroll","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":392}],"doc":"<p>Fires when a document view is scrolled.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-scroll","owner":"Ext.dom.Element","short_doc":"Fires when a document view is scrolled. ..."},{"tagname":"event","name":"select","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":400}],"doc":"<p>Fires when a user selects some text in a text field, including input and textarea.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-select","owner":"Ext.dom.Element","short_doc":"Fires when a user selects some text in a text field, including input and textarea. ..."},{"tagname":"event","name":"singletap","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/event/gesture/DoubleTap.js","linenr":31}],"doc":"<p>Fires when there is a single tap.</p>\n","owner":"Ext.dom.Element","params":[{"tagname":"params","type":"Ext.event.Event","name":"event","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> event encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"node","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","type":"Object","name":"options","doc":"<p>The options object passed to <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">Ext.mixin.Observable.addListener</a>.</p>\n","html_type":"Object"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-singletap","short_doc":"Fires when there is a single tap. ..."},{"tagname":"event","name":"submit","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":412}],"doc":"<p>Fires when a form is submitted.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-submit","owner":"Ext.dom.Element","short_doc":"Fires when a form is submitted. ..."},{"tagname":"event","name":"swipe","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/event/gesture/Swipe.js","linenr":11}],"doc":"<p>Fires when there is a swipe\nWhen listening to this, ensure you know about the <a href=\"#!/api/Ext.event.Event-property-direction\" rel=\"Ext.event.Event-property-direction\" class=\"docClass\">Ext.event.Event.direction</a> property in the <code>event</code> object.</p>\n","owner":"Ext.dom.Element","params":[{"tagname":"params","type":"Ext.event.Event","name":"event","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> event encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"node","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","type":"Object","name":"options","doc":"<p>The options object passed to <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">Ext.mixin.Observable.addListener</a>.</p>\n","html_type":"Object"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-swipe","short_doc":"Fires when there is a swipe\nWhen listening to this, ensure you know about the Ext.event.Event.direction property in t..."},{"tagname":"event","name":"taphold","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/event/gesture/LongPress.js","linenr":29}],"doc":"<p>Fires when you touch and hold still for more than 1 second.</p>\n","owner":"Ext.dom.Element","inheritdoc":null,"params":[{"tagname":"params","type":"Ext.event.Event","name":"event","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> event encapsulating the DOM event.</p>\n\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"node","doc":"<p>The target of the event.</p>\n\n","html_type":"HTMLElement"},{"tagname":"params","type":"Object","name":"options","doc":"<p>The options object passed to <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">Ext.mixin.Observable.addListener</a>.</p>\n\n","html_type":"Object"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-taphold","return":null,"throws":null,"type":null,"short_doc":"Fires when you touch and hold still for more than 1 second. ..."},{"tagname":"event","name":"unload","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/dom/Element.js","linenr":353}],"doc":"<p>Fires when the user agent removes all content from a window or frame. For elements, it fires when the target\nelement or any of its content has been removed.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-unload","owner":"Ext.dom.Element","short_doc":"Fires when the user agent removes all content from a window or frame. ..."}],"code_type":"ext_define","id":"class-Ext.dom.ButtonElement","short_doc":"A special Ext.dom.Element used by Buttons. ..."}