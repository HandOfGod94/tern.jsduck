{"tagname":"class","name":"Ext.data.ChainedStore","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":1}],"doc":"<p>A chained store is a store that is a \"view\" of an existing store. The data comes from the\n<a href=\"#!/api/Ext.data.ChainedStore-cfg-source\" rel=\"Ext.data.ChainedStore-cfg-source\" class=\"docClass\">source</a>, however this view of the store may be sorted &amp; filtered independently without\nhaving any impact on the <a href=\"#!/api/Ext.data.ChainedStore-cfg-source\" rel=\"Ext.data.ChainedStore-cfg-source\" class=\"docClass\">source</a> store.</p>\n","aliases":{"store":["chained"]},"alternateClassNames":[],"extends":"Ext.data.AbstractStore","mixins":["Ext.data.LocalStore"],"requires":[],"uses":[],"members":[{"tagname":"cfg","name":"autoDestroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":45}],"doc":"<p>When a Store is used by only one <a href=\"#!/api/Ext.view.View\" rel=\"Ext.view.View\" class=\"docClass\">DataView</a>, and should only exist for the lifetime of that view, then\nconfigure the autoDestroy flag as <code>true</code>. This causes the destruction of the view to trigger the destruction of its Store.</p>\n","type":"Boolean","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-autoDestroy","owner":"Ext.data.AbstractStore","short_doc":"When a Store is used by only one DataView, and should only exist for the lifetime of that view, then\nconfigure the au...","html_type":"Boolean"},{"tagname":"cfg","name":"extraKeys","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/LocalStore.js","linenr":13}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":13,"type":"Object","default":null,"accessor":true,"evented":null,"id":"cfg-extraKeys","owner":"Ext.data.LocalStore","html_type":"Object"},{"tagname":"cfg","name":"filters","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":29}],"doc":"<p>Array of <a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Filters</a> for this store. Can also be passed array of\nfunctions which will be used as the <a href=\"#!/api/Ext.util.Filter-cfg-filterFn\" rel=\"Ext.util.Filter-cfg-filterFn\" class=\"docClass\">filterFn</a> config\nfor filters:</p>\n\n<pre><code>filters: [\n    function(item) {\n        return item.weight &gt; 0;\n    }\n]\n</code></pre>\n\n<p>To filter after the grid is loaded use the <a href=\"#!/api/Ext.data.Store-method-filterBy\" rel=\"Ext.data.Store-method-filterBy\" class=\"docClass\">filterBy</a> function.</p>\n","type":"Object[]/Function[]","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-filters","owner":"Ext.data.AbstractStore","short_doc":"Array of Filters for this store. ...","html_type":"Object[]/Function[]"},{"tagname":"cfg","name":"groupDir","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":100}],"doc":"<p>The direction in which sorting should be applied when grouping. Supported values are \"ASC\" and \"DESC\".</p>\n","type":"String","default":"'ASC'","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-groupDir","owner":"Ext.data.AbstractStore","short_doc":"The direction in which sorting should be applied when grouping. ...","html_type":"String"},{"tagname":"cfg","name":"groupField","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":92}],"doc":"<p>The field by which to group data in the store. Internally, grouping is very similar to sorting - the\ngroupField and <a href=\"#!/api/Ext.data.AbstractStore-cfg-groupDir\" rel=\"Ext.data.AbstractStore-cfg-groupDir\" class=\"docClass\">groupDir</a> are injected as the first sorter (see <a href=\"#!/api/Ext.data.AbstractStore-method-sort\" rel=\"Ext.data.AbstractStore-method-sort\" class=\"docClass\">sort</a>). Stores support a single\nlevel of grouping, and groups can be fetched via the <a href=\"#!/api/Ext.data.AbstractStore-method-getGroups\" rel=\"Ext.data.AbstractStore-method-getGroups\" class=\"docClass\">getGroups</a> method.</p>\n","type":"String","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-groupField","owner":"Ext.data.AbstractStore","short_doc":"The field by which to group data in the store. ...","html_type":"String"},{"tagname":"cfg","name":"grouper","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":106}],"doc":"<p>The grouper by which to group the data store. May also be specified by the <a href=\"#!/api/Ext.data.AbstractStore-cfg-groupField\" rel=\"Ext.data.AbstractStore-cfg-groupField\" class=\"docClass\">groupField</a> config, however\nthey should not be used together.</p>\n","type":"Object/Ext.util.Grouper","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-grouper","owner":"Ext.data.AbstractStore","short_doc":"The grouper by which to group the data store. ...","html_type":"Object/<a href=\"#!/api/Ext.util.Grouper\" rel=\"Ext.util.Grouper\" class=\"docClass\">Ext.util.Grouper</a>"},{"tagname":"cfg","name":"listeners","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":240}],"doc":"<p>A config object containing one or more event handlers to be added to this object during initialization. This\nshould be a valid listeners config object as specified in the <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> example for attaching multiple\nhandlers at once.</p>\n\n<p><strong>DOM events from Ext JS <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a></strong></p>\n\n<p>While <em>some</em> Ext JS Component classes export selected DOM events (e.g. \"click\", \"mouseover\" etc), this is usually\nonly done when extra value can be added. For example the <a href=\"#!/api/Ext.view.View\" rel=\"Ext.view.View\" class=\"docClass\">DataView</a>'s <strong><code><a href=\"#!/api/Ext.view.View-event-itemclick\" rel=\"Ext.view.View-event-itemclick\" class=\"docClass\">itemclick</a></code></strong> event passing the node clicked on. To access DOM events directly from a\nchild element of a Component, we need to specify the <code>element</code> option to identify the Component property to add a\nDOM listener to:</p>\n\n<pre><code>new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n    width: 400,\n    height: 200,\n    dockedItems: [{\n        xtype: 'toolbar'\n    }],\n    listeners: {\n        click: {\n            element: 'el', //bind to the underlying el property on the panel\n            fn: function(){ console.log('click el'); }\n        },\n        dblclick: {\n            element: 'body', //bind to the underlying body property on the panel\n            fn: function(){ console.log('dblclick body'); }\n        }\n    }\n});\n</code></pre>\n","type":"Object","default":null,"properties":null,"id":"cfg-listeners","owner":"Ext.mixin.Observable","short_doc":"A config object containing one or more event handlers to be added to this object during initialization. ...","html_type":"Object"},{"tagname":"cfg","name":"pageSize","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":113}],"doc":"<p>The number of records considered to form a 'page'. This is used to power the built-in\npaging using the nextPage and previousPage functions when the grid is paged using a\n<a href=\"#!/api/Ext.toolbar.Paging\" rel=\"Ext.toolbar.Paging\" class=\"docClass\">PagingToolbar</a> Defaults to 25.</p>\n\n<p>To disable paging, set the pageSize to <code>0</code>.</p>\n","type":"Number","default":"25","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-pageSize","owner":"Ext.data.AbstractStore","short_doc":"The number of records considered to form a 'page'. ...","html_type":"Number"},{"tagname":"cfg","name":"remoteFilter","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":18}],"doc":"<p><code>true</code> to defer any filtering operation to the server. If <code>false</code>, filtering is done locally on the client.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"type":"Boolean","default":"false","accessor":true,"evented":null,"id":"cfg-remoteFilter","owner":"Ext.data.ChainedStore","params":null,"return":null,"throws":null,"overrides":[{"name":"remoteFilter","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-cfg-remoteFilter\" rel=\"Ext.data.AbstractStore-cfg-remoteFilter\" class=\"docClass\">Ext.data.AbstractStore.remoteFilter</a>"}],"short_doc":"true to defer any filtering operation to the server. ...","html_type":"Boolean"},{"tagname":"cfg","name":"remoteSort","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":23}],"doc":"<p><code>true</code> if the sorting should be performed on the server side, false if it is local only.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"type":"Boolean","default":"false","accessor":true,"evented":null,"id":"cfg-remoteSort","owner":"Ext.data.ChainedStore","params":null,"return":null,"throws":null,"overrides":[{"name":"remoteSort","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-cfg-remoteSort\" rel=\"Ext.data.AbstractStore-cfg-remoteSort\" class=\"docClass\">Ext.data.AbstractStore.remoteSort</a>"}],"short_doc":"true if the sorting should be performed on the server side, false if it is local only. ...","html_type":"Boolean"},{"tagname":"cfg","name":"sorters","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":68}],"doc":"<p>The initial set of <a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Sorters</a></p>\n","type":"Ext.util.Sorter[]/Object[]","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-sorters","owner":"Ext.data.AbstractStore","html_type":"<a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a>[]/Object[]"},{"tagname":"cfg","name":"source","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":11}],"doc":"<p>The backing data source for this chained store. Either a store instance\nor the id of an existing store.</p>\n","type":"Ext.data.Store/String","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-source","owner":"Ext.data.ChainedStore","short_doc":"The backing data source for this chained store. ...","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>/String"},{"tagname":"cfg","name":"statefulFilters","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":62}],"doc":"<p>Configure as <code>true</code> to have the filters saved when a client <a href=\"#!/api/Ext.grid.Panel\" rel=\"Ext.grid.Panel\" class=\"docClass\">grid</a> saves its state.</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-statefulFilters","owner":"Ext.data.AbstractStore","short_doc":"Configure as true to have the filters saved when a client grid saves its state. ...","html_type":"Boolean"},{"tagname":"cfg","name":"storeId","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":52}],"doc":"<p>Unique identifier for this store. If present, this Store will be registered with the <a href=\"#!/api/Ext.data.StoreManager\" rel=\"Ext.data.StoreManager\" class=\"docClass\">Ext.data.StoreManager</a>,\nmaking it easy to reuse elsewhere.</p>\n\n<p>Note that when store is instantiated by Controller, the storeId will be\noverridden by the name of the store.</p>\n","type":"String","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-storeId","owner":"Ext.data.AbstractStore","short_doc":"Unique identifier for this store. ...","html_type":"String"},{"tagname":"property","name":"$className","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1025}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"String","default":"'Ext.Base'","readonly":null,"id":"property-S-className","owner":"Ext.Base","short_doc":" ...","html_type":"String"},{"tagname":"property","name":"$configPrefixed","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1037}],"doc":"<p>The value <code>true</code> causes <code>config</code> values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\") character. A value of <code>false</code>\nstores <code>config</code> values as properties using their exact name (no prefix).</p>\n","type":"Boolean","default":"true","properties":null,"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-S-configPrefixed","owner":"Ext.Base","overrides":[{"name":"$configPrefixed","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-S-configPrefixed\" rel=\"Ext.Component-property-S-configPrefixed\" class=\"docClass\">Ext.Component.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-property-S-configPrefixed\" rel=\"Ext.layout.Layout-property-S-configPrefixed\" class=\"docClass\">Ext.layout.Layout.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-property-S-configPrefixed\" rel=\"Ext.data.AbstractStore-property-S-configPrefixed\" class=\"docClass\">Ext.data.AbstractStore.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.layout.container.boxOverflow.None","link":"<a href=\"#!/api/Ext.layout.container.boxOverflow.None-property-S-configPrefixed\" rel=\"Ext.layout.container.boxOverflow.None-property-S-configPrefixed\" class=\"docClass\">Ext.layout.container.boxOverflow.None.$configPrefixed</a>"}],"short_doc":"The value true causes config values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\")...","html_type":"Boolean"},{"tagname":"property","name":"$configStrict","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1047}],"doc":"<p>The value <code>true</code> instructs the <code>initConfig</code> method to only honor values for\nproperties declared in the <code>config</code> block of a class. When <code>false</code>, properties\nthat are not declared in a <code>config</code> block will be placed on the instance.</p>\n","type":"Boolean","default":"true","properties":null,"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-S-configStrict","owner":"Ext.Base","overrides":[{"name":"$configStrict","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-S-configStrict\" rel=\"Ext.Component-property-S-configStrict\" class=\"docClass\">Ext.Component.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-property-S-configStrict\" rel=\"Ext.layout.Layout-property-S-configStrict\" class=\"docClass\">Ext.layout.Layout.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-property-S-configStrict\" rel=\"Ext.data.AbstractStore-property-S-configStrict\" class=\"docClass\">Ext.data.AbstractStore.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.layout.container.boxOverflow.None","link":"<a href=\"#!/api/Ext.layout.container.boxOverflow.None-property-S-configStrict\" rel=\"Ext.layout.container.boxOverflow.None-property-S-configStrict\" class=\"docClass\">Ext.layout.container.boxOverflow.None.$configStrict</a>"}],"short_doc":"The value true instructs the initConfig method to only honor values for\nproperties declared in the config block of a ...","html_type":"Boolean"},{"tagname":"property","name":"currentPage","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":124}],"doc":"<p>The page that the Store has most recently loaded (see <a href=\"#!/api/Ext.data.Store-method-loadPage\" rel=\"Ext.data.Store-method-loadPage\" class=\"docClass\">loadPage</a>)</p>\n","type":"Number","default":"1","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-currentPage","owner":"Ext.data.AbstractStore","short_doc":"The page that the Store has most recently loaded (see loadPage) ...","html_type":"Number"},{"tagname":"property","name":"deprecated","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":1150}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1150,"type":"Object","default":null,"readonly":null,"id":"property-deprecated","owner":"Ext.data.AbstractStore","html_type":"Object"},{"tagname":"property","name":"eventsSuspended","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":280}],"doc":"<p>Initial suspended call count. Incremented when <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvents\" rel=\"Ext.mixin.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a> is called, decremented when <a href=\"#!/api/Ext.mixin.Observable-method-resumeEvents\" rel=\"Ext.mixin.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> is called.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"Number","default":"0","readonly":null,"id":"property-eventsSuspended","owner":"Ext.mixin.Observable","short_doc":"Initial suspended call count. ...","html_type":"Number"},{"tagname":"property","name":"factoryConfig","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":20}],"doc":"<p>If this property is specified by the target class of this mixin its properties are\nused to configure the created <code><a href=\"#!/api/Ext.Factory\" rel=\"Ext.Factory\" class=\"docClass\">Ext.Factory</a></code>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":20,"type":"Object","default":"{defaultType: 'store', type: 'store'}","readonly":null,"id":"property-factoryConfig","owner":"Ext.data.AbstractStore","overrides":[{"name":"factoryConfig","owner":"Ext.mixin.Factoryable","link":"<a href=\"#!/api/Ext.mixin.Factoryable-property-factoryConfig\" rel=\"Ext.mixin.Factoryable-property-factoryConfig\" class=\"docClass\">Ext.mixin.Factoryable.factoryConfig</a>"}],"properties":null,"short_doc":"If this property is specified by the target class of this mixin its properties are\nused to configure the created Ext....","html_type":"Object"},{"tagname":"property","name":"hasListeners","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":286}],"doc":"<p>This object holds a key for any event that has a listener. The listener may be set\ndirectly on the instance, or on its class or a super class (via <a href=\"#!/api/Ext.mixin.Observable-static-method-observe\" rel=\"Ext.mixin.Observable-static-method-observe\" class=\"docClass\">observe</a>) or\non the <a href=\"#!/api/Ext.app.EventBus\" rel=\"Ext.app.EventBus\" class=\"docClass\">MVC EventBus</a>. The values of this object are truthy\n(a non-zero number) and falsy (0 or undefined). They do not represent an exact count\nof listeners. The value for an event is truthy if the event must be fired and is\nfalsy if there is no need to fire the event.</p>\n\n<p>The intended use of this property is to avoid the expense of fireEvent calls when\nthere are no listeners. This can be particularly helpful when one would otherwise\nhave to call fireEvent hundreds or thousands of times. It is used like this:</p>\n\n<pre><code> if (this.hasListeners.foo) {\n     this.fireEvent('foo', this, arg1);\n }\n</code></pre>\n","type":"Object","default":null,"properties":null,"readonly":true,"id":"property-hasListeners","owner":"Ext.mixin.Observable","short_doc":"This object holds a key for any event that has a listener. ...","html_type":"Object"},{"tagname":"property","name":"isConfiguring","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1057}],"doc":"<p>This property is set to <code>true</code> during the call to <code>initConfig</code>.</p>\n","type":"Boolean","default":"false","properties":null,"protected":true,"readonly":true,"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-isConfiguring","owner":"Ext.Base","short_doc":"This property is set to true during the call to initConfig. ...","html_type":"Boolean"},{"tagname":"property","name":"isDestroyed","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":137}],"doc":"<p>True if the Store has already been destroyed. If this is true, the reference to Store should be deleted\nas it will not function correctly any more.</p>\n","type":"Boolean","default":"false","properties":null,"since":"3.4.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-isDestroyed","owner":"Ext.data.AbstractStore","short_doc":"True if the Store has already been destroyed. ...","html_type":"Boolean"},{"tagname":"property","name":"isFirstInstance","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1066}],"doc":"<p>This property is set to <code>true</code> if this instance is the first of its class.</p>\n","type":"Boolean","default":"false","properties":null,"protected":true,"readonly":true,"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-isFirstInstance","owner":"Ext.Base","short_doc":"This property is set to true if this instance is the first of its class. ...","html_type":"Boolean"},{"tagname":"property","name":"isInstance","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1028}],"doc":"<p>This value is <code>true</code> and is used to identify plain objects from instances of\na defined class.</p>\n","type":"Boolean","default":"true","properties":null,"protected":true,"readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-isInstance","owner":"Ext.Base","short_doc":"This value is true and is used to identify plain objects from instances of\na defined class. ...","html_type":"Boolean"},{"tagname":"property","name":"isObservable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":274}],"doc":"<p><code>true</code> in this class to identify an object as an instantiated Observable, or subclass thereof.</p>\n","type":"Boolean","default":"true","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-isObservable","owner":"Ext.mixin.Observable","short_doc":"true in this class to identify an object as an instantiated Observable, or subclass thereof. ...","html_type":"Boolean"},{"tagname":"property","name":"isStore","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":145}],"doc":"<p><code>true</code> in this class to identify an object as an instantiated Store, or subclass thereof.</p>\n","type":"Boolean","default":"true","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-isStore","owner":"Ext.data.AbstractStore","short_doc":"true in this class to identify an object as an instantiated Store, or subclass thereof. ...","html_type":"Boolean"},{"tagname":"property","name":"loading","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":130}],"doc":"<p><code>true</code> if the Store is currently loading via its Proxy.</p>\n","type":"Boolean","default":"false","properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-loading","owner":"Ext.data.AbstractStore","short_doc":"true if the Store is currently loading via its Proxy. ...","html_type":"Boolean"},{"tagname":"property","name":"mixinConfig","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/LocalStore.js","linenr":8}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":8,"type":"Object","default":"{id: 'localstore'}","readonly":null,"id":"property-mixinConfig","owner":"Ext.data.LocalStore","short_doc":" ...","html_type":"Object"},{"tagname":"property","name":"mixinId","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Factoryable.js","linenr":266}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":266,"type":"String","default":"'factoryable'","readonly":null,"id":"property-mixinId","owner":"Ext.mixin.Factoryable","overrides":[{"name":"mixinId","owner":"Ext.util.StoreHolder","link":"<a href=\"#!/api/Ext.util.StoreHolder-property-mixinId\" rel=\"Ext.util.StoreHolder-property-mixinId\" class=\"docClass\">Ext.util.StoreHolder.mixinId</a>"}],"short_doc":" ...","html_type":"String"},{"tagname":"property","name":"privates","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":255}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":255,"type":"Object","default":null,"readonly":null,"id":"property-privates","owner":"Ext.data.ChainedStore","params":null,"return":null,"throws":null,"overrides":[{"name":"privates","owner":"Ext.data.LocalStore","link":"<a href=\"#!/api/Ext.data.LocalStore-property-privates\" rel=\"Ext.data.LocalStore-property-privates\" class=\"docClass\">Ext.data.LocalStore.privates</a>"}],"html_type":"Object"},{"tagname":"property","name":"self","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1344}],"doc":"<p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n","type":"Ext.Class","default":null,"properties":null,"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-self","owner":"Ext.Base","short_doc":"Get the reference to the current class from which this object was instantiated. ...","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},{"tagname":"property","name":"updating","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":151}],"doc":"<p>A counter that is increased by <code>beginUpdate</code> and decreased by <code>endUpdate</code>. When\nthis transitions from 0 to 1 the <code><a href=\"#!/api/Ext.data.AbstractStore-event-beginupdate\" rel=\"Ext.data.AbstractStore-event-beginupdate\" class=\"docClass\">beginupdate</a></code> event is\nfired. When it transitions back from 1 to 0 the <code><a href=\"#!/api/Ext.data.AbstractStore-event-endupdate\" rel=\"Ext.data.AbstractStore-event-endupdate\" class=\"docClass\">endupdate</a></code>\nevent is fired.</p>\n","type":"Number","default":"0","properties":null,"readonly":true,"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-updating","owner":"Ext.data.AbstractStore","short_doc":"A counter that is increased by beginUpdate and decreased by endUpdate. ...","html_type":"Number"},{"tagname":"property","name":"$onExtended","autodetected":{"inheritdoc":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":370}],"doc":"\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"type":"Array","default":"[]","readonly":null,"id":"static-property-S-onExtended","owner":"Ext.Base","short_doc":" ...","html_type":"Array"},{"tagname":"method","name":"constructor","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":33}],"doc":"<p>documented above</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":33,"params":[],"chainable":false,"fires":[],"method_calls":["callParent","getData"],"id":"method-constructor","owner":"Ext.data.ChainedStore","return":{"type":"Ext.data.ChainedStore","doc":"\n","html_type":"<a href=\"#!/api/Ext.data.ChainedStore\" rel=\"Ext.data.ChainedStore\" class=\"docClass\">Ext.data.ChainedStore</a>"},"overrides":[{"name":"constructor","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-constructor\" rel=\"Ext.data.AbstractStore-method-constructor\" class=\"docClass\">Ext.data.AbstractStore.constructor</a>"}],"short_doc":"documented above ..."},{"tagname":"method","name":"_addDeclaredListeners","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":400}],"doc":"<p>Adds declarative listeners as nested arrays of listener objects.</p>\n","private":true,"params":[{"tagname":"params","type":"Array","name":"listeners","doc":"\n","html_type":"Array"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if any listeners were added</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["addListener"],"id":"method-_addDeclaredListeners","owner":"Ext.mixin.Observable","short_doc":"Adds declarative listeners as nested arrays of listener objects. ..."},{"tagname":"method","name":"add","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":268}],"doc":"<p>Adds Model instance to the Store. This method accepts either:</p>\n\n<ul>\n<li>An array of Model instances or Model configuration objects.</li>\n<li>Any number of Model instance or Model configuration object arguments.</li>\n</ul>\n\n\n<p>The new Model instances will be added at the end of the existing collection.</p>\n\n<p>Sample usage:</p>\n\n<pre><code>myStore.add({some: 'data'}, {some: 'other data'});\n</code></pre>\n\n<p>Note that if this Store is sorted, the new Model instances will be inserted\nat the correct point in the Store to maintain the sort order.</p>\n","inheritdoc":null,"params":[{"tagname":"params","type":"Ext.data.Model[]/Ext.data.Model.../Object[]/Object...","name":"model","doc":"<p>An array of Model instances\nor Model configuration objects, or variable number of Model instance or config arguments.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]/<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>.../Object[]/Object..."}],"id":"method-add","owner":"Ext.data.ChainedStore","return":{"type":"Ext.data.Model[]","name":"return","doc":"<p>The model instances that were added</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},"throws":null,"type":null,"overrides":[{"name":"add","owner":"Ext.data.LocalStore","link":"<a href=\"#!/api/Ext.data.LocalStore-method-add\" rel=\"Ext.data.LocalStore-method-add\" class=\"docClass\">Ext.data.LocalStore.add</a>"}],"short_doc":"Adds Model instance to the Store. ..."},{"tagname":"method","name":"addAfterListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1505}],"doc":"<p>Appends an after-event handler.</p>\n\n<p>Same as <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> with <code>order</code> set to <code>'after'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event to listen for.</p>\n\n","html_type":"String/String[]/Object"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The method the event invokes.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope for <code>fn</code>.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>An object containing handler configuration.</p>\n\n","html_type":"Object"}],"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> with the <code>priority</code> option instead.</p>\n","version":"5.1"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["addListener"],"id":"method-addAfterListener","owner":"Ext.mixin.Observable","short_doc":"Appends an after-event handler. ..."},{"tagname":"method","name":"addBeforeListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1490}],"doc":"<p>Appends a before-event handler.  Returning <code>false</code> from the handler will stop the event.</p>\n\n<p>Same as <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> with <code>order</code> set to <code>'before'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event to listen for.</p>\n\n","html_type":"String/String[]/Object"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The method the event invokes.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope for <code>fn</code>.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>An object containing handler configuration.</p>\n\n","html_type":"Object"}],"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> with the <code>priority</code> option instead.</p>\n","version":"5.1"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["addListener"],"id":"method-addBeforeListener","owner":"Ext.mixin.Observable","short_doc":"Appends a before-event handler. ..."},{"tagname":"method","name":"addDeprecations","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":115}],"doc":"<p>This method applies a versioned, deprecation declaration to this class. This\nis typically called by the <code>deprecated</code> config.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"deprecations","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-addDeprecations","owner":"Ext.Base","short_doc":"This method applies a versioned, deprecation declaration to this class. ..."},{"tagname":"method","name":"addFieldTransform","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":658}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":658,"params":[{"name":"sorter","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["getModel"],"id":"method-addFieldTransform","owner":"Ext.data.AbstractStore","short_doc":" ..."},{"tagname":"method","name":"addFilter","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":586}],"doc":"<p>Adds a new Filter to this Store's <a href=\"#!/api/Ext.data.AbstractStore-cfg-filters\" rel=\"Ext.data.AbstractStore-cfg-filters\" class=\"docClass\">filter set</a> and\nby default, applies the updated filter set to the Store's unfiltered dataset.</p>\n","params":[{"tagname":"params","type":"Object[]/Ext.util.Filter[]","name":"filters","doc":"<p>The set of filters to add to the current <a href=\"#!/api/Ext.data.AbstractStore-cfg-filters\" rel=\"Ext.data.AbstractStore-cfg-filters\" class=\"docClass\">filter set</a>.</p>\n","html_type":"Object[]/<a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a>[]"},{"tagname":"params","type":"Boolean","name":"suppressEvent","optional":true,"doc":"<p>If <code>true</code> the filter is cleared silently.</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getFilters"],"id":"method-addFilter","owner":"Ext.data.AbstractStore","short_doc":"Adds a new Filter to this Store's filter set and\nby default, applies the updated filter set to the Store's unfiltered..."},{"tagname":"method","name":"addListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":698}],"doc":"<p>The <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> method is shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a>.</p>\n\n<p>Appends an event handler to this object.  For example:</p>\n\n<pre><code>myGridPanel.on(\"itemclick\", this.onItemClick, this);\n</code></pre>\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple events. For example:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: this.onCellClick,\n    select: this.onSelect,\n    viewready: this.onViewReady,\n    scope: this // Important. Ensure \"this\" is correct during handler execution\n});\n</code></pre>\n\n<p>One can also specify options for each event handler separately:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: this.onCellClick, scope: this, single: true},\n    viewready: {fn: panel.onViewReady, scope: panel}\n});\n</code></pre>\n\n<p><em>Names</em> of methods in a specified scope may also be used:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: 'onCellClick', scope: this, single: true},\n    viewready: {fn: 'onViewReady', scope: panel}\n});\n</code></pre>\n","params":[{"tagname":"params","type":"String/Object","name":"eventName","doc":"<p>The name of the event to listen for.\nMay also be an object who's property names are event names.</p>\n\n","html_type":"String/Object"},{"tagname":"params","type":"Function/String","name":"fn","optional":true,"doc":"<p>The method the event invokes or the <em>name</em> of\nthe method within the specified <code>scope</code>.  Will be called with arguments\ngiven to <a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">Ext.util.Observable.fireEvent</a> plus the <code>options</code> parameter described\nbelow.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>An object containing handler configuration.</p>\n\n\n\n\n<p><strong>Note:</strong> The options object will also be passed as the last argument to every\nevent handler.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n","properties":[{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted,\n  defaults to the object which fired the event.</strong></p>\n\n","html_type":"Object"},{"tagname":"params","type":"Number","name":"delay","doc":"<p>The number of milliseconds to delay the invocation of the handler after the event\n  fires.</p>\n\n","html_type":"Number"},{"tagname":"params","type":"Boolean","name":"single","doc":"<p>True to add a handler to handle just the next firing of the event, and then remove\n  itself.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Number","name":"buffer","doc":"<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"onFrame","doc":"<p>Causes the handler to be scheduled to run at the next\n  <a href=\"#!/api/Ext.Function-method-requestAnimationFrame\" rel=\"Ext.Function-method-requestAnimationFrame\" class=\"docClass\">animation frame event</a>. If the\n  event fires again before that time, the handler is not rescheduled - the handler\n  will only be called once when the next animation frame is fired, with the last set\n  of arguments passed.</p>\n\n","html_type":"Number"},{"tagname":"params","type":"Ext.util.Observable","name":"target","doc":"<p>Only call the handler if the event was fired on the target Observable, <em>not</em> if the\n  event was bubbled up from a child Observable.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},{"tagname":"params","type":"String","name":"element","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</strong>\n  The name of a Component property which references an <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">element</a>\n  to add a listener to.</p>\n\n\n\n\n<p>  This option is useful during Component construction to add DOM event listeners to\n  elements of <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which will exist only after the\n  Component is rendered.</p>\n\n\n\n\n<p>  For example, to add a click listener to a Panel's body:</p>\n\n\n\n\n<pre><code>  var panel = new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n\n\n\n<p>In order to remove listeners attached using the element, you'll need to reference\nthe element itself as seen below.</p>\n\n\n\n\n<pre><code> panel.body.un(...)\n</code></pre>\n\n","html_type":"String"},{"tagname":"params","type":"String","name":"delegate","optional":true,"doc":"<p>A simple selector to filter the event target or look for a descendant of the target.</p>\n\n\n\n\n<p>  The \"delegate\" option is only available on <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instances (or\n  when attaching a listener to a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> via a Component using the\n  element option).</p>\n\n\n\n\n<p>  See the <em>delegate</em> example below.</p>\n\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"stopPropagation","optional":true,"doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopPropagation\" rel=\"Ext.event.Event-method-stopPropagation\" class=\"docClass\">stopPropagation</a> on the event object\n  before firing the handler.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"preventDefault","optional":true,"doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-preventDefault\" rel=\"Ext.event.Event-method-preventDefault\" class=\"docClass\">preventDefault</a> on the event object\n  before firing the handler.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"stopEvent","optional":true,"doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopEvent\" rel=\"Ext.event.Event-method-stopEvent\" class=\"docClass\">stopEvent</a> on the event object\n  before firing the handler.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Array","name":"args","optional":true,"doc":"<p>Optional arguments to pass to the handler function. Any additional arguments\n  passed to <a href=\"#!/api/Ext.mixin.Observable-method-fireEvent\" rel=\"Ext.mixin.Observable-method-fireEvent\" class=\"docClass\">fireEvent</a> will be appended to these arguments.</p>\n\n","html_type":"Array"},{"tagname":"params","type":"Boolean","name":"destroyable","default":"false","optional":true,"doc":"<p>When specified as <code>true</code>, the function returns a <code>destroyable</code> object. An object\n  which implements the <code>destroy</code> method which removes all listeners added in this call.\n  This syntax can be a helpful shortcut to using <a href=\"#!/api/Ext.mixin.Observable-method-un\" rel=\"Ext.mixin.Observable-method-un\" class=\"docClass\">un</a>; particularly when\n  removing multiple listeners.  <em>NOTE</em> - not compatible when using the <em>element</em>\n  option.  See <a href=\"#!/api/Ext.mixin.Observable-method-un\" rel=\"Ext.mixin.Observable-method-un\" class=\"docClass\">un</a> for the proper syntax for removing listeners added using the\n  <em>element</em> config.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Number","name":"priority","optional":true,"doc":"<p>An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handlers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.\n  A priority must be an integer to be valid.  Fractional values are reserved for\n  internal framework use.</p>\n\n","html_type":"Number"},{"tagname":"params","type":"String","name":"order","default":"'current'","optional":true,"doc":"<p>A legacy option that is provided for backward compatibility.\n  It is recommended to use the <code>priority</code> option instead.  Available options are:</p>\n\n\n\n\n<ul>\n<li><code>'before'</code>: equal to a priority of <code>100</code></li>\n<li><code>'current'</code>: equal to a priority of <code>0</code> or default priority</li>\n<li><code>'after'</code>: equal to a priority of <code>-100</code></li>\n</ul>\n\n\n\n","html_type":"String"}],"html_type":"Object"},{"tagname":"params","type":"String","name":"order","default":"'current'","optional":true,"doc":"<p>A shortcut for the <code>order</code> event option.  Provided for backward compatibility.\n  Please use the <code>priority</code> event option instead.</p>\n\n\n\n\n<p><strong>Combining Options</strong></p>\n\n\n\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n\n\n\n<p>A delayed, one-time listener.</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n\n\n\n<p><strong>Attaching multiple handlers in 1 call</strong></p>\n\n\n\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple handlers and handler configs.</p>\n\n\n\n\n<pre><code>grid.on({\n    itemclick: 'onItemClick',\n    itemcontextmenu: grid.onItemContextmenu,\n    destroy: {\n        fn: function () {\n            // function called within the 'altCmp' scope instead of grid\n        },\n        scope: altCmp // unique scope for the destroy handler\n    },\n    scope: grid       // default scope - provided for example clarity\n});\n</code></pre>\n\n\n\n\n<p><strong>Delegate</strong></p>\n\n\n\n\n<p>This is a configuration option that you can pass along when registering a handler for\nan event to assist with event delegation. By setting this configuration option\nto a simple selector, the target element will be filtered to look for a\ndescendant of the target. For example:</p>\n\n\n\n\n<pre><code>var panel = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n    xtype: 'panel',\n    renderTo: document.body,\n    title: 'Delegate Handler Example',\n    frame: true,\n    height: 220,\n    width: 220,\n    html: '&lt;h1 class=\"myTitle\"&gt;BODY TITLE&lt;/h1&gt;Body content'\n});\n\n// The click handler will only be called when the click occurs on the\n// delegate: h1.myTitle (\"h1\" tag with class \"myTitle\")\npanel.on({\n    click: function (e) {\n        console.log(e.getTarget().innerHTML);\n    },\n    element: 'body',\n    delegate: 'h1.myTitle'\n });\n</code></pre>\n\n","html_type":"String"}],"return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes\n all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.on({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["doAddListener"],"id":"method-addListener","owner":"Ext.mixin.Observable","short_doc":"The on method is shorthand for addListener. ..."},{"tagname":"method","name":"addManagedListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":419}],"doc":"<p>The addManagedListener method is used when some object (call it \"A\") is listening\nto an event on another observable object (\"B\") and you want to remove that listener\nfrom \"B\" when \"A\" is destroyed. This is not an issue when \"B\" is destroyed because\nall of its listeners will be removed at that time.</p>\n\n<p>Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Foo', {\n    extend: '<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>',\n\n    initComponent: function () {\n        this.addManagedListener(MyApp.SomeGlobalSharedMenu, 'show', this.doSomething);\n        this.callParent();\n    }\n});\n</code></pre>\n\n<p>As you can see, when an instance of Foo is destroyed, it ensures that the 'show'\nlistener on the menu (<code>MyApp.SomeGlobalSharedMenu</code>) is also removed.</p>\n\n<p>As of version 5.1 it is no longer necessary to use this method in most cases because\nlisteners are automatically managed if the scope object provided to <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a>\nis an Observable instance. However, if the observable instance and scope are not the\nsame object you still need to use <code>mon</code> or <code>addManagedListener</code> if you want the listener\nto be managed.</p>\n","params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item to which to add a listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","html_type":"Object/String"},{"tagname":"params","type":"Function/String","name":"fn","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event\nname, this is the handler function or the name of a method on the specified\n<code>scope</code>.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n","html_type":"Object"}],"return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners = myButton.mon({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["addManagedListener"],"id":"method-addManagedListener","owner":"Ext.mixin.Observable","short_doc":"The addManagedListener method is used when some object (call it \"A\") is listening\nto an event on another observable o..."},{"tagname":"method","name":"addObserver","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/LocalStore.js","linenr":479}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":479,"params":[{"name":"observer","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-addObserver","owner":"Ext.data.LocalStore","short_doc":" ..."},{"tagname":"method","name":"aggregate","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":353}],"doc":"<p>Runs the aggregate function for all the records in the store.</p>\n\n<p>When store is filtered, only items within the filter are aggregated.</p>\n","inheritdoc":null,"params":[{"tagname":"params","type":"Function","name":"fn","doc":"<p>The function to execute. The function is called with a single parameter,\nan array of records for that group.</p>\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope to execute the function in. Defaults to the store.</p>\n","html_type":"Object"},{"tagname":"params","type":"Boolean","name":"grouped","optional":true,"doc":"<p>True to perform the operation for each group\nin the store. The value returned will be an object literal with the key being the group\nname and the group average being the value. The grouped parameter is only honored if\nthe store has a groupField.</p>\n","html_type":"Boolean"},{"tagname":"params","type":"String","name":"field","doc":"<p>The field to get the value from</p>\n","html_type":"String"}],"id":"method-aggregate","owner":"Ext.data.ChainedStore","return":{"type":"Object","name":"return","doc":"<p>An object literal with the group names and their appropriate values.</p>\n","properties":null,"html_type":"Object"},"throws":null,"type":null,"overrides":[{"name":"aggregate","owner":"Ext.data.LocalStore","link":"<a href=\"#!/api/Ext.data.LocalStore-method-aggregate\" rel=\"Ext.data.LocalStore-method-aggregate\" class=\"docClass\">Ext.data.LocalStore.aggregate</a>"}],"short_doc":"Runs the aggregate function for all the records in the store. ..."},{"tagname":"method","name":"applyExtraKeys","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/LocalStore.js","linenr":16}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":16,"params":[{"name":"extraKeys","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["getData"],"id":"method-applyExtraKeys","owner":"Ext.data.LocalStore","short_doc":" ..."},{"tagname":"method","name":"applyFilters","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":470}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":470,"params":[{"name":"filters","type":"Object","html_type":"Object"},{"name":"filtersCollection","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["createFiltersCollection","getRemoteFilter","onRemoteFilterSet"],"id":"method-applyFilters","owner":"Ext.data.AbstractStore","short_doc":" ..."},{"tagname":"method","name":"applyGrouper","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":1079}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1079,"params":[{"name":"grouper","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.data.AbstractStore-event-datachanged\" rel=\"Ext.data.AbstractStore-event-datachanged\" class=\"docClass\">datachanged</a>","groupchange","<a href=\"#!/api/Ext.data.AbstractStore-event-refresh\" rel=\"Ext.data.AbstractStore-event-refresh\" class=\"docClass\">refresh</a>"],"method_calls":["getData","group"],"id":"method-applyGrouper","owner":"Ext.data.AbstractStore","short_doc":" ..."},{"tagname":"method","name":"applySorters","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":501}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":501,"params":[{"name":"sorters","type":"Object","html_type":"Object"},{"name":"sortersCollection","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["createSortersCollection","getRemoteSort","onRemoteSortSet"],"id":"method-applySorters","owner":"Ext.data.AbstractStore","short_doc":" ..."},{"tagname":"method","name":"applySource","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":76}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":76,"params":[{"name":"source","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-applySource","owner":"Ext.data.ChainedStore","short_doc":" ..."},{"tagname":"method","name":"applyState","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":780}],"doc":"<p>Restores state to the passed state</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"state","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["getFilters","getSorters","setGrouper"],"id":"method-applyState","owner":"Ext.data.AbstractStore","short_doc":"Restores state to the passed state ..."},{"tagname":"method","name":"average","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":348}],"doc":"<p>Gets the average value in the store.</p>\n\n<p>When store is filtered, only items within the filter are aggregated.</p>\n","inheritdoc":null,"params":[{"tagname":"params","type":"String","name":"field","doc":"<p>The field in each record</p>\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"grouped","optional":true,"doc":"<p>True to perform the operation for each group\nin the store. The value returned will be an object literal with the key being the group\nname and the group average being the value. The grouped parameter is only honored if\nthe store has a groupField.</p>\n","html_type":"Boolean"}],"id":"method-average","owner":"Ext.data.ChainedStore","return":{"type":"Object","name":"return","doc":"<p>The average value, if no items exist, 0.</p>\n","properties":null,"html_type":"Object"},"throws":null,"type":null,"overrides":[{"name":"average","owner":"Ext.data.LocalStore","link":"<a href=\"#!/api/Ext.data.LocalStore-method-average\" rel=\"Ext.data.LocalStore-method-average\" class=\"docClass\">Ext.data.LocalStore.average</a>"}],"short_doc":"Gets the average value in the store. ..."},{"tagname":"method","name":"beginUpdate","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":678}],"doc":"<p>This method may be called to indicate the start of multiple changes to the store.</p>\n\n<p>Automatic synchronization as configured by the <a href=\"#!/api/Ext.data.ProxyStore-cfg-autoSync\" rel=\"Ext.data.ProxyStore-cfg-autoSync\" class=\"docClass\">autoSync</a> flag is deferred\nuntil the <a href=\"#!/api/Ext.data.AbstractStore-method-endUpdate\" rel=\"Ext.data.AbstractStore-method-endUpdate\" class=\"docClass\">endUpdate</a> method is called, so multiple mutations can be coalesced\ninto one synchronization operation.</p>\n\n<p>Internally this method increments a counter that is decremented by <code>endUpdate</code>. It\nis important, therefore, that if you call <code>beginUpdate</code> directly you match that\ncall with a call to <code>endUpdate</code> or you will prevent the collection from updating\nproperly.</p>\n\n<p>For example:</p>\n\n<pre><code> var store = <a href=\"#!/api/Ext.data.StoreManager-method-lookup\" rel=\"Ext.data.StoreManager-method-lookup\" class=\"docClass\">Ext.StoreManager.lookup</a>({\n     //...\n     autoSync: true\n });\n\n store.beginUpdate();\n\n record.set('fieldName', 'newValue');\n\n store.add(item);\n // ...\n\n store.insert(index, otherItem);\n //...\n\n // Interested parties will listen for the endupdate event\n store.endUpdate();\n</code></pre>\n","since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":["<a href=\"#!/api/Ext.data.AbstractStore-event-beginupdate\" rel=\"Ext.data.AbstractStore-event-beginupdate\" class=\"docClass\">beginupdate</a>"],"method_calls":["fireEvent"],"id":"method-beginUpdate","owner":"Ext.data.AbstractStore","short_doc":"This method may be called to indicate the start of multiple changes to the store. ..."},{"tagname":"method","name":"blockLoad","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":38}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":38,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-blockLoad","owner":"Ext.data.ChainedStore","short_doc":" ..."},{"tagname":"method","name":"callObservers","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/LocalStore.js","linenr":497}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":497,"params":[{"name":"action","type":"Object","html_type":"Object"},{"name":"args","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-callObservers","owner":"Ext.data.LocalStore","short_doc":" ..."},{"tagname":"method","name":"callOverridden","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1581}],"doc":"<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n","params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n","html_type":"Array/Arguments"}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the overridden method</p>\n","properties":null,"html_type":"Object"},"protected":true,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-callOverridden","owner":"Ext.Base","short_doc":"Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi..."},{"tagname":"method","name":"callParent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1143}],"doc":"<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10));     // alerts 10\n alert(My.Derived2.method(10)); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n","protected":true,"params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n","html_type":"Array/Arguments"}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the parent method</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-callParent","owner":"Ext.Base","short_doc":"Call the \"parent\" method of the current method. ..."},{"tagname":"method","name":"callSuper","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1258}],"doc":"<p>This method is used by an override to call the superclass method but bypass any\noverridden method. This is often done to \"patch\" a method that contains a bug\nbut for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function () {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     extend: 'Ext.some.Class',\n\n     method: function () {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>Ext.some.DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.patches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function () {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <code>callParent</code> to call the superclass <code>method</code> since\nthat would call the overridden method containing the bug. In other words, the\nabove patch would only produce \"Fixed\" then \"Good\" in the console log, whereas,\nusing <code>callParent</code> would produce \"Fixed\" then \"Bad\" then \"Good\".</p>\n","protected":true,"params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n","html_type":"Array/Arguments"}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the superclass method</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-callSuper","owner":"Ext.Base","short_doc":"This method is used by an override to call the superclass method but bypass any\noverridden method. ..."},{"tagname":"method","name":"captureArgs","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":120}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"o","type":"Object","html_type":"Object"},{"name":"fn","type":"Object","html_type":"Object"},{"name":"scope","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-captureArgs","owner":"Ext.mixin.Observable","short_doc":" ..."},{"tagname":"method","name":"clearFilter","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":619}],"doc":"<p>Reverts to a view of the Record cache with no filtering applied.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"suppressEvent","optional":true,"doc":"<p>If <code>true</code> the filter is cleared silently.</p>\n\n<p>For a locally filtered Store, this means that the filter collection is cleared without firing the\n<a href=\"#!/api/Ext.data.AbstractStore-event-datachanged\" rel=\"Ext.data.AbstractStore-event-datachanged\" class=\"docClass\">datachanged</a> event.</p>\n\n<p>For a remotely filtered Store, this means that the filter collection is cleared, but the store\nis not reloaded from the server.</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getFilters"],"id":"method-clearFilter","owner":"Ext.data.AbstractStore","short_doc":"Reverts to a view of the Record cache with no filtering applied. ..."},{"tagname":"method","name":"clearGrouping","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":1054}],"doc":"<p>Clear the store grouping</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":["<a href=\"#!/api/Ext.data.AbstractStore-event-datachanged\" rel=\"Ext.data.AbstractStore-event-datachanged\" class=\"docClass\">datachanged</a>","groupchange","<a href=\"#!/api/Ext.data.AbstractStore-event-refresh\" rel=\"Ext.data.AbstractStore-event-refresh\" class=\"docClass\">refresh</a>"],"method_calls":["group"],"id":"method-clearGrouping","owner":"Ext.data.AbstractStore","short_doc":"Clear the store grouping ..."},{"tagname":"method","name":"clearListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1062}],"doc":"<p>Removes all listeners for this object including the managed listeners</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["clearManagedListeners"],"id":"method-clearListeners","owner":"Ext.mixin.Observable","short_doc":"Removes all listeners for this object including the managed listeners ..."},{"tagname":"method","name":"clearManagedListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1096}],"doc":"<p>Removes all managed listeners for this object.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["removeManagedListenerItem"],"id":"method-clearManagedListeners","owner":"Ext.mixin.Observable","short_doc":"Removes all managed listeners for this object. ..."},{"tagname":"method","name":"collect","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":278}],"doc":"<p>Collects unique values for a particular dataIndex from this store.</p>\n","inheritdoc":null,"params":[{"tagname":"params","type":"String","name":"dataIndex","doc":"<p>The property to collect</p>\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"allowNull","optional":true,"doc":"<p>Pass true to allow null, undefined or empty string values</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"bypassFilter","optional":true,"doc":"<p>Pass true to collect from all records, even ones which are filtered.</p>\n","html_type":"Boolean"}],"id":"method-collect","owner":"Ext.data.ChainedStore","return":{"type":"Object[]","name":"return","doc":"<p>An array of the unique values</p>\n","properties":null,"html_type":"Object[]"},"throws":null,"type":null,"overrides":[{"name":"collect","owner":"Ext.data.LocalStore","link":"<a href=\"#!/api/Ext.data.LocalStore-method-collect\" rel=\"Ext.data.LocalStore-method-collect\" class=\"docClass\">Ext.data.LocalStore.collect</a>"}],"short_doc":"Collects unique values for a particular dataIndex from this store. ..."},{"tagname":"method","name":"constructDataCollection","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/LocalStore.js","linenr":54}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":54,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-constructDataCollection","owner":"Ext.data.LocalStore","short_doc":" ..."},{"tagname":"method","name":"contains","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/LocalStore.js","linenr":107}],"doc":"<p>Inherit docs</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[{"name":"record","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["indexOf"],"id":"method-contains","owner":"Ext.data.LocalStore","overrides":[{"name":"contains","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-contains\" rel=\"Ext.data.AbstractStore-method-contains\" class=\"docClass\">Ext.data.AbstractStore.contains</a>"}],"short_doc":"Inherit docs ..."},{"tagname":"method","name":"count","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":333}],"doc":"<p>Gets the count of items in the store.</p>\n\n<p>When store is filtered, only items within the filter are counted.</p>\n","inheritdoc":null,"params":[{"tagname":"params","type":"Boolean","name":"grouped","optional":true,"doc":"<p>True to perform the operation for each group\nin the store. The value returned will be an object literal with the key being the group\nname and the count for each group being the value. The grouped parameter is only honored if\nthe store has a groupField.</p>\n","html_type":"Boolean"}],"id":"method-count","owner":"Ext.data.ChainedStore","return":{"type":"Number","name":"return","doc":"<p>the count</p>\n","properties":null,"html_type":"Number"},"throws":null,"type":null,"overrides":[{"name":"count","owner":"Ext.data.LocalStore","link":"<a href=\"#!/api/Ext.data.LocalStore-method-count\" rel=\"Ext.data.LocalStore-method-count\" class=\"docClass\">Ext.data.LocalStore.count</a>"}],"short_doc":"Gets the count of items in the store. ..."},{"tagname":"method","name":"createFiltersCollection","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/LocalStore.js","linenr":77}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":77,"params":[],"chainable":false,"fires":[],"method_calls":["getData"],"id":"method-createFiltersCollection","owner":"Ext.data.LocalStore","short_doc":" ..."},{"tagname":"method","name":"createModel","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/LocalStore.js","linenr":60}],"doc":"<p>Converts a literal to a model, if it's not a model already</p>\n","private":true,"params":[{"tagname":"params","type":"Ext.data.Model/Object","name":"record","doc":"<p>The record to create</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>/Object"}],"return":{"type":"Ext.data.Model","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getModel","getSession"],"id":"method-createModel","owner":"Ext.data.LocalStore","short_doc":"Converts a literal to a model, if it's not a model already ..."},{"tagname":"method","name":"createRelayer","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1315}],"doc":"<p>Creates an event handling function which re-fires the event from this object as the passed event name.</p>\n","private":true,"params":[{"tagname":"params","type":"String","name":"newName","doc":"<p>The name under which to re-fire the passed parameters.</p>\n","html_type":"String"},{"tagname":"params","type":"Array","name":"beginEnd","optional":true,"doc":"<p>The caller can specify on which indices to slice.</p>\n","html_type":"Array"}],"return":{"type":"Function","name":"return","doc":"\n","properties":null,"html_type":"Function"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-createRelayer","owner":"Ext.mixin.Observable","short_doc":"Creates an event handling function which re-fires the event from this object as the passed event name. ..."},{"tagname":"method","name":"createSortersCollection","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/LocalStore.js","linenr":81}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":81,"params":[],"chainable":false,"fires":[],"method_calls":["getData"],"id":"method-createSortersCollection","owner":"Ext.data.LocalStore","short_doc":" ..."},{"tagname":"method","name":"destroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1562}],"doc":"<p>This method is called to cleanup an object and its resources. After calling\nthis method, the object should not be used any further.</p>\n","protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["unlink"],"id":"method-destroy","owner":"Ext.Base","overrides":[{"name":"destroy","owner":"Ext.util.ElementContainer","link":"<a href=\"#!/api/Ext.util.ElementContainer-method-destroy\" rel=\"Ext.util.ElementContainer-method-destroy\" class=\"docClass\">Ext.util.ElementContainer.destroy</a>"},{"name":"destroy","owner":"Ext.state.Stateful","link":"<a href=\"#!/api/Ext.state.Stateful-method-destroy\" rel=\"Ext.state.Stateful-method-destroy\" class=\"docClass\">Ext.state.Stateful.destroy</a>"},{"name":"destroy","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-method-destroy\" rel=\"Ext.Component-method-destroy\" class=\"docClass\">Ext.Component.destroy</a>"},{"name":"destroy","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-destroy\" rel=\"Ext.data.AbstractStore-method-destroy\" class=\"docClass\">Ext.data.AbstractStore.destroy</a>"},{"name":"destroy","owner":"Ext.plugin.Abstract","link":"<a href=\"#!/api/Ext.plugin.Abstract-method-destroy\" rel=\"Ext.plugin.Abstract-method-destroy\" class=\"docClass\">Ext.plugin.Abstract.destroy</a>"},{"name":"destroy","owner":"Ext.app.BaseController","link":"<a href=\"#!/api/Ext.app.BaseController-method-destroy\" rel=\"Ext.app.BaseController-method-destroy\" class=\"docClass\">Ext.app.BaseController.destroy</a>"}],"short_doc":"This method is called to cleanup an object and its resources. ..."},{"tagname":"method","name":"doFireEvent","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":652}],"doc":"<p>Continue to fire event.</p>\n","private":true,"params":[{"tagname":"params","type":"String","name":"eventName","doc":"\n","html_type":"String"},{"tagname":"params","type":"Array","name":"args","doc":"\n","html_type":"Array"},{"tagname":"params","type":"Boolean","name":"bubbles","doc":"\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getBubbleParent"],"id":"method-doFireEvent","owner":"Ext.mixin.Observable","short_doc":"Continue to fire event. ..."},{"tagname":"method","name":"each","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":273}],"doc":"<p>Calls the specified function for each <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">record</a> in the store.</p>\n\n<p>When store is filtered, only loops over the filtered records.</p>\n","inheritdoc":null,"params":[{"tagname":"params","type":"Function","name":"fn","doc":"<p>The function to call. The <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Record</a> is passed as the first parameter.\nReturning <code>false</code> aborts and exits the iteration.</p>\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (this reference) in which the function is executed.\nDefaults to the current <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">record</a> in the iteration.</p>\n","html_type":"Object"}],"id":"method-each","owner":"Ext.data.ChainedStore","return":null,"throws":null,"type":null,"overrides":[{"name":"each","owner":"Ext.data.LocalStore","link":"<a href=\"#!/api/Ext.data.LocalStore-method-each\" rel=\"Ext.data.LocalStore-method-each\" class=\"docClass\">Ext.data.LocalStore.each</a>"}],"short_doc":"Calls the specified function for each record in the store. ..."},{"tagname":"method","name":"enableBubble","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1329}],"doc":"<p>Enables events fired by this Observable to bubble up an owner hierarchy by calling <code>this.getBubbleTarget()</code> if\npresent. There is no implementation in the Observable base class.</p>\n\n<p>This is commonly used by Ext.Components to bubble events to owner Containers.\nSee <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>. The default implementation in <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> returns the\nComponent's immediate owner. But if a known target is required, this can be overridden to access the\nrequired target more quickly.</p>\n\n<p>Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.overrides.form.field.Base', {\n    override: '<a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a>',\n\n    //  Add functionality to Field's initComponent to enable the change event to bubble\n    initComponent: function () {\n        this.callParent();\n        this.enableBubble('change');\n    }\n});\n\nvar myForm = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.form.Panel\" rel=\"Ext.form.Panel\" class=\"docClass\">Ext.form.Panel</a>', {\n    title: 'User Details',\n    items: [{\n        ...\n    }],\n    listeners: {\n        change: function() {\n            // Title goes red if form has been modified.\n            myForm.header.setStyle('color', 'red');\n        }\n    }\n});\n</code></pre>\n","params":[{"tagname":"params","type":"String/String[]","name":"eventNames","doc":"<p>The event name to bubble, or an Array of event names.</p>\n","html_type":"String/String[]"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["_initEvent"],"id":"method-enableBubble","owner":"Ext.mixin.Observable","short_doc":"Enables events fired by this Observable to bubble up an owner hierarchy by calling this.getBubbleTarget() if\npresent. ..."},{"tagname":"method","name":"endUpdate","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":718}],"doc":"<p>This method is called after modifications are complete on a store. For details\nsee <code><a href=\"#!/api/Ext.data.AbstractStore-method-beginUpdate\" rel=\"Ext.data.AbstractStore-method-beginUpdate\" class=\"docClass\">beginUpdate</a></code>.</p>\n","since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":["beforesync","<a href=\"#!/api/Ext.data.AbstractStore-event-endupdate\" rel=\"Ext.data.AbstractStore-event-endupdate\" class=\"docClass\">endupdate</a>"],"method_calls":["fireEvent","onEndUpdate"],"id":"method-endUpdate","owner":"Ext.data.AbstractStore","short_doc":"This method is called after modifications are complete on a store. ..."},{"tagname":"method","name":"filter","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":518}],"doc":"<p>Filters the data in the Store by one or more fields. Example usage:</p>\n\n<pre><code>//filter with a single field\nmyStore.filter('firstName', 'Don');\n\n//filtering with multiple filters\nmyStore.filter([\n    {\n        property : 'firstName',\n        value    : 'Don'\n    },\n    {\n        property : 'lastName',\n        direction: 'Griffin'\n    }\n]);\n</code></pre>\n\n<p>Internally, Store converts the passed arguments into an array of <a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a> instances, and delegates\nthe actual filtering to its internal <a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a>.</p>\n","params":[{"tagname":"params","type":"String/Ext.util.Filter[]","name":"filters","optional":true,"doc":"<p>Either a string name of one of the fields in this Store's configured\n<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Model</a>, or an array of filter configurations.</p>\n","html_type":"String/<a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a>[]"},{"tagname":"params","type":"String","name":"value","doc":"<p>The property value by which to filter.</p>\n","html_type":"String"}],"return":{"type":"Ext.util.Filter[]","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a>[]"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getFilters"],"id":"method-filter","owner":"Ext.data.AbstractStore","short_doc":"Filters the data in the Store by one or more fields. ..."},{"tagname":"method","name":"filterBy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":598}],"doc":"<p>Filters by a function. The specified function will be called for each\nRecord in this Store. If the function returns <code>true</code> the Record is included,\notherwise it is filtered out.</p>\n\n<p>When store is filtered, most of the methods for accessing store data will be working only\nwithin the set of filtered records. The notable exception is <a href=\"#!/api/Ext.data.AbstractStore-method-getById\" rel=\"Ext.data.AbstractStore-method-getById\" class=\"docClass\">getById</a>.</p>\n","params":[{"tagname":"params","type":"Function","name":"fn","doc":"<p>The function to be called. It will be passed the following parameters:</p>\n","properties":[{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The record to test for filtering. Access field values\n using <a href=\"#!/api/Ext.data.Model-method-get\" rel=\"Ext.data.Model-method-get\" class=\"docClass\">Ext.data.Model.get</a>.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"}],"html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (this reference) in which the function is executed.\nDefaults to this Store.</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getFilters"],"id":"method-filterBy","owner":"Ext.data.AbstractStore","short_doc":"Filters by a function. ..."},{"tagname":"method","name":"find","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":313}],"doc":"<p>Finds the index of the first matching Record in this store by a specific field value.</p>\n\n<p>When store is filtered, finds records only within filter.</p>\n\n<p>**IMPORTANT</p>\n\n<p>If this store is <a href=\"#!/api/Ext.data.BufferedStore\" rel=\"Ext.data.BufferedStore\" class=\"docClass\">Buffered</a>, this can ONLY find records which happen to be cached in the page cache.\nThis will be parts of the dataset around the currently visible zone, or recently visited zones if the pages\nhave not yet been purged from the cache.**</p>\n","params":[{"tagname":"params","type":"String","name":"property","doc":"<p>The name of the Record field to test.</p>\n","html_type":"String"},{"tagname":"params","type":"String/RegExp","name":"value","doc":"<p>Either a string that the field value\nshould begin with, or a RegExp to test against the field.</p>\n","html_type":"String/RegExp"},{"tagname":"params","type":"Number","name":"startIndex","default":"0","optional":true,"doc":"<p>The index to start searching at</p>\n","html_type":"Number"},{"tagname":"params","type":"Boolean","name":"anyMatch","default":"false","optional":true,"doc":"<p>True to match any part of the string, not just the\nbeginning.</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"caseSensitive","default":"false","optional":true,"doc":"<p>True for case sensitive comparison</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"exactMatch","default":"false","optional":true,"doc":"<p>True to force exact match (^ and $ characters\nadded to the regex). Ignored if <code>anyMatch</code> is <code>true</code>.</p>\n","html_type":"Boolean"}],"return":{"type":"Number","name":"return","doc":"<p>The matched index or -1</p>\n","properties":null,"html_type":"Number"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getData"],"id":"method-find","owner":"Ext.data.AbstractStore","short_doc":"Finds the index of the first matching Record in this store by a specific field value. ..."},{"tagname":"method","name":"findBy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":399}],"doc":"<p>Find the index of the first matching Record in this Store by a function.\nIf the function returns <code>true</code> it is considered a match.</p>\n\n<p>When store is filtered, finds records only within filter.</p>\n\n<p>**IMPORTANT</p>\n\n<p>If this store is <a href=\"#!/api/Ext.data.BufferedStore\" rel=\"Ext.data.BufferedStore\" class=\"docClass\">Buffered</a>, this can ONLY find records which happen to be cached in the page cache.\nThis will be parts of the dataset around the currently visible zone, or recently visited zones if the pages\nhave not yet been purged from the cache.**</p>\n","params":[{"tagname":"params","type":"Function","name":"fn","doc":"<p>The function to be called. It will be passed the following parameters:</p>\n","properties":[{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The record to test for filtering. Access field values\n using <a href=\"#!/api/Ext.data.Model-method-get\" rel=\"Ext.data.Model-method-get\" class=\"docClass\">Ext.data.Model.get</a>.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},{"tagname":"params","type":"Object","name":"id","doc":"<p>The ID of the Record passed.</p>\n","html_type":"Object"}],"html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (this reference) in which the function is executed.\nDefaults to this Store.</p>\n","html_type":"Object"},{"tagname":"params","type":"Number","name":"startIndex","default":"0","optional":true,"doc":"<p>The index to start searching at</p>\n","html_type":"Number"}],"return":{"type":"Number","name":"return","doc":"<p>The matched index or -1</p>\n","properties":null,"html_type":"Number"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getData"],"id":"method-findBy","owner":"Ext.data.AbstractStore","short_doc":"Find the index of the first matching Record in this Store by a function. ..."},{"tagname":"method","name":"findExact","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":377}],"doc":"<p>Finds the index of the first matching Record in this store by a specific field value.</p>\n\n<p>When store is filtered, finds records only within filter.</p>\n\n<p>**IMPORTANT</p>\n\n<p>If this store is <a href=\"#!/api/Ext.data.BufferedStore\" rel=\"Ext.data.BufferedStore\" class=\"docClass\">Buffered</a>, this can ONLY find records which happen to be cached in the page cache.\nThis will be parts of the dataset around the currently visible zone, or recently visited zones if the pages\nhave not yet been purged from the cache.**</p>\n","params":[{"tagname":"params","type":"String","name":"fieldName","doc":"<p>The name of the Record field to test.</p>\n","html_type":"String"},{"tagname":"params","type":"Object","name":"value","doc":"<p>The value to match the field against.</p>\n","html_type":"Object"},{"tagname":"params","type":"Number","name":"startIndex","default":"0","optional":true,"doc":"<p>The index to start searching at</p>\n","html_type":"Number"}],"return":{"type":"Number","name":"return","doc":"<p>The matched index or -1</p>\n","properties":null,"html_type":"Number"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getData"],"id":"method-findExact","owner":"Ext.data.AbstractStore","short_doc":"Finds the index of the first matching Record in this store by a specific field value. ..."},{"tagname":"method","name":"findRecord","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":349}],"doc":"<p>Finds the first matching Record in this store by a specific field value.</p>\n\n<p>When store is filtered, finds records only within filter.</p>\n\n<p>**IMPORTANT</p>\n\n<p>If this store is <a href=\"#!/api/Ext.data.BufferedStore\" rel=\"Ext.data.BufferedStore\" class=\"docClass\">Buffered</a>, this can ONLY find records which happen to be cached in the page cache.\nThis will be parts of the dataset around the currently visible zone, or recently visited zones if the pages\nhave not yet been purged from the cache.**</p>\n","params":[{"tagname":"params","type":"String","name":"fieldName","doc":"<p>The name of the Record field to test.</p>\n","html_type":"String"},{"tagname":"params","type":"String/RegExp","name":"value","doc":"<p>Either a string that the field value\nshould begin with, or a RegExp to test against the field.</p>\n","html_type":"String/RegExp"},{"tagname":"params","type":"Number","name":"startIndex","default":"0","optional":true,"doc":"<p>The index to start searching at</p>\n","html_type":"Number"},{"tagname":"params","type":"Boolean","name":"anyMatch","default":"false","optional":true,"doc":"<p>True to match any part of the string, not just the\nbeginning.</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"caseSensitive","default":"false","optional":true,"doc":"<p>True for case sensitive comparison</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"exactMatch","default":"false","optional":true,"doc":"<p>True to force exact match (^ and $ characters\nadded to the regex). Ignored if <code>anyMatch</code> is <code>true</code>.</p>\n","html_type":"Boolean"}],"return":{"type":"Ext.data.Model","name":"return","doc":"<p>The matched record or null</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getAt"],"id":"method-findRecord","owner":"Ext.data.AbstractStore","short_doc":"Finds the first matching Record in this store by a specific field value. ..."},{"tagname":"method","name":"fireAction","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":614}],"doc":"<p>Fires the specified event with the passed parameters and executes a function (action).\nBy default, the action function will be executed after any \"before\" event handlers\n(as specified using the <code>order</code> option of <code><a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a></code>), but before any\nother handlers are fired.  This gives the \"before\" handlers an opportunity to\ncancel the event by returning <code>false</code>, and prevent the action function from being\ncalled.</p>\n\n<p>The action can also be configured to run after normal handlers, but before any \"after\"\nhandlers (as specified using the <code>order</code> event option) by passing <code>'after'</code>\nas the <code>order</code> parameter.  This configuration gives any event handlers except\nfor \"after\" handlers the opportunity to cancel the event and prevent the action\nfunction from being called.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n","html_type":"String"},{"tagname":"params","type":"Array","name":"args","doc":"<p>Arguments to pass to handlers and to the action function.</p>\n","html_type":"Array"},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The action function.</p>\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>Event options for the action function.  Accepts any\nof the options of <code><a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a></code></p>\n","html_type":"Object"},{"tagname":"params","type":"String","name":"order","default":"'before'","optional":true,"doc":"<p>The order to call the action function relative\ntoo the event handlers (<code>'before'</code> or <code>'after'</code>).  Note that this option is\nsimply used to sort the action function relative to the event handlers by \"priority\".\nAn order of <code>'before'</code> is equivalent to a priority of <code>99.5</code>, while an order of\n<code>'after'</code> is equivalent to a priority of <code>-99.5</code>.  See the <code>priority</code> option\nof <code><a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a></code> for more details.</p>\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["doAddListener","fireEventArgs"],"id":"method-fireAction","owner":"Ext.mixin.Observable","short_doc":"Fires the specified event with the passed parameters and executes a function (action). ..."},{"tagname":"method","name":"fireEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":550}],"doc":"<p>Fires the specified event with the passed parameters (minus the event name, plus the <code>options</code> object passed\nto <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a>).</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy (See <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by\ncalling <a href=\"#!/api/Ext.mixin.Observable-method-enableBubble\" rel=\"Ext.mixin.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n","html_type":"String"},{"tagname":"params","type":"Object...","name":"args","doc":"<p>Variable number of parameters are passed to handlers.</p>\n","html_type":"Object..."}],"return":{"type":"Boolean","name":"return","doc":"<p>returns false if any of the handlers return false otherwise it returns true.</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["fireEventArgs"],"id":"method-fireEvent","owner":"Ext.mixin.Observable","short_doc":"Fires the specified event with the passed parameters (minus the event name, plus the options object passed\nto addList..."},{"tagname":"method","name":"fireEventArgs","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":588}],"doc":"<p>Fires the specified event with the passed parameter list.</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy (See <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by\ncalling <a href=\"#!/api/Ext.mixin.Observable-method-enableBubble\" rel=\"Ext.mixin.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n","html_type":"String"},{"tagname":"params","type":"Object[]","name":"args","doc":"<p>An array of parameters which are passed to handlers.</p>\n","html_type":"Object[]"}],"return":{"type":"Boolean","name":"return","doc":"<p>returns false if any of the handlers return false otherwise it returns true.</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["doFireEvent"],"id":"method-fireEventArgs","owner":"Ext.mixin.Observable","short_doc":"Fires the specified event with the passed parameter list. ..."},{"tagname":"method","name":"fireGroupChange","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":1050}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1050,"params":[],"chainable":false,"fires":["groupchange"],"method_calls":["fireEvent","getGrouper"],"id":"method-fireGroupChange","owner":"Ext.data.AbstractStore","short_doc":" ..."},{"tagname":"method","name":"first","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":318}],"doc":"<p>Convenience function for getting the first model instance in the store.</p>\n\n<p>When store is filtered, will return first item within the filter.</p>\n","inheritdoc":null,"params":[{"tagname":"params","type":"Boolean","name":"grouped","optional":true,"doc":"<p>True to perform the operation for each group\nin the store. The value returned will be an object literal with the key being the group\nname and the first record being the value. The grouped parameter is only honored if\nthe store has a groupField.</p>\n","html_type":"Boolean"}],"id":"method-first","owner":"Ext.data.ChainedStore","return":{"type":"Ext.data.Model/undefined","name":"return","doc":"<p>The first model instance in the store, or undefined</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>/undefined"},"throws":null,"type":null,"overrides":[{"name":"first","owner":"Ext.data.LocalStore","link":"<a href=\"#!/api/Ext.data.LocalStore-method-first\" rel=\"Ext.data.LocalStore-method-first\" class=\"docClass\">Ext.data.LocalStore.first</a>"}],"short_doc":"Convenience function for getting the first model instance in the store. ..."},{"tagname":"method","name":"forceLocalSort","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/LocalStore.js","linenr":103}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":103,"params":[],"chainable":false,"fires":[],"method_calls":["getData"],"id":"method-forceLocalSort","owner":"Ext.data.LocalStore","short_doc":" ..."},{"tagname":"method","name":"getAggregate","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/LocalStore.js","linenr":466}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":466,"params":[{"name":"fn","type":"Object","html_type":"Object"},{"name":"scope","type":"Object","html_type":"Object"},{"name":"records","type":"Object","html_type":"Object"},{"name":"field","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-getAggregate","owner":"Ext.data.LocalStore","short_doc":" ..."},{"tagname":"method","name":"getAt","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":424}],"doc":"<p>Get the Record at the specified index.</p>\n\n<p>The index is effected by filtering.</p>\n","params":[{"tagname":"params","type":"Number","name":"index","doc":"<p>The index of the Record to find.</p>\n","html_type":"Number"}],"return":{"type":"Ext.data.Model","name":"return","doc":"<p>The Record at the passed index. Returns null if not found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getData"],"id":"method-getAt","owner":"Ext.data.AbstractStore","short_doc":"Get the Record at the specified index. ..."},{"tagname":"method","name":"getAutoDestroy","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.AbstractStore-cfg-autoDestroy\" rel=\"Ext.data.AbstractStore-cfg-autoDestroy\" class=\"docClass\">autoDestroy</a>.</p>\n","params":[],"return":{"type":"Boolean","doc":"\n","html_type":"Boolean"},"id":"method-getAutoDestroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":45}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.AbstractStore","short_doc":"Returns the value of autoDestroy. ..."},{"tagname":"method","name":"getBubbleParent","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":685}],"doc":"<p>Gets the bubbling parent for an Observable</p>\n","private":true,"return":{"type":"Ext.util.Observable","name":"return","doc":"<p>The bubble parent. null is returned if no bubble target exists</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getBubbleTarget"],"id":"method-getBubbleParent","owner":"Ext.mixin.Observable","short_doc":"Gets the bubbling parent for an Observable ..."},{"tagname":"method","name":"getById","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":283}],"doc":"<p>Get the Record with the specified id.</p>\n\n<p>This method is not affected by filtering, lookup will be performed from all records\ninside the store, filtered or not.</p>\n","inheritdoc":null,"params":[{"tagname":"params","type":"Mixed","name":"id","doc":"<p>The id of the Record to find.</p>\n","html_type":"Mixed"}],"id":"method-getById","owner":"Ext.data.ChainedStore","return":{"type":"Ext.data.Model","name":"return","doc":"<p>The Record with the passed id. Returns null if not found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},"throws":null,"type":null,"overrides":[{"name":"getById","owner":"Ext.data.LocalStore","link":"<a href=\"#!/api/Ext.data.LocalStore-method-getById\" rel=\"Ext.data.LocalStore-method-getById\" class=\"docClass\">Ext.data.LocalStore.getById</a>"}],"short_doc":"Get the Record with the specified id. ..."},{"tagname":"method","name":"getByInternalId","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":288}],"doc":"<p>Get the Record with the specified internalId.</p>\n\n<p>This method is not affected by filtering, lookup will be performed from all records\ninside the store, filtered or not.</p>\n","inheritdoc":null,"params":[{"tagname":"params","type":"Mixed","name":"internalId","doc":"<p>The id of the Record to find.</p>\n","html_type":"Mixed"}],"id":"method-getByInternalId","owner":"Ext.data.ChainedStore","return":{"type":"Ext.data.Model","name":"return","doc":"<p>The Record with the passed internalId. Returns null if not found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},"throws":null,"type":null,"overrides":[{"name":"getByInternalId","owner":"Ext.data.LocalStore","link":"<a href=\"#!/api/Ext.data.LocalStore-method-getByInternalId\" rel=\"Ext.data.LocalStore-method-getByInternalId\" class=\"docClass\">Ext.data.LocalStore.getByInternalId</a>"}],"short_doc":"Get the Record with the specified internalId. ..."},{"tagname":"method","name":"getConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1431}],"doc":"<p>Returns a specified config property value. If the name parameter is not passed,\nall current configuration options will be returned as key value pairs.</p>\n","params":[{"tagname":"params","type":"String","name":"name","optional":true,"doc":"<p>The name of the config property to get.</p>\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"peek","default":"false","optional":true,"doc":"<p><code>true</code> to peek at the raw value without calling the getter.</p>\n","html_type":"Boolean"}],"return":{"type":"Object","name":"return","doc":"<p>The config property value.</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-getConfig","owner":"Ext.Base","short_doc":"Returns a specified config property value. ..."},{"tagname":"method","name":"getCount","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":281}],"doc":"<p>Gets the number of records in store.</p>\n\n<p>If using paging, this may not be the total size of the dataset. If the data object\nused by the Reader contains the dataset size, then the <a href=\"#!/api/Ext.data.ProxyStore-method-getTotalCount\" rel=\"Ext.data.ProxyStore-method-getTotalCount\" class=\"docClass\">Ext.data.ProxyStore.getTotalCount</a> function returns\nthe dataset size.  <strong>Note</strong>: see the Important note in <a href=\"#!/api/Ext.data.ProxyStore-method-load\" rel=\"Ext.data.ProxyStore-method-load\" class=\"docClass\">Ext.data.ProxyStore.load</a>.</p>\n\n<p>When store is filtered, it's the number of records matching the filter.</p>\n","return":{"type":"Number","name":"return","doc":"<p>The number of Records in the Store.</p>\n","properties":null,"html_type":"Number"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getData"],"id":"method-getCount","owner":"Ext.data.AbstractStore","short_doc":"Gets the number of records in store. ..."},{"tagname":"method","name":"getCurrentConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1471}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getConfigurator"],"id":"method-getCurrentConfig","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"getData","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":62}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":62,"params":[],"chainable":false,"fires":[],"method_calls":["constructDataCollection"],"id":"method-getData","owner":"Ext.data.ChainedStore","short_doc":" ..."},{"tagname":"method","name":"getExtraKeys","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.LocalStore-cfg-extraKeys\" rel=\"Ext.data.LocalStore-cfg-extraKeys\" class=\"docClass\">extraKeys</a>.</p>\n","params":[],"return":{"type":"Object","doc":"\n","html_type":"Object"},"id":"method-getExtraKeys","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/LocalStore.js","linenr":13}],"static":null,"private":null,"inheritable":null,"linenr":13,"owner":"Ext.data.LocalStore","short_doc":"Returns the value of extraKeys. ..."},{"tagname":"method","name":"getFilters","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":978}],"doc":"<p>The current <a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">filters</a> applied to the store.</p>\n","return":{"type":"Ext.util.Collection","name":"return","doc":"<p>The collection of filters applied to the\nstore</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"},"params":[],"id":"method-getFilters","owner":"Ext.data.AbstractStore","short_doc":"The current filters applied to the store. ..."},{"tagname":"method","name":"getGroupDir","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.AbstractStore-cfg-groupDir\" rel=\"Ext.data.AbstractStore-cfg-groupDir\" class=\"docClass\">groupDir</a>.</p>\n","params":[],"return":{"type":"String","doc":"\n","html_type":"String"},"id":"method-getGroupDir","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":100}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.AbstractStore","short_doc":"Returns the value of groupDir. ..."},{"tagname":"method","name":"getGroupField","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":1061}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1061,"params":[],"chainable":false,"fires":[],"method_calls":["getGrouper"],"id":"method-getGroupField","owner":"Ext.data.AbstractStore","short_doc":" ..."},{"tagname":"method","name":"getGrouper","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.AbstractStore-cfg-grouper\" rel=\"Ext.data.AbstractStore-cfg-grouper\" class=\"docClass\">grouper</a>.</p>\n","params":[],"return":{"type":"Object/Ext.util.Grouper","doc":"\n","html_type":"Object/<a href=\"#!/api/Ext.util.Grouper\" rel=\"Ext.util.Grouper\" class=\"docClass\">Ext.util.Grouper</a>"},"id":"method-getGrouper","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":106}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.AbstractStore","short_doc":"Returns the value of grouper. ..."},{"tagname":"method","name":"getGroups","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":1084}],"doc":"<p>Returns a collection of readonly sub-collections of your store's records\nwith grouping applied. These sub-collections are maintained internally by\nthe collection.</p>\n\n<p>See <a href=\"#!/api/Ext.data.AbstractStore-cfg-groupField\" rel=\"Ext.data.AbstractStore-cfg-groupField\" class=\"docClass\">groupField</a>, <a href=\"#!/api/Ext.data.AbstractStore-cfg-groupDir\" rel=\"Ext.data.AbstractStore-cfg-groupDir\" class=\"docClass\">groupDir</a>. Example for a store\ncontaining records with a color field:</p>\n\n<pre><code>var myStore = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>', {\n    groupField: 'color',\n    groupDir  : 'DESC'\n});\n\nmyStore.getGroups(); \n</code></pre>\n\n<p>The above should result in the following format:</p>\n\n<pre><code>[\n    {\n        name: 'yellow',\n        children: [\n            // all records where the color field is 'yellow'\n        ]\n    },\n    {\n        name: 'red',\n        children: [\n            // all records where the color field is 'red'\n        ]\n    }\n]\n</code></pre>\n\n<p>Group contents are effected by filtering.</p>\n","return":{"type":"Ext.util.Collection","name":"return","doc":"<p>The grouped data</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getData"],"id":"method-getGroups","owner":"Ext.data.AbstractStore","short_doc":"Returns a collection of readonly sub-collections of your store's records\nwith grouping applied. ..."},{"tagname":"method","name":"getInitialConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1488}],"doc":"<p>Returns the initial configuration passed to constructor when instantiating\nthis class.</p>\n","params":[{"tagname":"params","type":"String","name":"name","optional":true,"doc":"<p>Name of the config option to return.</p>\n","html_type":"String"}],"return":{"type":"Object/Mixed","name":"return","doc":"<p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n","properties":null,"html_type":"Object/Mixed"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getInitialConfig","owner":"Ext.Base","short_doc":"Returns the initial configuration passed to constructor when instantiating\nthis class. ..."},{"tagname":"method","name":"getModel","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":113}],"doc":"<p>Get the model used for this store.</p>\n","return":{"type":"Ext.data.Model","name":"return","doc":"<p>The model</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getSource"],"id":"method-getModel","owner":"Ext.data.ChainedStore","short_doc":"Get the model used for this store. ..."},{"tagname":"method","name":"getPageSize","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.AbstractStore-cfg-pageSize\" rel=\"Ext.data.AbstractStore-cfg-pageSize\" class=\"docClass\">pageSize</a>.</p>\n","params":[],"return":{"type":"Number","doc":"\n","html_type":"Number"},"id":"method-getPageSize","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":113}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.AbstractStore","short_doc":"Returns the value of pageSize. ..."},{"tagname":"method","name":"getProxy","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":121}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":121,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getProxy","owner":"Ext.data.ChainedStore","short_doc":" ..."},{"tagname":"method","name":"getRange","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":436}],"doc":"<p>Gathers a range of Records between specified indices.</p>\n\n<p>This method is affected by filtering.</p>\n","params":[{"tagname":"params","type":"Number","name":"start","doc":"<p>The starting index. Defaults to zero.</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"end","doc":"<p>The ending index. Defaults to the last record. The end index <strong>is included</strong>.</p>\n","html_type":"Number"}],"return":{"type":"Ext.data.Model[]","name":"return","doc":"<p>An array of records.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getData"],"id":"method-getRange","owner":"Ext.data.AbstractStore","short_doc":"Gathers a range of Records between specified indices. ..."},{"tagname":"method","name":"getRemoteFilter","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.ChainedStore-cfg-remoteFilter\" rel=\"Ext.data.ChainedStore-cfg-remoteFilter\" class=\"docClass\">remoteFilter</a>.</p>\n","params":[],"return":{"type":"Boolean","doc":"\n","html_type":"Boolean"},"id":"method-getRemoteFilter","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":18}],"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.ChainedStore","overrides":[{"name":"getRemoteFilter","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-getRemoteFilter\" rel=\"Ext.data.AbstractStore-method-getRemoteFilter\" class=\"docClass\">Ext.data.AbstractStore.getRemoteFilter</a>"}],"short_doc":"Returns the value of remoteFilter. ..."},{"tagname":"method","name":"getRemoteSort","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.ChainedStore-cfg-remoteSort\" rel=\"Ext.data.ChainedStore-cfg-remoteSort\" class=\"docClass\">remoteSort</a>.</p>\n","params":[],"return":{"type":"Boolean","doc":"\n","html_type":"Boolean"},"id":"method-getRemoteSort","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":23}],"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.ChainedStore","overrides":[{"name":"getRemoteSort","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-getRemoteSort\" rel=\"Ext.data.AbstractStore-method-getRemoteSort\" class=\"docClass\">Ext.data.AbstractStore.getRemoteSort</a>"}],"short_doc":"Returns the value of remoteSort. ..."},{"tagname":"method","name":"getSession","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":72}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":72,"params":[],"chainable":false,"fires":[],"method_calls":["getSource"],"id":"method-getSession","owner":"Ext.data.ChainedStore","short_doc":" ..."},{"tagname":"method","name":"getSorters","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":990}],"doc":"<p>The current <a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">sorters</a> applied to the store.</p>\n","return":{"type":"Ext.util.Collection","name":"return","doc":"<p>The collection of sorters applied to the\nstore</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"},"params":[],"id":"method-getSorters","owner":"Ext.data.AbstractStore","short_doc":"The current sorters applied to the store. ..."},{"tagname":"method","name":"getSource","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.ChainedStore-cfg-source\" rel=\"Ext.data.ChainedStore-cfg-source\" class=\"docClass\">source</a>.</p>\n","params":[],"return":{"type":"Ext.data.Store/String","doc":"\n","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>/String"},"id":"method-getSource","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":11}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.ChainedStore","short_doc":"Returns the value of source. ..."},{"tagname":"method","name":"getState","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":730}],"doc":"<p>Returns the grouping, sorting and filtered state of this Store.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getFilters","getGrouper","getSorters"],"id":"method-getState","owner":"Ext.data.AbstractStore","short_doc":"Returns the grouping, sorting and filtered state of this Store. ..."},{"tagname":"method","name":"getStatefulFilters","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.AbstractStore-cfg-statefulFilters\" rel=\"Ext.data.AbstractStore-cfg-statefulFilters\" class=\"docClass\">statefulFilters</a>.</p>\n","params":[],"return":{"type":"Boolean","doc":"\n","html_type":"Boolean"},"id":"method-getStatefulFilters","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":62}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.AbstractStore","short_doc":"Returns the value of statefulFilters. ..."},{"tagname":"method","name":"getStoreId","doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.AbstractStore-cfg-storeId\" rel=\"Ext.data.AbstractStore-cfg-storeId\" class=\"docClass\">storeId</a>.</p>\n","params":[],"return":{"type":"String","doc":"\n","html_type":"String"},"id":"method-getStoreId","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":52}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.AbstractStore","short_doc":"Returns the value of storeId. ..."},{"tagname":"method","name":"group","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":1006}],"doc":"<p>Groups data inside the store.</p>\n","params":[{"tagname":"params","type":"String/Object","name":"grouper","doc":"<p>Either a string name of one of the fields in this Store's\nconfigured <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Model</a>, or an object, or a <a href=\"#!/api/Ext.util.Grouper\" rel=\"Ext.util.Grouper\" class=\"docClass\">grouper</a> configuration object.</p>\n","html_type":"String/Object"},{"tagname":"params","type":"String","name":"direction","optional":true,"doc":"<p>The overall direction to group the data by. Defaults to the value of <a href=\"#!/api/Ext.data.AbstractStore-cfg-groupDir\" rel=\"Ext.data.AbstractStore-cfg-groupDir\" class=\"docClass\">groupDir</a>.</p>\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":["<a href=\"#!/api/Ext.data.AbstractStore-event-datachanged\" rel=\"Ext.data.AbstractStore-event-datachanged\" class=\"docClass\">datachanged</a>","groupchange","<a href=\"#!/api/Ext.data.AbstractStore-event-refresh\" rel=\"Ext.data.AbstractStore-event-refresh\" class=\"docClass\">refresh</a>"],"method_calls":["attemptLoad","fireEvent","fireGroupChange","getData","getGroupDir","getRemoteSort","getSorters","isLoadBlocked"],"id":"method-group","owner":"Ext.data.AbstractStore","short_doc":"Groups data inside the store. ..."},{"tagname":"method","name":"hasConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1480}],"doc":"\n","private":true,"params":[{"tagname":"params","name":"config","doc":"\n","type":"Object","html_type":"Object"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-hasConfig","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"hasListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1138}],"doc":"<p>Checks to see if this object has any listeners for a specified event, or whether the event bubbles. The answer\nindicates whether the event needs firing or not.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to check for</p>\n","html_type":"String"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the event is being listened for or bubbles, else <code>false</code></p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-hasListener","owner":"Ext.mixin.Observable","short_doc":"Checks to see if this object has any listeners for a specified event, or whether the event bubbles. ..."},{"tagname":"method","name":"hasPendingLoad","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":234}],"doc":"<p>Returns true if the store has a pending load task.</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":234,"params":[],"chainable":false,"fires":[],"method_calls":["getSource"],"id":"method-hasPendingLoad","owner":"Ext.data.ChainedStore","return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the store has a pending load task.</p>\n","properties":null,"html_type":"Boolean"},"throws":null,"type":null,"overrides":[{"name":"hasPendingLoad","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-hasPendingLoad\" rel=\"Ext.data.AbstractStore-method-hasPendingLoad\" class=\"docClass\">Ext.data.AbstractStore.hasPendingLoad</a>"}],"short_doc":"Returns true if the store has a pending load task. ..."},{"tagname":"method","name":"indexOf","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":293}],"doc":"<p>Get the index of the record within the store.</p>\n\n<p>When store is filtered, records outside of filter will not be found.</p>\n","inheritdoc":null,"params":[{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a> object to find.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"}],"id":"method-indexOf","owner":"Ext.data.ChainedStore","return":{"type":"Number","name":"return","doc":"<p>The index of the passed Record. Returns -1 if not found.</p>\n","properties":null,"html_type":"Number"},"throws":null,"type":null,"overrides":[{"name":"indexOf","owner":"Ext.data.LocalStore","link":"<a href=\"#!/api/Ext.data.LocalStore-method-indexOf\" rel=\"Ext.data.LocalStore-method-indexOf\" class=\"docClass\">Ext.data.LocalStore.indexOf</a>"}],"short_doc":"Get the index of the record within the store. ..."},{"tagname":"method","name":"indexOfId","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":298}],"doc":"<p>Get the index within the store of the Record with the passed id.</p>\n\n<p>Like <a href=\"#!/api/Ext.data.ChainedStore-method-indexOf\" rel=\"Ext.data.ChainedStore-method-indexOf\" class=\"docClass\">indexOf</a>, this method is effected by filtering.</p>\n","inheritdoc":null,"params":[{"tagname":"params","type":"String","name":"id","doc":"<p>The id of the Record to find.</p>\n","html_type":"String"}],"id":"method-indexOfId","owner":"Ext.data.ChainedStore","return":{"type":"Number","name":"return","doc":"<p>The index of the Record. Returns -1 if not found.</p>\n","properties":null,"html_type":"Number"},"throws":null,"type":null,"overrides":[{"name":"indexOfId","owner":"Ext.data.LocalStore","link":"<a href=\"#!/api/Ext.data.LocalStore-method-indexOfId\" rel=\"Ext.data.LocalStore-method-indexOfId\" class=\"docClass\">Ext.data.LocalStore.indexOfId</a>"}],"short_doc":"Get the index within the store of the Record with the passed id. ..."},{"tagname":"method","name":"initConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1393}],"doc":"<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n","protected":true,"params":[{"tagname":"params","type":"Object","name":"config","doc":"\n","html_type":"Object"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["getConfigurator"],"id":"method-initConfig","owner":"Ext.Base","short_doc":"Initialize configuration for this class. ..."},{"tagname":"method","name":"insert","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":303}],"doc":"<p>Inserts Model instances into the Store at the given index and fires the add event.\nSee also <a href=\"#!/api/Ext.data.ChainedStore-method-add\" rel=\"Ext.data.ChainedStore-method-add\" class=\"docClass\">add</a>.</p>\n","inheritdoc":null,"params":[{"tagname":"params","type":"Number","name":"index","doc":"<p>The start index at which to insert the passed Records.</p>\n","html_type":"Number"},{"tagname":"params","type":"Ext.data.Model/Ext.data.Model[]/Object/Object[]","name":"records","doc":"<p>An <code><a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a></code> instance, the\ndata needed to populate an instance or an array of either of these.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>/<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]/Object/Object[]"}],"id":"method-insert","owner":"Ext.data.ChainedStore","return":{"type":"Ext.data.Model[]","name":"return","doc":"<p>records The added records</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},"throws":null,"type":null,"overrides":[{"name":"insert","owner":"Ext.data.LocalStore","link":"<a href=\"#!/api/Ext.data.LocalStore-method-insert\" rel=\"Ext.data.LocalStore-method-insert\" class=\"docClass\">Ext.data.LocalStore.insert</a>"}],"short_doc":"Inserts Model instances into the Store at the given index and fires the add event. ..."},{"tagname":"method","name":"isFiltered","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":641}],"doc":"<p>Tests whether the store currently has any active filters.</p>\n","return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the store is filtered.</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getFilters"],"id":"method-isFiltered","owner":"Ext.data.AbstractStore","short_doc":"Tests whether the store currently has any active filters. ..."},{"tagname":"method","name":"isGrouped","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":1071}],"doc":"<p>Tests whether the store currently has an active grouper.</p>\n","return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the store is grouped.</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getGrouper"],"id":"method-isGrouped","owner":"Ext.data.AbstractStore","short_doc":"Tests whether the store currently has an active grouper. ..."},{"tagname":"method","name":"isLoaded","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":238}],"doc":"<p>Returns <code>true</code> if the Store has been loaded.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":238,"params":[],"chainable":null,"fires":[],"method_calls":["getSource"],"id":"method-isLoaded","owner":"Ext.data.ChainedStore","return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the Store has been loaded.</p>\n","properties":null,"html_type":"Boolean"},"overrides":[{"name":"isLoaded","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-isLoaded\" rel=\"Ext.data.AbstractStore-method-isLoaded\" class=\"docClass\">Ext.data.AbstractStore.isLoaded</a>"}],"short_doc":"Returns true if the Store has been loaded. ..."},{"tagname":"method","name":"isLoading","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":242}],"doc":"<p>Returns <code>true</code> if the Store is currently performing a load operation.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":242,"params":[],"chainable":null,"fires":[],"method_calls":["getSource"],"id":"method-isLoading","owner":"Ext.data.ChainedStore","return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the Store is currently loading.</p>\n","properties":null,"html_type":"Boolean"},"overrides":[{"name":"isLoading","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-isLoading\" rel=\"Ext.data.AbstractStore-method-isLoading\" class=\"docClass\">Ext.data.AbstractStore.isLoading</a>"}],"short_doc":"Returns true if the Store is currently performing a load operation. ..."},{"tagname":"method","name":"isSorted","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":649}],"doc":"<p>Tests whether the store currently has any active sorters.</p>\n","return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the store is sorted.</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getSorters","isGrouped"],"id":"method-isSorted","owner":"Ext.data.AbstractStore","short_doc":"Tests whether the store currently has any active sorters. ..."},{"tagname":"method","name":"isSuspended","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1150}],"doc":"<p>Checks if all events, or a specific event, is suspended.</p>\n","params":[{"tagname":"params","type":"String","name":"event","optional":true,"doc":"<p>The name of the specific event to check</p>\n","html_type":"String"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if events are suspended</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-isSuspended","owner":"Ext.mixin.Observable","short_doc":"Checks if all events, or a specific event, is suspended. ..."},{"tagname":"method","name":"last","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":323}],"doc":"<p>Convenience function for getting the last model instance in the store.</p>\n\n<p>When store is filtered, will return last item within the filter.</p>\n","inheritdoc":null,"params":[{"tagname":"params","type":"Boolean","name":"grouped","optional":true,"doc":"<p>True to perform the operation for each group\nin the store. The value returned will be an object literal with the key being the group\nname and the last record being the value. The grouped parameter is only honored if\nthe store has a groupField.</p>\n","html_type":"Boolean"}],"id":"method-last","owner":"Ext.data.ChainedStore","return":{"type":"Ext.data.Model/undefined","name":"return","doc":"<p>The last model instance in the store, or undefined</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>/undefined"},"throws":null,"type":null,"overrides":[{"name":"last","owner":"Ext.data.LocalStore","link":"<a href=\"#!/api/Ext.data.LocalStore-method-last\" rel=\"Ext.data.LocalStore-method-last\" class=\"docClass\">Ext.data.LocalStore.last</a>"}],"short_doc":"Convenience function for getting the last model instance in the store. ..."},{"tagname":"method","name":"link","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1508}],"doc":"<p>Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (via <code><a href=\"#!/api/Ext.Base-method-destroy\" rel=\"Ext.Base-method-destroy\" class=\"docClass\">destroy</a></code>).</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"\n","html_type":"String"},{"tagname":"params","type":"Object","name":"value","doc":"\n","html_type":"Object"}],"return":{"type":"Object","name":"return","doc":"<p>The <code>value</code> passed.</p>\n","properties":null,"html_type":"Object"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-link","owner":"Ext.Base","short_doc":"Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (vi..."},{"tagname":"method","name":"max","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":343}],"doc":"<p>Gets the maximum value in the store.</p>\n\n<p>When store is filtered, only items within the filter are aggregated.</p>\n","inheritdoc":null,"params":[{"tagname":"params","type":"String","name":"field","doc":"<p>The field in each record</p>\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"grouped","optional":true,"doc":"<p>True to perform the operation for each group\nin the store. The value returned will be an object literal with the key being the group\nname and the maximum in the group being the value. The grouped parameter is only honored if\nthe store has a groupField.</p>\n","html_type":"Boolean"}],"id":"method-max","owner":"Ext.data.ChainedStore","return":{"type":"Object","name":"return","doc":"<p>The maximum value, if no items exist, undefined.</p>\n","properties":null,"html_type":"Object"},"throws":null,"type":null,"overrides":[{"name":"max","owner":"Ext.data.LocalStore","link":"<a href=\"#!/api/Ext.data.LocalStore-method-max\" rel=\"Ext.data.LocalStore-method-max\" class=\"docClass\">Ext.data.LocalStore.max</a>"}],"short_doc":"Gets the maximum value in the store. ..."},{"tagname":"method","name":"min","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":338}],"doc":"<p>Gets the minimum value in the store.</p>\n\n<p>When store is filtered, only items within the filter are aggregated.</p>\n","inheritdoc":null,"params":[{"tagname":"params","type":"String","name":"field","doc":"<p>The field in each record</p>\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"grouped","optional":true,"doc":"<p>True to perform the operation for each group\nin the store. The value returned will be an object literal with the key being the group\nname and the minimum in the group being the value. The grouped parameter is only honored if\nthe store has a groupField.</p>\n","html_type":"Boolean"}],"id":"method-min","owner":"Ext.data.ChainedStore","return":{"type":"Object","name":"return","doc":"<p>The minimum value, if no items exist, undefined.</p>\n","properties":null,"html_type":"Object"},"throws":null,"type":null,"overrides":[{"name":"min","owner":"Ext.data.LocalStore","link":"<a href=\"#!/api/Ext.data.LocalStore-method-min\" rel=\"Ext.data.LocalStore-method-min\" class=\"docClass\">Ext.data.LocalStore.min</a>"}],"short_doc":"Gets the minimum value in the store. ..."},{"tagname":"method","name":"mon","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1665}],"doc":"<p>Shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-addManagedListener\" rel=\"Ext.mixin.Observable-method-addManagedListener\" class=\"docClass\">addManagedListener</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item to which to add a listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","html_type":"Object/String"},{"tagname":"params","type":"Function/String","name":"fn","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event\nname, this is the handler function or the name of a method on the specified\n<code>scope</code>.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n","html_type":"Object"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-mon","owner":"Ext.mixin.Observable","return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners = myButton.mon({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","properties":null,"html_type":"Object"},"throws":null,"type":null,"short_doc":"Shorthand for addManagedListener. ..."},{"tagname":"method","name":"mun","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1671}],"doc":"<p>Shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-removeManagedListener\" rel=\"Ext.mixin.Observable-method-removeManagedListener\" class=\"docClass\">removeManagedListener</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item from which to remove a listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","html_type":"Object/String"},{"tagname":"params","type":"Function","name":"fn","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","html_type":"Object"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-mun","owner":"Ext.mixin.Observable","return":null,"throws":null,"type":null,"short_doc":"Shorthand for removeManagedListener. ..."},{"tagname":"method","name":"notifySorterChange","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/LocalStore.js","linenr":99}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":99,"params":[],"chainable":false,"fires":[],"method_calls":["getData"],"id":"method-notifySorterChange","owner":"Ext.data.LocalStore","short_doc":" ..."},{"tagname":"method","name":"on","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1654}],"doc":"<p>The <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> method is shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a>.</p>\n\n<p>Appends an event handler to this object.  For example:</p>\n\n<pre><code>myGridPanel.on(\"itemclick\", this.onItemClick, this);\n</code></pre>\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple events. For example:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: this.onCellClick,\n    select: this.onSelect,\n    viewready: this.onViewReady,\n    scope: this // Important. Ensure \"this\" is correct during handler execution\n});\n</code></pre>\n\n<p>One can also specify options for each event handler separately:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: this.onCellClick, scope: this, single: true},\n    viewready: {fn: panel.onViewReady, scope: panel}\n});\n</code></pre>\n\n<p><em>Names</em> of methods in a specified scope may also be used:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: 'onCellClick', scope: this, single: true},\n    viewready: {fn: 'onViewReady', scope: panel}\n});\n</code></pre>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"String/Object","name":"eventName","doc":"<p>The name of the event to listen for.\nMay also be an object who's property names are event names.</p>\n\n","html_type":"String/Object"},{"tagname":"params","type":"Function/String","name":"fn","optional":true,"doc":"<p>The method the event invokes or the <em>name</em> of\nthe method within the specified <code>scope</code>.  Will be called with arguments\ngiven to <a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">Ext.util.Observable.fireEvent</a> plus the <code>options</code> parameter described\nbelow.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>An object containing handler configuration.</p>\n\n\n\n\n<p><strong>Note:</strong> The options object will also be passed as the last argument to every\nevent handler.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n","properties":[{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted,\n  defaults to the object which fired the event.</strong></p>\n\n","html_type":"Object"},{"tagname":"params","type":"Number","name":"delay","doc":"<p>The number of milliseconds to delay the invocation of the handler after the event\n  fires.</p>\n\n","html_type":"Number"},{"tagname":"params","type":"Boolean","name":"single","doc":"<p>True to add a handler to handle just the next firing of the event, and then remove\n  itself.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Number","name":"buffer","doc":"<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"onFrame","doc":"<p>Causes the handler to be scheduled to run at the next\n  <a href=\"#!/api/Ext.Function-method-requestAnimationFrame\" rel=\"Ext.Function-method-requestAnimationFrame\" class=\"docClass\">animation frame event</a>. If the\n  event fires again before that time, the handler is not rescheduled - the handler\n  will only be called once when the next animation frame is fired, with the last set\n  of arguments passed.</p>\n\n","html_type":"Number"},{"tagname":"params","type":"Ext.util.Observable","name":"target","doc":"<p>Only call the handler if the event was fired on the target Observable, <em>not</em> if the\n  event was bubbled up from a child Observable.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},{"tagname":"params","type":"String","name":"element","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</strong>\n  The name of a Component property which references an <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">element</a>\n  to add a listener to.</p>\n\n\n\n\n<p>  This option is useful during Component construction to add DOM event listeners to\n  elements of <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which will exist only after the\n  Component is rendered.</p>\n\n\n\n\n<p>  For example, to add a click listener to a Panel's body:</p>\n\n\n\n\n<pre><code>  var panel = new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n\n\n\n<p>In order to remove listeners attached using the element, you'll need to reference\nthe element itself as seen below.</p>\n\n\n\n\n<pre><code> panel.body.un(...)\n</code></pre>\n\n","html_type":"String"},{"tagname":"params","type":"String","name":"delegate","optional":true,"doc":"<p>A simple selector to filter the event target or look for a descendant of the target.</p>\n\n\n\n\n<p>  The \"delegate\" option is only available on <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instances (or\n  when attaching a listener to a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> via a Component using the\n  element option).</p>\n\n\n\n\n<p>  See the <em>delegate</em> example below.</p>\n\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"stopPropagation","optional":true,"doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopPropagation\" rel=\"Ext.event.Event-method-stopPropagation\" class=\"docClass\">stopPropagation</a> on the event object\n  before firing the handler.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"preventDefault","optional":true,"doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-preventDefault\" rel=\"Ext.event.Event-method-preventDefault\" class=\"docClass\">preventDefault</a> on the event object\n  before firing the handler.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"stopEvent","optional":true,"doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopEvent\" rel=\"Ext.event.Event-method-stopEvent\" class=\"docClass\">stopEvent</a> on the event object\n  before firing the handler.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Array","name":"args","optional":true,"doc":"<p>Optional arguments to pass to the handler function. Any additional arguments\n  passed to <a href=\"#!/api/Ext.mixin.Observable-method-fireEvent\" rel=\"Ext.mixin.Observable-method-fireEvent\" class=\"docClass\">fireEvent</a> will be appended to these arguments.</p>\n\n","html_type":"Array"},{"tagname":"params","type":"Boolean","name":"destroyable","default":"false","optional":true,"doc":"<p>When specified as <code>true</code>, the function returns a <code>destroyable</code> object. An object\n  which implements the <code>destroy</code> method which removes all listeners added in this call.\n  This syntax can be a helpful shortcut to using <a href=\"#!/api/Ext.mixin.Observable-method-un\" rel=\"Ext.mixin.Observable-method-un\" class=\"docClass\">un</a>; particularly when\n  removing multiple listeners.  <em>NOTE</em> - not compatible when using the <em>element</em>\n  option.  See <a href=\"#!/api/Ext.mixin.Observable-method-un\" rel=\"Ext.mixin.Observable-method-un\" class=\"docClass\">un</a> for the proper syntax for removing listeners added using the\n  <em>element</em> config.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Number","name":"priority","optional":true,"doc":"<p>An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handlers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.\n  A priority must be an integer to be valid.  Fractional values are reserved for\n  internal framework use.</p>\n\n","html_type":"Number"},{"tagname":"params","type":"String","name":"order","default":"'current'","optional":true,"doc":"<p>A legacy option that is provided for backward compatibility.\n  It is recommended to use the <code>priority</code> option instead.  Available options are:</p>\n\n\n\n\n<ul>\n<li><code>'before'</code>: equal to a priority of <code>100</code></li>\n<li><code>'current'</code>: equal to a priority of <code>0</code> or default priority</li>\n<li><code>'after'</code>: equal to a priority of <code>-100</code></li>\n</ul>\n\n\n\n","html_type":"String"}],"html_type":"Object"},{"tagname":"params","type":"String","name":"order","default":"'current'","optional":true,"doc":"<p>A shortcut for the <code>order</code> event option.  Provided for backward compatibility.\n  Please use the <code>priority</code> event option instead.</p>\n\n\n\n\n<p><strong>Combining Options</strong></p>\n\n\n\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n\n\n\n<p>A delayed, one-time listener.</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n\n\n\n<p><strong>Attaching multiple handlers in 1 call</strong></p>\n\n\n\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple handlers and handler configs.</p>\n\n\n\n\n<pre><code>grid.on({\n    itemclick: 'onItemClick',\n    itemcontextmenu: grid.onItemContextmenu,\n    destroy: {\n        fn: function () {\n            // function called within the 'altCmp' scope instead of grid\n        },\n        scope: altCmp // unique scope for the destroy handler\n    },\n    scope: grid       // default scope - provided for example clarity\n});\n</code></pre>\n\n\n\n\n<p><strong>Delegate</strong></p>\n\n\n\n\n<p>This is a configuration option that you can pass along when registering a handler for\nan event to assist with event delegation. By setting this configuration option\nto a simple selector, the target element will be filtered to look for a\ndescendant of the target. For example:</p>\n\n\n\n\n<pre><code>var panel = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n    xtype: 'panel',\n    renderTo: document.body,\n    title: 'Delegate Handler Example',\n    frame: true,\n    height: 220,\n    width: 220,\n    html: '&lt;h1 class=\"myTitle\"&gt;BODY TITLE&lt;/h1&gt;Body content'\n});\n\n// The click handler will only be called when the click occurs on the\n// delegate: h1.myTitle (\"h1\" tag with class \"myTitle\")\npanel.on({\n    click: function (e) {\n        console.log(e.getTarget().innerHTML);\n    },\n    element: 'body',\n    delegate: 'h1.myTitle'\n });\n</code></pre>\n\n","html_type":"String"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-on","owner":"Ext.mixin.Observable","return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes\n all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.on({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","properties":null,"html_type":"Object"},"throws":null,"type":null,"short_doc":"The on method is shorthand for addListener. ..."},{"tagname":"method","name":"onAfter","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1557}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-addAfterListener\" rel=\"Ext.mixin.Observable-method-addAfterListener\" class=\"docClass\">addAfterListener</a>.</p>\n","inheritdoc":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> instead.</p>\n","version":"5.1"},"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event to listen for.</p>\n\n","html_type":"String/String[]/Object"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The method the event invokes.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope for <code>fn</code>.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>An object containing handler configuration.</p>\n\n","html_type":"Object"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-onAfter","owner":"Ext.mixin.Observable","return":null,"throws":null,"type":null,"short_doc":"Alias for addAfterListener. ..."},{"tagname":"method","name":"onBefore","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1550}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-addBeforeListener\" rel=\"Ext.mixin.Observable-method-addBeforeListener\" class=\"docClass\">addBeforeListener</a>.</p>\n","inheritdoc":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> instead.</p>\n","version":"5.1"},"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event to listen for.</p>\n\n","html_type":"String/String[]/Object"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The method the event invokes.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope for <code>fn</code>.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>An object containing handler configuration.</p>\n\n","html_type":"Object"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-onBefore","owner":"Ext.mixin.Observable","return":null,"throws":null,"type":null,"short_doc":"Alias for addBeforeListener. ..."},{"tagname":"method","name":"onBeforeCollectionSort","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":898}],"doc":"<p>This is attached to the data Collection's beforesort event only if not remoteSort\nIf remoteSort, the event is fired before the reload call in <a href=\"#!/api/Ext.data.ProxyStore-event-load\" rel=\"Ext.data.ProxyStore-event-load\" class=\"docClass\">Ext.data.ProxyStore.load</a>.</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[{"name":"store","type":"Object","html_type":"Object"},{"name":"sorters","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.data.AbstractStore-event-beforesort\" rel=\"Ext.data.AbstractStore-event-beforesort\" class=\"docClass\">beforesort</a>"],"method_calls":["fireEvent"],"id":"method-onBeforeCollectionSort","owner":"Ext.data.AbstractStore","short_doc":"This is attached to the data Collection's beforesort event only if not remoteSort\nIf remoteSort, the event is fired b..."},{"tagname":"method","name":"onClassMixedIn","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Factoryable.js","linenr":268}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":268,"params":[{"name":"targetClass","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-onClassMixedIn","owner":"Ext.mixin.Factoryable","short_doc":" ..."},{"tagname":"method","name":"onCollectionAdd","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":125}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":125,"params":[{"name":"collection","type":"Object","html_type":"Object"},{"name":"info","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.data.ChainedStore-event-add\" rel=\"Ext.data.ChainedStore-event-add\" class=\"docClass\">add</a>","<a href=\"#!/api/Ext.data.ChainedStore-event-datachanged\" rel=\"Ext.data.ChainedStore-event-datachanged\" class=\"docClass\">datachanged</a>"],"method_calls":["fireEvent"],"id":"method-onCollectionAdd","owner":"Ext.data.ChainedStore","short_doc":" ..."},{"tagname":"method","name":"onCollectionFilter","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/LocalStore.js","linenr":93}],"doc":"<p>When the collection informs us that it has filtered, this LocalStore must react.\nAbstractStore#onFilterEndUpdate does the correct thing (fires a refresh) if remote sorting is false</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["onFilterEndUpdate"],"id":"method-onCollectionFilter","owner":"Ext.data.LocalStore","short_doc":"When the collection informs us that it has filtered, this LocalStore must react. ..."},{"tagname":"method","name":"onCollectionItemChange","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":143}],"doc":"<p>Our collection tells us that an item has changed</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[{"name":"collection","type":"Object","html_type":"Object"},{"name":"info","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.data.ChainedStore-event-update\" rel=\"Ext.data.ChainedStore-event-update\" class=\"docClass\">update</a>"],"method_calls":["fireEvent","onUpdate"],"id":"method-onCollectionItemChange","owner":"Ext.data.ChainedStore","short_doc":"Our collection tells us that an item has changed ..."},{"tagname":"method","name":"onCollectionRemove","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":159}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":159,"params":[{"name":"collection","type":"Object","html_type":"Object"},{"name":"info","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.data.ChainedStore-event-datachanged\" rel=\"Ext.data.ChainedStore-event-datachanged\" class=\"docClass\">datachanged</a>","<a href=\"#!/api/Ext.data.ChainedStore-event-remove\" rel=\"Ext.data.ChainedStore-event-remove\" class=\"docClass\">remove</a>"],"method_calls":["fireEvent"],"id":"method-onCollectionRemove","owner":"Ext.data.ChainedStore","short_doc":" ..."},{"tagname":"method","name":"onCollectionSort","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/LocalStore.js","linenr":87}],"doc":"<p>When the collection informs us that it has sorted, this LocalStore must react.\nAbstractStore#onSorterEndUpdate does the correct thing (fires a refresh) if remote sorting is false</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":["datachanged","refresh","sort"],"method_calls":["onSorterEndUpdate"],"id":"method-onCollectionSort","owner":"Ext.data.LocalStore","short_doc":"When the collection informs us that it has sorted, this LocalStore must react. ..."},{"tagname":"method","name":"onDestroy","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":246}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":246,"params":[],"chainable":false,"fires":[],"method_calls":["getData","setSource"],"id":"method-onDestroy","owner":"Ext.data.ChainedStore","short_doc":" ..."},{"tagname":"method","name":"onEndUpdate","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":1124}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1124,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-onEndUpdate","owner":"Ext.data.AbstractStore","short_doc":" ..."},{"tagname":"method","name":"onFilterEndUpdate","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":185}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":185,"params":[],"chainable":false,"fires":[],"method_calls":["callObservers","callParent"],"id":"method-onFilterEndUpdate","owner":"Ext.data.ChainedStore","return":null,"throws":null,"type":null,"overrides":[{"name":"onFilterEndUpdate","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-onFilterEndUpdate\" rel=\"Ext.data.AbstractStore-method-onFilterEndUpdate\" class=\"docClass\">Ext.data.AbstractStore.onFilterEndUpdate</a>"}],"short_doc":" ..."},{"tagname":"method","name":"onSorterEndUpdate","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":906}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":906,"params":[],"chainable":false,"fires":["<a href=\"#!/api/Ext.data.AbstractStore-event-datachanged\" rel=\"Ext.data.AbstractStore-event-datachanged\" class=\"docClass\">datachanged</a>","<a href=\"#!/api/Ext.data.AbstractStore-event-refresh\" rel=\"Ext.data.AbstractStore-event-refresh\" class=\"docClass\">refresh</a>","<a href=\"#!/api/Ext.data.AbstractStore-event-sort\" rel=\"Ext.data.AbstractStore-event-sort\" class=\"docClass\">sort</a>"],"method_calls":["attemptLoad","fireEvent","getRemoteSort","getSorters"],"id":"method-onSorterEndUpdate","owner":"Ext.data.AbstractStore","short_doc":" ..."},{"tagname":"method","name":"onSourceAfterClear","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":208}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":208,"params":[],"chainable":false,"fires":[],"method_calls":["callObservers"],"id":"method-onSourceAfterClear","owner":"Ext.data.ChainedStore","short_doc":" ..."},{"tagname":"method","name":"onSourceAfterLoad","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":181}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":181,"params":[{"name":"source","type":"Object","html_type":"Object"},{"name":"records","type":"Object","html_type":"Object"},{"name":"successful","type":"Object","html_type":"Object"},{"name":"operation","type":"Object","html_type":"Object"}],"chainable":false,"fires":["load"],"method_calls":["fireEvent"],"id":"method-onSourceAfterLoad","owner":"Ext.data.ChainedStore","short_doc":" ..."},{"tagname":"method","name":"onSourceAfterPopulate","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":195}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":195,"params":[],"chainable":false,"fires":["<a href=\"#!/api/Ext.data.ChainedStore-event-datachanged\" rel=\"Ext.data.ChainedStore-event-datachanged\" class=\"docClass\">datachanged</a>","<a href=\"#!/api/Ext.data.ChainedStore-event-refresh\" rel=\"Ext.data.ChainedStore-event-refresh\" class=\"docClass\">refresh</a>"],"method_calls":["callObservers","fireEvent"],"id":"method-onSourceAfterPopulate","owner":"Ext.data.ChainedStore","short_doc":" ..."},{"tagname":"method","name":"onSourceAfterRemoveAll","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":218}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":218,"params":[{"name":"source","type":"Object","html_type":"Object"},{"name":"silent","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.data.ChainedStore-event-clear\" rel=\"Ext.data.ChainedStore-event-clear\" class=\"docClass\">clear</a>","<a href=\"#!/api/Ext.data.ChainedStore-event-datachanged\" rel=\"Ext.data.ChainedStore-event-datachanged\" class=\"docClass\">datachanged</a>"],"method_calls":["callObservers","fireEvent"],"id":"method-onSourceAfterRemoveAll","owner":"Ext.data.ChainedStore","short_doc":" ..."},{"tagname":"method","name":"onSourceBeforeClear","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":203}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":203,"params":[],"chainable":false,"fires":[],"method_calls":["callObservers"],"id":"method-onSourceBeforeClear","owner":"Ext.data.ChainedStore","short_doc":" ..."},{"tagname":"method","name":"onSourceBeforeLoad","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":177}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":177,"params":[{"name":"source","type":"Object","html_type":"Object"},{"name":"operation","type":"Object","html_type":"Object"}],"chainable":false,"fires":["beforeload"],"method_calls":["fireEvent"],"id":"method-onSourceBeforeLoad","owner":"Ext.data.ChainedStore","short_doc":" ..."},{"tagname":"method","name":"onSourceBeforePopulate","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":190}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":190,"params":[],"chainable":false,"fires":[],"method_calls":["callObservers"],"id":"method-onSourceBeforePopulate","owner":"Ext.data.ChainedStore","short_doc":" ..."},{"tagname":"method","name":"onSourceBeforeRemoveAll","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":213}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":213,"params":[],"chainable":false,"fires":[],"method_calls":["callObservers"],"id":"method-onSourceBeforeRemoveAll","owner":"Ext.data.ChainedStore","short_doc":" ..."},{"tagname":"method","name":"onSourceFilter","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":228}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":228,"params":[],"chainable":false,"fires":["<a href=\"#!/api/Ext.data.ChainedStore-event-datachanged\" rel=\"Ext.data.ChainedStore-event-datachanged\" class=\"docClass\">datachanged</a>","<a href=\"#!/api/Ext.data.ChainedStore-event-refresh\" rel=\"Ext.data.ChainedStore-event-refresh\" class=\"docClass\">refresh</a>"],"method_calls":["fireEvent"],"id":"method-onSourceFilter","owner":"Ext.data.ChainedStore","short_doc":" ..."},{"tagname":"method","name":"onUpdate","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":157}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":157,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-onUpdate","owner":"Ext.data.ChainedStore","short_doc":" ..."},{"tagname":"method","name":"prepareClass","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":157}],"doc":"<p>Prepares a given class for observable instances. This method is called when a\nclass derives from this class or uses this class as a mixin.</p>\n","params":[{"tagname":"params","type":"Function","name":"T","doc":"<p>The class constructor to prepare.</p>\n","html_type":"Function"},{"tagname":"params","type":"Ext.util.Observable","name":"mixin","doc":"<p>The mixin if being used as a mixin.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},{"tagname":"params","type":"Object","name":"data","doc":"<p>The raw class creation data if this is an extend.</p>\n","html_type":"Object"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-prepareClass","owner":"Ext.mixin.Observable","short_doc":"Prepares a given class for observable instances. ..."},{"tagname":"method","name":"query","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":313}],"doc":"<p>Query all the cached records in this Store by name/value pair.\nThe parameters will be used to generated a filter function that is given\nto the queryBy method.</p>\n\n<p>This method complements queryBy by generating the query function automatically.</p>\n\n<p>This method is not affected by filtering, it will always search <em>all</em> records in the store\nregardless of filtering.</p>\n","inheritdoc":null,"params":[{"tagname":"params","type":"String","name":"property","doc":"<p>The property to create the filter function for</p>\n","html_type":"String"},{"tagname":"params","type":"String/RegExp","name":"value","doc":"<p>The string/regex to compare the property value to</p>\n","html_type":"String/RegExp"},{"tagname":"params","type":"Boolean","name":"anyMatch","default":"false","optional":true,"doc":"<p>True to match any part of the string, not just the\nbeginning.</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"caseSensitive","default":"false","optional":true,"doc":"<p><code>true</code> to create a case-sensitive regex.</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"exactMatch","default":"false","optional":true,"doc":"<p>True to force exact match (^ and $ characters\nadded to the regex). Ignored if <code>anyMatch</code> is <code>true</code>.</p>\n","html_type":"Boolean"}],"id":"method-query","owner":"Ext.data.ChainedStore","return":{"type":"Ext.util.Collection","name":"return","doc":"<p>The matched records</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"},"throws":null,"type":null,"overrides":[{"name":"query","owner":"Ext.data.LocalStore","link":"<a href=\"#!/api/Ext.data.LocalStore-method-query\" rel=\"Ext.data.LocalStore-method-query\" class=\"docClass\">Ext.data.LocalStore.query</a>"}],"short_doc":"Query all the cached records in this Store by name/value pair. ..."},{"tagname":"method","name":"queryBy","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":308}],"doc":"<p>Query all the cached records in this Store using a filtering function. The specified function\nwill be called with each record in this Store. If the function returns <code>true</code> the record is\nincluded in the results.</p>\n\n<p>This method is not affected by filtering, it will always search <em>all</em> records in the store\nregardless of filtering.</p>\n","inheritdoc":null,"params":[{"tagname":"params","type":"Function","name":"fn","doc":"<p>The function to be called. It will be passed the following parameters:</p>\n","properties":[{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The record to test for filtering. Access field values\n using <a href=\"#!/api/Ext.data.Model-method-get\" rel=\"Ext.data.Model-method-get\" class=\"docClass\">Ext.data.Model.get</a>.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},{"tagname":"params","type":"Object","name":"id","doc":"<p>The ID of the Record passed.</p>\n","html_type":"Object"}],"html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (this reference) in which the function is executed\nDefaults to this Store.</p>\n","html_type":"Object"}],"id":"method-queryBy","owner":"Ext.data.ChainedStore","return":{"type":"Ext.util.Collection","name":"return","doc":"<p>The matched records</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"},"throws":null,"type":null,"overrides":[{"name":"queryBy","owner":"Ext.data.LocalStore","link":"<a href=\"#!/api/Ext.data.LocalStore-method-queryBy\" rel=\"Ext.data.LocalStore-method-queryBy\" class=\"docClass\">Ext.data.LocalStore.queryBy</a>"}],"short_doc":"Query all the cached records in this Store using a filtering function. ..."},{"tagname":"method","name":"queryRecords","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/LocalStore.js","linenr":551}],"doc":"<p>Query all the cached records in this Store by field.</p>\n\n<p>This method is not affected by filtering, it will always search <em>all</em> records in the store\nregardless of filtering.</p>\n","params":[{"tagname":"params","type":"String","name":"field","doc":"<p>The field from each record to use.</p>\n","html_type":"String"},{"tagname":"params","type":"Object","name":"value","doc":"<p>The value to match.</p>\n","html_type":"Object"}],"return":{"type":"Ext.data.Model[]","name":"return","doc":"<p>The matched records.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getData"],"id":"method-queryRecords","owner":"Ext.data.LocalStore","short_doc":"Query all the cached records in this Store by field. ..."},{"tagname":"method","name":"queryRecordsBy","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/LocalStore.js","linenr":518}],"doc":"<p>Query all the cached records in this Store using a filtering function. The specified function\nwill be called with each record in this Store. If the function returns <code>true</code> the record is\nincluded in the results.</p>\n\n<p>This method is not affected by filtering, it will always search <em>all</em> records in the store\nregardless of filtering.</p>\n","params":[{"tagname":"params","type":"Function","name":"fn","doc":"<p>The function to be called. It will be passed the following parameters:</p>\n","properties":[{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The record to test for filtering.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"}],"html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (this reference) in which the function is executed\nDefaults to this Store.</p>\n","html_type":"Object"}],"return":{"type":"Ext.data.Model[]","name":"return","doc":"<p>The matched records.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getData"],"id":"method-queryRecordsBy","owner":"Ext.data.LocalStore","short_doc":"Query all the cached records in this Store using a filtering function. ..."},{"tagname":"method","name":"rangeCached","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":296}],"doc":"<p>Determines if the passed range is available in the page cache.</p>\n","private":true,"params":[{"tagname":"params","type":"Number","name":"start","doc":"<p>The start index</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"end","doc":"<p>The end index in the range</p>\n","html_type":"Number"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getData"],"id":"method-rangeCached","owner":"Ext.data.AbstractStore","short_doc":"Determines if the passed range is available in the page cache. ..."},{"tagname":"method","name":"relayEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1260}],"doc":"<p>Relays selected events from the specified Observable as if the events were fired by <code>this</code>.</p>\n\n<p>For example if you are extending Grid, you might decide to forward some events from store.\nSo you can do this inside your initComponent:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load']);\n</code></pre>\n\n<p>The grid instance will then have an observable 'load' event which will be passed\nthe parameters of the store's load event and any function fired with the grid's\nload event would have access to the grid using the this keyword (unless the event\nis handled by a controller's control/listen event listener in which case 'this'\nwill be the controller rather than the grid).</p>\n","params":[{"tagname":"params","type":"Object","name":"origin","doc":"<p>The Observable whose events this object is to relay.</p>\n","html_type":"Object"},{"tagname":"params","type":"String[]","name":"events","doc":"<p>Array of event names to relay.</p>\n","html_type":"String[]"},{"tagname":"params","type":"String","name":"prefix","optional":true,"doc":"<p>A common prefix to prepend to the event names. For example:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>Now the grid will forward 'load' and 'clear' events of store as 'storeload' and 'storeclear'.</p>\n","html_type":"String"}],"return":{"type":"Object","name":"return","doc":"<p>A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which, when destroyed, removes all relayers. For example:</p>\n\n<pre><code>this.storeRelayers = this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>Can be undone by calling</p>\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.storeRelayers);\n</code></pre>\n\n<p>or\n    this.store.relayers.destroy();</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["createRelayer","mon"],"id":"method-relayEvents","owner":"Ext.mixin.Observable","short_doc":"Relays selected events from the specified Observable as if the events were fired by this. ..."},{"tagname":"method","name":"remove","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":55}],"doc":"<p></p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getSource"],"id":"method-remove","owner":"Ext.data.ChainedStore","short_doc":" ..."},{"tagname":"method","name":"removeAfterListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1535}],"doc":"<p>Removes a before-event handler.</p>\n\n<p>Same as <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a> with <code>order</code> set to <code>'after'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event the handler was associated with.</p>\n\n","html_type":"String/String[]/Object"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The handler to remove.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope originally specified for <code>fn</code>.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>Extra options object.</p>\n\n","html_type":"Object"}],"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a> instead.</p>\n","version":"5.1"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["removeListener"],"id":"method-removeAfterListener","owner":"Ext.mixin.Observable","short_doc":"Removes a before-event handler. ..."},{"tagname":"method","name":"removeBeforeListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1520}],"doc":"<p>Removes a before-event handler.</p>\n\n<p>Same as <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a> with <code>order</code> set to <code>'before'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event the handler was associated with.</p>\n\n","html_type":"String/String[]/Object"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The handler to remove.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope originally specified for <code>fn</code>.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>Extra options object.</p>\n\n","html_type":"Object"}],"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a> instead.</p>\n","version":"5.1"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["removeListener"],"id":"method-removeBeforeListener","owner":"Ext.mixin.Observable","short_doc":"Removes a before-event handler. ..."},{"tagname":"method","name":"removeFilter","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":556}],"doc":"<p>Removes an individual Filter from the current <a href=\"#!/api/Ext.data.AbstractStore-cfg-filters\" rel=\"Ext.data.AbstractStore-cfg-filters\" class=\"docClass\">filter set</a> using the passed Filter/Filter id and\nby default, applies the updated filter set to the Store's unfiltered dataset.</p>\n","params":[{"tagname":"params","type":"String/Ext.util.Filter","name":"toRemove","doc":"<p>The id of a Filter to remove from the filter set, or a Filter instance to remove.</p>\n","html_type":"String/<a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a>"},{"tagname":"params","type":"Boolean","name":"suppressEvent","optional":true,"doc":"<p>If <code>true</code> the filter is cleared silently.</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getFilters"],"id":"method-removeFilter","owner":"Ext.data.AbstractStore","short_doc":"Removes an individual Filter from the current filter set using the passed Filter/Filter id and\nby default, applies th..."},{"tagname":"method","name":"removeListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":992}],"doc":"<p>Removes an event handler.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The type of event the handler was associated with.</p>\n\n","html_type":"String"},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The handler to remove. <strong>This must be a reference to the function\npassed into the\n<a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope originally specified for the handler. It\nmust be the same as the scope argument specified in the original call to\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a> or the listener will not be removed.</p>\n\n\n\n\n<p><strong>Convenience Syntax</strong></p>\n\n\n\n\n<p>You can use the {link <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> addListener destroyable: true} config option in\nplace of calling un().  For example:</p>\n\n\n\n\n<pre><code>var listeners = cmp.on({\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide,\n    destroyable: true\n});\n\n// Remove listeners\nlisteners.destroy();\n// or\ncmp.un(\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide\n);\n</code></pre>\n\n\n\n\n<p><strong>Exception - DOM event handlers using the element config option</strong></p>\n\n\n\n\n<p>You must go directly through the element to detach an event handler attached using\nthe <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> <em>element</em> option.</p>\n\n\n\n\n<pre><code>panel.on({\n    element: 'body',\n    click: 'onBodyCLick'\n});\n\npanel.body.un({\n    click: 'onBodyCLick'\n});\n</code></pre>\n\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["doRemoveListener"],"id":"method-removeListener","owner":"Ext.mixin.Observable","short_doc":"Removes an event handler. ..."},{"tagname":"method","name":"removeManagedListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":512}],"doc":"<p>Removes listeners that were added by the <a href=\"#!/api/Ext.mixin.Observable-method-mon\" rel=\"Ext.mixin.Observable-method-mon\" class=\"docClass\">mon</a> method.</p>\n","params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item from which to remove a listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","html_type":"Object/String"},{"tagname":"params","type":"Function","name":"fn","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["removeManagedListener","removeManagedListenerItem"],"id":"method-removeManagedListener","owner":"Ext.mixin.Observable","short_doc":"Removes listeners that were added by the mon method. ..."},{"tagname":"method","name":"removeManagedListenerItem","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1112}],"doc":"<p>Remove a single managed listener item</p>\n","private":true,"params":[{"tagname":"params","type":"Boolean","name":"isClear","doc":"<p>True if this is being called during a clear</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Object","name":"managedListener","doc":"<p>The managed listener item\nSee removeManagedListener for other args</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-removeManagedListenerItem","owner":"Ext.mixin.Observable","short_doc":"Remove a single managed listener item ..."},{"tagname":"method","name":"removeObserver","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/LocalStore.js","linenr":489}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":489,"params":[{"name":"observer","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-removeObserver","owner":"Ext.data.LocalStore","short_doc":" ..."},{"tagname":"method","name":"resolveListenerScope","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":565}],"doc":"<p>Gets the default scope for firing late bound events (string names with\nno scope attached) at runtime.</p>\n","params":[{"tagname":"params","type":"Object","name":"defaultScope","default":"this","optional":true,"doc":"<p>The default scope to return if none is found.</p>\n","html_type":"Object"}],"return":{"type":"Object","name":"return","doc":"<p>The default event scope</p>\n\n","properties":null,"html_type":"Object"},"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-resolveListenerScope","owner":"Ext.mixin.Observable","overrides":[{"name":"resolveListenerScope","owner":"Ext.mixin.Inheritable","link":"<a href=\"#!/api/Ext.mixin.Inheritable-method-resolveListenerScope\" rel=\"Ext.mixin.Inheritable-method-resolveListenerScope\" class=\"docClass\">Ext.mixin.Inheritable.resolveListenerScope</a>"},{"name":"resolveListenerScope","owner":"Ext.plugin.Abstract","link":"<a href=\"#!/api/Ext.plugin.Abstract-method-resolveListenerScope\" rel=\"Ext.plugin.Abstract-method-resolveListenerScope\" class=\"docClass\">Ext.plugin.Abstract.resolveListenerScope</a>"}],"short_doc":"Gets the default scope for firing late bound events (string names with\nno scope attached) at runtime. ..."},{"tagname":"method","name":"resumeEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1209}],"doc":"<p>Resumes firing of the named event(s).</p>\n\n<p>After calling this method to resume events, the events will fire when requested to fire.</p>\n\n<p><strong>Note that if the <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvent\" rel=\"Ext.mixin.Observable-method-suspendEvent\" class=\"docClass\">suspendEvent</a> method is called multiple times for a certain event,\nthis converse method will have to be called the same number of times for it to resume firing.</strong></p>\n","params":[{"tagname":"params","type":"String...","name":"eventName","doc":"<p>Multiple event names to resume.</p>\n","html_type":"String..."}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-resumeEvent","owner":"Ext.mixin.Observable","short_doc":"Resumes firing of the named event(s). ..."},{"tagname":"method","name":"resumeEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1233}],"doc":"<p>Resumes firing events (see <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvents\" rel=\"Ext.mixin.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a>).</p>\n\n<p>If events were suspended using the <code>queueSuspended</code> parameter, then all events fired\nduring event suspension will be sent to any listeners now.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"discardQueue","optional":true,"doc":"<p><code>true</code> to prevent any previously queued events from firing\nwhile we were suspended. See <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvents\" rel=\"Ext.mixin.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a>.</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-resumeEvents","owner":"Ext.mixin.Observable","short_doc":"Resumes firing events (see suspendEvents). ..."},{"tagname":"method","name":"setAutoDestroy","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.AbstractStore-cfg-autoDestroy\" rel=\"Ext.data.AbstractStore-cfg-autoDestroy\" class=\"docClass\">autoDestroy</a>.</p>\n","params":[{"type":"Boolean","name":"autoDestroy","doc":"<p>The new value.</p>\n","html_type":"Boolean"}],"id":"method-setAutoDestroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":45}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.AbstractStore","short_doc":"Sets the value of autoDestroy. ..."},{"tagname":"method","name":"setConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1441}],"doc":"<p>Sets a single/multiple configuration options.</p>\n","params":[{"tagname":"params","type":"String/Object","name":"name","doc":"<p>The name of the property to set, or a set of key value pairs to set.</p>\n","html_type":"String/Object"},{"tagname":"params","type":"Object","name":"value","optional":true,"doc":"<p>The value to set for the name parameter.</p>\n","html_type":"Object"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["getConfigurator"],"id":"method-setConfig","owner":"Ext.Base","short_doc":"Sets a single/multiple configuration options. ..."},{"tagname":"method","name":"setExtraKeys","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.LocalStore-cfg-extraKeys\" rel=\"Ext.data.LocalStore-cfg-extraKeys\" class=\"docClass\">extraKeys</a>.</p>\n","params":[{"type":"Object","name":"extraKeys","doc":"<p>The new value.</p>\n","html_type":"Object"}],"id":"method-setExtraKeys","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/LocalStore.js","linenr":13}],"static":null,"private":null,"inheritable":null,"linenr":13,"owner":"Ext.data.LocalStore","short_doc":"Sets the value of extraKeys. ..."},{"tagname":"method","name":"setGroupDir","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.AbstractStore-cfg-groupDir\" rel=\"Ext.data.AbstractStore-cfg-groupDir\" class=\"docClass\">groupDir</a>.</p>\n","params":[{"type":"String","name":"groupDir","doc":"<p>The new value.</p>\n","html_type":"String"}],"id":"method-setGroupDir","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":100}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.AbstractStore","short_doc":"Sets the value of groupDir. ..."},{"tagname":"method","name":"setGroupField","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.AbstractStore-cfg-groupField\" rel=\"Ext.data.AbstractStore-cfg-groupField\" class=\"docClass\">groupField</a>.</p>\n","params":[{"type":"String","name":"groupField","doc":"<p>The new value.</p>\n","html_type":"String"}],"id":"method-setGroupField","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":92}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.AbstractStore","short_doc":"Sets the value of groupField. ..."},{"tagname":"method","name":"setGrouper","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.AbstractStore-cfg-grouper\" rel=\"Ext.data.AbstractStore-cfg-grouper\" class=\"docClass\">grouper</a>.</p>\n","params":[{"type":"Object/Ext.util.Grouper","name":"grouper","doc":"<p>The new value.</p>\n","html_type":"Object/<a href=\"#!/api/Ext.util.Grouper\" rel=\"Ext.util.Grouper\" class=\"docClass\">Ext.util.Grouper</a>"}],"id":"method-setGrouper","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":106}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.AbstractStore","short_doc":"Sets the value of grouper. ..."},{"tagname":"method","name":"setListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1677}],"doc":"<p>An alias for <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a>.  In versions prior to 5.1, <a href=\"#!/api/Ext.mixin.Observable-cfg-listeners\" rel=\"Ext.mixin.Observable-cfg-listeners\" class=\"docClass\">listeners</a>\nhad a generated setter which could be called to add listeners.  In 5.1 the listeners\nconfig is not processed using the config system and has no generated setter, so\nthis method is provided for backward compatibility.  The preferred way of\nadding listeners is to use the <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> method.</p>\n","params":[{"tagname":"params","type":"Object","name":"listeners","doc":"<p>The listeners</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-setListeners","owner":"Ext.mixin.Observable","short_doc":"An alias for addListener. ..."},{"tagname":"method","name":"setPageSize","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.AbstractStore-cfg-pageSize\" rel=\"Ext.data.AbstractStore-cfg-pageSize\" class=\"docClass\">pageSize</a>.</p>\n","params":[{"type":"Number","name":"pageSize","doc":"<p>The new value.</p>\n","html_type":"Number"}],"id":"method-setPageSize","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":113}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.AbstractStore","short_doc":"Sets the value of pageSize. ..."},{"tagname":"method","name":"setRemoteFilter","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.ChainedStore-cfg-remoteFilter\" rel=\"Ext.data.ChainedStore-cfg-remoteFilter\" class=\"docClass\">remoteFilter</a>.</p>\n","params":[{"type":"Boolean","name":"remoteFilter","doc":"<p>The new value.</p>\n","html_type":"Boolean"}],"id":"method-setRemoteFilter","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":18}],"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.ChainedStore","overrides":[{"name":"setRemoteFilter","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-setRemoteFilter\" rel=\"Ext.data.AbstractStore-method-setRemoteFilter\" class=\"docClass\">Ext.data.AbstractStore.setRemoteFilter</a>"}],"short_doc":"Sets the value of remoteFilter. ..."},{"tagname":"method","name":"setRemoteSort","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.ChainedStore-cfg-remoteSort\" rel=\"Ext.data.ChainedStore-cfg-remoteSort\" class=\"docClass\">remoteSort</a>.</p>\n","params":[{"type":"Boolean","name":"remoteSort","doc":"<p>The new value.</p>\n","html_type":"Boolean"}],"id":"method-setRemoteSort","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":23}],"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.ChainedStore","overrides":[{"name":"setRemoteSort","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-setRemoteSort\" rel=\"Ext.data.AbstractStore-method-setRemoteSort\" class=\"docClass\">Ext.data.AbstractStore.setRemoteSort</a>"}],"short_doc":"Sets the value of remoteSort. ..."},{"tagname":"method","name":"setSource","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.ChainedStore-cfg-source\" rel=\"Ext.data.ChainedStore-cfg-source\" class=\"docClass\">source</a>.</p>\n","params":[{"type":"Ext.data.Store/String","name":"source","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>/String"}],"id":"method-setSource","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":11}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.ChainedStore","short_doc":"Sets the value of source. ..."},{"tagname":"method","name":"setStatefulFilters","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.AbstractStore-cfg-statefulFilters\" rel=\"Ext.data.AbstractStore-cfg-statefulFilters\" class=\"docClass\">statefulFilters</a>.</p>\n","params":[{"type":"Boolean","name":"statefulFilters","doc":"<p>The new value.</p>\n","html_type":"Boolean"}],"id":"method-setStatefulFilters","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":62}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.AbstractStore","short_doc":"Sets the value of statefulFilters. ..."},{"tagname":"method","name":"setStoreId","doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.AbstractStore-cfg-storeId\" rel=\"Ext.data.AbstractStore-cfg-storeId\" class=\"docClass\">storeId</a>.</p>\n","params":[{"type":"String","name":"storeId","doc":"<p>The new value.</p>\n","html_type":"String"}],"id":"method-setStoreId","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":52}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.data.AbstractStore","short_doc":"Sets the value of storeId. ..."},{"tagname":"method","name":"sort","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":848}],"doc":"<p>Sorts the data in the Store by one or more of its properties. Example usage:</p>\n\n<pre><code>//sort by a single field\nmyStore.sort('myField', 'DESC');\n\n//sorting by multiple fields\nmyStore.sort([\n    {\n        property : 'age',\n        direction: 'ASC'\n    },\n    {\n        property : 'name',\n        direction: 'DESC'\n    }\n]);\n</code></pre>\n\n<p>Internally, Store converts the passed arguments into an array of <a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a> instances, and delegates\nthe actual sorting to its internal <a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a>.</p>\n\n<p>When passing a single string argument to sort, Store maintains a ASC/DESC toggler per field, so this code:</p>\n\n<pre><code>store.sort('myField');\nstore.sort('myField');\n</code></pre>\n\n<p>Is equivalent to this code, because Store handles the toggling automatically:</p>\n\n<pre><code>store.sort('myField', 'ASC');\nstore.sort('myField', 'DESC');\n</code></pre>\n","params":[{"tagname":"params","type":"String/Ext.util.Sorter[]","name":"sorters","optional":true,"doc":"<p>Either a string name of one of the fields in this Store's configured\n<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Model</a>, or an array of sorter configurations.</p>\n","html_type":"String/<a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a>[]"},{"tagname":"params","type":"String","name":"direction","default":"\"ASC\"","optional":true,"doc":"<p>The overall direction to sort the data by.</p>\n","html_type":"String"}],"return":{"type":"Ext.util.Sorter[]","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a>[]"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["attemptLoad","forceLocalSort","getRemoteSort","getSorters"],"id":"method-sort","owner":"Ext.data.AbstractStore","short_doc":"Sorts the data in the Store by one or more of its properties. ..."},{"tagname":"method","name":"statics","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1075}],"doc":"<p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self();   // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n","protected":true,"return":{"type":"Ext.Class","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-statics","owner":"Ext.Base","short_doc":"Get the reference to the class from which this object was instantiated. ..."},{"tagname":"method","name":"sum","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":328}],"doc":"<p>Sums the value of <code>field</code> for each <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">record</a> in store\nand returns the result.</p>\n\n<p>When store is filtered, only sums items within the filter.</p>\n","inheritdoc":null,"params":[{"tagname":"params","type":"String","name":"field","doc":"<p>A field in each record</p>\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"grouped","optional":true,"doc":"<p>True to perform the operation for each group\nin the store. The value returned will be an object literal with the key being the group\nname and the sum for that group being the value. The grouped parameter is only honored if\nthe store has a groupField.</p>\n","html_type":"Boolean"}],"id":"method-sum","owner":"Ext.data.ChainedStore","return":{"type":"Number","name":"return","doc":"<p>The sum</p>\n","properties":null,"html_type":"Number"},"throws":null,"type":null,"overrides":[{"name":"sum","owner":"Ext.data.LocalStore","link":"<a href=\"#!/api/Ext.data.LocalStore-method-sum\" rel=\"Ext.data.LocalStore-method-sum\" class=\"docClass\">Ext.data.LocalStore.sum</a>"}],"short_doc":"Sums the value of field for each record in store\nand returns the result. ..."},{"tagname":"method","name":"suspendEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1181}],"doc":"<p>Suspends firing of the named event(s).</p>\n\n<p>After calling this method to suspend events, the events will no longer fire when requested to fire.</p>\n\n<p><strong>Note that if this is called multiple times for a certain event, the converse method\n<a href=\"#!/api/Ext.mixin.Observable-method-resumeEvent\" rel=\"Ext.mixin.Observable-method-resumeEvent\" class=\"docClass\">resumeEvent</a> will have to be called the same number of times for it to resume firing.</strong></p>\n","params":[{"tagname":"params","type":"String...","name":"eventName","doc":"<p>Multiple event names to suspend.</p>\n","html_type":"String..."}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["_initEvent"],"id":"method-suspendEvent","owner":"Ext.mixin.Observable","short_doc":"Suspends firing of the named event(s). ..."},{"tagname":"method","name":"suspendEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1168}],"doc":"<p>Suspends the firing of all events. (see <a href=\"#!/api/Ext.mixin.Observable-method-resumeEvents\" rel=\"Ext.mixin.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a>)</p>\n","params":[{"tagname":"params","type":"Boolean","name":"queueSuspended","doc":"<p><code>true</code> to queue up suspended events to be fired\nafter the <a href=\"#!/api/Ext.mixin.Observable-method-resumeEvents\" rel=\"Ext.mixin.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> call instead of discarding all suspended events.</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-suspendEvents","owner":"Ext.mixin.Observable","short_doc":"Suspends the firing of all events. ..."},{"tagname":"method","name":"un","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1659}],"doc":"<p>Shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The type of event the handler was associated with.</p>\n\n","html_type":"String"},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The handler to remove. <strong>This must be a reference to the function\npassed into the\n<a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope originally specified for the handler. It\nmust be the same as the scope argument specified in the original call to\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a> or the listener will not be removed.</p>\n\n\n\n\n<p><strong>Convenience Syntax</strong></p>\n\n\n\n\n<p>You can use the {link <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> addListener destroyable: true} config option in\nplace of calling un().  For example:</p>\n\n\n\n\n<pre><code>var listeners = cmp.on({\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide,\n    destroyable: true\n});\n\n// Remove listeners\nlisteners.destroy();\n// or\ncmp.un(\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide\n);\n</code></pre>\n\n\n\n\n<p><strong>Exception - DOM event handlers using the element config option</strong></p>\n\n\n\n\n<p>You must go directly through the element to detach an event handler attached using\nthe <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> <em>element</em> option.</p>\n\n\n\n\n<pre><code>panel.on({\n    element: 'body',\n    click: 'onBodyCLick'\n});\n\npanel.body.un({\n    click: 'onBodyCLick'\n});\n</code></pre>\n\n","html_type":"Object"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-un","owner":"Ext.mixin.Observable","return":null,"throws":null,"type":null,"short_doc":"Shorthand for removeListener. ..."},{"tagname":"method","name":"unAfter","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1571}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-removeAfterListener\" rel=\"Ext.mixin.Observable-method-removeAfterListener\" class=\"docClass\">removeAfterListener</a>.</p>\n","inheritdoc":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-un\" rel=\"Ext.mixin.Observable-method-un\" class=\"docClass\">un</a> instead.</p>\n","version":"5.1"},"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event the handler was associated with.</p>\n\n","html_type":"String/String[]/Object"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The handler to remove.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope originally specified for <code>fn</code>.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>Extra options object.</p>\n\n","html_type":"Object"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-unAfter","owner":"Ext.mixin.Observable","return":null,"throws":null,"type":null,"short_doc":"Alias for removeAfterListener. ..."},{"tagname":"method","name":"unBefore","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/mixin/Observable.js","linenr":1564}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-removeBeforeListener\" rel=\"Ext.mixin.Observable-method-removeBeforeListener\" class=\"docClass\">removeBeforeListener</a>.</p>\n","inheritdoc":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-un\" rel=\"Ext.mixin.Observable-method-un\" class=\"docClass\">un</a> instead.</p>\n","version":"5.1"},"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event the handler was associated with.</p>\n\n","html_type":"String/String[]/Object"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The handler to remove.</p>\n\n","html_type":"Function/String"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope originally specified for <code>fn</code>.</p>\n\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>Extra options object.</p>\n\n","html_type":"Object"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-unBefore","owner":"Ext.mixin.Observable","return":null,"throws":null,"type":null,"short_doc":"Alias for removeBeforeListener. ..."},{"tagname":"method","name":"unblockLoad","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":39}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":39,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-unblockLoad","owner":"Ext.data.ChainedStore","short_doc":" ..."},{"tagname":"method","name":"unlink","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1526}],"doc":"<p>Destroys a given set of <code><a href=\"#!/api/Ext.Base-method-link\" rel=\"Ext.Base-method-link\" class=\"docClass\">linked</a></code> objects. This is only needed if\nthe linked object is being destroyed before this instance.</p>\n","params":[{"tagname":"params","type":"String[]","name":"names","doc":"<p>The names of the linked objects to destroy.</p>\n","html_type":"String[]"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"method-unlink","owner":"Ext.Base","short_doc":"Destroys a given set of linked objects. ..."},{"tagname":"method","name":"updateGroupField","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":967}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":967,"params":[{"name":"field","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["getGroupDir","setGrouper"],"id":"method-updateGroupField","owner":"Ext.data.AbstractStore","short_doc":" ..."},{"tagname":"method","name":"updateRemoteFilter","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":41}],"doc":"<p><debug></debug></p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[{"name":"remoteFilter","type":"Object","html_type":"Object"},{"name":"oldRemoteFilter","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["callParent"],"id":"method-updateRemoteFilter","owner":"Ext.data.ChainedStore","return":null,"throws":null,"type":null,"overrides":[{"name":"updateRemoteFilter","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-updateRemoteFilter\" rel=\"Ext.data.AbstractStore-method-updateRemoteFilter\" class=\"docClass\">Ext.data.AbstractStore.updateRemoteFilter</a>"}],"short_doc":" ..."},{"tagname":"method","name":"updateRemoteSort","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":49}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":49,"params":[{"name":"remoteSort","type":"Object","html_type":"Object"},{"name":"oldRemoteSort","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["callParent"],"id":"method-updateRemoteSort","owner":"Ext.data.ChainedStore","return":null,"throws":null,"type":null,"overrides":[{"name":"updateRemoteSort","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-updateRemoteSort\" rel=\"Ext.data.AbstractStore-method-updateRemoteSort\" class=\"docClass\">Ext.data.AbstractStore.updateRemoteSort</a>"}],"short_doc":" ..."},{"tagname":"method","name":"updateSource","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/ChainedStore.js","linenr":94}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":94,"params":[{"name":"source","type":"Object","html_type":"Object"},{"name":"oldSource","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.data.ChainedStore-event-datachanged\" rel=\"Ext.data.ChainedStore-event-datachanged\" class=\"docClass\">datachanged</a>","<a href=\"#!/api/Ext.data.ChainedStore-event-refresh\" rel=\"Ext.data.ChainedStore-event-refresh\" class=\"docClass\">refresh</a>"],"method_calls":["fireEvent","getData"],"id":"method-updateSource","owner":"Ext.data.ChainedStore","short_doc":" ..."},{"tagname":"method","name":"addConfig","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":911}],"doc":"<p>Adds new config properties to this class. This is called for classes when they\nare declared, then for any mixins that class may define and finally for any\noverrides defined that target the class.</p>\n","params":[{"tagname":"params","type":"Object","name":"config","doc":"\n","html_type":"Object"},{"tagname":"params","type":"Ext.Class","name":"mixinClass","optional":true,"doc":"<p>The mixin class if the configs are from a mixin.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"}],"private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["getConfigurator"],"id":"static-method-addConfig","owner":"Ext.Base","short_doc":"Adds new config properties to this class. ..."},{"tagname":"method","name":"addInheritableStatics","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":436}],"doc":"\n","private":true,"static":true,"inheritable":true,"params":[{"tagname":"params","type":"Object","name":"members","doc":"\n","html_type":"Object"}],"inheritdoc":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"static-method-addInheritableStatics","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"addMember","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":634}],"doc":"\n","private":true,"static":true,"inheritable":true,"params":[{"tagname":"params","name":"name","doc":"\n","type":"Object","html_type":"Object"},{"tagname":"params","name":"member","doc":"\n","type":"Object","html_type":"Object"}],"inheritdoc":null,"linenr":null,"chainable":true,"fires":null,"method_calls":["addMembers"],"id":"static-method-addMember","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"addMembers","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":480}],"doc":"<p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat();\n kitty.meow();\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"<p>The members to add to this class.</p>\n","html_type":"Object"},{"tagname":"params","type":"Boolean","name":"isStatic","default":"false","optional":true,"doc":"<p>Pass <code>true</code> if the members are static.</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"privacy","default":"false","optional":true,"doc":"<p>Pass <code>true</code> if the members are private. This\nonly has meaning in debug mode and only for methods.</p>\n","html_type":"Boolean"}],"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":true,"fires":null,"method_calls":["addConfig","addMembers"],"id":"static-method-addMembers","owner":"Ext.Base","short_doc":"Add methods / properties to the prototype of this class. ..."},{"tagname":"method","name":"addStatics","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":413}],"doc":"<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"\n","html_type":"Object"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":true,"fires":null,"method_calls":["addMembers"],"id":"static-method-addStatics","owner":"Ext.Base","short_doc":"Add / override static properties of this class. ..."},{"tagname":"method","name":"borrow","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":648}],"doc":"<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n","params":[{"tagname":"params","type":"Ext.Base","name":"fromClass","doc":"<p>The class to borrow members from</p>\n","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},{"tagname":"params","type":"Array/String","name":"members","doc":"<p>The names of the members to borrow</p>\n","html_type":"Array/String"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"inheritable":true,"private":true,"inheritdoc":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["addMembers"],"id":"static-method-borrow","owner":"Ext.Base","short_doc":"Borrow another class' members to the prototype of this class. ..."},{"tagname":"method","name":"callParent","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":785}],"doc":"\n","protected":true,"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[{"name":"args","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-callParent","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"callSuper","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":799}],"doc":"\n","protected":true,"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[{"name":"args","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-callSuper","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"create","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":94}],"doc":"<p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n","return":{"type":"Object","name":"return","doc":"<p>the created instance.</p>\n","properties":null,"html_type":"Object"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-create","owner":"Ext.Base","short_doc":"Create a new instance of this Class. ..."},{"tagname":"method","name":"createAlias","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":973}],"doc":"<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n","params":[{"tagname":"params","type":"String/Object","name":"alias","doc":"<p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n","html_type":"String/Object"},{"tagname":"params","type":"String/Object","name":"origin","doc":"<p>The original method name</p>\n","html_type":"String/Object"}],"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"static-method-createAlias","owner":"Ext.Base","short_doc":"Create aliases for existing prototype methods. ..."},{"tagname":"method","name":"extend","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":322}],"doc":"\n","private":true,"static":true,"inheritable":true,"params":[{"tagname":"params","name":"config","doc":"\n","type":"Object","html_type":"Object"}],"inheritdoc":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["getConfigurator","hasOwnProperty"],"id":"static-method-extend","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"getConfigurator","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":940}],"doc":"<p>Returns the <code><a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a></code> for this class.</p>\n","return":{"type":"Ext.Configurator","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a>"},"private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-getConfigurator","owner":"Ext.Base","short_doc":"Returns the Ext.Configurator for this class. ..."},{"tagname":"method","name":"getName","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":954}],"doc":"<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n","return":{"type":"String","name":"return","doc":"<p>className</p>\n","properties":null,"html_type":"String"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-getName","owner":"Ext.Base","short_doc":"Get the current class' name in string format. ..."},{"tagname":"method","name":"mixin","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":814}],"doc":"<p>Used internally by the mixins pre-processor</p>\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[{"name":"name","type":"Object","html_type":"Object"},{"name":"mixinClass","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":["addConfig","hasOwnProperty","mixin"],"id":"static-method-mixin","owner":"Ext.Base","short_doc":"Used internally by the mixins pre-processor ..."},{"tagname":"method","name":"onExtended","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":399}],"doc":"\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[{"name":"fn","type":"Object","html_type":"Object"},{"name":"scope","type":"Object","html_type":"Object"}],"chainable":true,"fires":null,"method_calls":null,"id":"static-method-onExtended","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"override","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":695}],"doc":"<p>Override members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>Direct use of this method should be rare. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n","html_type":"Object"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this class</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["addCachedConfig","addConfig","addInheritableStatics","addMembers","mixin"],"id":"static-method-override","owner":"Ext.Base","short_doc":"Override members of this class. ..."},{"tagname":"method","name":"triggerExtended","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":377}],"doc":"\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-triggerExtended","owner":"Ext.Base","short_doc":" ..."},{"tagname":"event","name":"add","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":167}],"doc":"<p>Fired when a Model instance has been added to this Store.</p>\n","params":[{"tagname":"params","type":"Ext.data.Store","name":"store","doc":"<p>The store.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"tagname":"params","type":"Ext.data.Model[]","name":"records","doc":"<p>The records that were added.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},{"tagname":"params","type":"Number","name":"index","doc":"<p>The index at which the records were inserted.</p>\n","html_type":"Number"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"since":"1.1.0","id":"event-add","owner":"Ext.data.AbstractStore","short_doc":"Fired when a Model instance has been added to this Store. ..."},{"tagname":"event","name":"beforesort","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":245}],"doc":"<p>Fires before a store is sorted.</p>\n\n<p>For <a href=\"#!/api/Ext.data.AbstractStore-cfg-remoteSort\" rel=\"Ext.data.AbstractStore-cfg-remoteSort\" class=\"docClass\">remotely sorted</a> stores, this will be just before the load operation triggered by changing the\nstore's sorters.</p>\n\n<p>For locally sorted stores, this will be just before the data items in the store's backing collection are sorted.</p>\n","params":[{"tagname":"params","type":"Ext.data.Store","name":"store","doc":"<p>The store being sorted</p>\n","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"tagname":"params","type":"Ext.util.Sorter[]","name":"sorters","doc":"<p>Array of sorters applied to the store</p>\n","html_type":"<a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a>[]"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-beforesort","owner":"Ext.data.AbstractStore","short_doc":"Fires before a store is sorted. ..."},{"tagname":"event","name":"beginupdate","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":231}],"doc":"<p>Fires when the <a href=\"#!/api/Ext.data.AbstractStore-method-beginUpdate\" rel=\"Ext.data.AbstractStore-method-beginUpdate\" class=\"docClass\">beginUpdate</a> method is called. Automatic synchronization as configured\nby the <a href=\"#!/api/Ext.data.ProxyStore-cfg-autoSync\" rel=\"Ext.data.ProxyStore-cfg-autoSync\" class=\"docClass\">autoSync</a> flag is deferred until the <a href=\"#!/api/Ext.data.AbstractStore-method-endUpdate\" rel=\"Ext.data.AbstractStore-method-endUpdate\" class=\"docClass\">endUpdate</a> method is called, so multiple\nmutations can be coalesced into one synchronization operation.</p>\n","params":[{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-beginupdate","owner":"Ext.data.AbstractStore","short_doc":"Fires when the beginUpdate method is called. ..."},{"tagname":"event","name":"clear","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":208}],"doc":"<p>Fired after the <a href=\"#!/api/Ext.data.Store-method-removeAll\" rel=\"Ext.data.Store-method-removeAll\" class=\"docClass\">removeAll</a> method is called.</p>\n","params":[{"tagname":"params","type":"Ext.data.Store","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"since":"1.1.0","id":"event-clear","owner":"Ext.data.AbstractStore","short_doc":"Fired after the removeAll method is called. ..."},{"tagname":"event","name":"datachanged","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":215}],"doc":"<p>Fires whenever records are added to or removed from the Store.</p>\n\n<p>To hook into modifications of records in this Store use the <a href=\"#!/api/Ext.data.AbstractStore-event-update\" rel=\"Ext.data.AbstractStore-event-update\" class=\"docClass\">update</a> event.</p>\n","params":[{"tagname":"params","type":"Ext.data.Store","name":"this","doc":"<p>The data store</p>\n","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"since":"1.1.0","id":"event-datachanged","owner":"Ext.data.AbstractStore","short_doc":"Fires whenever records are added to or removed from the Store. ..."},{"tagname":"event","name":"endupdate","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":238}],"doc":"<p>Fires when the <a href=\"#!/api/Ext.data.AbstractStore-method-endUpdate\" rel=\"Ext.data.AbstractStore-method-endUpdate\" class=\"docClass\">endUpdate</a> method is called. Automatic synchronization as configured\nby the <a href=\"#!/api/Ext.data.ProxyStore-cfg-autoSync\" rel=\"Ext.data.ProxyStore-cfg-autoSync\" class=\"docClass\">autoSync</a> flag is deferred until the <a href=\"#!/api/Ext.data.AbstractStore-method-endUpdate\" rel=\"Ext.data.AbstractStore-method-endUpdate\" class=\"docClass\">endUpdate</a> method is called, so multiple\nmutations can be coalesced into one synchronization operation.</p>\n","params":[{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-endupdate","owner":"Ext.data.AbstractStore","short_doc":"Fires when the endUpdate method is called. ..."},{"tagname":"event","name":"refresh","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":224}],"doc":"<p>Fires when the data cache has changed in a bulk manner (e.g., it has been sorted, filtered, etc.) and a\nwidget that is using this Store as a Record cache should refresh its view.</p>\n","params":[{"tagname":"params","type":"Ext.data.Store","name":"this","doc":"<p>The data store</p>\n","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-refresh","owner":"Ext.data.AbstractStore","short_doc":"Fires when the data cache has changed in a bulk manner (e.g., it has been sorted, filtered, etc.) and a\nwidget that i..."},{"tagname":"event","name":"remove","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":177}],"doc":"<p>Fired when one or more records have been removed from this Store.</p>\n\n<p><strong>The signature for this event has changed in 5.0: </strong></p>\n","params":[{"tagname":"params","type":"Ext.data.Store","name":"store","doc":"<p>The Store object</p>\n","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"tagname":"params","type":"Ext.data.Model[]","name":"records","doc":"<p>The records that were removed. In previous\nreleases this was a single record, not an array.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},{"tagname":"params","type":"Number","name":"index","doc":"<p>The index at which the records were removed.</p>\n","html_type":"Number"},{"tagname":"params","type":"Boolean","name":"isMove","doc":"<p><code>true</code> if the child node is being removed so it can be\nmoved to another position in this Store.</p>\n","html_type":"Boolean"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"since":"5.0.0","id":"event-remove","owner":"Ext.data.AbstractStore","short_doc":"Fired when one or more records have been removed from this Store. ..."},{"tagname":"event","name":"sort","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":257}],"doc":"<p>Fires after a store is sorted.</p>\n\n<p>For <a href=\"#!/api/Ext.data.AbstractStore-cfg-remoteSort\" rel=\"Ext.data.AbstractStore-cfg-remoteSort\" class=\"docClass\">remotely sorted</a> stores, this will be upon the success of a load operation triggered by\nchanging the store's sorters.</p>\n\n<p>For locally sorted stores, this will be just after the data items in the store's backing collection are sorted.</p>\n","params":[{"tagname":"params","type":"Ext.data.Store","name":"store","doc":"<p>The store being sorted</p>\n","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-sort","owner":"Ext.data.AbstractStore","short_doc":"Fires after a store is sorted. ..."},{"tagname":"event","name":"update","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/AbstractStore.js","linenr":192}],"doc":"<p>Fires when a Model instance has been updated.</p>\n","params":[{"tagname":"params","type":"Ext.data.Store","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The Model instance that was updated</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},{"tagname":"params","type":"String","name":"operation","doc":"<p>The update operation being performed. Value may be one of:</p>\n\n<pre><code><a href=\"#!/api/Ext.data.Model-static-property-EDIT\" rel=\"Ext.data.Model-static-property-EDIT\" class=\"docClass\">Ext.data.Model.EDIT</a>\n<a href=\"#!/api/Ext.data.Model-static-property-REJECT\" rel=\"Ext.data.Model-static-property-REJECT\" class=\"docClass\">Ext.data.Model.REJECT</a>\n<a href=\"#!/api/Ext.data.Model-static-property-COMMIT\" rel=\"Ext.data.Model-static-property-COMMIT\" class=\"docClass\">Ext.data.Model.COMMIT</a>\n</code></pre>\n","html_type":"String"},{"tagname":"params","type":"String[]","name":"modifiedFieldNames","doc":"<p>Array of field names changed during edit.</p>\n","html_type":"String[]"},{"tagname":"params","type":"Object","name":"details","doc":"<p>An object describing the change. See the\n<a href=\"#!/api/Ext.util.Collection-event-itemchange\" rel=\"Ext.util.Collection-event-itemchange\" class=\"docClass\">itemchange event</a> of the store's backing collection</p>\n","html_type":"Object"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"since":"1.1.0","id":"event-update","owner":"Ext.data.AbstractStore","short_doc":"Fires when a Model instance has been updated. ..."}],"code_type":"ext_define","id":"class-Ext.data.ChainedStore","short_doc":"A chained store is a store that is a \"view\" of an existing store. ..."}