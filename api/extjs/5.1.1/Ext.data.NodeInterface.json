{"tagname":"class","name":"Ext.data.NodeInterface","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":1}],"doc":"<p>This class is used as a set of methods that are applied to the prototype of a\n<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Model</a> to decorate it with a Node API. This means that models\nused in conjunction with a tree will have all of the tree related methods available\non the model. In general, this class will not be used directly by the developer.</p>\n\n<p>This class also creates extra <a href=\"#!/api/Ext.data.field.Field\" rel=\"Ext.data.field.Field\" class=\"docClass\">fields</a> on the model, if they do\nnot exist, to help maintain the tree state and UI. These fields are documented as\nconfig options.</p>\n\n<p>The data fields used to render a tree node are: <a href=\"#!/api/Ext.data.NodeInterface-cfg-text\" rel=\"Ext.data.NodeInterface-cfg-text\" class=\"docClass\">text</a>, <a href=\"#!/api/Ext.data.NodeInterface-cfg-leaf\" rel=\"Ext.data.NodeInterface-cfg-leaf\" class=\"docClass\">leaf</a>,\n<a href=\"#!/api/Ext.data.NodeInterface-cfg-children\" rel=\"Ext.data.NodeInterface-cfg-children\" class=\"docClass\">children</a>, and <a href=\"#!/api/Ext.data.NodeInterface-cfg-expanded\" rel=\"Ext.data.NodeInterface-cfg-expanded\" class=\"docClass\">expanded</a>.  Once a node is loaded to the tree store\nyou can use <a href=\"#!/api/Ext.data.Model-method-get\" rel=\"Ext.data.Model-method-get\" class=\"docClass\">get()</a> to fetch the value of a given field\nname (provided there is not a convenience accessor on the Node for that field).</p>\n\n<pre class='inline-example '><code><a href=\"#!/api/Ext.tip.QuickTipManager-method-init\" rel=\"Ext.tip.QuickTipManager-method-init\" class=\"docClass\">Ext.tip.QuickTipManager.init</a>(); // not required when using Ext.application()\n\nvar root = {\n    expanded: true,\n    children: [{\n        text: \"Leaf node (&lt;i&gt;no folder/arrow icon&lt;/i&gt;)\",\n        leaf: true,\n        qtitle: 'Sample Tip Title',\n        qtip: 'Tip body'\n    }, {\n        text: \"Parent node expanded\",\n        expanded: true,\n        children: [{\n            text: \"Expanded leaf node 1\",\n            leaf: true\n        }, {\n            text: \"Expanded leaf node 2\",\n            leaf: true\n        }]\n    }, {\n        text: \"Parent node collapsed\",\n        children: [{\n            text: \"Collapsed leaf node 1\",\n            leaf: true\n        }, {\n            text: \"Collapsed leaf node 2\",\n            leaf: true\n        }]\n    }]\n};\n\nvar tree = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.tree.Panel\" rel=\"Ext.tree.Panel\" class=\"docClass\">Ext.tree.Panel</a>', {\n    title: 'TreePanel',\n    width: 260,\n    height: 200,\n    root: root,\n    rootVisible: false,\n    renderTo: document.body,\n    bbar: ['The first node ', {\n        text: 'is a leaf?',\n        handler: function () {\n            var firstChild = tree.getRootNode().getChildAt(0);\n            <a href=\"#!/api/Ext.MessageBox-method-alert\" rel=\"Ext.MessageBox-method-alert\" class=\"docClass\">Ext.Msg.alert</a>('Is Leaf?', firstChild.isLeaf());\n        }\n    }, {\n        text: 'has text?',\n        handler: function () {\n            var firstChild = tree.getRootNode().getChildAt(0);\n            <a href=\"#!/api/Ext.MessageBox-method-alert\" rel=\"Ext.MessageBox-method-alert\" class=\"docClass\">Ext.Msg.alert</a>('Has Text:', firstChild.get('text'));\n        }\n    }]\n});\n</code></pre>\n\n<p>The following configs have methods used to set the value / state of the node at\nruntime:</p>\n\n<p><strong><a href=\"#!/api/Ext.data.NodeInterface-cfg-children\" rel=\"Ext.data.NodeInterface-cfg-children\" class=\"docClass\">children</a> / <a href=\"#!/api/Ext.data.NodeInterface-cfg-leaf\" rel=\"Ext.data.NodeInterface-cfg-leaf\" class=\"docClass\">leaf</a></strong></p>\n\n<ul>\n<li><a href=\"#!/api/Ext.data.NodeInterface-method-appendChild\" rel=\"Ext.data.NodeInterface-method-appendChild\" class=\"docClass\">appendChild</a></li>\n<li><a href=\"#!/api/Ext.data.NodeInterface-method-hasChildNodes\" rel=\"Ext.data.NodeInterface-method-hasChildNodes\" class=\"docClass\">hasChildNodes</a></li>\n<li><a href=\"#!/api/Ext.data.NodeInterface-method-insertBefore\" rel=\"Ext.data.NodeInterface-method-insertBefore\" class=\"docClass\">insertBefore</a></li>\n<li><a href=\"#!/api/Ext.data.NodeInterface-method-insertChild\" rel=\"Ext.data.NodeInterface-method-insertChild\" class=\"docClass\">insertChild</a></li>\n<li><a href=\"#!/api/Ext.data.NodeInterface-method-remove\" rel=\"Ext.data.NodeInterface-method-remove\" class=\"docClass\">remove</a></li>\n<li><a href=\"#!/api/Ext.data.NodeInterface-method-removeAll\" rel=\"Ext.data.NodeInterface-method-removeAll\" class=\"docClass\">removeAll</a></li>\n<li><a href=\"#!/api/Ext.data.NodeInterface-method-removeChild\" rel=\"Ext.data.NodeInterface-method-removeChild\" class=\"docClass\">removeChild</a></li>\n<li><a href=\"#!/api/Ext.data.NodeInterface-method-replaceChild\" rel=\"Ext.data.NodeInterface-method-replaceChild\" class=\"docClass\">replaceChild</a></li>\n</ul>\n\n\n<p><strong><a href=\"#!/api/Ext.data.NodeInterface-cfg-expanded\" rel=\"Ext.data.NodeInterface-cfg-expanded\" class=\"docClass\">expanded</a></strong></p>\n\n<ul>\n<li><a href=\"#!/api/Ext.data.NodeInterface-method-expand\" rel=\"Ext.data.NodeInterface-method-expand\" class=\"docClass\">expand</a></li>\n<li><a href=\"#!/api/Ext.data.NodeInterface-method-expandChildren\" rel=\"Ext.data.NodeInterface-method-expandChildren\" class=\"docClass\">expandChildren</a></li>\n<li><a href=\"#!/api/Ext.data.NodeInterface-method-collapse\" rel=\"Ext.data.NodeInterface-method-collapse\" class=\"docClass\">collapse</a></li>\n<li><a href=\"#!/api/Ext.data.NodeInterface-method-collapseChildren\" rel=\"Ext.data.NodeInterface-method-collapseChildren\" class=\"docClass\">collapseChildren</a></li>\n</ul>\n\n\n<p>The remaining configs may be set using <a href=\"#!/api/Ext.data.Model-method-set\" rel=\"Ext.data.Model-method-set\" class=\"docClass\">set()</a>.</p>\n\n<pre><code>node.set('text', 'Changed Text'); // example showing how to change the node label\n</code></pre>\n\n<p>The <a href=\"#!/api/Ext.data.NodeInterface-cfg-qtip\" rel=\"Ext.data.NodeInterface-cfg-qtip\" class=\"docClass\">qtip</a>, <a href=\"#!/api/Ext.data.NodeInterface-cfg-qtitle\" rel=\"Ext.data.NodeInterface-cfg-qtitle\" class=\"docClass\">qtitle</a>, and <a href=\"#!/api/Ext.data.NodeInterface-cfg-qshowDelay\" rel=\"Ext.data.NodeInterface-cfg-qshowDelay\" class=\"docClass\">qshowDelay</a> use QuickTips and\nrequires initializing <a href=\"#!/api/Ext.tip.QuickTipManager\" rel=\"Ext.tip.QuickTipManager\" class=\"docClass\">Ext.tip.QuickTipManager</a> unless the application is\ncreated using Ext.application.</p>\n\n<pre><code><a href=\"#!/api/Ext.tip.QuickTipManager-method-init\" rel=\"Ext.tip.QuickTipManager-method-init\" class=\"docClass\">Ext.tip.QuickTipManager.init</a>();\n</code></pre>\n\n<p>For additional information and examples see the description for\n<a href=\"#!/api/Ext.tree.Panel\" rel=\"Ext.tree.Panel\" class=\"docClass\">Ext.tree.Panel</a>.</p>\n","aliases":{},"alternateClassNames":[],"extends":"Ext.Base","mixins":[],"requires":["Ext.data.field.Boolean","Ext.data.field.Integer","Ext.data.field.String","Ext.data.writer.Json","Ext.mixin.Observable"],"uses":[],"members":[{"tagname":"cfg","name":"allowDrag","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":177}],"doc":"<p>Set to false to deny dragging of this node.</p>\n\n<p>Applicable when using the <a href=\"#!/api/Ext.tree.plugin.TreeViewDragDrop\" rel=\"Ext.tree.plugin.TreeViewDragDrop\" class=\"docClass\">TreeViewDragDrop</a> plugin.</p>\n","type":"Boolean","default":"true","properties":null,"id":"cfg-allowDrag","owner":"Ext.data.NodeInterface","short_doc":"Set to false to deny dragging of this node. ...","html_type":"Boolean"},{"tagname":"cfg","name":"allowDrop","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":169}],"doc":"<p>Set to false to deny dropping on this node.</p>\n\n<p>Applicable when using the <a href=\"#!/api/Ext.tree.plugin.TreeViewDragDrop\" rel=\"Ext.tree.plugin.TreeViewDragDrop\" class=\"docClass\">TreeViewDragDrop</a> plugin.</p>\n","type":"Boolean","default":"true","properties":null,"id":"cfg-allowDrop","owner":"Ext.data.NodeInterface","short_doc":"Set to false to deny dropping on this node. ...","html_type":"Boolean"},{"tagname":"cfg","name":"checked","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":130}],"doc":"<p>Set to true or false to show a checkbox alongside this node.</p>\n\n<p>To fetch an array of checked nodes use <a href=\"#!/api/Ext.tree.Panel-method-getChecked\" rel=\"Ext.tree.Panel-method-getChecked\" class=\"docClass\">getChecked()</a>.</p>\n","type":"Boolean","default":"null","properties":null,"id":"cfg-checked","owner":"Ext.data.NodeInterface","short_doc":"Set to true or false to show a checkbox alongside this node. ...","html_type":"Boolean"},{"tagname":"cfg","name":"children","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":230}],"doc":"<p>Array of child nodes.</p>\n\n<p><strong>Note:</strong> By default the child nodes root is <code>children</code>, but can be set using the\nreader <a href=\"#!/api/Ext.data.reader.Reader-cfg-rootProperty\" rel=\"Ext.data.reader.Reader-cfg-rootProperty\" class=\"docClass\">rootProperty</a> config on the\n<a href=\"#!/api/Ext.data.TreeStore\" rel=\"Ext.data.TreeStore\" class=\"docClass\">TreeStore&#39;s</a> <a href=\"#!/api/Ext.data.TreeStore-cfg-proxy\" rel=\"Ext.data.TreeStore-cfg-proxy\" class=\"docClass\">proxy</a>.</p>\n","type":"Ext.data.NodeInterface[]","default":null,"properties":null,"id":"cfg-children","owner":"Ext.data.NodeInterface","short_doc":"Array of child nodes. ...","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>[]"},{"tagname":"cfg","name":"cls","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":146}],"doc":"<p>CSS class to apply to this node.</p>\n","type":"String","default":null,"properties":null,"id":"cfg-cls","owner":"Ext.data.NodeInterface","html_type":"String"},{"tagname":"cfg","name":"depth","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":296}],"doc":"<p>The number of parents this node has. A root node has depth 0, a child of it depth 1, and so on...</p>\n\n<p>See <a href=\"#!/api/Ext.data.NodeInterface-method-getDepth\" rel=\"Ext.data.NodeInterface-method-getDepth\" class=\"docClass\">getDepth</a>.</p>\n","type":"Number","default":null,"properties":null,"private":true,"id":"cfg-depth","owner":"Ext.data.NodeInterface","short_doc":"The number of parents this node has. ...","html_type":"Number"},{"tagname":"cfg","name":"expandable","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":123}],"doc":"<p>False to prevent expanding/collapsing of this node.</p>\n\n<p>See also: <a href=\"#!/api/Ext.data.NodeInterface-method-isExpandable\" rel=\"Ext.data.NodeInterface-method-isExpandable\" class=\"docClass\">isExpandable</a>.</p>\n","type":"Boolean","default":"true","properties":null,"id":"cfg-expandable","owner":"Ext.data.NodeInterface","short_doc":"False to prevent expanding/collapsing of this node. ...","html_type":"Boolean"},{"tagname":"cfg","name":"expanded","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":113}],"doc":"<p>True if the node is expanded.</p>\n\n<p>When the tree is asynchronously remote loaded, expanding a collapsed node loads\nthe children of that node (if the node has not already been loaded previously).</p>\n\n<p>See also: <a href=\"#!/api/Ext.data.NodeInterface-method-isExpanded\" rel=\"Ext.data.NodeInterface-method-isExpanded\" class=\"docClass\">isExpanded</a>.</p>\n","type":"Boolean","default":"false","properties":null,"id":"cfg-expanded","owner":"Ext.data.NodeInterface","short_doc":"True if the node is expanded. ...","html_type":"Boolean"},{"tagname":"cfg","name":"href","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":185}],"doc":"<p>A URL for a link that's created when this config is specified.</p>\n\n<p>See also <a href=\"#!/api/Ext.data.NodeInterface-cfg-hrefTarget\" rel=\"Ext.data.NodeInterface-cfg-hrefTarget\" class=\"docClass\">hrefTarget</a>.</p>\n","type":"String","default":null,"properties":null,"id":"cfg-href","owner":"Ext.data.NodeInterface","short_doc":"A URL for a link that's created when this config is specified. ...","html_type":"String"},{"tagname":"cfg","name":"hrefTarget","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":192}],"doc":"<p>Target for link. Only applicable when <a href=\"#!/api/Ext.data.NodeInterface-cfg-href\" rel=\"Ext.data.NodeInterface-cfg-href\" class=\"docClass\">href</a> is also specified.</p>\n","type":"String","default":null,"properties":null,"id":"cfg-hrefTarget","owner":"Ext.data.NodeInterface","short_doc":"Target for link. ...","html_type":"String"},{"tagname":"cfg","name":"icon","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":160}],"doc":"<p>URL for this node's icon.</p>\n\n<p>There are no default icons that come with Ext JS.</p>\n\n<ul>\n<li>Use <a href=\"#!/api/Ext.data.NodeInterface-cfg-iconCls\" rel=\"Ext.data.NodeInterface-cfg-iconCls\" class=\"docClass\">iconCls</a> to set the icon via CSS.</li>\n</ul>\n\n","type":"String","default":null,"properties":null,"id":"cfg-icon","owner":"Ext.data.NodeInterface","short_doc":"URL for this node's icon. ...","html_type":"String"},{"tagname":"cfg","name":"iconCls","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":151}],"doc":"<p>CSS class to apply for this node's icon.</p>\n\n<p>There are no default icon classes that come with Ext JS.</p>\n\n<p>Use <a href=\"#!/api/Ext.data.NodeInterface-cfg-icon\" rel=\"Ext.data.NodeInterface-cfg-icon\" class=\"docClass\">icon</a> to set the icon directly.</p>\n","type":"String","default":null,"properties":null,"id":"cfg-iconCls","owner":"Ext.data.NodeInterface","short_doc":"CSS class to apply for this node's icon. ...","html_type":"String"},{"tagname":"cfg","name":"index","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":287}],"doc":"<p>The position of the node inside its parent. When parent has 4 children and the node is third amongst them,\nindex will be 2.</p>\n\n<p>See <a href=\"#!/api/Ext.data.NodeInterface-method-indexOf\" rel=\"Ext.data.NodeInterface-method-indexOf\" class=\"docClass\">indexOf</a> and <a href=\"#!/api/Ext.data.NodeInterface-method-indexOfId\" rel=\"Ext.data.NodeInterface-method-indexOfId\" class=\"docClass\">indexOfId</a>.</p>\n","type":"Number","default":null,"properties":null,"private":true,"id":"cfg-index","owner":"Ext.data.NodeInterface","short_doc":"The position of the node inside its parent. ...","html_type":"Number"},{"tagname":"cfg","name":"isFirst","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":271}],"doc":"<p>True if this is the first node.</p>\n\n<p>See <a href=\"#!/api/Ext.data.NodeInterface-method-isFirst\" rel=\"Ext.data.NodeInterface-method-isFirst\" class=\"docClass\">isFirst</a>.</p>\n","type":"Boolean","default":null,"properties":null,"private":true,"id":"cfg-isFirst","owner":"Ext.data.NodeInterface","short_doc":"True if this is the first node. ...","html_type":"Boolean"},{"tagname":"cfg","name":"isLast","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":263}],"doc":"<p>True if this is the last node.</p>\n\n<p>See <a href=\"#!/api/Ext.data.NodeInterface-method-isLast\" rel=\"Ext.data.NodeInterface-method-isLast\" class=\"docClass\">isLast</a>.</p>\n","type":"Boolean","default":null,"properties":null,"private":true,"id":"cfg-isLast","owner":"Ext.data.NodeInterface","short_doc":"True if this is the last node. ...","html_type":"Boolean"},{"tagname":"cfg","name":"leaf","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":138}],"doc":"<p>Set to true to indicate that this child can have no children. The expand icon/arrow will then not be\nrendered for this node.</p>\n\n<p>See also: <a href=\"#!/api/Ext.data.NodeInterface-method-isLeaf\" rel=\"Ext.data.NodeInterface-method-isLeaf\" class=\"docClass\">isLeaf</a>.</p>\n","type":"Boolean","default":"false","properties":null,"id":"cfg-leaf","owner":"Ext.data.NodeInterface","short_doc":"Set to true to indicate that this child can have no children. ...","html_type":"Boolean"},{"tagname":"cfg","name":"loaded","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":239}],"doc":"<p>True if the node has finished loading.</p>\n\n<p>See <a href=\"#!/api/Ext.data.NodeInterface-method-isLoaded\" rel=\"Ext.data.NodeInterface-method-isLoaded\" class=\"docClass\">isLoaded</a>.</p>\n","type":"Boolean","default":"false","properties":null,"private":true,"id":"cfg-loaded","owner":"Ext.data.NodeInterface","short_doc":"True if the node has finished loading. ...","html_type":"Boolean"},{"tagname":"cfg","name":"loading","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":247}],"doc":"<p>True if the node is currently loading.</p>\n\n<p>See <a href=\"#!/api/Ext.data.NodeInterface-method-isLoading\" rel=\"Ext.data.NodeInterface-method-isLoading\" class=\"docClass\">isLoading</a>.</p>\n","type":"Boolean","default":"false","properties":null,"private":true,"id":"cfg-loading","owner":"Ext.data.NodeInterface","short_doc":"True if the node is currently loading. ...","html_type":"Boolean"},{"tagname":"cfg","name":"parentId","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":279}],"doc":"<p>ID of parent node.</p>\n\n<p>See <a href=\"#!/api/Ext.data.NodeInterface-property-parentNode\" rel=\"Ext.data.NodeInterface-property-parentNode\" class=\"docClass\">parentNode</a>.</p>\n","type":"String","default":null,"properties":null,"private":true,"id":"cfg-parentId","owner":"Ext.data.NodeInterface","short_doc":"ID of parent node. ...","html_type":"String"},{"tagname":"cfg","name":"qshowDelay","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":213}],"doc":"<p>Tooltip showDelay.</p>\n\n<p>See also <a href=\"#!/api/Ext.data.NodeInterface-cfg-qtip\" rel=\"Ext.data.NodeInterface-cfg-qtip\" class=\"docClass\">qtip</a>.\nSee also <a href=\"#!/api/Ext.data.NodeInterface-cfg-qtitle\" rel=\"Ext.data.NodeInterface-cfg-qtitle\" class=\"docClass\">qtitle</a>.</p>\n","type":"Number","default":null,"properties":null,"id":"cfg-qshowDelay","owner":"Ext.data.NodeInterface","short_doc":"Tooltip showDelay. ...","html_type":"Number"},{"tagname":"cfg","name":"qtip","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":197}],"doc":"<p>Tooltip text to show on this node.</p>\n\n<p>See also <a href=\"#!/api/Ext.data.NodeInterface-cfg-qtitle\" rel=\"Ext.data.NodeInterface-cfg-qtitle\" class=\"docClass\">qtitle</a>.\nSee also <a href=\"#!/api/Ext.data.NodeInterface-cfg-qshowDelay\" rel=\"Ext.data.NodeInterface-cfg-qshowDelay\" class=\"docClass\">qshowDelay</a>.</p>\n","type":"String","default":null,"properties":null,"id":"cfg-qtip","owner":"Ext.data.NodeInterface","short_doc":"Tooltip text to show on this node. ...","html_type":"String"},{"tagname":"cfg","name":"qtitle","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":205}],"doc":"<p>Tooltip title.</p>\n\n<p>See also <a href=\"#!/api/Ext.data.NodeInterface-cfg-qtip\" rel=\"Ext.data.NodeInterface-cfg-qtip\" class=\"docClass\">qtip</a>.\nSee also <a href=\"#!/api/Ext.data.NodeInterface-cfg-qshowDelay\" rel=\"Ext.data.NodeInterface-cfg-qshowDelay\" class=\"docClass\">qshowDelay</a>.</p>\n","type":"String","default":null,"properties":null,"id":"cfg-qtitle","owner":"Ext.data.NodeInterface","short_doc":"Tooltip title. ...","html_type":"String"},{"tagname":"cfg","name":"root","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":255}],"doc":"<p>True if this is the root node.</p>\n\n<p>See <a href=\"#!/api/Ext.data.NodeInterface-method-isRoot\" rel=\"Ext.data.NodeInterface-method-isRoot\" class=\"docClass\">isRoot</a>.</p>\n","type":"Boolean","default":null,"properties":null,"private":true,"id":"cfg-root","owner":"Ext.data.NodeInterface","short_doc":"True if this is the root node. ...","html_type":"Boolean"},{"tagname":"cfg","name":"text","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":221}],"doc":"<p>The text to show on node label (<em>html tags are accepted</em>).\nThe default text for the root node is <code>ROOT</code>.  All other nodes default to ''.</p>\n\n<p><strong>Note:</strong> By default the node label is <code>text</code>, but can be set using the tree's\n<a href=\"#!/api/Ext.tree.Panel-cfg-displayField\" rel=\"Ext.tree.Panel-cfg-displayField\" class=\"docClass\">displayField</a> config.</p>\n","type":"String","default":null,"properties":null,"id":"cfg-text","owner":"Ext.data.NodeInterface","short_doc":"The text to show on node label (html tags are accepted). ...","html_type":"String"},{"tagname":"property","name":"$className","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1025}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"String","default":"'Ext.Base'","readonly":null,"id":"property-S-className","owner":"Ext.Base","short_doc":" ...","html_type":"String"},{"tagname":"property","name":"$configPrefixed","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1037}],"doc":"<p>The value <code>true</code> causes <code>config</code> values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\") character. A value of <code>false</code>\nstores <code>config</code> values as properties using their exact name (no prefix).</p>\n","type":"Boolean","default":"true","properties":null,"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-S-configPrefixed","owner":"Ext.Base","overrides":[{"name":"$configPrefixed","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-S-configPrefixed\" rel=\"Ext.Component-property-S-configPrefixed\" class=\"docClass\">Ext.Component.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-property-S-configPrefixed\" rel=\"Ext.layout.Layout-property-S-configPrefixed\" class=\"docClass\">Ext.layout.Layout.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-property-S-configPrefixed\" rel=\"Ext.data.AbstractStore-property-S-configPrefixed\" class=\"docClass\">Ext.data.AbstractStore.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.layout.container.boxOverflow.None","link":"<a href=\"#!/api/Ext.layout.container.boxOverflow.None-property-S-configPrefixed\" rel=\"Ext.layout.container.boxOverflow.None-property-S-configPrefixed\" class=\"docClass\">Ext.layout.container.boxOverflow.None.$configPrefixed</a>"}],"short_doc":"The value true causes config values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\")...","html_type":"Boolean"},{"tagname":"property","name":"$configStrict","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1047}],"doc":"<p>The value <code>true</code> instructs the <code>initConfig</code> method to only honor values for\nproperties declared in the <code>config</code> block of a class. When <code>false</code>, properties\nthat are not declared in a <code>config</code> block will be placed on the instance.</p>\n","type":"Boolean","default":"true","properties":null,"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-S-configStrict","owner":"Ext.Base","overrides":[{"name":"$configStrict","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-S-configStrict\" rel=\"Ext.Component-property-S-configStrict\" class=\"docClass\">Ext.Component.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-property-S-configStrict\" rel=\"Ext.layout.Layout-property-S-configStrict\" class=\"docClass\">Ext.layout.Layout.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-property-S-configStrict\" rel=\"Ext.data.AbstractStore-property-S-configStrict\" class=\"docClass\">Ext.data.AbstractStore.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.layout.container.boxOverflow.None","link":"<a href=\"#!/api/Ext.layout.container.boxOverflow.None-property-S-configStrict\" rel=\"Ext.layout.container.boxOverflow.None-property-S-configStrict\" class=\"docClass\">Ext.layout.container.boxOverflow.None.$configStrict</a>"}],"short_doc":"The value true instructs the initConfig method to only honor values for\nproperties declared in the config block of a ...","html_type":"Boolean"},{"tagname":"property","name":"childNodes","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":329}],"doc":"<p>An array of this nodes children.  Array will be empty if this node has no children.</p>\n","type":"Ext.data.NodeInterface[]","default":null,"properties":null,"id":"property-childNodes","owner":"Ext.data.NodeInterface","short_doc":"An array of this nodes children. ...","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>[]"},{"tagname":"property","name":"firstChild","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":324}],"doc":"<p>A reference to this node's first child node. <code>null</code> if this node has no children.</p>\n","type":"Ext.data.NodeInterface","default":null,"properties":null,"id":"property-firstChild","owner":"Ext.data.NodeInterface","short_doc":"A reference to this node's first child node. ...","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"property","name":"isConfiguring","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1057}],"doc":"<p>This property is set to <code>true</code> during the call to <code>initConfig</code>.</p>\n","type":"Boolean","default":"false","properties":null,"protected":true,"readonly":true,"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-isConfiguring","owner":"Ext.Base","short_doc":"This property is set to true during the call to initConfig. ...","html_type":"Boolean"},{"tagname":"property","name":"isFirstInstance","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1066}],"doc":"<p>This property is set to <code>true</code> if this instance is the first of its class.</p>\n","type":"Boolean","default":"false","properties":null,"protected":true,"readonly":true,"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-isFirstInstance","owner":"Ext.Base","short_doc":"This property is set to true if this instance is the first of its class. ...","html_type":"Boolean"},{"tagname":"property","name":"isInstance","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1028}],"doc":"<p>This value is <code>true</code> and is used to identify plain objects from instances of\na defined class.</p>\n","type":"Boolean","default":"true","properties":null,"protected":true,"readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-isInstance","owner":"Ext.Base","short_doc":"This value is true and is used to identify plain objects from instances of\na defined class. ...","html_type":"Boolean"},{"tagname":"property","name":"isNode","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":419}],"doc":"<p><code>true</code> in this class to identify an object as an instantiated Node, or subclass thereof.</p>\n","type":"Boolean","default":"true","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-isNode","owner":"Ext.data.NodeInterface","short_doc":"true in this class to identify an object as an instantiated Node, or subclass thereof. ...","html_type":"Boolean"},{"tagname":"property","name":"lastChild","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":319}],"doc":"<p>A reference to this node's last child node. <code>null</code> if this node has no children.</p>\n","type":"Ext.data.NodeInterface","default":null,"properties":null,"id":"property-lastChild","owner":"Ext.data.NodeInterface","short_doc":"A reference to this node's last child node. ...","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"property","name":"nextSibling","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":304}],"doc":"<p>A reference to this node's next sibling node. <code>null</code> if this node does not have a next sibling.</p>\n","type":"Ext.data.NodeInterface","default":null,"properties":null,"id":"property-nextSibling","owner":"Ext.data.NodeInterface","short_doc":"A reference to this node's next sibling node. ...","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"property","name":"parentNode","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":314}],"doc":"<p>A reference to this node's parent node. <code>null</code> if this node is the root node.</p>\n","type":"Ext.data.NodeInterface","default":null,"properties":null,"id":"property-parentNode","owner":"Ext.data.NodeInterface","short_doc":"A reference to this node's parent node. ...","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"property","name":"previousSibling","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":309}],"doc":"<p>A reference to this node's previous sibling node. <code>null</code> if this node does not have a previous sibling.</p>\n","type":"Ext.data.NodeInterface","default":null,"properties":null,"id":"property-previousSibling","owner":"Ext.data.NodeInterface","short_doc":"A reference to this node's previous sibling node. ...","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"property","name":"self","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1344}],"doc":"<p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n","type":"Ext.Class","default":null,"properties":null,"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-self","owner":"Ext.Base","short_doc":"Get the reference to the current class from which this object was instantiated. ...","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},{"tagname":"property","name":"$onExtended","autodetected":{"inheritdoc":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":370}],"doc":"\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"type":"Array","default":"[]","readonly":null,"id":"static-property-S-onExtended","owner":"Ext.Base","short_doc":" ...","html_type":"Array"},{"tagname":"method","name":"addDeprecations","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":115}],"doc":"<p>This method applies a versioned, deprecation declaration to this class. This\nis typically called by the <code>deprecated</code> config.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"deprecations","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-addDeprecations","owner":"Ext.Base","short_doc":"This method applies a versioned, deprecation declaration to this class. ..."},{"tagname":"method","name":"appendChild","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":767}],"doc":"<p>Inserts node(s) as the last child node of this node.</p>\n\n<p>If the node was previously a child node of another parent node, it will be removed from that node first.</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface/Ext.data.NodeInterface[]/Object","name":"node","doc":"<p>The node or Array of nodes to append</p>\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>/<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>[]/Object"},{"tagname":"params","type":"Boolean","name":"suppressEvents","default":"false","optional":true,"doc":"<p>True to suppress firing of\nevents.</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"commit","default":"false","optional":true,"doc":"\n","html_type":"Boolean"}],"return":{"type":"Ext.data.NodeInterface","name":"return","doc":"<p>The appended node if single append, or null if an array was passed</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["appendChild","callTreeStore","createNode","fireEventArgs","getId","getTreeStore","isLeaf","isLoaded","set","setFirstChild","setLastChild","triggerUIUpdate"],"id":"method-appendChild","owner":"Ext.data.NodeInterface","short_doc":"Inserts node(s) as the last child node of this node. ..."},{"tagname":"method","name":"bubble","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":1562}],"doc":"<p>Bubbles up the tree from this node, calling the specified function with each node. The arguments to the function\nwill be the args provided or the current node. If the function returns false at any point,\nthe bubble is stopped.</p>\n","params":[{"tagname":"params","type":"Function","name":"fn","doc":"<p>The function to call</p>\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (this reference) in which the function is executed. Defaults to the current Node.</p>\n","html_type":"Object"},{"tagname":"params","type":"Array","name":"args","optional":true,"doc":"<p>The args to call the function with. Defaults to passing the current Node.</p>\n","html_type":"Array"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-bubble","owner":"Ext.data.NodeInterface","short_doc":"Bubbles up the tree from this node, calling the specified function with each node. ..."},{"tagname":"method","name":"callOverridden","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1581}],"doc":"<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n","params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n","html_type":"Array/Arguments"}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the overridden method</p>\n","properties":null,"html_type":"Object"},"protected":true,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-callOverridden","owner":"Ext.Base","short_doc":"Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi..."},{"tagname":"method","name":"callParent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1143}],"doc":"<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10));     // alerts 10\n alert(My.Derived2.method(10)); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n","protected":true,"params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n","html_type":"Array/Arguments"}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the parent method</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-callParent","owner":"Ext.Base","short_doc":"Call the \"parent\" method of the current method. ..."},{"tagname":"method","name":"callSuper","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1258}],"doc":"<p>This method is used by an override to call the superclass method but bypass any\noverridden method. This is often done to \"patch\" a method that contains a bug\nbut for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function () {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     extend: 'Ext.some.Class',\n\n     method: function () {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>Ext.some.DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.patches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function () {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <code>callParent</code> to call the superclass <code>method</code> since\nthat would call the overridden method containing the bug. In other words, the\nabove patch would only produce \"Fixed\" then \"Good\" in the console log, whereas,\nusing <code>callParent</code> would produce \"Fixed\" then \"Bad\" then \"Good\".</p>\n","protected":true,"params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n","html_type":"Array/Arguments"}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the superclass method</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-callSuper","owner":"Ext.Base","short_doc":"This method is used by an override to call the superclass method but bypass any\noverridden method. ..."},{"tagname":"method","name":"cascadeBy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":1589}],"doc":"<p>Cascades down the tree from this node, calling the specified functions with each node. The arguments to the function\nwill be the args provided or the current node. If the <code>before</code> function returns false at any point,\nthe cascade is stopped on that branch.</p>\n\n<p>Note that the 3 argument form passing <code>fn, scope, args</code> is still supported. The <code>fn</code> function is as before, called\n<em>before</em> cascading down into child nodes. If it returns <code>false</code>, the child nodes are not traversed.</p>\n","params":[{"tagname":"params","type":"Object","name":"spec","doc":"<p>An object containing before and after functions, scope and an argument list.</p>\n","properties":[{"tagname":"params","type":"Function","name":"before","optional":true,"doc":"<p>A function to call on a node <em>before</em> cascading down into child nodes.\nIf it returns <code>false</code>, the child nodes are not traversed.</p>\n","html_type":"Function"},{"tagname":"params","type":"Function","name":"after","optional":true,"doc":"<p>A function to call on a node <em>after</em> cascading down into child nodes.</p>\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (this reference) in which the functions are executed. Defaults to the current Node.</p>\n","html_type":"Object"},{"tagname":"params","type":"Array","name":"args","optional":true,"doc":"<p>The args to call the function with. Defaults to passing the current Node.</p>\n","html_type":"Array"}],"html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-cascadeBy","owner":"Ext.data.NodeInterface","short_doc":"Cascades down the tree from this node, calling the specified functions with each node. ..."},{"tagname":"method","name":"clear","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":1116}],"doc":"<p>Clears the node.</p>\n","private":true,"params":[{"tagname":"params","type":"Boolean","name":"erase","default":"false","optional":true,"doc":"<p>True to erase the node using the configured\nproxy.</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-clear","owner":"Ext.data.NodeInterface","short_doc":"Clears the node. ..."},{"tagname":"method","name":"collapse","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":2040}],"doc":"<p>Collapse this node.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"recursive","default":"false","optional":true,"doc":"<p>True to recursively collapse all the children</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Function","name":"callback","optional":true,"doc":"<p>The function to execute once the collapse completes</p>\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope to run the callback in</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["callTreeStore","fireEventArgs","getTreeStore","isExpanded","isLeaf","set"],"id":"method-collapse","owner":"Ext.data.NodeInterface","short_doc":"Collapse this node. ..."},{"tagname":"method","name":"collapseChildren","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":2152}],"doc":"<p>Collapse all the children of this node.</p>\n","params":[{"tagname":"params","type":"Function","name":"recursive","default":"false","optional":true,"doc":"<p>True to recursively collapse all the children</p>\n","html_type":"Function"},{"tagname":"params","type":"Function","name":"callback","optional":true,"doc":"<p>The function to execute once all the children are collapsed</p>\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope to run the callback in</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-collapseChildren","owner":"Ext.data.NodeInterface","short_doc":"Collapse all the children of this node. ..."},{"tagname":"method","name":"contains","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":1693}],"doc":"<p>Returns true if this node is an ancestor (at any point) of the passed node.</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"node","doc":"\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"}],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-contains","owner":"Ext.data.NodeInterface","short_doc":"Returns true if this node is an ancestor (at any point) of the passed node. ..."},{"tagname":"method","name":"copy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":1094}],"doc":"<p>Creates a copy (clone) of this Node.</p>\n","params":[{"tagname":"params","type":"String","name":"id","optional":true,"doc":"<p>A new id, defaults to this Node's id.</p>\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"deep","default":"false","optional":true,"doc":"<p>True to recursively copy all child Nodes into the new Node.\nFalse to copy without child Nodes.</p>\n","html_type":"Boolean"}],"return":{"type":"Ext.data.NodeInterface","name":"return","doc":"<p>A copy of this Node.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["callParent"],"id":"method-copy","owner":"Ext.data.NodeInterface","short_doc":"Creates a copy (clone) of this Node. ..."},{"tagname":"method","name":"createNode","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":535}],"doc":"<p>Ensures that the passed object is an instance of a Record with the NodeInterface applied</p>\n","return":{"type":"Ext.data.NodeInterface","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"name":"node","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["getProxy","getTreeStore"],"id":"method-createNode","owner":"Ext.data.NodeInterface","short_doc":"Ensures that the passed object is an instance of a Record with the NodeInterface applied ..."},{"tagname":"method","name":"destroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1562}],"doc":"<p>This method is called to cleanup an object and its resources. After calling\nthis method, the object should not be used any further.</p>\n","protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["unlink"],"id":"method-destroy","owner":"Ext.Base","overrides":[{"name":"destroy","owner":"Ext.util.ElementContainer","link":"<a href=\"#!/api/Ext.util.ElementContainer-method-destroy\" rel=\"Ext.util.ElementContainer-method-destroy\" class=\"docClass\">Ext.util.ElementContainer.destroy</a>"},{"name":"destroy","owner":"Ext.state.Stateful","link":"<a href=\"#!/api/Ext.state.Stateful-method-destroy\" rel=\"Ext.state.Stateful-method-destroy\" class=\"docClass\">Ext.state.Stateful.destroy</a>"},{"name":"destroy","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-method-destroy\" rel=\"Ext.Component-method-destroy\" class=\"docClass\">Ext.Component.destroy</a>"},{"name":"destroy","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-destroy\" rel=\"Ext.data.AbstractStore-method-destroy\" class=\"docClass\">Ext.data.AbstractStore.destroy</a>"},{"name":"destroy","owner":"Ext.plugin.Abstract","link":"<a href=\"#!/api/Ext.plugin.Abstract-method-destroy\" rel=\"Ext.plugin.Abstract-method-destroy\" class=\"docClass\">Ext.plugin.Abstract.destroy</a>"},{"name":"destroy","owner":"Ext.app.BaseController","link":"<a href=\"#!/api/Ext.app.BaseController-method-destroy\" rel=\"Ext.app.BaseController-method-destroy\" class=\"docClass\">Ext.app.BaseController.destroy</a>"}],"short_doc":"This method is called to cleanup an object and its resources. ..."},{"tagname":"method","name":"eachChild","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":1628}],"doc":"<p>Iterates the child nodes of this node, calling the specified function\nwith each node. The arguments to the function will be the args\nprovided or the current node. If the function returns false at any\npoint, the iteration stops.</p>\n","params":[{"tagname":"params","type":"Function","name":"fn","doc":"<p>The function to call</p>\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (<em>this</em> reference) in which the\nfunction is executed. Defaults to the Node on which eachChild is\ncalled.</p>\n","html_type":"Object"},{"tagname":"params","type":"Array","name":"args","optional":true,"doc":"<p>The args to call the function with. Defaults to\npassing the current Node.</p>\n","html_type":"Array"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-eachChild","owner":"Ext.data.NodeInterface","short_doc":"Iterates the child nodes of this node, calling the specified function\nwith each node. ..."},{"tagname":"method","name":"erase","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":1182}],"doc":"<p>Destroys the node.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"name":"options","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["callParent","clear","remove"],"id":"method-erase","owner":"Ext.data.NodeInterface","short_doc":"Destroys the node. ..."},{"tagname":"method","name":"expand","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":1840}],"doc":"<p>Expand this node.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"recursive","default":"false","optional":true,"doc":"<p>True to recursively expand all the children</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Function","name":"callback","optional":true,"doc":"<p>The function to execute once the expand completes</p>\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope to run the callback in</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["callTreeStore","expand","expandChildren","fireEventArgs","getTreeStore","isBranchLoaded","isExpanded","isLeaf","isLoading","on"],"id":"method-expand","owner":"Ext.data.NodeInterface","short_doc":"Expand this node. ..."},{"tagname":"method","name":"expandChildren","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":1994}],"doc":"<p>Expand all the children of this node.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"recursive","default":"false","optional":true,"doc":"<p>True to recursively expand all the children</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Function","name":"callback","optional":true,"doc":"<p>The function to execute once all the children are expanded</p>\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope to run the callback in</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getTreeStore"],"id":"method-expandChildren","owner":"Ext.data.NodeInterface","short_doc":"Expand all the children of this node. ..."},{"tagname":"method","name":"findChild","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":1652}],"doc":"<p>Finds the first child that has the attribute with the specified value.</p>\n","params":[{"tagname":"params","type":"String","name":"attribute","doc":"<p>The attribute name</p>\n","html_type":"String"},{"tagname":"params","type":"Object","name":"value","doc":"<p>The value to search for</p>\n","html_type":"Object"},{"tagname":"params","type":"Boolean","name":"deep","default":"false","optional":true,"doc":"<p>True to search through nodes deeper than the immediate children</p>\n","html_type":"Boolean"}],"return":{"type":"Ext.data.NodeInterface","name":"return","doc":"<p>The found child or null if none was found</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["findChildBy","get"],"id":"method-findChild","owner":"Ext.data.NodeInterface","short_doc":"Finds the first child that has the attribute with the specified value. ..."},{"tagname":"method","name":"findChildBy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":1665}],"doc":"<p>Finds the first child by a custom function. The child matches if the function passed returns true.</p>\n","params":[{"tagname":"params","type":"Function","name":"fn","doc":"<p>A function which must return true if the passed Node is the required Node.</p>\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (this reference) in which the function is executed. Defaults to the Node being tested.</p>\n","html_type":"Object"},{"tagname":"params","type":"Boolean","name":"deep","default":"false","optional":true,"doc":"<p>True to search through nodes deeper than the immediate children</p>\n","html_type":"Boolean"}],"return":{"type":"Ext.data.NodeInterface","name":"return","doc":"<p>The found child or null if none was found</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-findChildBy","owner":"Ext.data.NodeInterface","short_doc":"Finds the first child by a custom function. ..."},{"tagname":"method","name":"fireEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":2192}],"doc":"<p>Fires the specified event with the passed parameters (minus the event name, plus the <code>options</code> object passed\nto <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a>).</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy (See <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by\ncalling <a href=\"#!/api/Ext.mixin.Observable-method-enableBubble\" rel=\"Ext.mixin.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n","html_type":"String"},{"tagname":"params","type":"Object...","name":"args","doc":"<p>Variable number of parameters are passed to handlers.</p>\n","html_type":"Object..."}],"return":{"type":"Boolean","name":"return","doc":"<p>returns false if any of the handlers return false otherwise it returns true.</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["fireEventArgs"],"id":"method-fireEvent","owner":"Ext.data.NodeInterface","short_doc":"Fires the specified event with the passed parameters (minus the event name, plus the options object passed\nto addList..."},{"tagname":"method","name":"getChildAt","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":1484}],"doc":"<p>Returns the child node at the specified index.</p>\n","params":[{"tagname":"params","type":"Number","name":"index","doc":"\n","html_type":"Number"}],"return":{"type":"Ext.data.NodeInterface","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getChildAt","owner":"Ext.data.NodeInterface","short_doc":"Returns the child node at the specified index. ..."},{"tagname":"method","name":"getConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1431}],"doc":"<p>Returns a specified config property value. If the name parameter is not passed,\nall current configuration options will be returned as key value pairs.</p>\n","params":[{"tagname":"params","type":"String","name":"name","optional":true,"doc":"<p>The name of the config property to get.</p>\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"peek","default":"false","optional":true,"doc":"<p><code>true</code> to peek at the raw value without calling the getter.</p>\n","html_type":"Boolean"}],"return":{"type":"Object","name":"return","doc":"<p>The config property value.</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-getConfig","owner":"Ext.Base","short_doc":"Returns a specified config property value. ..."},{"tagname":"method","name":"getCurrentConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1471}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getConfigurator"],"id":"method-getCurrentConfig","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"getDepth","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":1554}],"doc":"<p>Returns depth of this node (the root node has a depth of 0)</p>\n","return":{"type":"Number","name":"return","doc":"\n","properties":null,"html_type":"Number"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["get"],"id":"method-getDepth","owner":"Ext.data.NodeInterface","short_doc":"Returns depth of this node (the root node has a depth of 0) ..."},{"tagname":"method","name":"getInitialConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1488}],"doc":"<p>Returns the initial configuration passed to constructor when instantiating\nthis class.</p>\n","params":[{"tagname":"params","type":"String","name":"name","optional":true,"doc":"<p>Name of the config option to return.</p>\n","html_type":"String"}],"return":{"type":"Object/Mixed","name":"return","doc":"<p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n","properties":null,"html_type":"Object/Mixed"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getInitialConfig","owner":"Ext.Base","short_doc":"Returns the initial configuration passed to constructor when instantiating\nthis class. ..."},{"tagname":"method","name":"getOwnerTree","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":932}],"doc":"<p>Returns the tree this node is in.</p>\n","return":{"type":"Ext.tree.Panel","name":"return","doc":"<p>The tree panel which owns this node.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.tree.Panel\" rel=\"Ext.tree.Panel\" class=\"docClass\">Ext.tree.Panel</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getTreeStore"],"id":"method-getOwnerTree","owner":"Ext.data.NodeInterface","short_doc":"Returns the tree this node is in. ..."},{"tagname":"method","name":"getPath","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":1534}],"doc":"<p>Gets the hierarchical path from the root of the current node.</p>\n","params":[{"tagname":"params","type":"String","name":"field","optional":true,"doc":"<p>The field to construct the path from. Defaults to the model idProperty.</p>\n","html_type":"String"},{"tagname":"params","type":"String","name":"separator","default":"'/'","optional":true,"doc":"<p>A separator to use.</p>\n","html_type":"String"}],"return":{"type":"String","name":"return","doc":"<p>The node path</p>\n","properties":null,"html_type":"String"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["get"],"id":"method-getPath","owner":"Ext.data.NodeInterface","short_doc":"Gets the hierarchical path from the root of the current node. ..."},{"tagname":"method","name":"getTreeStore","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":943}],"doc":"<p>Returns the <a href=\"#!/api/Ext.data.TreeStore\" rel=\"Ext.data.TreeStore\" class=\"docClass\">Ext.data.TreeStore</a> which owns this node.</p>\n","return":{"type":"Ext.data.TreeStore","name":"return","doc":"<p>The TreeStore which owns this node.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.TreeStore\" rel=\"Ext.data.TreeStore\" class=\"docClass\">Ext.data.TreeStore</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getTreeStore","owner":"Ext.data.NodeInterface","short_doc":"Returns the Ext.data.TreeStore which owns this node. ..."},{"tagname":"method","name":"hasChildNodes","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":738}],"doc":"<p>Returns true if this node has one or more child nodes, else false.</p>\n","return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["isLeaf"],"id":"method-hasChildNodes","owner":"Ext.data.NodeInterface","short_doc":"Returns true if this node has one or more child nodes, else false. ..."},{"tagname":"method","name":"hasConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1480}],"doc":"\n","private":true,"params":[{"tagname":"params","name":"config","doc":"\n","type":"Object","html_type":"Object"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-hasConfig","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"indexOf","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":1507}],"doc":"<p>Returns the index of a child node</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"node","doc":"\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"}],"return":{"type":"Number","name":"return","doc":"<p>The index of the node or -1 if it was not found</p>\n","properties":null,"html_type":"Number"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-indexOf","owner":"Ext.data.NodeInterface","short_doc":"Returns the index of a child node ..."},{"tagname":"method","name":"indexOfId","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":1516}],"doc":"<p>Returns the index of a child node that matches the id</p>\n","params":[{"tagname":"params","type":"String","name":"id","doc":"<p>The id of the node to find</p>\n","html_type":"String"}],"return":{"type":"Number","name":"return","doc":"<p>The index of the node or -1 if it was not found</p>\n","properties":null,"html_type":"Number"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-indexOfId","owner":"Ext.data.NodeInterface","short_doc":"Returns the index of a child node that matches the id ..."},{"tagname":"method","name":"initConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1393}],"doc":"<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n","protected":true,"params":[{"tagname":"params","type":"Object","name":"config","doc":"\n","html_type":"Object"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["getConfigurator"],"id":"method-initConfig","owner":"Ext.Base","short_doc":"Initialize configuration for this class. ..."},{"tagname":"method","name":"insertBefore","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":1211}],"doc":"<p>Inserts the first node before the second node in this nodes childNodes collection.</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface/Ext.data.NodeInterface[]/Object","name":"node","doc":"<p>The node to insert</p>\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>/<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>[]/Object"},{"tagname":"params","type":"Ext.data.NodeInterface","name":"refNode","doc":"<p>The node to insert before (if null the node is appended)</p>\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"}],"return":{"type":"Ext.data.NodeInterface","name":"return","doc":"<p>The inserted node</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["appendChild","callTreeStore","createNode","fireEventArgs","getId","getTreeStore","indexOf","isLoaded","set","setFirstChild","triggerUIUpdate"],"id":"method-insertBefore","owner":"Ext.data.NodeInterface","short_doc":"Inserts the first node before the second node in this nodes childNodes collection. ..."},{"tagname":"method","name":"insertChild","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":1340}],"doc":"<p>Inserts a node into this node.</p>\n","params":[{"tagname":"params","type":"Number","name":"index","doc":"<p>The zero-based index to insert the node at</p>\n","html_type":"Number"},{"tagname":"params","type":"Ext.data.NodeInterface/Object","name":"node","doc":"<p>The node to insert</p>\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>/Object"}],"return":{"type":"Ext.data.NodeInterface","name":"return","doc":"<p>The node you just inserted</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["appendChild","insertBefore"],"id":"method-insertChild","owner":"Ext.data.NodeInterface","short_doc":"Inserts a node into this node. ..."},{"tagname":"method","name":"isAncestor","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":1702}],"doc":"<p>Returns true if the passed node is an ancestor (at any point) of this node.</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"node","doc":"\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"}],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-isAncestor","owner":"Ext.data.NodeInterface","short_doc":"Returns true if the passed node is an ancestor (at any point) of this node. ..."},{"tagname":"method","name":"isBranchLoaded","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":1784}],"doc":"<p>Returns true if this node is a branch node, and the entire branch is fully loaded.</p>\n\n<p>Using this method, it is possible to ascertain whether an\n<a href=\"#!/api/Ext.tree.Panel-method-expandAll\" rel=\"Ext.tree.Panel-method-expandAll\" class=\"docClass\">Ext.tree.Panel.expandAll</a> call will have access to all\ndescendant nodes without incurring a store load.</p>\n","return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["cascadeBy","isLeaf","isLoaded"],"id":"method-isBranchLoaded","owner":"Ext.data.NodeInterface","short_doc":"Returns true if this node is a branch node, and the entire branch is fully loaded. ..."},{"tagname":"method","name":"isExpandable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":746}],"doc":"<p>Returns true if this node has one or more child nodes, or if the <tt>expandable</tt>\nnode attribute is explicitly specified as true, otherwise returns false.</p>\n","return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["get","hasChildNodes","isLeaf","isLoaded"],"id":"method-isExpandable","owner":"Ext.data.NodeInterface","short_doc":"Returns true if this node has one or more child nodes, or if the expandable\nnode attribute is explicitly specified as..."},{"tagname":"method","name":"isExpanded","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":1768}],"doc":"<p>Returns <code>true</code> if this node is expanded.</p>\n","return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["get"],"id":"method-isExpanded","owner":"Ext.data.NodeInterface","short_doc":"Returns true if this node is expanded. ..."},{"tagname":"method","name":"isFirst","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":730}],"doc":"<p>Returns true if this node is the first child of its parent</p>\n","return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["get"],"id":"method-isFirst","owner":"Ext.data.NodeInterface","short_doc":"Returns true if this node is the first child of its parent ..."},{"tagname":"method","name":"isLast","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":722}],"doc":"<p>Returns true if this node is the last child of its parent</p>\n","return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["get"],"id":"method-isLast","owner":"Ext.data.NodeInterface","short_doc":"Returns true if this node is the last child of its parent ..."},{"tagname":"method","name":"isLastVisible","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":1356}],"doc":"<p>Used by <a href=\"#!/api/Ext.tree.Column-method-initTemplateRendererData\" rel=\"Ext.tree.Column-method-initTemplateRendererData\" class=\"docClass\">Ext.tree.Column.initTemplateRendererData</a> to determine whether a node is the last <em>visible</em>\nsibling.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getTreeStore"],"id":"method-isLastVisible","owner":"Ext.data.NodeInterface","short_doc":"Used by Ext.tree.Column.initTemplateRendererData to determine whether a node is the last visible\nsibling. ..."},{"tagname":"method","name":"isLeaf","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":589}],"doc":"<p>Returns true if this node is a leaf</p>\n","return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["get"],"id":"method-isLeaf","owner":"Ext.data.NodeInterface","short_doc":"Returns true if this node is a leaf ..."},{"tagname":"method","name":"isLoaded","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":1776}],"doc":"<p>Returns true if this node is loaded</p>\n","return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["get"],"id":"method-isLoaded","owner":"Ext.data.NodeInterface","short_doc":"Returns true if this node is loaded ..."},{"tagname":"method","name":"isLoading","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":1806}],"doc":"<p>Returns true if this node is loading</p>\n","return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["get"],"id":"method-isLoading","owner":"Ext.data.NodeInterface","short_doc":"Returns true if this node is loading ..."},{"tagname":"method","name":"isRoot","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":1814}],"doc":"<p>Returns true if this node is the root node</p>\n","return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-isRoot","owner":"Ext.data.NodeInterface","short_doc":"Returns true if this node is the root node ..."},{"tagname":"method","name":"isVisible","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":1822}],"doc":"<p>Returns true if this node is visible. Note that visibility refers to\nthe structure of the tree, the <a href=\"#!/api/Ext.tree.Panel-cfg-rootVisible\" rel=\"Ext.tree.Panel-cfg-rootVisible\" class=\"docClass\">Ext.tree.Panel.rootVisible</a>\nconfiguration is not taken into account here. If this method is called\non the root node, it will always be visible.</p>\n","return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-isVisible","owner":"Ext.data.NodeInterface","short_doc":"Returns true if this node is visible. ..."},{"tagname":"method","name":"link","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1508}],"doc":"<p>Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (via <code><a href=\"#!/api/Ext.Base-method-destroy\" rel=\"Ext.Base-method-destroy\" class=\"docClass\">destroy</a></code>).</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"\n","html_type":"String"},{"tagname":"params","type":"Object","name":"value","doc":"\n","html_type":"Object"}],"return":{"type":"Object","name":"return","doc":"<p>The <code>value</code> passed.</p>\n","properties":null,"html_type":"Object"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-link","owner":"Ext.Base","short_doc":"Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (vi..."},{"tagname":"method","name":"onChildNodesAvailable","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":1920}],"doc":"<p>Called as a callback from the beforeexpand listener fired by <a href=\"#!/api/Ext.data.NodeInterface-method-expand\" rel=\"Ext.data.NodeInterface-method-expand\" class=\"docClass\">expand</a> when the child nodes have been loaded and appended.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"records","type":"Object","html_type":"Object"},{"name":"recursive","type":"Object","html_type":"Object"},{"name":"callback","type":"Object","html_type":"Object"},{"name":"scope","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["callTreeStore","expandChildren","fireEventArgs","getTreeStore","set"],"id":"method-onChildNodesAvailable","owner":"Ext.data.NodeInterface","short_doc":"Called as a callback from the beforeexpand listener fired by expand when the child nodes have been loaded and appended. ..."},{"tagname":"method","name":"remove","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":1382}],"doc":"<p>Removes this node from its parent.</p>\n\n<p><strong>If</strong> the node is not phantom (only added in the client side), then it may be marked for removal.</p>\n\n<p>If the owning <a href=\"#!/api/Ext.data.TreeStore\" rel=\"Ext.data.TreeStore\" class=\"docClass\">tree store</a> is set to <a href=\"#!/api/Ext.data.ProxyStore-cfg-trackRemoved\" rel=\"Ext.data.ProxyStore-cfg-trackRemoved\" class=\"docClass\">track removed</a>\nthen the node will be added to the stack of nodes due to be removed the next time the store is synced with the server.</p>\n\n<p>If the owning <a href=\"#!/api/Ext.data.TreeStore\" rel=\"Ext.data.TreeStore\" class=\"docClass\">tree store</a> is set to <a href=\"#!/api/Ext.data.ProxyStore-cfg-autoSync\" rel=\"Ext.data.ProxyStore-cfg-autoSync\" class=\"docClass\">auto synchronize</a>\nthen the synchronize request will be initiated immediately.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"erase","default":"false","optional":true,"doc":"<p>True to erase the node using the configured proxy. This is only needed when the\nowning <a href=\"#!/api/Ext.data.TreeStore\" rel=\"Ext.data.TreeStore\" class=\"docClass\">tree store</a> is not taking care of synchronization operations.</p>\n","html_type":"Boolean"}],"return":{"type":"Ext.data.NodeInterface","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["erase"],"id":"method-remove","owner":"Ext.data.NodeInterface","short_doc":"Removes this node from its parent. ..."},{"tagname":"method","name":"removeAll","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":1411}],"doc":"<p>Removes all child nodes from this node.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"erase","default":"false","optional":true,"doc":"<p>True to erase the node using the configured\nproxy.</p>\n","html_type":"Boolean"}],"return":{"type":"Ext.data.NodeInterface","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["callTreeStore","fireEventArgs","getTreeStore","triggerUIUpdate"],"id":"method-removeAll","owner":"Ext.data.NodeInterface","short_doc":"Removes all child nodes from this node. ..."},{"tagname":"method","name":"removeChild","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":956}],"doc":"<p>Removes a child node from this node.</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"node","doc":"<p>The node to remove</p>\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"params","type":"Boolean","name":"erase","default":"false","optional":true,"doc":"<p>True to erase the record using the\nconfigured proxy.</p>\n","html_type":"Boolean"}],"return":{"type":"Ext.data.NodeInterface","name":"return","doc":"<p>The removed node</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["callTreeStore","fireEventArgs","getId","getTreeStore","indexOf","setFirstChild","setLastChild","triggerUIUpdate"],"id":"method-removeChild","owner":"Ext.data.NodeInterface","short_doc":"Removes a child node from this node. ..."},{"tagname":"method","name":"replaceChild","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":1493}],"doc":"<p>Replaces one child node in this node with another.</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"newChild","doc":"<p>The replacement node</p>\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"params","type":"Ext.data.NodeInterface","name":"oldChild","doc":"<p>The node to replace</p>\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"}],"return":{"type":"Ext.data.NodeInterface","name":"return","doc":"<p>The replaced node</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["insertBefore","removeChild"],"id":"method-replaceChild","owner":"Ext.data.NodeInterface","short_doc":"Replaces one child node in this node with another. ..."},{"tagname":"method","name":"serialize","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":2241}],"doc":"<p>Creates an object representation of this node including its children.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"name":"writerParam","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-serialize","owner":"Ext.data.NodeInterface","short_doc":"Creates an object representation of this node including its children. ..."},{"tagname":"method","name":"setCollapsed","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":2121}],"doc":"<p>Sets the node into the collapsed state without affecting the UI.</p>\n\n<p>This is called when a node is collapsed with the recursive flag. All the descendant\nnodes will have been removed from the store, but descendant non-leaf nodes still\nneed to be set to the collapsed state without affecting the UI.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"recursive","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["fireEventArgs","isLeaf"],"id":"method-setCollapsed","owner":"Ext.data.NodeInterface","short_doc":"Sets the node into the collapsed state without affecting the UI. ..."},{"tagname":"method","name":"setConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1441}],"doc":"<p>Sets a single/multiple configuration options.</p>\n","params":[{"tagname":"params","type":"String/Object","name":"name","doc":"<p>The name of the property to set, or a set of key value pairs to set.</p>\n","html_type":"String/Object"},{"tagname":"params","type":"Object","name":"value","optional":true,"doc":"<p>The value to set for the name parameter.</p>\n","html_type":"Object"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["getConfigurator"],"id":"method-setConfig","owner":"Ext.Base","short_doc":"Sets a single/multiple configuration options. ..."},{"tagname":"method","name":"setFirstChild","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":597}],"doc":"<p>Sets the first child of this node</p>\n","private":true,"params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"node","doc":"\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-setFirstChild","owner":"Ext.data.NodeInterface","short_doc":"Sets the first child of this node ..."},{"tagname":"method","name":"setLastChild","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":606}],"doc":"<p>Sets the last child of this node</p>\n","private":true,"params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"node","doc":"\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-setLastChild","owner":"Ext.data.NodeInterface","short_doc":"Sets the last child of this node ..."},{"tagname":"method","name":"sort","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":1718}],"doc":"<p>Sorts this nodes children using the supplied sort function.</p>\n","params":[{"tagname":"params","type":"Function","name":"sortFn","optional":true,"doc":"<p>A function which, when passed two Nodes, returns -1, 0 or 1 depending upon required sort order.</p>\n\n<p>It omitted, the node is sorted according to the existing sorters in the owning <a href=\"#!/api/Ext.data.TreeStore\" rel=\"Ext.data.TreeStore\" class=\"docClass\">TreeStore</a>.</p>\n","html_type":"Function"},{"tagname":"params","type":"Boolean","name":"recursive","default":"false","optional":true,"doc":"<p>True to apply this sort recursively</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"suppressEvent","default":"false","optional":true,"doc":"<p>True to not fire a sort event.</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["callTreeStore","fireEventArgs","getTreeStore","setFirstChild","setLastChild"],"id":"method-sort","owner":"Ext.data.NodeInterface","short_doc":"Sorts this nodes children using the supplied sort function. ..."},{"tagname":"method","name":"statics","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1075}],"doc":"<p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self();   // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n","protected":true,"return":{"type":"Ext.Class","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-statics","owner":"Ext.Base","short_doc":"Get the reference to the class from which this object was instantiated. ..."},{"tagname":"method","name":"unlink","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":1526}],"doc":"<p>Destroys a given set of <code><a href=\"#!/api/Ext.Base-method-link\" rel=\"Ext.Base-method-link\" class=\"docClass\">linked</a></code> objects. This is only needed if\nthe linked object is being destroyed before this instance.</p>\n","params":[{"tagname":"params","type":"String[]","name":"names","doc":"<p>The names of the linked objects to destroy.</p>\n","html_type":"String[]"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"method-unlink","owner":"Ext.Base","short_doc":"Destroys a given set of linked objects. ..."},{"tagname":"method","name":"updateInfo","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":615}],"doc":"<p>Updates general data of this node like isFirst, isLast, depth. This\nmethod is internally called after a node is moved. This shouldn't\nhave to be called by the developer unless they are creating custom\nTree plugins.</p>\n","protected":true,"params":[{"tagname":"params","type":"Boolean","name":"commit","doc":"\n","html_type":"Boolean"},{"tagname":"params","type":"Object","name":"info","doc":"<p>The info to update. May contain any of the following</p>\n","properties":[{"tagname":"params","type":"Object","name":"isFirst","doc":"\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"isLast","doc":"\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"index","doc":"\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"depth","doc":"\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"parentId","doc":"\n","html_type":"Object"}],"html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["commit","isEqual"],"id":"method-updateInfo","owner":"Ext.data.NodeInterface","short_doc":"Updates general data of this node like isFirst, isLast, depth. ..."},{"tagname":"method","name":"addConfig","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":911}],"doc":"<p>Adds new config properties to this class. This is called for classes when they\nare declared, then for any mixins that class may define and finally for any\noverrides defined that target the class.</p>\n","params":[{"tagname":"params","type":"Object","name":"config","doc":"\n","html_type":"Object"},{"tagname":"params","type":"Ext.Class","name":"mixinClass","optional":true,"doc":"<p>The mixin class if the configs are from a mixin.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"}],"private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["getConfigurator"],"id":"static-method-addConfig","owner":"Ext.Base","short_doc":"Adds new config properties to this class. ..."},{"tagname":"method","name":"addInheritableStatics","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":436}],"doc":"\n","private":true,"static":true,"inheritable":true,"params":[{"tagname":"params","type":"Object","name":"members","doc":"\n","html_type":"Object"}],"inheritdoc":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"static-method-addInheritableStatics","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"addMember","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":634}],"doc":"\n","private":true,"static":true,"inheritable":true,"params":[{"tagname":"params","name":"name","doc":"\n","type":"Object","html_type":"Object"},{"tagname":"params","name":"member","doc":"\n","type":"Object","html_type":"Object"}],"inheritdoc":null,"linenr":null,"chainable":true,"fires":null,"method_calls":["addMembers"],"id":"static-method-addMember","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"addMembers","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":480}],"doc":"<p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat();\n kitty.meow();\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"<p>The members to add to this class.</p>\n","html_type":"Object"},{"tagname":"params","type":"Boolean","name":"isStatic","default":"false","optional":true,"doc":"<p>Pass <code>true</code> if the members are static.</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"privacy","default":"false","optional":true,"doc":"<p>Pass <code>true</code> if the members are private. This\nonly has meaning in debug mode and only for methods.</p>\n","html_type":"Boolean"}],"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":true,"fires":null,"method_calls":["addConfig","addMembers"],"id":"static-method-addMembers","owner":"Ext.Base","short_doc":"Add methods / properties to the prototype of this class. ..."},{"tagname":"method","name":"addStatics","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":413}],"doc":"<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"\n","html_type":"Object"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":true,"fires":null,"method_calls":["addMembers"],"id":"static-method-addStatics","owner":"Ext.Base","short_doc":"Add / override static properties of this class. ..."},{"tagname":"method","name":"borrow","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":648}],"doc":"<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n","params":[{"tagname":"params","type":"Ext.Base","name":"fromClass","doc":"<p>The class to borrow members from</p>\n","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},{"tagname":"params","type":"Array/String","name":"members","doc":"<p>The names of the members to borrow</p>\n","html_type":"Array/String"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"inheritable":true,"private":true,"inheritdoc":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["addMembers"],"id":"static-method-borrow","owner":"Ext.Base","short_doc":"Borrow another class' members to the prototype of this class. ..."},{"tagname":"method","name":"callParent","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":785}],"doc":"\n","protected":true,"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[{"name":"args","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-callParent","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"callSuper","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":799}],"doc":"\n","protected":true,"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[{"name":"args","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-callSuper","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"create","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":94}],"doc":"<p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n","return":{"type":"Object","name":"return","doc":"<p>the created instance.</p>\n","properties":null,"html_type":"Object"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-create","owner":"Ext.Base","short_doc":"Create a new instance of this Class. ..."},{"tagname":"method","name":"createAlias","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":973}],"doc":"<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n","params":[{"tagname":"params","type":"String/Object","name":"alias","doc":"<p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n","html_type":"String/Object"},{"tagname":"params","type":"String/Object","name":"origin","doc":"<p>The original method name</p>\n","html_type":"String/Object"}],"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"static-method-createAlias","owner":"Ext.Base","short_doc":"Create aliases for existing prototype methods. ..."},{"tagname":"method","name":"decorate","autodetected":{"inheritdoc":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":335}],"doc":"<p>This method allows you to decorate a Model's class to implement the NodeInterface.\nThis adds a set of methods, new events, new properties and new fields on every Record.</p>\n","params":[{"tagname":"params","type":"Ext.Class/Ext.data.Model","name":"model","doc":"<p>The Model class or an instance of the Model class you want to\ndecorate the prototype of.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>/<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"}],"static":true,"inheritdoc":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["getPrototypeBody"],"id":"static-method-decorate","owner":"Ext.data.NodeInterface","short_doc":"This method allows you to decorate a Model's class to implement the NodeInterface. ..."},{"tagname":"method","name":"extend","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":322}],"doc":"\n","private":true,"static":true,"inheritable":true,"params":[{"tagname":"params","name":"config","doc":"\n","type":"Object","html_type":"Object"}],"inheritdoc":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["getConfigurator","hasOwnProperty"],"id":"static-method-extend","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"getConfigurator","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":940}],"doc":"<p>Returns the <code><a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a></code> for this class.</p>\n","return":{"type":"Ext.Configurator","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a>"},"private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-getConfigurator","owner":"Ext.Base","short_doc":"Returns the Ext.Configurator for this class. ..."},{"tagname":"method","name":"getName","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":954}],"doc":"<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n","return":{"type":"String","name":"return","doc":"<p>className</p>\n","properties":null,"html_type":"String"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-getName","owner":"Ext.Base","short_doc":"Get the current class' name in string format. ..."},{"tagname":"method","name":"getPrototypeBody","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":388}],"doc":"\n","inheritdoc":null,"static":true,"private":true,"inheritable":null,"linenr":388,"params":[],"chainable":false,"fires":null,"method_calls":["appendChild","callJoined","callParent","callTreeStore","cascadeBy","clear","commit","createNode","erase","expand","expandChildren","findChildBy","fireEventArgs","get","getId","getProxy","getTreeStore","hasChildNodes","indexOf","insertBefore","isBranchLoaded","isEqual","isExpanded","isLeaf","isLoaded","isLoading","isRoot","on","remove","removeChild","set","setFirstChild","setLastChild","triggerUIUpdate"],"id":"static-method-getPrototypeBody","owner":"Ext.data.NodeInterface","short_doc":" ..."},{"tagname":"method","name":"mixin","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":814}],"doc":"<p>Used internally by the mixins pre-processor</p>\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[{"name":"name","type":"Object","html_type":"Object"},{"name":"mixinClass","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":["addConfig","hasOwnProperty","mixin"],"id":"static-method-mixin","owner":"Ext.Base","short_doc":"Used internally by the mixins pre-processor ..."},{"tagname":"method","name":"onExtended","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":399}],"doc":"\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[{"name":"fn","type":"Object","html_type":"Object"},{"name":"scope","type":"Object","html_type":"Object"}],"chainable":true,"fires":null,"method_calls":null,"id":"static-method-onExtended","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"override","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":695}],"doc":"<p>Override members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>Direct use of this method should be rare. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n","html_type":"Object"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this class</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["addCachedConfig","addConfig","addInheritableStatics","addMembers","mixin"],"id":"static-method-override","owner":"Ext.Base","short_doc":"Override members of this class. ..."},{"tagname":"method","name":"triggerExtended","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Base.js","linenr":377}],"doc":"\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-triggerExtended","owner":"Ext.Base","short_doc":" ..."},{"tagname":"event","name":"append","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":441}],"doc":"<p>Fires when a new child node is appended</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"this","doc":"<p>This node</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"params","type":"Ext.data.NodeInterface","name":"node","doc":"<p>The newly appended node</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"params","type":"Number","name":"index","doc":"<p>The index of the newly appended node</p>\n\n","html_type":"Number"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-append","owner":"Ext.data.NodeInterface","short_doc":"Fires when a new child node is appended ..."},{"tagname":"event","name":"beforeappend","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":476}],"doc":"<p>Fires before a new child is appended, return false to cancel the append.</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"this","doc":"<p>This node</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"params","type":"Ext.data.NodeInterface","name":"node","doc":"<p>The child node to be appended</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-beforeappend","owner":"Ext.data.NodeInterface","short_doc":"Fires before a new child is appended, return false to cancel the append. ..."},{"tagname":"event","name":"beforecollapse","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":521}],"doc":"<p>Fires before this node is collapsed.</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"this","doc":"<p>The collapsing node</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-beforecollapse","owner":"Ext.data.NodeInterface","short_doc":"Fires before this node is collapsed. ..."},{"tagname":"event","name":"beforeexpand","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":516}],"doc":"<p>Fires before this node is expanded.</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"this","doc":"<p>The expanding node</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-beforeexpand","owner":"Ext.data.NodeInterface","short_doc":"Fires before this node is expanded. ..."},{"tagname":"event","name":"beforeinsert","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":499}],"doc":"<p>Fires before a new child is inserted, return false to cancel the insert.</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"this","doc":"<p>This node</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"params","type":"Ext.data.NodeInterface","name":"node","doc":"<p>The child node to be inserted</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"params","type":"Ext.data.NodeInterface","name":"refNode","doc":"<p>The child node the node is being inserted before</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-beforeinsert","owner":"Ext.data.NodeInterface","short_doc":"Fires before a new child is inserted, return false to cancel the insert. ..."},{"tagname":"event","name":"beforemove","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":491}],"doc":"<p>Fires before this node is moved to a new location in the tree. Return false to cancel the move.</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"this","doc":"<p>This node</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"params","type":"Ext.data.NodeInterface","name":"oldParent","doc":"<p>The parent of this node</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"params","type":"Ext.data.NodeInterface","name":"newParent","doc":"<p>The new parent this node is moving to</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"params","type":"Number","name":"index","doc":"<p>The index it is being moved to</p>\n\n","html_type":"Number"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-beforemove","owner":"Ext.data.NodeInterface","short_doc":"Fires before this node is moved to a new location in the tree. ..."},{"tagname":"event","name":"beforeremove","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":482}],"doc":"<p>Fires before a child is removed, return false to cancel the remove.</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"this","doc":"<p>This node</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"params","type":"Ext.data.NodeInterface","name":"node","doc":"<p>The child node to be removed</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"params","type":"Boolean","name":"isMove","doc":"<p><code>true</code> if the child node is being removed so it can be moved to another position in the tree.\n(a side effect of calling <a href=\"#!/api/Ext.data.NodeInterface-method-appendChild\" rel=\"Ext.data.NodeInterface-method-appendChild\" class=\"docClass\">appendChild</a> or\n<a href=\"#!/api/Ext.data.NodeInterface-method-insertBefore\" rel=\"Ext.data.NodeInterface-method-insertBefore\" class=\"docClass\">insertBefore</a> with a node that already has a parentNode)</p>\n\n","html_type":"Boolean"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-beforeremove","owner":"Ext.data.NodeInterface","short_doc":"Fires before a child is removed, return false to cancel the remove. ..."},{"tagname":"event","name":"collapse","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":511}],"doc":"<p>Fires when this node is collapsed.</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"this","doc":"<p>The collapsing node</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-collapse","owner":"Ext.data.NodeInterface","short_doc":"Fires when this node is collapsed. ..."},{"tagname":"event","name":"expand","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":506}],"doc":"<p>Fires when this node is expanded.</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"this","doc":"<p>The expanding node</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-expand","owner":"Ext.data.NodeInterface","short_doc":"Fires when this node is expanded. ..."},{"tagname":"event","name":"insert","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":469}],"doc":"<p>Fires when a new child node is inserted.</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"this","doc":"<p>This node</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"params","type":"Ext.data.NodeInterface","name":"node","doc":"<p>The child node inserted</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"params","type":"Ext.data.NodeInterface","name":"refNode","doc":"<p>The child node the node was inserted before</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-insert","owner":"Ext.data.NodeInterface","short_doc":"Fires when a new child node is inserted. ..."},{"tagname":"event","name":"move","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":461}],"doc":"<p>Fires when this node is moved to a new location in the tree</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"this","doc":"<p>This node</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"params","type":"Ext.data.NodeInterface","name":"oldParent","doc":"<p>The old parent of this node</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"params","type":"Ext.data.NodeInterface","name":"newParent","doc":"<p>The new parent of this node</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"params","type":"Number","name":"index","doc":"<p>The index it was moved to</p>\n\n","html_type":"Number"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-move","owner":"Ext.data.NodeInterface","short_doc":"Fires when this node is moved to a new location in the tree ..."},{"tagname":"event","name":"remove","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":448}],"doc":"<p>Fires when a child node is removed</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"this","doc":"<p>This node</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"params","type":"Ext.data.NodeInterface","name":"node","doc":"<p>The removed node</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"params","type":"Boolean","name":"isMove","doc":"<p><code>true</code> if the child node is being removed so it can be moved to another position in the tree.</p>\n\n","html_type":"Boolean"},{"tagname":"params","type":"Object","name":"context","doc":"<p>An object providing information about where the removed node came from. It contains the following properties:</p>\n\n","properties":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"parentNode","doc":"<p>The node from which the removed node was removed.</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"params","type":"Ext.data.NodeInterface","name":"previousSibling","doc":"<p>The removed node's former previous sibling.</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"params","type":"Ext.data.NodeInterface","name":"nextSibling","doc":"<p>The removed node's former next sibling.\n(a side effect of calling <a href=\"#!/api/Ext.data.NodeInterface-method-appendChild\" rel=\"Ext.data.NodeInterface-method-appendChild\" class=\"docClass\">appendChild</a> or\n<a href=\"#!/api/Ext.data.NodeInterface-method-insertBefore\" rel=\"Ext.data.NodeInterface-method-insertBefore\" class=\"docClass\">insertBefore</a> with a node that already has a parentNode)</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"}],"html_type":"Object"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-remove","owner":"Ext.data.NodeInterface","short_doc":"Fires when a child node is removed ..."},{"tagname":"event","name":"sort","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/data/NodeInterface.js","linenr":526}],"doc":"<p>Fires when this node's childNodes are sorted.</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"this","doc":"<p>This node.</p>\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"params","type":"Ext.data.NodeInterface[]","name":"childNodes","doc":"<p>The childNodes of this node.</p>\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>[]"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-sort","owner":"Ext.data.NodeInterface","short_doc":"Fires when this node's childNodes are sorted. ..."}],"code_type":"ext_define","id":"class-Ext.data.NodeInterface","short_doc":"This class is used as a set of methods that are applied to the prototype of a\nModel to decorate it with a Node API. ..."}