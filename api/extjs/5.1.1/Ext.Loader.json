{"tagname":"class","name":"Ext.Loader","autodetected":{},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Loader.js","linenr":2}],"doc":"<p><a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a> is the heart of the new dynamic dependency loading capability in Ext JS 4+. It is most commonly used\nvia the <a href=\"#!/api/Ext-method-require\" rel=\"Ext-method-require\" class=\"docClass\">Ext.require</a> shorthand. <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a> supports both asynchronous and synchronous loading\napproaches, and leverage their advantages for the best development flow. We'll discuss about the pros and cons of each approach:</p>\n\n<h1>Asynchronous Loading</h1>\n\n<ul>\n<li><p>Advantages:</p>\n\n<ul>\n<li>Cross-domain</li>\n<li>No web server needed: you can run the application via the file system protocol (i.e: <code>file://path/to/your/index\n.html</code>)</li>\n<li>Best possible debugging experience: error messages come with the exact file name and line number</li>\n</ul>\n</li>\n<li><p>Disadvantages:</p>\n\n<ul>\n<li>Dependencies need to be specified before-hand</li>\n</ul>\n</li>\n</ul>\n\n\n<h3>Method 1: Explicitly include what you need:</h3>\n\n<pre><code>// Syntax\n<a href=\"#!/api/Ext-method-require\" rel=\"Ext-method-require\" class=\"docClass\">Ext.require</a>({String/Array} expressions);\n\n// Example: Single alias\n<a href=\"#!/api/Ext-method-require\" rel=\"Ext-method-require\" class=\"docClass\">Ext.require</a>('widget.window');\n\n// Example: Single class name\n<a href=\"#!/api/Ext-method-require\" rel=\"Ext-method-require\" class=\"docClass\">Ext.require</a>('<a href=\"#!/api/Ext.window.Window\" rel=\"Ext.window.Window\" class=\"docClass\">Ext.window.Window</a>');\n\n// Example: Multiple aliases / class names mix\n<a href=\"#!/api/Ext-method-require\" rel=\"Ext-method-require\" class=\"docClass\">Ext.require</a>(['widget.window', 'layout.border', '<a href=\"#!/api/Ext.data.Connection\" rel=\"Ext.data.Connection\" class=\"docClass\">Ext.data.Connection</a>']);\n\n// Wildcards\n<a href=\"#!/api/Ext-method-require\" rel=\"Ext-method-require\" class=\"docClass\">Ext.require</a>(['widget.*', 'layout.*', 'Ext.data.*']);\n</code></pre>\n\n<h3>Method 2: Explicitly exclude what you don't need:</h3>\n\n<pre><code>// Syntax: Note that it must be in this chaining format.\n<a href=\"#!/api/Ext-method-exclude\" rel=\"Ext-method-exclude\" class=\"docClass\">Ext.exclude</a>({String/Array} expressions)\n   .require({String/Array} expressions);\n\n// Include everything except Ext.data.*\n<a href=\"#!/api/Ext-method-exclude\" rel=\"Ext-method-exclude\" class=\"docClass\">Ext.exclude</a>('Ext.data.*').require('*');\n\n// Include all widgets except widget.checkbox*,\n// which will match widget.checkbox, widget.checkboxfield, widget.checkboxgroup, etc.\n<a href=\"#!/api/Ext-method-exclude\" rel=\"Ext-method-exclude\" class=\"docClass\">Ext.exclude</a>('widget.checkbox*').require('widget.*');\n</code></pre>\n\n<h1>Synchronous Loading on Demand</h1>\n\n<ul>\n<li><p>Advantages:</p>\n\n<ul>\n<li>There's no need to specify dependencies before-hand, which is always the convenience of including ext-all.js\nbefore</li>\n</ul>\n</li>\n<li><p>Disadvantages:</p>\n\n<ul>\n<li>Not as good debugging experience since file name won't be shown (except in Firebug at the moment)</li>\n<li>Must be from the same domain due to XHR restriction</li>\n<li>Need a web server, same reason as above</li>\n</ul>\n</li>\n</ul>\n\n\n<p>There's one simple rule to follow: Instantiate everything with <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a> instead of the <code>new</code> keyword</p>\n\n<pre><code><a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('widget.window', { ... }); // Instead of new <a href=\"#!/api/Ext.window.Window\" rel=\"Ext.window.Window\" class=\"docClass\">Ext.window.Window</a>({...});\n\n<a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.window.Window\" rel=\"Ext.window.Window\" class=\"docClass\">Ext.window.Window</a>', {}); // Same as above, using full class name instead of alias\n\n<a href=\"#!/api/Ext-method-widget\" rel=\"Ext-method-widget\" class=\"docClass\">Ext.widget</a>('window', {}); // Same as above, all you need is the traditional `xtype`\n</code></pre>\n\n<p>Behind the scene, <a href=\"#!/api/Ext.ClassManager\" rel=\"Ext.ClassManager\" class=\"docClass\">Ext.ClassManager</a> will automatically check whether the given class name / alias has already\n existed on the page. If it's not, <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a> will immediately switch itself to synchronous mode and automatic load the given\n class and all its dependencies.</p>\n\n<h1>Hybrid Loading - The Best of Both Worlds</h1>\n\n<p>It has all the advantages combined from asynchronous and synchronous loading. The development flow is simple:</p>\n\n<h3>Step 1: Start writing your application using synchronous approach.</h3>\n\n<p><a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a> will automatically fetch all dependencies on demand as they're needed during run-time. For example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-onReady\" rel=\"Ext-method-onReady\" class=\"docClass\">Ext.onReady</a>(function(){\n    var window = <a href=\"#!/api/Ext-method-widget\" rel=\"Ext-method-widget\" class=\"docClass\">Ext.widget</a>('window', {\n        width: 500,\n        height: 300,\n        layout: {\n            type: 'border',\n            padding: 5\n        },\n        title: 'Hello Dialog',\n        items: [{\n            title: 'Navigation',\n            collapsible: true,\n            region: 'west',\n            width: 200,\n            html: 'Hello',\n            split: true\n        }, {\n            title: 'TabPanel',\n            region: 'center'\n        }]\n    });\n\n    window.show();\n})\n</code></pre>\n\n<h3>Step 2: Along the way, when you need better debugging ability, watch the console for warnings like these:</h3>\n\n<pre><code>[<a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>] Synchronously loading '<a href=\"#!/api/Ext.window.Window\" rel=\"Ext.window.Window\" class=\"docClass\">Ext.window.Window</a>'; consider adding <a href=\"#!/api/Ext-method-require\" rel=\"Ext-method-require\" class=\"docClass\">Ext.require</a>('<a href=\"#!/api/Ext.window.Window\" rel=\"Ext.window.Window\" class=\"docClass\">Ext.window.Window</a>') before your application's code\nClassManager.js:432\n[<a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>] Synchronously loading '<a href=\"#!/api/Ext.layout.container.Border\" rel=\"Ext.layout.container.Border\" class=\"docClass\">Ext.layout.container.Border</a>'; consider adding <a href=\"#!/api/Ext-method-require\" rel=\"Ext-method-require\" class=\"docClass\">Ext.require</a>('<a href=\"#!/api/Ext.layout.container.Border\" rel=\"Ext.layout.container.Border\" class=\"docClass\">Ext.layout.container.Border</a>') before your application's code\n</code></pre>\n\n<p>Simply copy and paste the suggested code above <code><a href=\"#!/api/Ext-method-onReady\" rel=\"Ext-method-onReady\" class=\"docClass\">Ext.onReady</a></code>, i.e:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-require\" rel=\"Ext-method-require\" class=\"docClass\">Ext.require</a>('<a href=\"#!/api/Ext.window.Window\" rel=\"Ext.window.Window\" class=\"docClass\">Ext.window.Window</a>');\n<a href=\"#!/api/Ext-method-require\" rel=\"Ext-method-require\" class=\"docClass\">Ext.require</a>('<a href=\"#!/api/Ext.layout.container.Border\" rel=\"Ext.layout.container.Border\" class=\"docClass\">Ext.layout.container.Border</a>');\n\n<a href=\"#!/api/Ext-method-onReady\" rel=\"Ext-method-onReady\" class=\"docClass\">Ext.onReady</a>(...);\n</code></pre>\n\n<p>Everything should now load via asynchronous mode.</p>\n\n<h1>Deployment</h1>\n\n<p>It's important to note that dynamic loading should only be used during development on your local machines.\nDuring production, all dependencies should be combined into one single JavaScript file. <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a> makes\nthe whole process of transitioning from / to between development / maintenance and production as easy as\npossible. Internally <a href=\"#!/api/Ext.Loader-property-history\" rel=\"Ext.Loader-property-history\" class=\"docClass\">Ext.Loader.history</a> maintains the list of all dependencies your application\nneeds in the exact loading sequence. It's as simple as concatenating all files in this array into one,\nthen include it on top of your application.</p>\n\n<p>This process will be automated with Sencha Command, to be released and documented towards Ext JS 4 Final.</p>\n","singleton":true,"members":[{"tagname":"cfg","name":"disableCaching","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Loader.js","linenr":171}],"doc":"<p>Appends current timestamp to script files to prevent caching.</p>\n","type":"Boolean","default":"true","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-disableCaching","owner":"Ext.Loader","short_doc":"Appends current timestamp to script files to prevent caching. ...","html_type":"Boolean"},{"tagname":"cfg","name":"disableCachingParam","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Loader.js","linenr":177}],"doc":"<p>The get parameter name for the cache buster's timestamp.</p>\n","type":"String","default":"\"_dc\"","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-disableCachingParam","owner":"Ext.Loader","short_doc":"The get parameter name for the cache buster's timestamp. ...","html_type":"String"},{"tagname":"cfg","name":"enabled","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Loader.js","linenr":157}],"doc":"<p>Whether or not to enable the dynamic dependency loading feature.</p>\n","type":"Boolean","default":"true","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-enabled","owner":"Ext.Loader","short_doc":"Whether or not to enable the dynamic dependency loading feature. ...","html_type":"Boolean"},{"tagname":"cfg","name":"paths","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Loader.js","linenr":183}],"doc":"<p>The mapping from namespaces to file paths</p>\n\n<pre><code>{\n    'Ext': '.', // This is set by default, <a href=\"#!/api/Ext.layout.container.Container\" rel=\"Ext.layout.container.Container\" class=\"docClass\">Ext.layout.container.Container</a> will be\n                // loaded from ./layout/Container.js\n\n    'My': './src/my_own_folder' // My.layout.Container will be loaded from\n                                // ./src/my_own_folder/layout/Container.js\n}\n</code></pre>\n\n<p>Note that all relative paths are relative to the current HTML document.\nIf not being specified, for example, <code>Other.awesome.Class</code> will simply be\nloaded from <code>\"./Other/awesome/Class.js\"</code>.</p>\n","type":"Object","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-paths","owner":"Ext.Loader","short_doc":"The mapping from namespaces to file paths\n\n{\n    'Ext': '.', // This is set by default, Ext.layout.container.Containe...","html_type":"Object"},{"tagname":"cfg","name":"preserveScripts","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Loader.js","linenr":201}],"doc":"<p><code>false</code> to remove asynchronously loaded scripts, <code>true</code> to retain script\nelement for browser debugger compatibility and improved load performance.</p>\n","type":"Boolean","default":"true","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-preserveScripts","owner":"Ext.Loader","short_doc":"false to remove asynchronously loaded scripts, true to retain script\nelement for browser debugger compatibility and i...","html_type":"Boolean"},{"tagname":"cfg","name":"scriptChainDelay","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Loader.js","linenr":163}],"doc":"<p>millisecond delay between asynchronous script injection (prevents stack\noverflow on some user agents) 'false' disables delay but potentially\nincreases stack load.</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-scriptChainDelay","owner":"Ext.Loader","short_doc":"millisecond delay between asynchronous script injection (prevents stack\noverflow on some user agents) 'false' disable...","html_type":"Boolean"},{"tagname":"cfg","name":"scriptCharset","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Loader.js","linenr":208}],"doc":"<p>Optional charset to specify encoding of dynamic script content.</p>\n","type":"String","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-scriptCharset","owner":"Ext.Loader","html_type":"String"},{"tagname":"property","name":"classesLoading","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Loader.js","linenr":277}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"Array","default":"[]","readonly":null,"id":"property-classesLoading","owner":"Ext.Loader","short_doc":" ...","html_type":"Array"},{"tagname":"property","name":"config","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Loader.js","linenr":243}],"doc":"<p>Configuration</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"Object","default":null,"readonly":null,"id":"property-config","owner":"Ext.Loader","html_type":"Object"},{"tagname":"property","name":"hasFileLoadError","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Loader.js","linenr":267}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"Boolean","default":"false","readonly":null,"id":"property-hasFileLoadError","owner":"Ext.Loader","short_doc":" ...","html_type":"Boolean"},{"tagname":"property","name":"history","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Loader.js","linenr":234}],"doc":"<p>An array of class names to keep track of the dependency loading order.\nThis is not guaranteed to be the same everytime due to the asynchronous\nnature of the Loader.</p>\n","type":"Array","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-history","owner":"Ext.Loader","short_doc":"An array of class names to keep track of the dependency loading order. ...","html_type":"Array"},{"tagname":"property","name":"isInHistory","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Loader.js","linenr":223}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"Object","default":null,"readonly":null,"id":"property-isInHistory","owner":"Ext.Loader","html_type":"Object"},{"tagname":"property","name":"isLoading","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Loader.js","linenr":228}],"doc":"<p>Flag indicating whether there are still files being loaded</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"Boolean","default":"false","readonly":null,"id":"property-isLoading","owner":"Ext.Loader","short_doc":"Flag indicating whether there are still files being loaded ...","html_type":"Boolean"},{"tagname":"property","name":"missingQueue","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Loader.js","linenr":289}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"Object","default":null,"readonly":null,"id":"property-missingQueue","owner":"Ext.Loader","html_type":"Object"},{"tagname":"property","name":"optionalRequires","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Loader.js","linenr":255}],"doc":"<p>Contains classes referenced in <code>uses</code> properties.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"Object","default":null,"readonly":null,"id":"property-optionalRequires","owner":"Ext.Loader","html_type":"Object"},{"tagname":"property","name":"readyListeners","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Loader.js","linenr":249}],"doc":"<p>Maintain the list of listeners to execute when all required scripts are fully loaded</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"Object","default":null,"readonly":null,"id":"property-readyListeners","owner":"Ext.Loader","html_type":"Object"},{"tagname":"property","name":"requiresMap","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Loader.js","linenr":261}],"doc":"<p>Map of fully qualified class names to an array of dependent classes.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"Object","default":null,"readonly":null,"id":"property-requiresMap","owner":"Ext.Loader","html_type":"Object"},{"tagname":"property","name":"scriptsLoading","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Loader.js","linenr":270}],"doc":"<p>The number of scripts loading via loadScript.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"Number","default":"0","readonly":null,"id":"property-scriptsLoading","owner":"Ext.Loader","short_doc":"The number of scripts loading via loadScript. ...","html_type":"Number"},{"tagname":"property","name":"syncModeEnabled","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Loader.js","linenr":283}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"Boolean","default":"false","readonly":null,"id":"property-syncModeEnabled","owner":"Ext.Loader","short_doc":" ...","html_type":"Boolean"},{"tagname":"method","name":"addBaseUrlClassPathMappings","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Loader.js","linenr":424}],"doc":"<p>fixes up loader path configs by prepending Ext.Boot#baseUrl to the beginning\nof the path, then delegates to <a href=\"#!/api/Ext.Loader-method-addClassPathMappings\" rel=\"Ext.Loader-method-addClassPathMappings\" class=\"docClass\">Ext.Loader.addClassPathMappings</a></p>\n","params":[{"tagname":"params","name":"pathConfig","doc":"\n","type":"Object","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-addBaseUrlClassPathMappings","owner":"Ext.Loader","short_doc":"fixes up loader path configs by prepending Ext.Boot#baseUrl to the beginning\nof the path, then delegates to Ext.Loade..."},{"tagname":"method","name":"addClassPathMappings","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Loader.js","linenr":412}],"doc":"<p>Sets a batch of path entries</p>\n","params":[{"tagname":"params","type":"Object ","name":"paths","doc":"<p>a set of className: path mappings</p>\n","html_type":"Object "}],"return":{"type":"Ext.Loader","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"method-addClassPathMappings","owner":"Ext.Loader","short_doc":"Sets a batch of path entries ..."},{"tagname":"method","name":"addUsedClasses","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Loader.js","linenr":696}],"doc":"<p>Ensure that any classes referenced in the <code>uses</code> property are loaded.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"classes","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-addUsedClasses","owner":"Ext.Loader","short_doc":"Ensure that any classes referenced in the uses property are loaded. ..."},{"tagname":"method","name":"checkReady","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Loader.js","linenr":888}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-checkReady","owner":"Ext.Loader","short_doc":" ..."},{"tagname":"method","name":"flushMissingQueue","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Loader.js","linenr":868}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-flushMissingQueue","owner":"Ext.Loader","short_doc":" ..."},{"tagname":"method","name":"getConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Loader.js","linenr":386}],"doc":"<p>Get the config value corresponding to the specified name. If no name is given, will return the config object</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"<p>The config property name</p>\n","html_type":"String"}],"return":{"type":"Object","name":"return","doc":"\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getConfig","owner":"Ext.Loader","short_doc":"Get the config value corresponding to the specified name. ..."},{"tagname":"method","name":"getPath","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Loader.js","linenr":438}],"doc":"<p>Translates a className to a file path by adding the\nthe proper prefix and converting the .'s to /'s. For example:</p>\n\n<pre><code><a href=\"#!/api/Ext.Loader-method-setPath\" rel=\"Ext.Loader-method-setPath\" class=\"docClass\">Ext.Loader.setPath</a>('My', '/path/to/My');\n\nalert(<a href=\"#!/api/Ext.Loader-method-getPath\" rel=\"Ext.Loader-method-getPath\" class=\"docClass\">Ext.Loader.getPath</a>('My.awesome.Class')); // alerts '/path/to/My/awesome/Class.js'\n</code></pre>\n\n<p>Note that the deeper namespace levels, if explicitly set, are always resolved first. For example:</p>\n\n<pre><code><a href=\"#!/api/Ext.Loader-method-setPath\" rel=\"Ext.Loader-method-setPath\" class=\"docClass\">Ext.Loader.setPath</a>({\n    'My': '/path/to/lib',\n    'My.awesome': '/other/path/for/awesome/stuff',\n    'My.awesome.more': '/more/awesome/path'\n});\n\nalert(<a href=\"#!/api/Ext.Loader-method-getPath\" rel=\"Ext.Loader-method-getPath\" class=\"docClass\">Ext.Loader.getPath</a>('My.awesome.Class')); // alerts '/other/path/for/awesome/stuff/Class.js'\n\nalert(<a href=\"#!/api/Ext.Loader-method-getPath\" rel=\"Ext.Loader-method-getPath\" class=\"docClass\">Ext.Loader.getPath</a>('My.awesome.more.Class')); // alerts '/more/awesome/path/Class.js'\n\nalert(<a href=\"#!/api/Ext.Loader-method-getPath\" rel=\"Ext.Loader-method-getPath\" class=\"docClass\">Ext.Loader.getPath</a>('My.cool.Class')); // alerts '/path/to/lib/cool/Class.js'\n\nalert(<a href=\"#!/api/Ext.Loader-method-getPath\" rel=\"Ext.Loader-method-getPath\" class=\"docClass\">Ext.Loader.getPath</a>('Unknown.strange.Stuff')); // alerts 'Unknown/strange/Stuff.js'\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"className","doc":"\n","html_type":"String"}],"return":{"type":"String","name":"return","doc":"<p>path</p>\n","properties":null,"html_type":"String"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getPath","owner":"Ext.Loader","short_doc":"Translates a className to a file path by adding the\nthe proper prefix and converting the .'s to /'s. ..."},{"tagname":"method","name":"historyPush","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Loader.js","linenr":761}],"doc":"\n","private":true,"params":[{"tagname":"params","type":"String","name":"className","doc":"\n","html_type":"String"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-historyPush","owner":"Ext.Loader","short_doc":" ..."},{"tagname":"method","name":"loadScript","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Loader.js","linenr":837}],"doc":"<p>Loads the specified script URL and calls the supplied callbacks. If this method\nis called before <a href=\"#!/api/Ext-property-isReady\" rel=\"Ext-property-isReady\" class=\"docClass\">Ext.isReady</a>, the script's load will delay the transition\nto ready. This can be used to load arbitrary scripts that may contain further\n<a href=\"#!/api/Ext-method-require\" rel=\"Ext-method-require\" class=\"docClass\">Ext.require</a> calls.</p>\n","params":[{"tagname":"params","type":"Object/String/String[]","name":"options","doc":"<p>The options object or simply the URL(s) to load.</p>\n","properties":[{"tagname":"params","type":"String","name":"url","doc":"<p>The URL from which to load the script.</p>\n","html_type":"String"},{"tagname":"params","type":"Function","name":"onLoad","optional":true,"doc":"<p>The callback to call on successful load.</p>\n","html_type":"Function"},{"tagname":"params","type":"Function","name":"onError","optional":true,"doc":"<p>The callback to call on failure to load.</p>\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (<code>this</code>) for the supplied callbacks.</p>\n","html_type":"Object"}],"html_type":"Object/String/String[]"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-loadScript","owner":"Ext.Loader","short_doc":"Loads the specified script URL and calls the supplied callbacks. ..."},{"tagname":"method","name":"loadScripts","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Loader.js","linenr":773}],"doc":"<p>This is an internal method that delegate content loading to the\nbootstrap layer.</p>\n","private":true,"params":[{"tagname":"params","name":"params","doc":"\n","type":"Object","html_type":"Object"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-loadScripts","owner":"Ext.Loader","short_doc":"This is an internal method that delegate content loading to the\nbootstrap layer. ..."},{"tagname":"method","name":"loadScriptsSync","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Loader.js","linenr":813}],"doc":"<p>This method is provide for use by the bootstrap layer.</p>\n","private":true,"params":[{"tagname":"params","type":"String[]","name":"urls","doc":"\n","html_type":"String[]"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-loadScriptsSync","owner":"Ext.Loader","short_doc":"This method is provide for use by the bootstrap layer. ..."},{"tagname":"method","name":"loadScriptsSyncBasePrefix","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Loader.js","linenr":825}],"doc":"<p>This method is provide for use by the bootstrap layer.</p>\n","private":true,"params":[{"tagname":"params","type":"String[]","name":"urls","doc":"\n","html_type":"String[]"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-loadScriptsSyncBasePrefix","owner":"Ext.Loader","short_doc":"This method is provide for use by the bootstrap layer. ..."},{"tagname":"method","name":"onReady","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Loader.js","linenr":670}],"doc":"<p>Add a new listener to be executed when all required scripts are fully loaded</p>\n","params":[{"tagname":"params","type":"Function","name":"fn","doc":"<p>The function callback to be executed</p>\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The execution scope (<code>this</code>) of the callback function.</p>\n","html_type":"Object"},{"tagname":"params","type":"Boolean","name":"withDomReady","default":"true","optional":true,"doc":"<p>Pass <code>false</code> to not also wait for document\ndom ready.</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>Additional callback options.</p>\n","properties":[{"tagname":"params","type":"Number","name":"delay","default":"0","optional":true,"doc":"<p>A number of milliseconds to delay.</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"priority","default":"0","optional":true,"doc":"<p>Relative priority of this callback. Negative\nnumbers are reserved.</p>\n","html_type":"Number"}],"html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-onReady","owner":"Ext.Loader","short_doc":"Add a new listener to be executed when all required scripts are fully loaded ..."},{"tagname":"method","name":"setConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Loader.js","linenr":345}],"doc":"<p>Set the configuration for the loader. This should be called right after ext-(debug).js\nis included in the page, and before <a href=\"#!/api/Ext-method-onReady\" rel=\"Ext-method-onReady\" class=\"docClass\">Ext.onReady</a>. i.e:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"ext-core-debug.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n    <a href=\"#!/api/Ext.Loader-method-setConfig\" rel=\"Ext.Loader-method-setConfig\" class=\"docClass\">Ext.Loader.setConfig</a>({\n      enabled: true,\n      paths: {\n          'My': 'my_own_path'\n      }\n    });\n&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n    <a href=\"#!/api/Ext-method-require\" rel=\"Ext-method-require\" class=\"docClass\">Ext.require</a>(...);\n\n    <a href=\"#!/api/Ext-method-onReady\" rel=\"Ext-method-onReady\" class=\"docClass\">Ext.onReady</a>(function() {\n      // application code here\n    });\n&lt;/script&gt;\n</code></pre>\n\n<p>Refer to config options of <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a> for the list of possible properties</p>\n","params":[{"tagname":"params","type":"Object","name":"config","doc":"<p>The config object to override the default values</p>\n","html_type":"Object"}],"return":{"type":"Ext.Loader","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"method-setConfig","owner":"Ext.Loader","short_doc":"Set the configuration for the loader. ..."},{"tagname":"method","name":"setPath","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Loader.js","linenr":395}],"doc":"<p>Sets the path of a namespace.\nFor Example:</p>\n\n<pre><code><a href=\"#!/api/Ext.Loader-method-setPath\" rel=\"Ext.Loader-method-setPath\" class=\"docClass\">Ext.Loader.setPath</a>('Ext', '.');\n</code></pre>\n","params":[{"tagname":"params","type":"String/Object","name":"name","doc":"<p>See <a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n","html_type":"String/Object"},{"tagname":"params","type":"String","name":"path","optional":true,"doc":"<p>See <a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n","html_type":"String"}],"return":{"type":"Ext.Loader","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"method-setPath","owner":"Ext.Loader","short_doc":"Sets the path of a namespace. ..."},{"tagname":"method","name":"triggerReady","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/ext-5.1.1/packages/sencha-core/src/class/Loader.js","linenr":716}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-triggerReady","owner":"Ext.Loader","short_doc":" ..."}],"alternateClassNames":[],"aliases":{},"id":"class-Ext.Loader","short_doc":"Ext.Loader is the heart of the new dynamic dependency loading capability in Ext JS 4+. ..."}