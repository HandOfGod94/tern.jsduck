{"tagname":"class","name":"Ext.grid.locking.Lockable","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":1}],"doc":"<p>Lockable is a private mixin which injects lockable behavior into any\nTablePanel subclass such as GridPanel or TreePanel. TablePanel will\nautomatically inject the <a href=\"#!/api/Ext.grid.locking.Lockable\" rel=\"Ext.grid.locking.Lockable\" class=\"docClass\">Ext.grid.locking.Lockable</a> mixin in when one of the\nthese conditions are met:</p>\n\n<ul>\n<li>The TablePanel has the lockable configuration set to true</li>\n<li>One of the columns in the TablePanel has locked set to true/false</li>\n</ul>\n\n\n<p>Each TablePanel subclass must register an alias. It should have an array\nof configurations to copy to the 2 separate tablepanels that will be generated\nto note what configurations should be copied. These are named normalCfgCopy and\nlockedCfgCopy respectively.</p>\n\n<p>Configurations which are specified in this class will be available on any grid or\ntree which is using the lockable functionality.</p>\n\n<p>By default the two grids, \"locked\" and \"normal\" will be arranged using an <a href=\"#!/api/Ext.layout.container.HBox\" rel=\"Ext.layout.container.HBox\" class=\"docClass\">hbox</a>\nlayout. If the lockable grid is configured with <code><a href=\"#!/api/Ext.grid.locking.Lockable-cfg-split\" rel=\"Ext.grid.locking.Lockable-cfg-split\" class=\"docClass\">split:true</a></code>, a vertical splitter\nwill be placed between the two grids to resize them.</p>\n\n<p>It is possible to override the layout of the lockable grid, or example, you may wish to\nuse a border layout and have one of the grids collapsible.</p>\n","private":true,"aliases":{},"alternateClassNames":["Ext.grid.Lockable"],"extends":"Ext.Base","mixins":[],"requires":["Ext.grid.locking.View","Ext.grid.header.Container","Ext.grid.locking.HeaderContainer","Ext.view.Table"],"uses":[],"members":[{"tagname":"cfg","name":"layout","autodetected":{},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":88}],"doc":"<p>By default, a lockable grid uses an <a href=\"#!/api/Ext.layout.container.HBox\" rel=\"Ext.layout.container.HBox\" class=\"docClass\">HBox</a> layout to arrange\nthe two grids (possibly separated by a splitter).</p>\n\n<p>Using this config it is possible to specify a different layout to arrange the two grids.</p>\n","type":"Object","default":null,"properties":null,"id":"cfg-layout","owner":"Ext.grid.locking.Lockable","overrides":[{"name":"layout","owner":"Ext.container.Container","link":"<a href=\"#!/api/Ext.container.Container-cfg-layout\" rel=\"Ext.container.Container-cfg-layout\" class=\"docClass\">Ext.container.Container.layout</a>"}],"short_doc":"By default, a lockable grid uses an HBox layout to arrange\nthe two grids (possibly separated by a splitter). ...","html_type":"Object"},{"tagname":"cfg","name":"lockedGridConfig","autodetected":{},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":72}],"doc":"<p>Any special configuration options for the locked part of the grid</p>\n","type":"Object","default":null,"properties":null,"id":"cfg-lockedGridConfig","owner":"Ext.grid.locking.Lockable","html_type":"Object"},{"tagname":"cfg","name":"lockedViewConfig","autodetected":{},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":52}],"doc":"<p>A view configuration to be applied to the\nlocked side of the grid. Any conflicting configurations between lockedViewConfig\nand viewConfig will be overwritten by the lockedViewConfig.</p>\n","type":"Object","default":null,"properties":null,"id":"cfg-lockedViewConfig","owner":"Ext.grid.locking.Lockable","short_doc":"A view configuration to be applied to the\nlocked side of the grid. ...","html_type":"Object"},{"tagname":"cfg","name":"normalGridConfig","autodetected":{},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":77}],"doc":"<p>Any special configuration options for the normal part of the grid</p>\n","type":"Object","default":null,"properties":null,"id":"cfg-normalGridConfig","owner":"Ext.grid.locking.Lockable","html_type":"Object"},{"tagname":"cfg","name":"normalViewConfig","autodetected":{},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":58}],"doc":"<p>A view configuration to be applied to the\nnormal/unlocked side of the grid. Any conflicting configurations between normalViewConfig\nand viewConfig will be overwritten by the normalViewConfig.</p>\n","type":"Object","default":null,"properties":null,"id":"cfg-normalViewConfig","owner":"Ext.grid.locking.Lockable","short_doc":"A view configuration to be applied to the\nnormal/unlocked side of the grid. ...","html_type":"Object"},{"tagname":"cfg","name":"scrollDelta","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":66}],"doc":"<p>Number of pixels to scroll when scrolling the locked section with mousewheel.</p>\n","type":"Number","default":"40","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-scrollDelta","owner":"Ext.grid.locking.Lockable","short_doc":"Number of pixels to scroll when scrolling the locked section with mousewheel. ...","html_type":"Number"},{"tagname":"cfg","name":"split","autodetected":{},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":82}],"doc":"<p>Configure as true to place a resizing <a href=\"#!/api/Ext.resizer.Splitter\" rel=\"Ext.resizer.Splitter\" class=\"docClass\">splitter</a> between the locked\nand unlocked columns.</p>\n","type":"Boolean","default":"false","properties":null,"id":"cfg-split","owner":"Ext.grid.locking.Lockable","short_doc":"Configure as true to place a resizing splitter between the locked\nand unlocked columns. ...","html_type":"Boolean"},{"tagname":"cfg","name":"subGridXType","autodetected":{},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":45}],"doc":"<p>The xtype of the subgrid to specify. If this is\nnot specified lockable will determine the subgrid xtype to create by the\nfollowing rule. Use the superclasses xtype if the superclass is NOT\ntablepanel, otherwise use the xtype itself.</p>\n","type":"String","default":null,"properties":null,"id":"cfg-subGridXType","owner":"Ext.grid.locking.Lockable","short_doc":"The xtype of the subgrid to specify. ...","html_type":"String"},{"tagname":"cfg","name":"syncRowHeight","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":37}],"doc":"<p>Synchronize rowHeight between the normal and\nlocked grid view. This is turned on by default. If your grid is guaranteed\nto have rows of all the same height, you should set this to false to\noptimize performance.</p>\n","type":"Boolean","default":"true","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-syncRowHeight","owner":"Ext.grid.locking.Lockable","short_doc":"Synchronize rowHeight between the normal and\nlocked grid view. ...","html_type":"Boolean"},{"tagname":"property","name":"bothCfgCopy","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":107}],"doc":"<p>Required for the Lockable Mixin. These are the configurations which will be copied to the\nnormal and locked sub tablepanels</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"type":"Array","default":"['invalidateScrollerOnRefresh', 'hideHeaders', 'enableColumnHide', 'enableColumnMove', 'enableColumnResize', 'sortableColumns', 'multiColumnSort', 'columnLines', 'rowLines', 'variableRowHeight', 'numFromEdge', 'trailingBufferZone', 'leadingBufferZone', 'scrollToLoadBuffer']","readonly":null,"id":"property-bothCfgCopy","owner":"Ext.grid.locking.Lockable","short_doc":"Required for the Lockable Mixin. ...","html_type":"Array"},{"tagname":"property","name":"lockText","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":102}],"doc":"<p>\n<locale></locale></p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"type":"String","default":"'Lock'","readonly":null,"id":"property-lockText","owner":"Ext.grid.locking.Lockable","short_doc":" ...","html_type":"String"},{"tagname":"property","name":"lockedCfgCopy","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":131}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":131,"type":"Array","default":"[]","readonly":null,"id":"property-lockedCfgCopy","owner":"Ext.grid.locking.Lockable","short_doc":" ...","html_type":"Array"},{"tagname":"property","name":"normalCfgCopy","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":125}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":125,"type":"Array","default":"['verticalScroller', 'verticalScrollDock', 'verticalScrollerType', 'scroll']","readonly":null,"id":"property-normalCfgCopy","owner":"Ext.grid.locking.Lockable","short_doc":" ...","html_type":"Array"},{"tagname":"property","name":"normalGridCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":97}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":97,"type":"String","default":"Ext.baseCSSPrefix + 'grid-inner-normal'","readonly":null,"id":"property-normalGridCls","owner":"Ext.grid.locking.Lockable","short_doc":" ...","html_type":"String"},{"tagname":"property","name":"syncTaskDelay","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":818}],"doc":"<p><debug></debug></p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"type":"Number","default":"1","readonly":null,"id":"property-syncTaskDelay","owner":"Ext.grid.locking.Lockable","short_doc":" ...","html_type":"Number"},{"tagname":"property","name":"unlockText","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":99}],"doc":"<p>i8n text\n<locale></locale></p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"type":"String","default":"'Unlock'","readonly":null,"id":"property-unlockText","owner":"Ext.grid.locking.Lockable","short_doc":"i8n text ...","html_type":"String"},{"tagname":"method","name":"afterLockedViewLayout","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":604}],"doc":"<p>Due to automatic component border setting using inline style, to create the scrollbar-replacing\nbottom border, we have to postprocess the locked view <em>after</em> render.\nA tall bottom border takes the place of a horiz scrollbar if the opposite side has a  horiz scrollbar.\nWhen we can use overflow-x: scroll to create a matching scrollbar, we do this instead.</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-afterLockedViewLayout","owner":"Ext.grid.locking.Lockable","short_doc":"Due to automatic component border setting using inline style, to create the scrollbar-replacing\nbottom border, we hav..."},{"tagname":"method","name":"afterReconfigureLockable","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":1151}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1151,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-afterReconfigureLockable","owner":"Ext.grid.locking.Lockable","short_doc":" ..."},{"tagname":"method","name":"constructLockableFeatures","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":1161}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1161,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-constructLockableFeatures","owner":"Ext.grid.locking.Lockable","short_doc":" ..."},{"tagname":"method","name":"constructLockablePlugins","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":1205}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1205,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-constructLockablePlugins","owner":"Ext.grid.locking.Lockable","short_doc":" ..."},{"tagname":"method","name":"delaySyncLockedWidth","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":820}],"doc":"<p></p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["syncLockedWidth"],"id":"method-delaySyncLockedWidth","owner":"Ext.grid.locking.Lockable","short_doc":" ..."},{"tagname":"method","name":"destroyLockable","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":1271}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1271,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-destroyLockable","owner":"Ext.grid.locking.Lockable","short_doc":" ..."},{"tagname":"method","name":"ensureLockedVisible","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":635}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":635,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-ensureLockedVisible","owner":"Ext.grid.locking.Lockable","short_doc":" ..."},{"tagname":"method","name":"getColumnWidth","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":583}],"doc":"<p>Used when calculating total locked column width in processColumns\nUse shrinkwrapping of child columns if no top level width.</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[{"name":"column","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["getColumnWidth"],"id":"method-getColumnWidth","owner":"Ext.grid.locking.Lockable","short_doc":"Used when calculating total locked column width in processColumns\nUse shrinkwrapping of child columns if no top level..."},{"tagname":"method","name":"getLockingViewConfig","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":487}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":487,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getLockingViewConfig","owner":"Ext.grid.locking.Lockable","short_doc":" ..."},{"tagname":"method","name":"getMenuItems","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":785}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":785,"params":[{"name":"getMenuItems","type":"Object","html_type":"Object"},{"name":"locked","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-getMenuItems","owner":"Ext.grid.locking.Lockable","short_doc":" ..."},{"tagname":"method","name":"injectLockable","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":182}],"doc":"<p>injectLockable will be invoked before initComponent's parent class implementation\nis called, so throughout this method this. are configurations</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":["<a href=\"#!/api/Ext.grid.locking.Lockable-event-processcolumns\" rel=\"Ext.grid.locking.Lockable-event-processcolumns\" class=\"docClass\">processcolumns</a>"],"method_calls":["addCls","addStateEvents","constructLockableFeatures","constructLockablePlugins","determineXTypeToCreate","getLayout","modifyHeaderCt","processColumns","relayEvents","relayHeaderCtEvents"],"id":"method-injectLockable","owner":"Ext.grid.locking.Lockable","short_doc":"injectLockable will be invoked before initComponent's parent class implementation\nis called, so throughout this metho..."},{"tagname":"method","name":"lock","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":947}],"doc":"<p>Locks the activeHeader as determined by which menu is open OR a header\nas specified.</p>\n","params":[{"tagname":"params","type":"Ext.grid.column.Column","name":"header","optional":true,"doc":"<p>Header to unlock from the locked section.\nDefaults to the header which has the menu open currently.</p>\n","html_type":"<a href=\"#!/api/Ext.grid.column.Column\" rel=\"Ext.grid.column.Column\" class=\"docClass\">Ext.grid.column.Column</a>"},{"tagname":"params","type":"Number","name":"toIdx","optional":true,"doc":"<p>The index to move the unlocked header to.\nDefaults to appending as the last item.</p>\n","html_type":"Number"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":["<a href=\"#!/api/Ext.grid.locking.Lockable-event-lockcolumn\" rel=\"Ext.grid.locking.Lockable-event-lockcolumn\" class=\"docClass\">lockcolumn</a>"],"method_calls":["fireEvent","syncLockedWidth"],"id":"method-lock","owner":"Ext.grid.locking.Lockable","short_doc":"Locks the activeHeader as determined by which menu is open OR a header\nas specified. ..."},{"tagname":"method","name":"modifyHeaderCt","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":744}],"doc":"<p>inject Lock and Unlock text\nHide/show Lock/Unlock options</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getMenuItems"],"id":"method-modifyHeaderCt","owner":"Ext.grid.locking.Lockable","short_doc":"inject Lock and Unlock text\nHide/show Lock/Unlock options ..."},{"tagname":"method","name":"onLockMenuClick","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":758}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":758,"params":[],"chainable":false,"fires":["<a href=\"#!/api/Ext.grid.locking.Lockable-event-lockcolumn\" rel=\"Ext.grid.locking.Lockable-event-lockcolumn\" class=\"docClass\">lockcolumn</a>"],"method_calls":["lock"],"id":"method-onLockMenuClick","owner":"Ext.grid.locking.Lockable","short_doc":" ..."},{"tagname":"method","name":"onLockedHeaderSortChange","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":942}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":942,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-onLockedHeaderSortChange","owner":"Ext.grid.locking.Lockable","short_doc":" ..."},{"tagname":"method","name":"onLockedViewMouseWheel","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":640}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":640,"params":[{"name":"e","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["onNormalViewScroll"],"id":"method-onLockedViewMouseWheel","owner":"Ext.grid.locking.Lockable","short_doc":" ..."},{"tagname":"method","name":"onLockedViewScroll","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":670}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":670,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-onLockedViewScroll","owner":"Ext.grid.locking.Lockable","short_doc":" ..."},{"tagname":"method","name":"onNormalHeaderSortChange","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":944}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":944,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-onNormalHeaderSortChange","owner":"Ext.grid.locking.Lockable","short_doc":" ..."},{"tagname":"method","name":"onNormalViewScroll","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":692}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":692,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-onNormalViewScroll","owner":"Ext.grid.locking.Lockable","short_doc":" ..."},{"tagname":"method","name":"onUnlockMenuClick","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":754}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":754,"params":[],"chainable":false,"fires":["<a href=\"#!/api/Ext.grid.locking.Lockable-event-unlockcolumn\" rel=\"Ext.grid.locking.Lockable-event-unlockcolumn\" class=\"docClass\">unlockcolumn</a>"],"method_calls":["unlock"],"id":"method-onUnlockMenuClick","owner":"Ext.grid.locking.Lockable","short_doc":" ..."},{"tagname":"method","name":"processColumns","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":496}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":496,"params":[{"name":"columns","type":"Object","html_type":"Object"},{"name":"lockedGrid","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.grid.locking.Lockable-event-processcolumns\" rel=\"Ext.grid.locking.Lockable-event-processcolumns\" class=\"docClass\">processcolumns</a>"],"method_calls":["fireEvent","getColumnWidth","hasOwnProperty"],"id":"method-processColumns","owner":"Ext.grid.locking.Lockable","short_doc":" ..."},{"tagname":"method","name":"reconfigureLockable","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":1074}],"doc":"<p>we want to totally override the reconfigure behaviour here, since we're creating 2 sub-grids</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[{"name":"store","type":"Object","html_type":"Object"},{"name":"columns","type":"Object","html_type":"Object"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.grid.locking.Lockable-event-processcolumns\" rel=\"Ext.grid.locking.Lockable-event-processcolumns\" class=\"docClass\">processcolumns</a>"],"method_calls":["processColumns","syncLockedWidth"],"id":"method-reconfigureLockable","owner":"Ext.grid.locking.Lockable","short_doc":"we want to totally override the reconfigure behaviour here, since we're creating 2 sub-grids ..."},{"tagname":"method","name":"showMenuBy","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":762}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":762,"params":[{"name":"clickEvent","type":"Object","html_type":"Object"},{"name":"t","type":"Object","html_type":"Object"},{"name":"header","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["getMenu"],"id":"method-showMenuBy","owner":"Ext.grid.locking.Lockable","short_doc":" ..."},{"tagname":"method","name":"syncLockedWidth","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":842}],"doc":"<p>Updates the overall view after columns have been resized, or moved from\nthe locked to unlocked side or vice-versa.</p>\n\n<p>If all columns are removed from either side, that side must be hidden, and the\nsole remaining column owning grid then becomes <em>the</em> grid. It must flex to occupy the\nwhole of the locking view. And it must also allow scrolling.</p>\n\n<p>If columns are shared between the two sides, the <em>locked</em> grid shrinkwraps the\nwidth of the visible locked columns while the normal grid flexes in what space remains.</p>\n","private":true,"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if there are visible locked columns which need refreshing.</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["child"],"id":"method-syncLockedWidth","owner":"Ext.grid.locking.Lockable","short_doc":"Updates the overall view after columns have been resized, or moved from\nthe locked to unlocked side or vice-versa. ..."},{"tagname":"method","name":"syncRowHeights","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":715}],"doc":"<p>Synchronizes the row heights between the locked and non locked portion of the grid for each\nrow. If one row is smaller than the other, the height will be increased to match the larger one.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-syncRowHeights","owner":"Ext.grid.locking.Lockable","short_doc":"Synchronizes the row heights between the locked and non locked portion of the grid for each\nrow. ..."},{"tagname":"method","name":"unlock","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":1021}],"doc":"<p>Unlocks the activeHeader as determined by which menu is open OR a header\nas specified.</p>\n","params":[{"tagname":"params","type":"Ext.grid.column.Column","name":"header","optional":true,"doc":"<p>Header to unlock from the locked section.\nDefaults to the header which has the menu open currently.</p>\n","html_type":"<a href=\"#!/api/Ext.grid.column.Column\" rel=\"Ext.grid.column.Column\" class=\"docClass\">Ext.grid.column.Column</a>"},{"tagname":"params","type":"Number","name":"toIdx","default":"0","optional":true,"doc":"<p>The index to move the unlocked header to.</p>\n","html_type":"Number"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":["<a href=\"#!/api/Ext.grid.locking.Lockable-event-unlockcolumn\" rel=\"Ext.grid.locking.Lockable-event-unlockcolumn\" class=\"docClass\">unlockcolumn</a>"],"method_calls":["fireEvent","syncLockedWidth"],"id":"method-unlock","owner":"Ext.grid.locking.Lockable","short_doc":"Unlocks the activeHeader as determined by which menu is open OR a header\nas specified. ..."},{"tagname":"event","name":"filterchange","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":464}],"doc":"\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-filterchange","owner":"Ext.grid.locking.Lockable","short_doc":" ..."},{"tagname":"event","name":"groupchange","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":469}],"doc":"\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-groupchange","owner":"Ext.grid.locking.Lockable","short_doc":" ..."},{"tagname":"event","name":"lockcolumn","autodetected":{},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":140}],"doc":"<p>Fires when a column is locked.</p>\n","params":[{"tagname":"params","type":"Ext.grid.Panel","name":"this","doc":"<p>The gridpanel.</p>\n","html_type":"<a href=\"#!/api/Ext.grid.Panel\" rel=\"Ext.grid.Panel\" class=\"docClass\">Ext.grid.Panel</a>"},{"tagname":"params","type":"Ext.grid.column.Column","name":"column","doc":"<p>The column being locked.</p>\n","html_type":"<a href=\"#!/api/Ext.grid.column.Column\" rel=\"Ext.grid.column.Column\" class=\"docClass\">Ext.grid.column.Column</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-lockcolumn","owner":"Ext.grid.locking.Lockable","short_doc":"Fires when a column is locked. ..."},{"tagname":"event","name":"processcolumns","autodetected":{},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":133}],"doc":"<p>Fires when the configured (or <strong>reconfigured</strong>) column set is split into two depending on the <a href=\"#!/api/Ext.grid.column.Column-cfg-locked\" rel=\"Ext.grid.column.Column-cfg-locked\" class=\"docClass\">locked</a> flag.</p>\n","params":[{"tagname":"params","type":"Ext.grid.column.Column[]","name":"lockedColumns","doc":"<p>The locked columns.</p>\n","html_type":"<a href=\"#!/api/Ext.grid.column.Column\" rel=\"Ext.grid.column.Column\" class=\"docClass\">Ext.grid.column.Column</a>[]"},{"tagname":"params","type":"Ext.grid.column.Column[]","name":"normalColumns","doc":"<p>The normal columns.</p>\n","html_type":"<a href=\"#!/api/Ext.grid.column.Column\" rel=\"Ext.grid.column.Column\" class=\"docClass\">Ext.grid.column.Column</a>[]"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-processcolumns","owner":"Ext.grid.locking.Lockable","short_doc":"Fires when the configured (or reconfigured) column set is split into two depending on the locked flag. ..."},{"tagname":"event","name":"unlockcolumn","autodetected":{},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":147}],"doc":"<p>Fires when a column is unlocked.</p>\n","params":[{"tagname":"params","type":"Ext.grid.Panel","name":"this","doc":"<p>The gridpanel.</p>\n","html_type":"<a href=\"#!/api/Ext.grid.Panel\" rel=\"Ext.grid.Panel\" class=\"docClass\">Ext.grid.Panel</a>"},{"tagname":"params","type":"Ext.grid.column.Column","name":"column","doc":"<p>The column being unlocked.</p>\n","html_type":"<a href=\"#!/api/Ext.grid.column.Column\" rel=\"Ext.grid.column.Column\" class=\"docClass\">Ext.grid.column.Column</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-unlockcolumn","owner":"Ext.grid.locking.Lockable","short_doc":"Fires when a column is unlocked. ..."},{"tagname":"event","name":"viewready","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true},"files":[{"filename":"/tmp/test/ext-5.1.1/src/grid/locking/Lockable.js","linenr":479}],"doc":"<p>Fires when the grid view is available (use this for selecting a default row).</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"Ext.panel.Table","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.panel.Table\" rel=\"Ext.panel.Table\" class=\"docClass\">Ext.panel.Table</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-viewready","owner":"Ext.grid.locking.Lockable","return":null,"throws":null,"type":null,"short_doc":"Fires when the grid view is available (use this for selecting a default row). ..."}],"code_type":"ext_define","id":"class-Ext.grid.locking.Lockable","short_doc":"Lockable is a private mixin which injects lockable behavior into any\nTablePanel subclass such as GridPanel or TreePanel. ..."}