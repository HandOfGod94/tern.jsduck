{"tagname":"class","name":"CKEDITOR.editor","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/creators/themedui.js","linenr":147},{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":16}],"doc":"<p>Represents an editor instance. This constructor should be rarely\nused in favor of the <a href=\"#!/api/CKEDITOR\" rel=\"CKEDITOR\" class=\"docClass\">CKEDITOR</a> editor creation functions.</p>\n","members":[{"tagname":"property","name":"activeEnterMode","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1477}],"doc":"<p>The dynamic Enter mode which should be used in the current context (selection location).\nBy default it equals the <a href=\"#!/api/CKEDITOR.editor-property-enterMode\" rel=\"CKEDITOR.editor-property-enterMode\" class=\"docClass\">enterMode</a> and it can be changed by the <a href=\"#!/api/CKEDITOR.editor-method-setActiveEnterMode\" rel=\"CKEDITOR.editor-method-setActiveEnterMode\" class=\"docClass\">setActiveEnterMode</a> method.</p>\n\n<p>See also the <a href=\"#!/api/CKEDITOR.editor-method-setActiveEnterMode\" rel=\"CKEDITOR.editor-method-setActiveEnterMode\" class=\"docClass\">setActiveEnterMode</a> method for an explanation of dynamic settings.</p>\n","since":"4.3","readonly":true,"type":"Number","default":null,"properties":null,"id":"property-activeEnterMode","owner":"CKEDITOR.editor","short_doc":"The dynamic Enter mode which should be used in the current context (selection location). ...","html_type":"Number"},{"tagname":"property","name":"activeFilter","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1438}],"doc":"<p>The active filter instance which should be used in the current context (location selection).\nThis instance will be used to make a decision which commands, buttons and other\n<a href=\"#!/api/CKEDITOR.feature\" rel=\"CKEDITOR.feature\" class=\"docClass\">features</a> can be enabled.</p>\n\n<p>By default it equals the <a href=\"#!/api/CKEDITOR.editor-property-filter\" rel=\"CKEDITOR.editor-property-filter\" class=\"docClass\">filter</a> and it can be changed by the <a href=\"#!/api/CKEDITOR.editor-method-setActiveFilter\" rel=\"CKEDITOR.editor-method-setActiveFilter\" class=\"docClass\">setActiveFilter</a> method.</p>\n\n<pre><code>editor.on( 'activeFilterChange', function() {\n    if ( editor.activeFilter.check( 'cite' ) )\n        // Do something when &lt;cite&gt; was enabled - e.g. enable a button.\n    else\n        // Otherwise do something else.\n} );\n</code></pre>\n\n<p>See also the <a href=\"#!/api/CKEDITOR.editor-method-setActiveEnterMode\" rel=\"CKEDITOR.editor-method-setActiveEnterMode\" class=\"docClass\">setActiveEnterMode</a> method for an explanation of dynamic settings.</p>\n","since":"4.3","readonly":true,"type":"CKEDITOR.filter","default":null,"properties":null,"id":"property-activeFilter","owner":"CKEDITOR.editor","short_doc":"The active filter instance which should be used in the current context (location selection). ...","html_type":"<a href=\"#!/api/CKEDITOR.filter\" rel=\"CKEDITOR.filter\" class=\"docClass\">CKEDITOR.filter</a>"},{"tagname":"property","name":"activeShiftEnterMode","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1488}],"doc":"<p>See the <a href=\"#!/api/CKEDITOR.editor-property-activeEnterMode\" rel=\"CKEDITOR.editor-property-activeEnterMode\" class=\"docClass\">activeEnterMode</a> property.</p>\n","since":"4.3","readonly":true,"type":"Number","default":null,"properties":null,"id":"property-activeShiftEnterMode","owner":"CKEDITOR.editor","html_type":"Number"},{"tagname":"property","name":"blockless","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":347}],"doc":"<p>Indicates that the editor is running in an environment where\nno block elements are accepted inside the content.</p>\n\n<p>This can be for example inline editor based on an <code>&lt;h1&gt;</code> element.</p>\n","readonly":true,"type":"Boolean","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-blockless","owner":"CKEDITOR.editor","short_doc":"Indicates that the editor is running in an environment where\nno block elements are accepted inside the content. ...","html_type":"Boolean"},{"tagname":"property","name":"config","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":121}],"doc":"<p>The configuration for this editor instance. It inherits all\nsettings defined in <a href=\"#!/api/CKEDITOR.config\" rel=\"CKEDITOR.config\" class=\"docClass\">CKEDITOR.config</a>, combined with settings\nloaded from custom configuration files and those defined inline in\nthe page when creating the editor.</p>\n\n<pre><code>var editor = CKEDITOR.instances.editor1;\nalert( editor.config.skin ); // e.g. 'moono'\n</code></pre>\n","readonly":true,"type":"CKEDITOR.config","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-config","owner":"CKEDITOR.editor","short_doc":"The configuration for this editor instance. ...","html_type":"<a href=\"#!/api/CKEDITOR.config\" rel=\"CKEDITOR.config\" class=\"docClass\">CKEDITOR.config</a>"},{"tagname":"property","name":"container","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1384}],"doc":"<p>The outermost element in the DOM tree in which the editable element resides. It is provided\nby a specific editor creator after the editor UI is created and is not intended to\nbe modified.</p>\n\n<pre><code>var editor = CKEDITOR.instances.editor1;\nalert( editor.container.getName() ); // 'span'\n</code></pre>\n","readonly":true,"type":"CKEDITOR.dom.element","default":null,"properties":null,"id":"property-container","owner":"CKEDITOR.editor","short_doc":"The outermost element in the DOM tree in which the editable element resides. ...","html_type":"<a href=\"#!/api/CKEDITOR.dom.element\" rel=\"CKEDITOR.dom.element\" class=\"docClass\">CKEDITOR.dom.element</a>"},{"tagname":"property","name":"dataProcessor","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/dataprocessor.js","linenr":12}],"doc":"<p>If defined, points to the data processor which is responsible for translating\nand transforming the editor data on input and output.\nGenerally it will point to an instance of <a href=\"#!/api/CKEDITOR.htmlDataProcessor\" rel=\"CKEDITOR.htmlDataProcessor\" class=\"docClass\">CKEDITOR.htmlDataProcessor</a>,\nwhich handles HTML data. The editor may also handle other data formats by\nusing different data processors provided by specific plugins.</p>\n","type":"CKEDITOR.dataProcessor","default":null,"properties":null,"owner":"CKEDITOR.editor","id":"property-dataProcessor","short_doc":"If defined, points to the data processor which is responsible for translating\nand transforming the editor data on inp...","html_type":"<a href=\"#!/api/CKEDITOR.dataProcessor\" rel=\"CKEDITOR.dataProcessor\" class=\"docClass\">CKEDITOR.dataProcessor</a>"},{"tagname":"property","name":"document","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1396}],"doc":"<p>The document that stores the editor content.</p>\n\n<ul>\n<li>For the classic (<code>iframe</code>-based) editor it is equal to the document inside the\n<code>iframe</code> containing the editable element.</li>\n<li>For the inline editor it is equal to <a href=\"#!/api/CKEDITOR-property-document\" rel=\"CKEDITOR-property-document\" class=\"docClass\">CKEDITOR.document</a>.</li>\n</ul>\n\n\n<p>The document object is available after the <a href=\"#!/api/CKEDITOR.editor-event-contentDom\" rel=\"CKEDITOR.editor-event-contentDom\" class=\"docClass\">contentDom</a> event is fired\nand may be invalidated when the <a href=\"#!/api/CKEDITOR.editor-event-contentDomUnload\" rel=\"CKEDITOR.editor-event-contentDomUnload\" class=\"docClass\">contentDomUnload</a> event is fired\n(classic editor only).</p>\n\n<pre><code>editor.on( 'contentDom', function() {\n    console.log( editor.document );\n} );\n</code></pre>\n","readonly":true,"type":"CKEDITOR.dom.document","default":null,"properties":null,"id":"property-document","owner":"CKEDITOR.editor","short_doc":"The document that stores the editor content. ...","html_type":"<a href=\"#!/api/CKEDITOR.dom.document\" rel=\"CKEDITOR.dom.document\" class=\"docClass\">CKEDITOR.dom.document</a>"},{"tagname":"property","name":"element","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":49}],"doc":"<p>The original host page element upon which the editor is created. It is only\nsupposed to be provided by the particular editor creator and is not subject to\nbe modified.</p>\n","readonly":true,"type":"CKEDITOR.dom.element","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-element","owner":"CKEDITOR.editor","short_doc":"The original host page element upon which the editor is created. ...","html_type":"<a href=\"#!/api/CKEDITOR.dom.element\" rel=\"CKEDITOR.dom.element\" class=\"docClass\">CKEDITOR.dom.element</a>"},{"tagname":"property","name":"elementMode","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":59}],"doc":"<p>This property indicates the way this instance is associated with the <a href=\"#!/api/CKEDITOR.editor-property-element\" rel=\"CKEDITOR.editor-property-element\" class=\"docClass\">element</a>.\nSee also <a href=\"#!/api/CKEDITOR-property-ELEMENT_MODE_INLINE\" rel=\"CKEDITOR-property-ELEMENT_MODE_INLINE\" class=\"docClass\">CKEDITOR.ELEMENT_MODE_INLINE</a> and <a href=\"#!/api/CKEDITOR-property-ELEMENT_MODE_REPLACE\" rel=\"CKEDITOR-property-ELEMENT_MODE_REPLACE\" class=\"docClass\">CKEDITOR.ELEMENT_MODE_REPLACE</a>.</p>\n","readonly":true,"type":"Number","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-elementMode","owner":"CKEDITOR.editor","short_doc":"This property indicates the way this instance is associated with the element. ...","html_type":"Number"},{"tagname":"property","name":"enterMode","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1459}],"doc":"<p>The main (static) Enter mode which is a validated version of the <a href=\"#!/api/CKEDITOR.config-cfg-enterMode\" rel=\"CKEDITOR.config-cfg-enterMode\" class=\"docClass\">CKEDITOR.config.enterMode</a> setting.\nCurrently only one rule exists &mdash; <a href=\"#!/api/CKEDITOR.editor-property-blockless\" rel=\"CKEDITOR.editor-property-blockless\" class=\"docClass\">blockless editors</a> may have\nEnter modes set only to <a href=\"#!/api/CKEDITOR-property-ENTER_BR\" rel=\"CKEDITOR-property-ENTER_BR\" class=\"docClass\">CKEDITOR.ENTER_BR</a>.</p>\n","since":"4.3","readonly":true,"type":"Number","default":null,"properties":null,"id":"property-enterMode","owner":"CKEDITOR.editor","short_doc":"The main (static) Enter mode which is a validated version of the CKEDITOR.config.enterMode setting. ...","html_type":"Number"},{"tagname":"property","name":"filter","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1426}],"doc":"<p>The main filter instance used for input data filtering, data\ntransformations, and activation of features.</p>\n\n<p>It points to a <a href=\"#!/api/CKEDITOR.filter\" rel=\"CKEDITOR.filter\" class=\"docClass\">CKEDITOR.filter</a> instance set up based on\neditor configuration.</p>\n","since":"4.1","readonly":true,"type":"CKEDITOR.filter","default":null,"properties":null,"id":"property-filter","owner":"CKEDITOR.editor","short_doc":"The main filter instance used for input data filtering, data\ntransformations, and activation of features. ...","html_type":"<a href=\"#!/api/CKEDITOR.filter\" rel=\"CKEDITOR.filter\" class=\"docClass\">CKEDITOR.filter</a>"},{"tagname":"property","name":"focusManager","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":143}],"doc":"<p>Controls the focus state of this editor instance. This property\nis rarely used for normal API operations. It is mainly\ntargeted at developers adding UI elements to the editor interface.</p>\n","readonly":true,"type":"CKEDITOR.focusManager","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-focusManager","owner":"CKEDITOR.editor","short_doc":"Controls the focus state of this editor instance. ...","html_type":"<a href=\"#!/api/CKEDITOR.focusManager\" rel=\"CKEDITOR.focusManager\" class=\"docClass\">CKEDITOR.focusManager</a>"},{"tagname":"property","name":"id","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":98}],"doc":"<p>A unique random string assigned to each editor instance on the page.</p>\n","readonly":true,"type":"String","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-id","owner":"CKEDITOR.editor","html_type":"String"},{"tagname":"property","name":"keystrokeHandler","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":153}],"doc":"<p>Controls keystroke typing in this editor instance.</p>\n","readonly":true,"type":"CKEDITOR.keystrokeHandler","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-keystrokeHandler","owner":"CKEDITOR.editor","html_type":"<a href=\"#!/api/CKEDITOR.keystrokeHandler\" rel=\"CKEDITOR.keystrokeHandler\" class=\"docClass\">CKEDITOR.keystrokeHandler</a>"},{"tagname":"property","name":"lang","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":419}],"doc":"<p>An object that contains all language strings used by the editor interface.</p>\n\n<pre><code>alert( editor.lang.basicstyles.bold ); // e.g. 'Negrito' (if the language is set to Portuguese)\n</code></pre>\n","readonly":true,"type":"Object","default":null,"properties":null,"id":"property-lang","owner":"CKEDITOR.editor","short_doc":"An object that contains all language strings used by the editor interface. ...","html_type":"Object"},{"tagname":"property","name":"langCode","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":408}],"doc":"<p>The code for the language resources that have been loaded\nfor the user interface elements of this editor instance.</p>\n\n<pre><code>alert( editor.langCode ); // e.g. 'en'\n</code></pre>\n","readonly":true,"type":"String","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-langCode","owner":"CKEDITOR.editor","short_doc":"The code for the language resources that have been loaded\nfor the user interface elements of this editor instance. ...","html_type":"String"},{"tagname":"property","name":"mode","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/creators/themedui.js","linenr":458}],"doc":"<p>The current editing mode. An editing mode basically provides\ndifferent ways of editing or viewing the contents.</p>\n\n<pre><code>alert( CKEDITOR.instances.editor1.mode ); // (e.g.) 'wysiwyg'\n</code></pre>\n","readonly":true,"type":"String","default":null,"properties":null,"id":"property-mode","owner":"CKEDITOR.editor","short_doc":"The current editing mode. ...","html_type":"String"},{"tagname":"property","name":"name","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":86}],"doc":"<p>A unique identifier of this editor instance.</p>\n\n<p><strong>Note:</strong> It will be originated from the <code>id</code> or <code>name</code>\nattribute of the <a href=\"#!/api/CKEDITOR.editor-property-element\" rel=\"CKEDITOR.editor-property-element\" class=\"docClass\">element</a>, otherwise a name pattern of\n<code>'editor{n}'</code> will be used.</p>\n","readonly":true,"type":"String","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-name","owner":"CKEDITOR.editor","short_doc":"A unique identifier of this editor instance. ...","html_type":"String"},{"tagname":"property","name":"plugins","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":509}],"doc":"<p>An object that contains references to all plugins used by this\neditor instance.</p>\n\n<pre><code>alert( editor.plugins.dialog.path ); // e.g. 'http://example.com/ckeditor/plugins/dialog/'\n\n// Check if a plugin is available.\nif ( editor.plugins.image ) {\n    ...\n}\n</code></pre>\n","readonly":true,"type":"Object","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-plugins","owner":"CKEDITOR.editor","short_doc":"An object that contains references to all plugins used by this\neditor instance. ...","html_type":"Object"},{"tagname":"property","name":"readOnly","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":324}],"doc":"<p>Indicates the read-only state of this editor. This is a read-only property.\nSee also <a href=\"#!/api/CKEDITOR.editor-method-setReadOnly\" rel=\"CKEDITOR.editor-method-setReadOnly\" class=\"docClass\">setReadOnly</a>.</p>\n","since":"3.6","readonly":true,"type":"Boolean","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-readOnly","owner":"CKEDITOR.editor","short_doc":"Indicates the read-only state of this editor. ...","html_type":"Boolean"},{"tagname":"property","name":"shiftEnterMode","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1469}],"doc":"<p>See the <a href=\"#!/api/CKEDITOR.editor-property-enterMode\" rel=\"CKEDITOR.editor-property-enterMode\" class=\"docClass\">enterMode</a> property.</p>\n","since":"4.3","readonly":true,"type":"Number","default":null,"properties":null,"id":"property-shiftEnterMode","owner":"CKEDITOR.editor","html_type":"Number"},{"tagname":"property","name":"status","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":106}],"doc":"<p>Indicates editor initialization status. The following statuses are available:</p>\n\n<ul>\n<li><strong>unloaded</strong>: The initial state &mdash; the editor instance was initialized,\nbut its components (configuration, plugins, language files) are not loaded yet.</li>\n<li><strong>loaded</strong>: The editor components were loaded &mdash; see the <a href=\"#!/api/CKEDITOR.editor-event-loaded\" rel=\"CKEDITOR.editor-event-loaded\" class=\"docClass\">loaded</a> event.</li>\n<li><strong>ready</strong>: The editor is fully initialized and ready &mdash; see the <a href=\"#!/api/CKEDITOR.editor-event-instanceReady\" rel=\"CKEDITOR.editor-event-instanceReady\" class=\"docClass\">instanceReady</a> event.</li>\n<li><strong>destroyed</strong>: The editor was destroyed &mdash; see the <a href=\"#!/api/CKEDITOR.editor-method-destroy\" rel=\"CKEDITOR.editor-method-destroy\" class=\"docClass\">destroy</a> method.</li>\n</ul>\n\n","since":"4.1","readonly":true,"type":"String","default":"'unloaded'","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-status","owner":"CKEDITOR.editor","short_doc":"Indicates editor initialization status. ...","html_type":"String"},{"tagname":"property","name":"tabIndex","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":360}],"doc":"<p>The <a href=\"http://en.wikipedia.org/wiki/Tabbing_navigation\">tabbing navigation</a> order determined for this editor instance.\nThis can be set by the <code><a href=\"#!/api/CKEDITOR.config-cfg-tabIndex\" rel=\"CKEDITOR.config-cfg-tabIndex\" class=\"docClass\">CKEDITOR.config.tabIndex</a></code>\nsetting or taken from the <code>tabindex</code> attribute of the\n<a href=\"#!/api/CKEDITOR.editor-property-element\" rel=\"CKEDITOR.editor-property-element\" class=\"docClass\">element</a> associated with the editor.</p>\n\n<pre><code>alert( editor.tabIndex ); // e.g. 0\n</code></pre>\n","readonly":true,"type":"Number","default":"0","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-tabIndex","owner":"CKEDITOR.editor","short_doc":"The tabbing navigation order determined for this editor instance. ...","html_type":"Number"},{"tagname":"property","name":"templates","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":78}],"doc":"<p>Contains all UI templates created for this editor instance.</p>\n","readonly":true,"type":"Object","default":"{}","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-templates","owner":"CKEDITOR.editor","short_doc":"Contains all UI templates created for this editor instance. ...","html_type":"Object"},{"tagname":"property","name":"title","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":432}],"doc":"<p>Indicates the human-readable title of this editor. Although this is a read-only property,\nit can be initialized with <a href=\"#!/api/CKEDITOR.config-cfg-title\" rel=\"CKEDITOR.config-cfg-title\" class=\"docClass\">CKEDITOR.config.title</a>.</p>\n\n<p><strong>Note:</strong> Please do not confuse this property with <a href=\"#!/api/CKEDITOR.editor-property-name\" rel=\"CKEDITOR.editor-property-name\" class=\"docClass\">editor.name</a>\nwhich identifies the instance in the <a href=\"#!/api/CKEDITOR-property-instances\" rel=\"CKEDITOR-property-instances\" class=\"docClass\">CKEDITOR.instances</a> literal.</p>\n","since":"4.2","readonly":true,"type":"String/Boolean","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-title","owner":"CKEDITOR.editor","short_doc":"Indicates the human-readable title of this editor. ...","html_type":"String/Boolean"},{"tagname":"property","name":"ui","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":135}],"doc":"<p>The namespace containing UI features related to this editor instance.</p>\n","readonly":true,"type":"CKEDITOR.ui","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-ui","owner":"CKEDITOR.editor","html_type":"<a href=\"#!/api/CKEDITOR.ui\" rel=\"CKEDITOR.ui\" class=\"docClass\">CKEDITOR.ui</a>"},{"tagname":"property","name":"window","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1415}],"doc":"<p>The window instance related to the <a href=\"#!/api/CKEDITOR.editor-property-document\" rel=\"CKEDITOR.editor-property-document\" class=\"docClass\">document</a> property.</p>\n\n<p>It is always equal to the <code>editor.document.getWindow()</code>.</p>\n\n<p>See the <a href=\"#!/api/CKEDITOR.editor-property-document\" rel=\"CKEDITOR.editor-property-document\" class=\"docClass\">document</a> property documentation.</p>\n","readonly":true,"type":"CKEDITOR.dom.window","default":null,"properties":null,"id":"property-window","owner":"CKEDITOR.editor","short_doc":"The window instance related to the document property. ...","html_type":"<a href=\"#!/api/CKEDITOR.dom.window\" rel=\"CKEDITOR.dom.window\" class=\"docClass\">CKEDITOR.dom.window</a>"},{"tagname":"method","name":"constructor","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":16}],"doc":"<p>Creates an editor class instance.</p>\n","params":[{"tagname":"params","type":"Object","name":"instanceConfig","optional":true,"doc":"<p>Configuration values for this specific instance.</p>\n","html_type":"Object"},{"tagname":"params","type":"CKEDITOR.dom.element","name":"element","optional":true,"doc":"<p>The DOM element upon which this editor\nwill be created.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.dom.element\" rel=\"CKEDITOR.dom.element\" class=\"docClass\">CKEDITOR.dom.element</a>"},{"tagname":"params","type":"Number","name":"mode","optional":true,"doc":"<p>The element creation mode to be used by this editor.</p>\n","html_type":"Number"}],"id":"method-constructor","owner":"CKEDITOR.editor","return":{"type":"CKEDITOR.editor","doc":"\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"},"overrides":[{"name":"constructor","owner":"CKEDITOR.event","link":"<a href=\"#!/api/CKEDITOR.event-method-constructor\" rel=\"CKEDITOR.event-method-constructor\" class=\"docClass\">CKEDITOR.event.constructor</a>"}],"short_doc":"Creates an editor class instance. ..."},{"tagname":"method","name":"_attachToForm","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":679}],"doc":"<p>Attaches the editor to a form to call <a href=\"#!/api/CKEDITOR.editor-method-updateElement\" rel=\"CKEDITOR.editor-method-updateElement\" class=\"docClass\">updateElement</a> before form submission.\nThis method is called by both creators (<a href=\"#!/api/CKEDITOR-method-replace\" rel=\"CKEDITOR-method-replace\" class=\"docClass\">replace</a> and\n<a href=\"#!/api/CKEDITOR-method-inline\" rel=\"CKEDITOR-method-inline\" class=\"docClass\">inline</a>), so there is no reason to call it manually.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["fire","on","updateElement"],"id":"method-_attachToForm","owner":"CKEDITOR.editor","short_doc":"Attaches the editor to a form to call updateElement before form submission. ..."},{"tagname":"method","name":"addCommand","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":651}],"doc":"<p>Adds a command definition to the editor instance. Commands added with\nthis function can be executed later with the <code><a href=\"#!/api/CKEDITOR.editor-method-execCommand\" rel=\"CKEDITOR.editor-method-execCommand\" class=\"docClass\">execCommand</a></code> method.</p>\n\n<pre><code>    editorInstance.addCommand( 'sample', {\n        exec: function( editor ) {\n            alert( 'Executing a command for the editor name \"' + editor.name + '\"!' );\n        }\n    } );\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"commandName","doc":"<p>The indentifier name of the command.</p>\n","html_type":"String"},{"tagname":"params","type":"CKEDITOR.commandDefinition","name":"commandDefinition","doc":"<p>The command definition.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.commandDefinition\" rel=\"CKEDITOR.commandDefinition\" class=\"docClass\">CKEDITOR.commandDefinition</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-addCommand","owner":"CKEDITOR.editor","short_doc":"Adds a command definition to the editor instance. ..."},{"tagname":"method","name":"addFeature","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1174}],"doc":"<p>Shorthand for <a href=\"#!/api/CKEDITOR.filter-method-addFeature\" rel=\"CKEDITOR.filter-method-addFeature\" class=\"docClass\">CKEDITOR.filter.addFeature</a>.</p>\n","since":"4.1","params":[{"tagname":"params","type":"CKEDITOR.feature","name":"feature","doc":"<p>See <a href=\"#!/api/CKEDITOR.filter-method-addFeature\" rel=\"CKEDITOR.filter-method-addFeature\" class=\"docClass\">CKEDITOR.filter.addFeature</a>.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.feature\" rel=\"CKEDITOR.feature\" class=\"docClass\">CKEDITOR.feature</a>"}],"return":{"type":"Boolean","name":"return","doc":"<p>See <a href=\"#!/api/CKEDITOR.filter-method-addFeature\" rel=\"CKEDITOR.filter-method-addFeature\" class=\"docClass\">CKEDITOR.filter.addFeature</a>.</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-addFeature","owner":"CKEDITOR.editor","short_doc":"Shorthand for CKEDITOR.filter.addFeature. ..."},{"tagname":"method","name":"addMode","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/creators/themedui.js","linenr":149}],"doc":"<p>Registers an editing mode. This function is to be used mainly by plugins.</p>\n","params":[{"tagname":"params","type":"String","name":"mode","doc":"<p>The mode name.</p>\n","html_type":"String"},{"tagname":"params","type":"Function","name":"exec","doc":"<p>The function that performs the actual mode change.</p>\n","html_type":"Function"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-addMode","owner":"CKEDITOR.editor","short_doc":"Registers an editing mode. ..."},{"tagname":"method","name":"applyStyle","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/style.js","linenr":1950}],"doc":"<p>Applies the style upon the editor's current selection. Shorthand for\n<a href=\"#!/api/CKEDITOR.style-method-apply\" rel=\"CKEDITOR.style-method-apply\" class=\"docClass\">CKEDITOR.style.apply</a>.</p>\n","owner":"CKEDITOR.editor","params":[{"tagname":"params","type":"CKEDITOR.style","name":"style","doc":"\n","html_type":"<a href=\"#!/api/CKEDITOR.style\" rel=\"CKEDITOR.style\" class=\"docClass\">CKEDITOR.style</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-applyStyle","short_doc":"Applies the style upon the editor's current selection. ..."},{"tagname":"method","name":"attachStyleStateChange","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/style.js","linenr":1899}],"doc":"<p>Registers a function to be called whenever the selection position changes in the\nediting area. The current state is passed to the function. The possible\nstates are <a href=\"#!/api/CKEDITOR-property-TRISTATE_ON\" rel=\"CKEDITOR-property-TRISTATE_ON\" class=\"docClass\">CKEDITOR.TRISTATE_ON</a> and <a href=\"#!/api/CKEDITOR-property-TRISTATE_OFF\" rel=\"CKEDITOR-property-TRISTATE_OFF\" class=\"docClass\">CKEDITOR.TRISTATE_OFF</a>.</p>\n\n<pre><code>// Create a style object for the &lt;b&gt; element.\nvar style = new <a href=\"#!/api/CKEDITOR.style\" rel=\"CKEDITOR.style\" class=\"docClass\">CKEDITOR.style</a>( { element: 'b' } );\nvar editor = CKEDITOR.instances.editor1;\neditor.attachStyleStateChange( style, function( state ) {\n    if ( state == <a href=\"#!/api/CKEDITOR-property-TRISTATE_ON\" rel=\"CKEDITOR-property-TRISTATE_ON\" class=\"docClass\">CKEDITOR.TRISTATE_ON</a> )\n        alert( 'The current state for the B element is ON' );\n    else\n        alert( 'The current state for the B element is OFF' );\n} );\n</code></pre>\n","owner":"CKEDITOR.editor","params":[{"tagname":"params","type":"CKEDITOR.style","name":"style","doc":"<p>The style to be watched.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.style\" rel=\"CKEDITOR.style\" class=\"docClass\">CKEDITOR.style</a>"},{"tagname":"params","type":"Function","name":"callback","doc":"<p>The function to be called.</p>\n","html_type":"Function"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["on"],"id":"method-attachStyleStateChange","short_doc":"Registers a function to be called whenever the selection position changes in the\nediting area. ..."},{"tagname":"method","name":"capture","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/event.js","linenr":214}],"doc":"<p>Register event handler under the capturing stage on supported target.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-capture","owner":"CKEDITOR.event","short_doc":"Register event handler under the capturing stage on supported target. ..."},{"tagname":"method","name":"checkDirty","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1072}],"doc":"<p>Checks whether the current editor content contains changes when\ncompared to the content loaded into the editor at startup, or to\nthe content available in the editor when <a href=\"#!/api/CKEDITOR.editor-method-resetDirty\" rel=\"CKEDITOR.editor-method-resetDirty\" class=\"docClass\">resetDirty</a>\nwas called.</p>\n\n<pre><code>function beforeUnload( evt ) {\n    if ( CKEDITOR.instances.editor1.checkDirty() )\n        return evt.returnValue = \"You will lose the changes made in the editor.\";\n}\n\nif ( window.addEventListener )\n    window.addEventListener( 'beforeunload', beforeUnload, false );\nelse\n    window.attachEvent( 'onbeforeunload', beforeUnload );\n</code></pre>\n","return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the content contains changes.</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getSnapshot"],"id":"method-checkDirty","owner":"CKEDITOR.editor","short_doc":"Checks whether the current editor content contains changes when\ncompared to the content loaded into the editor at sta..."},{"tagname":"method","name":"createRange","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":796}],"doc":"<p>Shortcut to create a <a href=\"#!/api/CKEDITOR.dom.range\" rel=\"CKEDITOR.dom.range\" class=\"docClass\">CKEDITOR.dom.range</a> instance from the editable element.</p>\n","return":{"type":"CKEDITOR.dom.range","name":"return","doc":"<p>The DOM range created if the editable has presented.\n@see <a href=\"#!/api/CKEDITOR.dom.range\" rel=\"CKEDITOR.dom.range\" class=\"docClass\">CKEDITOR.dom.range</a></p>\n","properties":null,"html_type":"<a href=\"#!/api/CKEDITOR.dom.range\" rel=\"CKEDITOR.dom.range\" class=\"docClass\">CKEDITOR.dom.range</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["editable"],"id":"method-createRange","owner":"CKEDITOR.editor","short_doc":"Shortcut to create a CKEDITOR.dom.range instance from the editable element. ..."},{"tagname":"method","name":"define","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/event.js","linenr":84}],"doc":"<p>Predefine some intrinsic properties on a specific event name.</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"<p>The event name</p>\n","html_type":"String"},{"tagname":"params","name":"meta","doc":"\n","properties":[{"tagname":"params","name":"errorProof","default":"false","optional":true,"doc":"<p>Whether the event firing should catch error thrown from a per listener call.</p>\n"}],"type":"Object","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-define","owner":"CKEDITOR.event","short_doc":"Predefine some intrinsic properties on a specific event name. ..."},{"tagname":"method","name":"destroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":742}],"doc":"<p>Destroys the editor instance, releasing all resources used by it.\nIf the editor replaced an element, the element will be recovered.</p>\n\n<pre><code>alert( CKEDITOR.instances.editor1 ); // e.g. object\nCKEDITOR.instances.editor1.destroy();\nalert( CKEDITOR.instances.editor1 ); // undefined\n</code></pre>\n","params":[{"tagname":"params","type":"Boolean","name":"noUpdate","optional":true,"doc":"<p>If the instance is replacing a DOM\nelement, this parameter indicates whether or not to update the\nelement with the instance content.</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["editable","fire","removeAllListeners"],"id":"method-destroy","owner":"CKEDITOR.editor","short_doc":"Destroys the editor instance, releasing all resources used by it. ..."},{"tagname":"method","name":"editable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editable.js","linenr":977}],"doc":"<p>Create, retrieve or detach an editable element of the editor,\nthis method should always be used instead of calling directly <a href=\"#!/api/CKEDITOR.editable\" rel=\"CKEDITOR.editable\" class=\"docClass\">CKEDITOR.editable</a>.</p>\n","owner":"CKEDITOR.editor","params":[{"tagname":"params","type":"CKEDITOR.dom.element/CKEDITOR.editable","name":"elementOrEditable","doc":"<p>The\nDOM element to become the editable or a <a href=\"#!/api/CKEDITOR.editable\" rel=\"CKEDITOR.editable\" class=\"docClass\">CKEDITOR.editable</a> object.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.dom.element\" rel=\"CKEDITOR.dom.element\" class=\"docClass\">CKEDITOR.dom.element</a>/<a href=\"#!/api/CKEDITOR.editable\" rel=\"CKEDITOR.editable\" class=\"docClass\">CKEDITOR.editable</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-editable","short_doc":"Create, retrieve or detach an editable element of the editor,\nthis method should always be used instead of calling di..."},{"tagname":"method","name":"elementPath","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":776}],"doc":"<p>Returns an <a href=\"#!/api/CKEDITOR.dom.elementPath\" rel=\"CKEDITOR.dom.elementPath\" class=\"docClass\">element path</a> for the selection in the editor.</p>\n","params":[{"tagname":"params","type":"CKEDITOR.dom.node","name":"startNode","optional":true,"doc":"<p>From which the path should start,\nif not specified defaults to editor selection's\nstart element yielded by <a href=\"#!/api/CKEDITOR.dom.selection-method-getStartElement\" rel=\"CKEDITOR.dom.selection-method-getStartElement\" class=\"docClass\">CKEDITOR.dom.selection.getStartElement</a>.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.dom.node\" rel=\"CKEDITOR.dom.node\" class=\"docClass\">CKEDITOR.dom.node</a>"}],"return":{"type":"CKEDITOR.dom.elementPath","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/CKEDITOR.dom.elementPath\" rel=\"CKEDITOR.dom.elementPath\" class=\"docClass\">CKEDITOR.dom.elementPath</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["editable","getSelection"],"id":"method-elementPath","owner":"CKEDITOR.editor","short_doc":"Returns an element path for the selection in the editor. ..."},{"tagname":"method","name":"execCommand","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":807}],"doc":"<p>Executes a command associated with the editor.</p>\n\n<pre><code>editorInstance.execCommand( 'bold' );\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"commandName","doc":"<p>The indentifier name of the command.</p>\n","html_type":"String"},{"tagname":"params","type":"Object","name":"data","optional":true,"doc":"<p>The data to be passed to the command.</p>\n","html_type":"Object"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the command was executed\nsuccessfully, otherwise <code>false</code>.\n@see <a href=\"#!/api/CKEDITOR.editor-method-addCommand\" rel=\"CKEDITOR.editor-method-addCommand\" class=\"docClass\">CKEDITOR.editor.addCommand</a></p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["fire","getCommand"],"id":"method-execCommand","owner":"CKEDITOR.editor","short_doc":"Executes a command associated with the editor. ..."},{"tagname":"method","name":"fire","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/event.js","linenr":224}],"doc":"<p>Fires an specific event in the object. All registered listeners are\ncalled at this point.</p>\n\n<pre><code>someObject.on( 'someEvent', function() { ... } );\nsomeObject.on( 'someEvent', function() { ... } );\nsomeObject.fire( 'someEvent' );             // Both listeners are called.\n\nsomeObject.on( 'someEvent', function( event ) {\n    alert( event.data );                    // 'Example'\n} );\nsomeObject.fire( 'someEvent', 'Example' );\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The event name to fire.</p>\n","html_type":"String"},{"tagname":"params","type":"Object","name":"data","optional":true,"doc":"<p>Data to be sent as the\n<a href=\"#!/api/CKEDITOR.eventInfo-property-data\" rel=\"CKEDITOR.eventInfo-property-data\" class=\"docClass\">CKEDITOR.eventInfo.data</a> when calling the listeners.</p>\n","html_type":"Object"},{"tagname":"params","type":"CKEDITOR.editor","name":"editor","optional":true,"doc":"<p>The editor instance to send as the\n<a href=\"#!/api/CKEDITOR.eventInfo-property-editor\" rel=\"CKEDITOR.eventInfo-property-editor\" class=\"docClass\">CKEDITOR.eventInfo.editor</a> when calling the listener.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"}],"return":{"type":"Boolean/Object","name":"return","doc":"<p>A boolean indicating that the event is to be\ncanceled, or data returned by one of the listeners.</p>\n","properties":null,"html_type":"Boolean/Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-fire","owner":"CKEDITOR.event","short_doc":"Fires an specific event in the object. ..."},{"tagname":"method","name":"fireOnce","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/event.js","linenr":315}],"doc":"<p>Fires an specific event in the object, releasing all listeners\nregistered to that event. The same listeners are not called again on\nsuccessive calls of it or of <a href=\"#!/api/CKEDITOR.event-method-fire\" rel=\"CKEDITOR.event-method-fire\" class=\"docClass\">fire</a>.</p>\n\n<pre><code>someObject.on( 'someEvent', function() { ... } );\nsomeObject.fire( 'someEvent' );         // Above listener called.\nsomeObject.fireOnce( 'someEvent' );     // Above listener called.\nsomeObject.fire( 'someEvent' );         // No listeners called.\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The event name to fire.</p>\n","html_type":"String"},{"tagname":"params","type":"Object","name":"data","optional":true,"doc":"<p>Data to be sent as the\n<a href=\"#!/api/CKEDITOR.eventInfo-property-data\" rel=\"CKEDITOR.eventInfo-property-data\" class=\"docClass\">CKEDITOR.eventInfo.data</a> when calling the listeners.</p>\n","html_type":"Object"},{"tagname":"params","type":"CKEDITOR.editor","name":"editor","optional":true,"doc":"<p>The editor instance to send as the\n<a href=\"#!/api/CKEDITOR.eventInfo-property-editor\" rel=\"CKEDITOR.eventInfo-property-editor\" class=\"docClass\">CKEDITOR.eventInfo.editor</a> when calling the listener.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"}],"return":{"type":"Boolean/Object","name":"return","doc":"<p>A booloan indicating that the event is to be\ncanceled, or data returned by one of the listeners.</p>\n","properties":null,"html_type":"Boolean/Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["fire"],"id":"method-fireOnce","owner":"CKEDITOR.event","short_doc":"Fires an specific event in the object, releasing all listeners\nregistered to that event. ..."},{"tagname":"method","name":"focus","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1065}],"doc":"<p>Moves the selection focus to the editing area space in the editor.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["fire"],"id":"method-focus","owner":"CKEDITOR.editor","short_doc":"Moves the selection focus to the editing area space in the editor. ..."},{"tagname":"method","name":"forceNextSelectionCheck","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/selection.js","linenr":985}],"doc":"<p>@todo</p>\n","owner":"CKEDITOR.editor","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-forceNextSelectionCheck","short_doc":"@todo ..."},{"tagname":"method","name":"getCommand","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":841}],"doc":"<p>Gets one of the registered commands. Note that after registering a\ncommand definition with <a href=\"#!/api/CKEDITOR.editor-method-addCommand\" rel=\"CKEDITOR.editor-method-addCommand\" class=\"docClass\">addCommand</a>, it is\ntransformed internally into an instance of\n<a href=\"#!/api/CKEDITOR.command\" rel=\"CKEDITOR.command\" class=\"docClass\">CKEDITOR.command</a>, which will then be returned by this function.</p>\n","params":[{"tagname":"params","type":"String","name":"commandName","doc":"<p>The name of the command to be returned.\nThis is the same name that is used to register the command with <code>addCommand</code>.</p>\n","html_type":"String"}],"return":{"type":"CKEDITOR.command","name":"return","doc":"<p>The command object identified by the provided name.</p>\n","properties":null,"html_type":"<a href=\"#!/api/CKEDITOR.command\" rel=\"CKEDITOR.command\" class=\"docClass\">CKEDITOR.command</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getCommand","owner":"CKEDITOR.editor","short_doc":"Gets one of the registered commands. ..."},{"tagname":"method","name":"getData","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":855}],"doc":"<p>Gets the editor data. The data will be in \"raw\" format. It is the same\ndata that is posted by the editor.</p>\n\n<pre><code>if ( CKEDITOR.instances.editor1.getData() == '' )\n    alert( 'There is no data available.' );\n</code></pre>\n","return":{"type":"String","name":"return","doc":"<p>The editor data.</p>\n","properties":null,"html_type":"String"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"name":"noEvents","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["fire"],"id":"method-getData","owner":"CKEDITOR.editor","short_doc":"Gets the editor data. ..."},{"tagname":"method","name":"getResizable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/creators/themedui.js","linenr":301}],"doc":"<p>Gets the element that can be used to check the editor size. This method\nis mainly used by the <code>resize</code> plugin, which adds a UI handle that can be used\nto resize the editor.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"forContents","doc":"<p>Whether to return the \"contents\" part of the theme instead of the container.</p>\n","html_type":"Boolean"}],"return":{"type":"CKEDITOR.dom.element","name":"return","doc":"<p>The resizable element.</p>\n","properties":null,"html_type":"<a href=\"#!/api/CKEDITOR.dom.element\" rel=\"CKEDITOR.dom.element\" class=\"docClass\">CKEDITOR.dom.element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getResizable","owner":"CKEDITOR.editor","short_doc":"Gets the element that can be used to check the editor size. ..."},{"tagname":"method","name":"getSelection","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/selection.js","linenr":915}],"doc":"<p>Retrieve the editor selection in scope of editable element.</p>\n\n<p><strong>Note:</strong> Since the native browser selection provides only one single\nselection at a time per document, so if editor's editable element has lost focus,\nthis method will return a null value unless the <a href=\"#!/api/CKEDITOR.editor-method-lockSelection\" rel=\"CKEDITOR.editor-method-lockSelection\" class=\"docClass\">lockSelection</a>\nhas been called beforehand so the saved selection is retrieved.</p>\n\n<pre><code>var selection = CKEDITOR.instances.editor1.getSelection();\nalert( selection.getType() );\n</code></pre>\n","owner":"CKEDITOR.editor","params":[{"tagname":"params","type":"Boolean","name":"forceRealSelection","doc":"<p>Return real selection, instead of saved or fake one.</p>\n","html_type":"Boolean"}],"return":{"type":"CKEDITOR.dom.selection","name":"return","doc":"<p>A selection object or null if not available for the moment.</p>\n","properties":null,"html_type":"<a href=\"#!/api/CKEDITOR.dom.selection\" rel=\"CKEDITOR.dom.selection\" class=\"docClass\">CKEDITOR.dom.selection</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["editable"],"id":"method-getSelection","short_doc":"Retrieve the editor selection in scope of editable element. ..."},{"tagname":"method","name":"getSnapshot","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":885}],"doc":"<p>Gets the \"raw data\" currently available in the editor. This is a\nfast method which returns the data as is, without processing, so it is\nnot recommended to use it on resulting pages. Instead it can be used\ncombined with the <a href=\"#!/api/CKEDITOR.editor-method-loadSnapshot\" rel=\"CKEDITOR.editor-method-loadSnapshot\" class=\"docClass\">loadSnapshot</a> method in order\nto automatically save the editor data from time to time\nwhile the user is using the editor, to avoid data loss, without risking\nperformance issues.</p>\n\n<pre><code>alert( editor.getSnapshot() );\n</code></pre>\n\n<p>@see <a href=\"#!/api/CKEDITOR.editor-method-getData\" rel=\"CKEDITOR.editor-method-getData\" class=\"docClass\">CKEDITOR.editor.getData</a></p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["fire"],"id":"method-getSnapshot","owner":"CKEDITOR.editor","short_doc":"Gets the \"raw data\" currently available in the editor. ..."},{"tagname":"method","name":"getStylesSet","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/style.js","linenr":1972}],"doc":"<p>Gets the current <code>stylesSet</code> for this instance.</p>\n\n<pre><code>editor.getStylesSet( function( stylesDefinitions ) {} );\n</code></pre>\n\n<p>See also <a href=\"#!/api/CKEDITOR.editor-event-stylesSet\" rel=\"CKEDITOR.editor-event-stylesSet\" class=\"docClass\">stylesSet</a> event.</p>\n","owner":"CKEDITOR.editor","params":[{"tagname":"params","type":"Function","name":"callback","doc":"<p>The function to be called with the styles data.</p>\n","html_type":"Function"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getStylesSet","short_doc":"Gets the current stylesSet for this instance. ..."},{"tagname":"method","name":"getUiColor","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/skin.js","linenr":173}],"doc":"<p>Gets the color of the editor user interface.</p>\n\n<pre><code>CKEDITOR.instances.editor1.getUiColor();\n</code></pre>\n","owner":"CKEDITOR.editor","return":{"type":"String","name":"return","doc":"<p>uiColor The editor UI color or <code>undefined</code> if the UI color is not set.</p>\n","properties":null,"html_type":"String"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getUiColor","short_doc":"Gets the color of the editor user interface. ..."},{"tagname":"method","name":"hasListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/event.js","linenr":372}],"doc":"<p>Checks if there is any listener registered to a given event.</p>\n\n<pre><code>var myListener = function() { ... };\nsomeObject.on( 'someEvent', myListener );\nalert( someObject.hasListeners( 'someEvent' ) );    // true\nalert( someObject.hasListeners( 'noEvent' ) );      // false\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The event name.</p>\n","html_type":"String"}],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-hasListeners","owner":"CKEDITOR.event","short_doc":"Checks if there is any listener registered to a given event. ..."},{"tagname":"method","name":"insertElement","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1051}],"doc":"<p>Inserts an element into the currently selected position in the\neditor in WYSIWYG mode.</p>\n\n<pre><code>var element = <a href=\"#!/api/CKEDITOR.dom.element-static-method-createFromHtml\" rel=\"CKEDITOR.dom.element-static-method-createFromHtml\" class=\"docClass\">CKEDITOR.dom.element.createFromHtml</a>( '&lt;img src=\"hello.png\" border=\"0\" title=\"Hello\" /&gt;' );\nCKEDITOR.instances.editor1.insertElement( element );\n</code></pre>\n","params":[{"tagname":"params","type":"CKEDITOR.dom.element","name":"element","doc":"<p>The element to be inserted\ninto the editor.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.dom.element\" rel=\"CKEDITOR.dom.element\" class=\"docClass\">CKEDITOR.dom.element</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["fire"],"id":"method-insertElement","owner":"CKEDITOR.editor","short_doc":"Inserts an element into the currently selected position in the\neditor in WYSIWYG mode. ..."},{"tagname":"method","name":"insertHtml","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1015}],"doc":"<p>Inserts HTML code into the currently selected position in the editor in WYSIWYG mode.</p>\n\n<p>Example:</p>\n\n<pre><code>CKEDITOR.instances.editor1.insertHtml( '&lt;p&gt;This is a new paragraph.&lt;/p&gt;' );\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"html","doc":"<p>HTML code to be inserted into the editor.</p>\n","html_type":"String"},{"tagname":"params","type":"String","name":"mode","default":"'html'","optional":true,"doc":"<p>The mode in which the HTML code will be inserted. One of the following:</p>\n\n<ul>\n<li><code>\"html\"</code> &ndash; The content being inserted will completely override the styles\n at the selected position.</li>\n<li><code>\"unfiltered_html\"</code> &ndash; Like <code>\"html\"</code> but the content is not filtered with <a href=\"#!/api/CKEDITOR.filter\" rel=\"CKEDITOR.filter\" class=\"docClass\">CKEDITOR.filter</a>.</li>\n<li><code>\"text\"</code> &ndash; The content being inserted will inherit the styles applied in\n the selected position. This mode should be used when inserting \"htmlified\" plain text\n (HTML without inline styles and styling elements like\n <code>&lt;b/&gt;</code>, <code>&lt;strong/&gt;</code>, <code>&lt;span style=\"...\"/&gt;</code>).</li>\n</ul>\n\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["fire"],"id":"method-insertHtml","owner":"CKEDITOR.editor","short_doc":"Inserts HTML code into the currently selected position in the editor in WYSIWYG mode. ..."},{"tagname":"method","name":"insertText","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1037}],"doc":"<p>Insert text content into the currently selected position in the\neditor in WYSIWYG mode. The styles of the selected element will be applied to the inserted text.\nSpaces around the text will be left untouched.</p>\n\n<pre><code>CKEDITOR.instances.editor1.insertText( ' line1 \\n\\n line2' );\n</code></pre>\n","since":"3.5","params":[{"tagname":"params","type":"String","name":"text","doc":"<p>Text to be inserted into the editor.</p>\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["fire"],"id":"method-insertText","owner":"CKEDITOR.editor","short_doc":"Insert text content into the currently selected position in the\neditor in WYSIWYG mode. ..."},{"tagname":"method","name":"loadSnapshot","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":910}],"doc":"<p>Loads \"raw data\" into the editor. The data is loaded with processing\nstraight to the editing area. It should not be used as a way to load\nany kind of data, but instead in combination with\n<a href=\"#!/api/CKEDITOR.editor-method-getSnapshot\" rel=\"CKEDITOR.editor-method-getSnapshot\" class=\"docClass\">getSnapshot</a>-produced data.</p>\n\n<pre><code>var data = editor.getSnapshot();\neditor.loadSnapshot( data );\n</code></pre>\n\n<p>@see <a href=\"#!/api/CKEDITOR.editor-method-setData\" rel=\"CKEDITOR.editor-method-setData\" class=\"docClass\">CKEDITOR.editor.setData</a></p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"name":"snapshot","type":"Object","html_type":"Object"}],"chainable":false,"fires":[],"method_calls":["fire"],"id":"method-loadSnapshot","owner":"CKEDITOR.editor","short_doc":"Loads \"raw data\" into the editor. ..."},{"tagname":"method","name":"lockSelection","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/selection.js","linenr":942}],"doc":"<p>Locks the selection made in the editor in order to make it possible to\nmanipulate it without browser interference. A locked selection is\ncached and remains unchanged until it is released with the\n<a href=\"#!/api/CKEDITOR.editor-method-unlockSelection\" rel=\"CKEDITOR.editor-method-unlockSelection\" class=\"docClass\">unlockSelection</a> method.</p>\n","owner":"CKEDITOR.editor","params":[{"tagname":"params","type":"CKEDITOR.dom.selection","name":"sel","optional":true,"doc":"<p>Specify the selection to be locked.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.dom.selection\" rel=\"CKEDITOR.dom.selection\" class=\"docClass\">CKEDITOR.dom.selection</a>"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if selection was locked.</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getSelection"],"id":"method-lockSelection","short_doc":"Locks the selection made in the editor in order to make it possible to\nmanipulate it without browser interference. ..."},{"tagname":"method","name":"on","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/event.js","linenr":96}],"doc":"<p>Registers a listener to a specific event in the current object.</p>\n\n<pre><code>someObject.on( 'someEvent', function() {\n    alert( this == someObject );        // true\n} );\n\nsomeObject.on( 'someEvent', function() {\n    alert( this == anotherObject );     // true\n}, anotherObject );\n\nsomeObject.on( 'someEvent', function( event ) {\n    alert( event.listenerData );        // 'Example'\n}, null, 'Example' );\n\nsomeObject.on( 'someEvent', function() { ... } );                       // 2nd called\nsomeObject.on( 'someEvent', function() { ... }, null, null, 100 );      // 3rd called\nsomeObject.on( 'someEvent', function() { ... }, null, null, 1 );        // 1st called\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The event name to which listen.</p>\n","html_type":"String"},{"tagname":"params","type":"Function","name":"listenerFunction","doc":"<p>The function listening to the\nevent. A single <a href=\"#!/api/CKEDITOR.eventInfo\" rel=\"CKEDITOR.eventInfo\" class=\"docClass\">CKEDITOR.eventInfo</a> object instanced\nis passed to this function containing all the event data.</p>\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scopeObj","optional":true,"doc":"<p>The object used to scope the listener\ncall (the <code>this</code> object). If omitted, the current object is used.</p>\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"listenerData","optional":true,"doc":"<p>Data to be sent as the\n<a href=\"#!/api/CKEDITOR.eventInfo-property-listenerData\" rel=\"CKEDITOR.eventInfo-property-listenerData\" class=\"docClass\">CKEDITOR.eventInfo.listenerData</a> when calling the\nlistener.</p>\n","html_type":"Object"},{"tagname":"params","type":"Number","name":"priority","default":"10","optional":true,"doc":"<p>The listener priority. Lower priority\nlisteners are called first. Listeners with the same priority\nvalue are called in registration order.</p>\n","html_type":"Number"}],"return":{"type":"Object","name":"return","doc":"<p>An object containing the <code>removeListener</code>\nfunction, which can be used to remove the listener at any time.</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-on","owner":"CKEDITOR.event","short_doc":"Registers a listener to a specific event in the current object. ..."},{"tagname":"method","name":"once","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/event.js","linenr":191}],"doc":"<p>Similiar with <a href=\"#!/api/CKEDITOR.event-method-on\" rel=\"CKEDITOR.event-method-on\" class=\"docClass\">on</a> but the listener will be called only once upon the next event firing.</p>\n\n<p>@see <a href=\"#!/api/CKEDITOR.event-method-on\" rel=\"CKEDITOR.event-method-on\" class=\"docClass\">CKEDITOR.event.on</a></p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-once","owner":"CKEDITOR.event","short_doc":"Similiar with on but the listener will be called only once upon the next event firing. ..."},{"tagname":"method","name":"removeAllListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/event.js","linenr":363}],"doc":"<p>Remove all existing listeners on this object, for cleanup purpose.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-removeAllListeners","owner":"CKEDITOR.event","short_doc":"Remove all existing listeners on this object, for cleanup purpose. ..."},{"tagname":"method","name":"removeListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/event.js","linenr":339}],"doc":"<p>Unregisters a listener function from being called at the specified\nevent. No errors are thrown if the listener has not been registered previously.</p>\n\n<pre><code>var myListener = function() { ... };\nsomeObject.on( 'someEvent', myListener );\nsomeObject.fire( 'someEvent' );                 // myListener called.\nsomeObject.removeListener( 'someEvent', myListener );\nsomeObject.fire( 'someEvent' );                 // myListener not called.\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The event name.</p>\n","html_type":"String"},{"tagname":"params","type":"Function","name":"listenerFunction","doc":"<p>The listener function to unregister.</p>\n","html_type":"Function"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-removeListener","owner":"CKEDITOR.event","short_doc":"Unregisters a listener function from being called at the specified\nevent. ..."},{"tagname":"method","name":"removeStyle","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/style.js","linenr":1961}],"doc":"<p>Removes the style from the editor's current selection. Shorthand for\n<a href=\"#!/api/CKEDITOR.style-method-remove\" rel=\"CKEDITOR.style-method-remove\" class=\"docClass\">CKEDITOR.style.remove</a>.</p>\n","owner":"CKEDITOR.editor","params":[{"tagname":"params","type":"CKEDITOR.style","name":"style","doc":"\n","html_type":"<a href=\"#!/api/CKEDITOR.style\" rel=\"CKEDITOR.style\" class=\"docClass\">CKEDITOR.style</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-removeStyle","short_doc":"Removes the style from the editor's current selection. ..."},{"tagname":"method","name":"resetDirty","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1094}],"doc":"<p>Resets the \"dirty state\" of the editor so subsequent calls to\n<a href=\"#!/api/CKEDITOR.editor-method-checkDirty\" rel=\"CKEDITOR.editor-method-checkDirty\" class=\"docClass\">checkDirty</a> will return <code>false</code> if the user will not\nhave made further changes to the content.</p>\n\n<pre><code>alert( editor.checkDirty() ); // e.g. true\neditor.resetDirty();\nalert( editor.checkDirty() ); // false\n</code></pre>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getSnapshot"],"id":"method-resetDirty","owner":"CKEDITOR.editor","short_doc":"Resets the \"dirty state\" of the editor so subsequent calls to\ncheckDirty will return false if the user will not\nhave ..."},{"tagname":"method","name":"resize","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/creators/themedui.js","linenr":248}],"doc":"<p>Resizes the editor interface.</p>\n\n<pre><code>editor.resize( 900, 300 );\n\neditor.resize( '100%', 450, true );\n</code></pre>\n","params":[{"tagname":"params","type":"Number/String","name":"width","doc":"<p>The new width. It can be an integer denoting a value\nin pixels or a CSS size value with unit.</p>\n","html_type":"Number/String"},{"tagname":"params","type":"Number/String","name":"height","doc":"<p>The new height. It can be an integer denoting a value\nin pixels or a CSS size value with unit.</p>\n","html_type":"Number/String"},{"tagname":"params","type":"Boolean","name":"isContentHeight","optional":true,"doc":"<p>Indicates that the provided height is to\nbe applied to the editor content area, and not to the entire editor\ninterface. Defaults to <code>false</code>.</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"resizeInner","optional":true,"doc":"<p>Indicates that it is the inner interface\nelement that must be resized, not the outer element. The default theme\ndefines the editor interface inside a pair of <code>&lt;span&gt;</code> elements\n(<code>&lt;span&gt;&lt;span&gt;...&lt;/span&gt;&lt;/span&gt;</code>). By default the first,\nouter <code>&lt;span&gt;</code> element receives the sizes. If this parameter is set to\n<code>true</code>, the second, inner <code>&lt;span&gt;</code> is resized instead.</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["fire"],"id":"method-resize","owner":"CKEDITOR.editor","short_doc":"Resizes the editor interface. ..."},{"tagname":"method","name":"selectionChange","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/selection.js","linenr":902}],"doc":"<p>Check the selection change in editor and potentially fires\nthe <a href=\"#!/api/CKEDITOR.editor-event-selectionChange\" rel=\"CKEDITOR.editor-event-selectionChange\" class=\"docClass\">selectionChange</a> event.</p>\n","owner":"CKEDITOR.editor","params":[{"tagname":"params","type":"Boolean","name":"checkNow","default":"false","optional":true,"doc":"<p>Force the check to happen immediately\ninstead of coming with a timeout delay (default).</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-selectionChange","short_doc":"Check the selection change in editor and potentially fires\nthe selectionChange event. ..."},{"tagname":"method","name":"setActiveEnterMode","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1218}],"doc":"<p>Sets the active Enter modes: (<a href=\"#!/api/CKEDITOR.editor-property-enterMode\" rel=\"CKEDITOR.editor-property-enterMode\" class=\"docClass\">enterMode</a> and <a href=\"#!/api/CKEDITOR.editor-property-shiftEnterMode\" rel=\"CKEDITOR.editor-property-shiftEnterMode\" class=\"docClass\">shiftEnterMode</a>).\nFires the <a href=\"#!/api/CKEDITOR.editor-event-activeEnterModeChange\" rel=\"CKEDITOR.editor-event-activeEnterModeChange\" class=\"docClass\">activeEnterModeChange</a> event.</p>\n\n<p>Prior to CKEditor 4.3 Enter modes were static and it was enough to check <a href=\"#!/api/CKEDITOR.config-cfg-enterMode\" rel=\"CKEDITOR.config-cfg-enterMode\" class=\"docClass\">CKEDITOR.config.enterMode</a>\nand <a href=\"#!/api/CKEDITOR.config-cfg-shiftEnterMode\" rel=\"CKEDITOR.config-cfg-shiftEnterMode\" class=\"docClass\">CKEDITOR.config.shiftEnterMode</a> when implementing a feature which should depend on the Enter modes.\nSince CKEditor 4.3 these options are source of initial:</p>\n\n<ul>\n<li>static <a href=\"#!/api/CKEDITOR.editor-property-enterMode\" rel=\"CKEDITOR.editor-property-enterMode\" class=\"docClass\">enterMode</a> and <a href=\"#!/api/CKEDITOR.editor-property-shiftEnterMode\" rel=\"CKEDITOR.editor-property-shiftEnterMode\" class=\"docClass\">shiftEnterMode</a> values,</li>\n<li>dynamic <a href=\"#!/api/CKEDITOR.editor-property-activeEnterMode\" rel=\"CKEDITOR.editor-property-activeEnterMode\" class=\"docClass\">activeEnterMode</a> and <a href=\"#!/api/CKEDITOR.editor-property-activeShiftEnterMode\" rel=\"CKEDITOR.editor-property-activeShiftEnterMode\" class=\"docClass\">activeShiftEnterMode</a> values.</li>\n</ul>\n\n\n<p>However, the dynamic Enter modes can be changed during runtime by using this method, to reflect the selection context.\nFor example, if selection is moved to the widget's nested editable which\nis a <a href=\"#!/api/CKEDITOR.editor-property-blockless\" rel=\"CKEDITOR.editor-property-blockless\" class=\"docClass\">blockless one</a>, then the active Enter modes should be changed to <a href=\"#!/api/CKEDITOR-property-ENTER_BR\" rel=\"CKEDITOR-property-ENTER_BR\" class=\"docClass\">CKEDITOR.ENTER_BR</a>\n(in this case <a href=\"#!/guide/dev_widgets\">Widget System</a> takes care of that).</p>\n\n<p><strong>Note:</strong> This method should not be used to configure the editor &ndash; use <a href=\"#!/api/CKEDITOR.config-cfg-enterMode\" rel=\"CKEDITOR.config-cfg-enterMode\" class=\"docClass\">CKEDITOR.config.enterMode</a> and\n<a href=\"#!/api/CKEDITOR.config-cfg-shiftEnterMode\" rel=\"CKEDITOR.config-cfg-shiftEnterMode\" class=\"docClass\">CKEDITOR.config.shiftEnterMode</a> instead. This method should only be used to dynamically change\nEnter modes during runtime based on selection changes.\nKeep in mind that changed Enter mode may be overwritten by another plugin/feature when it decided that\nthe changed context requires this.</p>\n\n<p><strong>Note:</strong> In case of blockless editor (inline editor based on an element which cannot contain block elements\n&mdash; see <a href=\"#!/api/CKEDITOR.editor-property-blockless\" rel=\"CKEDITOR.editor-property-blockless\" class=\"docClass\">blockless</a>) only <a href=\"#!/api/CKEDITOR-property-ENTER_BR\" rel=\"CKEDITOR-property-ENTER_BR\" class=\"docClass\">CKEDITOR.ENTER_BR</a> is a valid Enter mode. Therefore\nthis method will not allow to set other values.</p>\n\n<p><strong>Note:</strong> Changing the <a href=\"#!/api/CKEDITOR.editor-property-activeFilter\" rel=\"CKEDITOR.editor-property-activeFilter\" class=\"docClass\">active filter</a> may cause the Enter mode to change if default Enter modes\nare not allowed by the new filter.</p>\n","since":"4.3","params":[{"tagname":"params","type":"Number","name":"enterMode","doc":"<p>One of <a href=\"#!/api/CKEDITOR-property-ENTER_P\" rel=\"CKEDITOR-property-ENTER_P\" class=\"docClass\">CKEDITOR.ENTER_P</a>, <a href=\"#!/api/CKEDITOR-property-ENTER_DIV\" rel=\"CKEDITOR-property-ENTER_DIV\" class=\"docClass\">CKEDITOR.ENTER_DIV</a>, <a href=\"#!/api/CKEDITOR-property-ENTER_BR\" rel=\"CKEDITOR-property-ENTER_BR\" class=\"docClass\">CKEDITOR.ENTER_BR</a>.\nPass falsy value (e.g. <code>null</code>) to reset the Enter mode to the default value (<a href=\"#!/api/CKEDITOR.editor-property-enterMode\" rel=\"CKEDITOR.editor-property-enterMode\" class=\"docClass\">enterMode</a> and/or <a href=\"#!/api/CKEDITOR.editor-property-shiftEnterMode\" rel=\"CKEDITOR.editor-property-shiftEnterMode\" class=\"docClass\">shiftEnterMode</a>).</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"shiftEnterMode","doc":"<p>See the <code>enterMode</code> argument.</p>\n","html_type":"Number"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["fire"],"id":"method-setActiveEnterMode","owner":"CKEDITOR.editor","short_doc":"Sets the active Enter modes: (enterMode and shiftEnterMode). ..."},{"tagname":"method","name":"setActiveFilter","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1185}],"doc":"<p>Sets the active filter (<a href=\"#!/api/CKEDITOR.editor-property-activeFilter\" rel=\"CKEDITOR.editor-property-activeFilter\" class=\"docClass\">activeFilter</a>). Fires the <a href=\"#!/api/CKEDITOR.editor-event-activeFilterChange\" rel=\"CKEDITOR.editor-event-activeFilterChange\" class=\"docClass\">activeFilterChange</a> event.</p>\n\n<pre><code>// Set active filter which allows only 4 elements.\n// Buttons like Bold, Italic will be disabled.\nvar filter = new <a href=\"#!/api/CKEDITOR.filter\" rel=\"CKEDITOR.filter\" class=\"docClass\">CKEDITOR.filter</a>( 'p strong em br' );\neditor.setActiveFilter( filter );\n</code></pre>\n\n<p>Setting a new filter will also change the <a href=\"#!/api/CKEDITOR.editor-method-setActiveEnterMode\" rel=\"CKEDITOR.editor-method-setActiveEnterMode\" class=\"docClass\">active Enter modes</a> to the first values\nallowed by the new filter (see <a href=\"#!/api/CKEDITOR.filter-method-getAllowedEnterMode\" rel=\"CKEDITOR.filter-method-getAllowedEnterMode\" class=\"docClass\">CKEDITOR.filter.getAllowedEnterMode</a>).</p>\n","since":"4.3","params":[{"tagname":"params","type":"CKEDITOR.filter","name":"filter","doc":"<p>Filter instance or a falsy value (e.g. <code>null</code>) to reset to the default one.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.filter\" rel=\"CKEDITOR.filter\" class=\"docClass\">CKEDITOR.filter</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["fire","setActiveEnterMode"],"id":"method-setActiveFilter","owner":"CKEDITOR.editor","short_doc":"Sets the active filter (activeFilter). ..."},{"tagname":"method","name":"setData","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":925}],"doc":"<p>Sets the editor data. The data must be provided in the \"raw\" format (HTML).</p>\n\n<p>Note that this method is asynchronous. The <code>callback</code> parameter must\nbe used if interaction with the editor is needed after setting the data.</p>\n\n<pre><code>CKEDITOR.instances.editor1.setData( '&lt;p&gt;This is the editor data.&lt;/p&gt;' );\n\nCKEDITOR.instances.editor1.setData( '&lt;p&gt;Some other editor data.&lt;/p&gt;', {\n    callback: function() {\n        this.checkDirty(); // true\n    }\n} );\n</code></pre>\n\n<p>Note: In <strong>CKEditor 4.4.2</strong> the signature of this method has changed. All arguments\nexcept <code>data</code> were wrapped into the <code>options</code> object. However, backward compatibility\nwas preserved and it is still possible to use the <code>data, callback, internal</code> arguments.</p>\n","params":[{"tagname":"params","type":"String","name":"data","doc":"<p>The HTML code to replace current editor content.</p>\n","html_type":"String"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"\n","properties":[{"tagname":"params","type":"Boolean","name":"internal","default":"false","optional":true,"doc":"<p>Whether to suppress any event firing when copying data internally inside the editor.</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Function","name":"callback","optional":true,"doc":"<p>Function to be called after <code>setData</code> is completed (on <a href=\"#!/api/CKEDITOR.editor-event-dataReady\" rel=\"CKEDITOR.editor-event-dataReady\" class=\"docClass\">dataReady</a>).</p>\n","html_type":"Function"},{"tagname":"params","type":"Boolean","name":"noSnapshot","default":"false","optional":true,"doc":"<p>If set to <code>true</code>, it will prevent recording an undo snapshot.\nIntroduced in CKEditor 4.4.2.</p>\n","html_type":"Boolean"}],"html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["fire","once"],"id":"method-setData","owner":"CKEDITOR.editor","short_doc":"Sets the editor data. ..."},{"tagname":"method","name":"setKeystroke","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1124}],"doc":"<p>Assigns keystrokes associated with editor commands.</p>\n\n<pre><code>editor.setKeystroke( <a href=\"#!/api/CKEDITOR-property-CTRL\" rel=\"CKEDITOR-property-CTRL\" class=\"docClass\">CKEDITOR.CTRL</a> + 115, 'save' ); // Assigned Ctrl+S to the \"save\" command.\neditor.setKeystroke( <a href=\"#!/api/CKEDITOR-property-CTRL\" rel=\"CKEDITOR-property-CTRL\" class=\"docClass\">CKEDITOR.CTRL</a> + 115, false );  // Disabled Ctrl+S keystroke assignment.\neditor.setKeystroke( [\n    [ <a href=\"#!/api/CKEDITOR-property-ALT\" rel=\"CKEDITOR-property-ALT\" class=\"docClass\">CKEDITOR.ALT</a> + 122, false ],\n    [ <a href=\"#!/api/CKEDITOR-property-CTRL\" rel=\"CKEDITOR-property-CTRL\" class=\"docClass\">CKEDITOR.CTRL</a> + 121, 'link' ],\n    [ <a href=\"#!/api/CKEDITOR-property-SHIFT\" rel=\"CKEDITOR-property-SHIFT\" class=\"docClass\">CKEDITOR.SHIFT</a> + 120, 'bold' ]\n] );\n</code></pre>\n\n<p>This method may be used in the following cases:</p>\n\n<ul>\n<li>By plugins (like <code>link</code> or <code>basicstyles</code>) to set their keystrokes when plugins are being loaded.</li>\n<li>During the runtime to modify existing keystrokes.</li>\n</ul>\n\n\n<p>The editor handles keystroke configuration in the following order:</p>\n\n<ol>\n<li>Plugins use this method to define default keystrokes.</li>\n<li>Editor extends default keystrokes with <a href=\"#!/api/CKEDITOR.config-cfg-keystrokes\" rel=\"CKEDITOR.config-cfg-keystrokes\" class=\"docClass\">CKEDITOR.config.keystrokes</a>.</li>\n<li>Editor blocks keystrokes defined in <a href=\"#!/api/CKEDITOR.config-cfg-blockedKeystrokes\" rel=\"CKEDITOR.config-cfg-blockedKeystrokes\" class=\"docClass\">CKEDITOR.config.blockedKeystrokes</a>.</li>\n</ol>\n\n\n<p>You can then set new keystrokes using this method during the runtime.</p>\n","since":"4.0","params":[{"tagname":"params","type":"Number/Array","name":"keystroke","doc":"<p>A keystroke or an array of keystroke definitions.</p>\n","html_type":"Number/Array"},{"tagname":"params","type":"String/Boolean","name":"behavior","optional":true,"doc":"<p>A command to be executed on the keystroke.</p>\n","html_type":"String/Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-setKeystroke","owner":"CKEDITOR.editor","short_doc":"Assigns keystrokes associated with editor commands. ..."},{"tagname":"method","name":"setMode","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/creators/themedui.js","linenr":159}],"doc":"<p>Changes the editing mode of this editor instance.</p>\n\n<p><strong>Note:</strong> The mode switch could be asynchronous depending on the mode provider.\nUse the <code>callback</code> to hook subsequent code.</p>\n\n<pre><code>// Switch to \"source\" view.\nCKEDITOR.instances.editor1.setMode( 'source' );\n// Switch to \"wysiwyg\" view and be notified on completion.\nCKEDITOR.instances.editor1.setMode( 'wysiwyg', function() { alert( 'wysiwyg mode loaded!' ); } );\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"newMode","optional":true,"doc":"<p>If not specified, the <a href=\"#!/api/CKEDITOR.config-cfg-startupMode\" rel=\"CKEDITOR.config-cfg-startupMode\" class=\"docClass\">CKEDITOR.config.startupMode</a> will be used.</p>\n","html_type":"String"},{"tagname":"params","type":"Function","name":"callback","optional":true,"doc":"<p>Optional callback function which is invoked once the mode switch has succeeded.</p>\n","html_type":"Function"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["checkDirty","editable","fire","getData","resetDirty"],"id":"method-setMode","owner":"CKEDITOR.editor","short_doc":"Changes the editing mode of this editor instance. ..."},{"tagname":"method","name":"setReadOnly","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":985}],"doc":"<p>Puts or restores the editor into the read-only state. When in read-only,\nthe user is not able to change the editor content, but can still use\nsome editor features. This function sets the <a href=\"#!/api/CKEDITOR.editor-property-readOnly\" rel=\"CKEDITOR.editor-property-readOnly\" class=\"docClass\">readOnly</a>\nproperty of the editor, firing the <a href=\"#!/api/CKEDITOR.editor-event-readOnly\" rel=\"CKEDITOR.editor-event-readOnly\" class=\"docClass\">readOnly</a> event.</p>\n\n<p><strong>Note:</strong> The current editing area will be reloaded.</p>\n","since":"3.6","params":[{"tagname":"params","type":"Boolean","name":"isReadOnly","optional":true,"doc":"<p>Indicates that the editor must go\nread-only (<code>true</code>, default) or be restored and made editable (<code>false</code>).</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["editable","fire"],"id":"method-setReadOnly","owner":"CKEDITOR.editor","short_doc":"Puts or restores the editor into the read-only state. ..."},{"tagname":"method","name":"setUiColor","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/skin.js","linenr":185}],"doc":"<p>Sets the color of the editor user interface. This method accepts a color value in\nhexadecimal notation, with a <code>#</code> character (e.g. #ffffff).</p>\n\n<pre><code>    CKEDITOR.instances.editor1.setUiColor( '#ff00ff' );\n</code></pre>\n","owner":"CKEDITOR.editor","params":[{"tagname":"params","type":"String","name":"color","doc":"<p>The desired editor UI color in hexadecimal notation.</p>\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-setUiColor","short_doc":"Sets the color of the editor user interface. ..."},{"tagname":"method","name":"unlockSelection","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/selection.js","linenr":963}],"doc":"<p>Unlocks the selection made in the editor and locked with the\n<a href=\"#!/api/CKEDITOR.editor-method-unlockSelection\" rel=\"CKEDITOR.editor-method-unlockSelection\" class=\"docClass\">unlockSelection</a> method. An unlocked selection\nis no longer cached and can be changed.</p>\n","owner":"CKEDITOR.editor","params":[{"tagname":"params","type":"Boolean","name":"restore","optional":true,"doc":"<p>If set to <code>true</code>, the selection is\nrestored back to the selection saved earlier by using the\n<a href=\"#!/api/CKEDITOR.dom.selection-method-lock\" rel=\"CKEDITOR.dom.selection-method-lock\" class=\"docClass\">CKEDITOR.dom.selection.lock</a> method.</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-unlockSelection","short_doc":"Unlocks the selection made in the editor and locked with the\nunlockSelection method. ..."},{"tagname":"method","name":"updateElement","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1107}],"doc":"<p>Updates the <code>&lt;textarea&gt;</code> element that was replaced by the editor with\nthe current data available in the editor.</p>\n\n<p><strong>Note:</strong> This method will only affect those editor instances created\nwith the <a href=\"#!/api/CKEDITOR-property-ELEMENT_MODE_REPLACE\" rel=\"CKEDITOR-property-ELEMENT_MODE_REPLACE\" class=\"docClass\">CKEDITOR.ELEMENT_MODE_REPLACE</a> element mode or inline instances\nbound to <code>&lt;textarea&gt;</code> elements.</p>\n\n<pre><code>CKEDITOR.instances.editor1.updateElement();\nalert( document.getElementById( 'editor1' ).value ); // The current editor data.\n</code></pre>\n\n<p>@see <a href=\"#!/api/CKEDITOR.editor-property-element\" rel=\"CKEDITOR.editor-property-element\" class=\"docClass\">CKEDITOR.editor.element</a></p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-updateElement","owner":"CKEDITOR.editor","short_doc":"Updates the &lt;textarea&gt; element that was replaced by the editor with\nthe current data available in the editor. ..."},{"tagname":"event","name":"activeEnterModeChange","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1503}],"doc":"<p>Fired by the <a href=\"#!/api/CKEDITOR.editor-method-setActiveEnterMode\" rel=\"CKEDITOR.editor-method-setActiveEnterMode\" class=\"docClass\">setActiveEnterMode</a> method when any of the active Enter modes is changed.\nSee also the <a href=\"#!/api/CKEDITOR.editor-property-activeEnterMode\" rel=\"CKEDITOR.editor-property-activeEnterMode\" class=\"docClass\">activeEnterMode</a> and <a href=\"#!/api/CKEDITOR.editor-property-activeShiftEnterMode\" rel=\"CKEDITOR.editor-property-activeShiftEnterMode\" class=\"docClass\">activeShiftEnterMode</a> properties.</p>\n","since":"4.3","params":[],"id":"event-activeEnterModeChange","owner":"CKEDITOR.editor","short_doc":"Fired by the setActiveEnterMode method when any of the active Enter modes is changed. ..."},{"tagname":"event","name":"activeFilterChange","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1496}],"doc":"<p>Fired by the <a href=\"#!/api/CKEDITOR.editor-method-setActiveFilter\" rel=\"CKEDITOR.editor-method-setActiveFilter\" class=\"docClass\">setActiveFilter</a> method when the <a href=\"#!/api/CKEDITOR.editor-property-activeFilter\" rel=\"CKEDITOR.editor-property-activeFilter\" class=\"docClass\">activeFilter</a> is changed.</p>\n","since":"4.3","params":[],"id":"event-activeFilterChange","owner":"CKEDITOR.editor","short_doc":"Fired by the setActiveFilter method when the activeFilter is changed. ..."},{"tagname":"event","name":"afterCommandExec","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1587}],"doc":"<p>Fired after the command execution when <a href=\"#!/api/CKEDITOR.editor-method-execCommand\" rel=\"CKEDITOR.editor-method-execCommand\" class=\"docClass\">execCommand</a> is called.</p>\n","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>This editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"},{"tagname":"params","name":"data","doc":"\n","properties":[{"tagname":"params","type":"String","name":"name","doc":"<p>The command name.</p>\n","html_type":"String"},{"tagname":"params","type":"Object","name":"commandData","doc":"<p>The data sent to the command.</p>\n","html_type":"Object"},{"tagname":"params","type":"CKEDITOR.command","name":"command","doc":"<p>The command itself.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.command\" rel=\"CKEDITOR.command\" class=\"docClass\">CKEDITOR.command</a>"},{"tagname":"params","type":"Object","name":"returnValue","doc":"<p>The value returned by the command execution.</p>\n","html_type":"Object"}],"type":"Object","html_type":"Object"}],"id":"event-afterCommandExec","owner":"CKEDITOR.editor","short_doc":"Fired after the command execution when execCommand is called. ..."},{"tagname":"event","name":"afterSetData","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1667}],"doc":"<p>Event fired at the end of the <a href=\"#!/api/CKEDITOR.editor-method-setData\" rel=\"CKEDITOR.editor-method-setData\" class=\"docClass\">setData</a> call execution. Usually it is better to use the\n<a href=\"#!/api/CKEDITOR.editor-event-dataReady\" rel=\"CKEDITOR.editor-event-dataReady\" class=\"docClass\">dataReady</a> event.</p>\n","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>This editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"},{"tagname":"params","name":"data","doc":"\n","properties":[{"tagname":"params","type":"String","name":"dataValue","doc":"<p>The data that has been set.</p>\n","html_type":"String"}],"type":"Object","html_type":"Object"}],"id":"event-afterSetData","owner":"CKEDITOR.editor","short_doc":"Event fired at the end of the setData call execution. ..."},{"tagname":"event","name":"ariaEditorHelpLabel","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editable.js","linenr":2233}],"doc":"<p>Event fired by the editor in order to get accessibility help label.\nThe event is responded to by a component which provides accessibility\nhelp (i.e. the <code>a11yhelp</code> plugin) hence the editor is notified whether\naccessibility help is available.</p>\n\n<p>Providing info:</p>\n\n<pre><code>editor.on( 'ariaEditorHelpLabel', function( evt ) {\n        evt.data.label = editor.lang.common.editorHelp;\n} );\n</code></pre>\n\n<p>Getting label:</p>\n\n<pre><code>var helpLabel = editor.fire( 'ariaEditorHelpLabel', {} ).label;\n</code></pre>\n","since":"4.4.3","params":[{"tagname":"params","type":"String","name":"label","doc":"<p>The label to be used.</p>\n","html_type":"String"}],"owner":"CKEDITOR.editor","id":"event-ariaEditorHelpLabel","short_doc":"Event fired by the editor in order to get accessibility help label. ..."},{"tagname":"event","name":"beforeCommandExec","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1575}],"doc":"<p>Fired before the command execution when <a href=\"#!/api/CKEDITOR.editor-method-execCommand\" rel=\"CKEDITOR.editor-method-execCommand\" class=\"docClass\">execCommand</a> is called.</p>\n","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>This editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"},{"tagname":"params","name":"data","doc":"\n","properties":[{"tagname":"params","type":"String","name":"name","doc":"<p>The command name.</p>\n","html_type":"String"},{"tagname":"params","type":"Object","name":"commandData","doc":"<p>The data to be sent to the command. This\ncan be manipulated by the event listener.</p>\n","html_type":"Object"},{"tagname":"params","type":"CKEDITOR.command","name":"command","doc":"<p>The command itself.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.command\" rel=\"CKEDITOR.command\" class=\"docClass\">CKEDITOR.command</a>"}],"type":"Object","html_type":"Object"}],"id":"event-beforeCommandExec","owner":"CKEDITOR.editor","short_doc":"Fired before the command execution when execCommand is called. ..."},{"tagname":"event","name":"beforeGetData","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1627}],"doc":"<p>Internal event to get the current data.</p>\n","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>This editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"}],"id":"event-beforeGetData","owner":"CKEDITOR.editor","short_doc":"Internal event to get the current data. ..."},{"tagname":"event","name":"beforeModeUnload","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/creators/themedui.js","linenr":487}],"doc":"<p>Fired before changing the editing mode. See also\n<a href=\"#!/api/CKEDITOR.editor-event-beforeSetMode\" rel=\"CKEDITOR.editor-event-beforeSetMode\" class=\"docClass\">beforeSetMode</a> and <a href=\"#!/api/CKEDITOR.editor-event-mode\" rel=\"CKEDITOR.editor-event-mode\" class=\"docClass\">mode</a>.</p>\n","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>This editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"}],"id":"event-beforeModeUnload","owner":"CKEDITOR.editor","short_doc":"Fired before changing the editing mode. ..."},{"tagname":"event","name":"beforeSetMode","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/creators/themedui.js","linenr":495}],"doc":"<p>Fired before the editor mode is set. See also\n<a href=\"#!/api/CKEDITOR.editor-event-mode\" rel=\"CKEDITOR.editor-event-mode\" class=\"docClass\">mode</a> and <a href=\"#!/api/CKEDITOR.editor-event-beforeModeUnload\" rel=\"CKEDITOR.editor-event-beforeModeUnload\" class=\"docClass\">beforeModeUnload</a>.</p>\n","since":"3.5.3","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>This editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"},{"tagname":"params","type":"String","name":"data","doc":"<p>The name of the mode which is about to be set.</p>\n","html_type":"String"}],"id":"event-beforeSetMode","owner":"CKEDITOR.editor","short_doc":"Fired before the editor mode is set. ..."},{"tagname":"event","name":"blur","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/focusmanager.js","linenr":258}],"doc":"<p>Fired when the editor instance loses the input focus.</p>\n\n<p><strong>Note:</strong> This event will <strong>NOT</strong> be triggered when focus is moved internally, e.g. from\nan editable to another part of the editor UI like a dialog window.\nIf you are interested only in the focus state of the editable, listen to the <code>focus</code>\nand <code>blur</code> events of the <a href=\"#!/api/CKEDITOR.editable\" rel=\"CKEDITOR.editable\" class=\"docClass\">CKEDITOR.editable</a> instead.</p>\n\n<pre><code>editor.on( 'blur', function( e ) {\n    alert( 'The editor named ' + e.editor.name + ' lost the focus' );\n} );\n</code></pre>\n","owner":"CKEDITOR.editor","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>The editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"}],"id":"event-blur","short_doc":"Fired when the editor instance loses the input focus. ..."},{"tagname":"event","name":"configLoaded","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1611}],"doc":"<p>Fired once the editor configuration is ready (loaded and processed).</p>\n","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>This editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"}],"id":"event-configLoaded","owner":"CKEDITOR.editor","short_doc":"Fired once the editor configuration is ready (loaded and processed). ..."},{"tagname":"event","name":"contentDom","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1748}],"doc":"<p>Event fired when the editor content (its DOM structure) is ready.\nIt is similar to the native <code>DOMContentLoaded</code> event, but it applies to\nthe editor content. It is also the first event fired after\nthe <a href=\"#!/api/CKEDITOR.editable\" rel=\"CKEDITOR.editable\" class=\"docClass\">CKEDITOR.editable</a> is initialized.</p>\n\n<p>This event is particularly important for classic (<code>iframe</code>-based)\neditor, because on editor initialization and every time the data are set\n(by <a href=\"#!/api/CKEDITOR.editor-method-setData\" rel=\"CKEDITOR.editor-method-setData\" class=\"docClass\">setData</a>) content DOM structure\nis rebuilt. Thus, e.g. you need to attach DOM event listeners\non editable one more time.</p>\n\n<p>For inline editor this event is fired only once &mdash; when the\neditor is initialized for the first time. This is because setting\neditor content does not cause editable destruction and creation.</p>\n\n<p>The <a href=\"#!/api/CKEDITOR.editor-event-contentDom\" rel=\"CKEDITOR.editor-event-contentDom\" class=\"docClass\">contentDom</a> event goes along with <a href=\"#!/api/CKEDITOR.editor-event-contentDomUnload\" rel=\"CKEDITOR.editor-event-contentDomUnload\" class=\"docClass\">contentDomUnload</a>\nwhich is fired before the content DOM structure is destroyed. This is the\nright moment to detach content DOM event listener. Otherwise\nbrowsers like IE or Opera may throw exceptions when accessing\nelements from the detached document.</p>\n\n<p><strong>Note:</strong> <a href=\"#!/api/CKEDITOR.editable-method-attachListener\" rel=\"CKEDITOR.editable-method-attachListener\" class=\"docClass\">CKEDITOR.editable.attachListener</a> is a convenient\nway to attach listeners that will be detached on <a href=\"#!/api/CKEDITOR.editor-event-contentDomUnload\" rel=\"CKEDITOR.editor-event-contentDomUnload\" class=\"docClass\">contentDomUnload</a>.</p>\n\n<pre><code>editor.on( 'contentDom', function() {\n    var editable = editor.editable();\n\n    editable.attachListener( editable, 'click', function() {\n        console.log( 'The editable was clicked.' );\n    });\n});\n</code></pre>\n","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>This editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"}],"id":"event-contentDom","owner":"CKEDITOR.editor","short_doc":"Event fired when the editor content (its DOM structure) is ready. ..."},{"tagname":"event","name":"contentDomInvalidated","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1793}],"doc":"<p>Event fired when the content DOM changes and some of the references as well as\nthe native DOM event listeners could be lost.\nThis event is useful when it is important to keep track of references\nto elements in the editable content from code.</p>\n","since":"4.3","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>This editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"}],"id":"event-contentDomInvalidated","owner":"CKEDITOR.editor","short_doc":"Event fired when the content DOM changes and some of the references as well as\nthe native DOM event listeners could b..."},{"tagname":"event","name":"contentDomUnload","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1785}],"doc":"<p>Event fired before the content DOM structure is destroyed.\nSee <a href=\"#!/api/CKEDITOR.editor-event-contentDom\" rel=\"CKEDITOR.editor-event-contentDom\" class=\"docClass\">contentDom</a> documentation for more details.</p>\n","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>This editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"}],"id":"event-contentDomUnload","owner":"CKEDITOR.editor","short_doc":"Event fired before the content DOM structure is destroyed. ..."},{"tagname":"event","name":"customConfigLoaded","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1599}],"doc":"<p>Fired when the custom configuration file is loaded, before the final\nconfiguration initialization.</p>\n\n<p>Custom configuration files can be loaded thorugh the\n<a href=\"#!/api/CKEDITOR.config-cfg-customConfig\" rel=\"CKEDITOR.config-cfg-customConfig\" class=\"docClass\">CKEDITOR.config.customConfig</a> setting. Several files can be loaded\nby changing this setting.</p>\n","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>This editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"}],"id":"event-customConfigLoaded","owner":"CKEDITOR.editor","short_doc":"Fired when the custom configuration file is loaded, before the final\nconfiguration initialization. ..."},{"tagname":"event","name":"dataFiltered","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/filter.js","linenr":2269}],"doc":"<p>This event is fired when <a href=\"#!/api/CKEDITOR.filter\" rel=\"CKEDITOR.filter\" class=\"docClass\">CKEDITOR.filter</a> has stripped some\ncontent from the data that was loaded (e.g. by <a href=\"#!/api/CKEDITOR.editor-method-setData\" rel=\"CKEDITOR.editor-method-setData\" class=\"docClass\">setData</a>\nmethod or in the source mode) or inserted (e.g. when pasting or using the\n<a href=\"#!/api/CKEDITOR.editor-method-insertHtml\" rel=\"CKEDITOR.editor-method-insertHtml\" class=\"docClass\">insertHtml</a> method).</p>\n\n<p>This event is useful when testing whether the <a href=\"#!/api/CKEDITOR.config-cfg-allowedContent\" rel=\"CKEDITOR.config-cfg-allowedContent\" class=\"docClass\">CKEDITOR.config.allowedContent</a>\nsetting is sufficient and correct for a system that is migrating to CKEditor 4.1\n(where the <a href=\"#!/guide/dev_advanced_content_filter\">Advanced Content Filter</a> was introduced).</p>\n","since":"4.1","owner":"CKEDITOR.editor","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>This editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"}],"id":"event-dataFiltered","short_doc":"This event is fired when CKEDITOR.filter has stripped some\ncontent from the data that was loaded (e.g. ..."},{"tagname":"event","name":"dataReady","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1677}],"doc":"<p>Fired as an indicator of the editor data loading. It may be the result of\ncalling <a href=\"#!/api/CKEDITOR.editor-method-setData\" rel=\"CKEDITOR.editor-method-setData\" class=\"docClass\">setData</a> explicitly or an internal\neditor function, like the editor editing mode switching (move to Source and back).</p>\n","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>This editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"}],"id":"event-dataReady","owner":"CKEDITOR.editor","short_doc":"Fired as an indicator of the editor data loading. ..."},{"tagname":"event","name":"destroy","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1618}],"doc":"<p>Fired when this editor instance is destroyed. The editor at this\npoint is not usable and this event should be used to perform the clean-up\nin any plugin.</p>\n","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>This editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"}],"id":"event-destroy","owner":"CKEDITOR.editor","short_doc":"Fired when this editor instance is destroyed. ..."},{"tagname":"event","name":"doubleclick","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editable.js","linenr":2255}],"doc":"<p>Event fired when the user double-clicks in the editable area.\nThe event allows to open a dialog window for a clicked element in a convenient way:</p>\n\n<pre><code>editor.on( 'doubleclick', function( evt ) {\n    var element = evt.data.element;\n\n    if ( element.is( 'table' ) )\n        evt.data.dialog = 'tableProperties';\n} );\n</code></pre>\n\n<p><strong>Note:</strong> To handle double-click on a widget use CKEDITOR.plugins.widget.doubleclick.</p>\n","params":[{"tagname":"params","name":"data","doc":"\n","properties":[{"tagname":"params","type":"CKEDITOR.dom.element","name":"element","doc":"<p>The double-clicked element.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.dom.element\" rel=\"CKEDITOR.dom.element\" class=\"docClass\">CKEDITOR.dom.element</a>"},{"tagname":"params","type":"String","name":"dialog","doc":"<p>The dialog window to be opened. If set by the listener,\nthe specified dialog window will be opened.</p>\n","html_type":"String"}],"type":"Object","html_type":"Object"}],"owner":"CKEDITOR.editor","id":"event-doubleclick","short_doc":"Event fired when the user double-clicks in the editable area. ..."},{"tagname":"event","name":"focus","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/focusmanager.js","linenr":246}],"doc":"<p>Fired when the editor instance receives the input focus.</p>\n\n<pre><code>editor.on( 'focus', function( e ) {\n    alert( 'The editor named ' + e.editor.name + ' is now focused' );\n} );\n</code></pre>\n","owner":"CKEDITOR.editor","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>The editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"}],"id":"event-focus","short_doc":"Fired when the editor instance receives the input focus. ..."},{"tagname":"event","name":"getData","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1649}],"doc":"<p>Event fired before the <a href=\"#!/api/CKEDITOR.editor-method-getData\" rel=\"CKEDITOR.editor-method-getData\" class=\"docClass\">getData</a> call returns allowing additional manipulation.</p>\n","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>This editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"},{"tagname":"params","name":"data","doc":"\n","properties":[{"tagname":"params","type":"String","name":"dataValue","doc":"<p>The data that will be returned.</p>\n","html_type":"String"}],"type":"Object","html_type":"Object"}],"id":"event-getData","owner":"CKEDITOR.editor","short_doc":"Event fired before the getData call returns allowing additional manipulation. ..."},{"tagname":"event","name":"getSnapshot","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1634}],"doc":"<p>Internal event to perform the <a href=\"#!/api/CKEDITOR.editor-method-getSnapshot\" rel=\"CKEDITOR.editor-method-getSnapshot\" class=\"docClass\">getSnapshot</a> call.</p>\n","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>This editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"}],"id":"event-getSnapshot","owner":"CKEDITOR.editor","short_doc":"Internal event to perform the getSnapshot call. ..."},{"tagname":"event","name":"insertElement","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1721}],"doc":"<p>Internal event to perform the <a href=\"#!/api/CKEDITOR.editor-method-insertElement\" rel=\"CKEDITOR.editor-method-insertElement\" class=\"docClass\">insertElement</a> call.</p>\n","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>This editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"},{"tagname":"params","type":"CKEDITOR.dom.element","name":"data","doc":"<p>The element to insert.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.dom.element\" rel=\"CKEDITOR.dom.element\" class=\"docClass\">CKEDITOR.dom.element</a>"}],"id":"event-insertElement","owner":"CKEDITOR.editor","short_doc":"Internal event to perform the insertElement call. ..."},{"tagname":"event","name":"insertHtml","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1703}],"doc":"<p>Internal event to perform the <a href=\"#!/api/CKEDITOR.editor-method-insertHtml\" rel=\"CKEDITOR.editor-method-insertHtml\" class=\"docClass\">insertHtml</a> call.</p>\n","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>This editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"},{"tagname":"params","name":"data","doc":"\n","properties":[{"tagname":"params","type":"String","name":"mode","doc":"<p>The mode in which the data is inserted (see <a href=\"#!/api/CKEDITOR.editor-method-insertHtml\" rel=\"CKEDITOR.editor-method-insertHtml\" class=\"docClass\">insertHtml</a>).</p>\n","html_type":"String"},{"tagname":"params","type":"String","name":"dataValue","doc":"<p>The HTML code to insert.</p>\n","html_type":"String"}],"type":"Object","html_type":"Object"}],"id":"event-insertHtml","owner":"CKEDITOR.editor","short_doc":"Internal event to perform the insertHtml call. ..."},{"tagname":"event","name":"insertText","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1713}],"doc":"<p>Internal event to perform the <a href=\"#!/api/CKEDITOR.editor-method-insertText\" rel=\"CKEDITOR.editor-method-insertText\" class=\"docClass\">insertText</a> call.</p>\n","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>This editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"},{"tagname":"params","type":"String","name":"data","doc":"<p>The text to insert.</p>\n","html_type":"String"}],"id":"event-insertText","owner":"CKEDITOR.editor","short_doc":"Internal event to perform the insertText call. ..."},{"tagname":"event","name":"instanceReady","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1686}],"doc":"<p>Fired when the CKEDITOR instance is completely created, fully initialized\nand ready for interaction.</p>\n","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>This editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"}],"id":"event-instanceReady","owner":"CKEDITOR.editor","short_doc":"Fired when the CKEDITOR instance is completely created, fully initialized\nand ready for interaction. ..."},{"tagname":"event","name":"key","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/keystrokehandler.js","linenr":143}],"doc":"<p>Fired when any keyboard key (or a combination thereof) is pressed in the editing area.</p>\n\n<pre><code>editor.on( 'key', function( evt ) {\n    if ( evt.data.keyCode == <a href=\"#!/api/CKEDITOR-property-CTRL\" rel=\"CKEDITOR-property-CTRL\" class=\"docClass\">CKEDITOR.CTRL</a> + 90 ) {\n        // Do something...\n\n        // Cancel the event, so other listeners will not be executed and\n        // the keydown's default behavior will be prevented.\n        evt.cancel();\n    }\n} );\n</code></pre>\n\n<p>Usually you will want to use the <a href=\"#!/api/CKEDITOR.editor-method-setKeystroke\" rel=\"CKEDITOR.editor-method-setKeystroke\" class=\"docClass\">setKeystroke</a> method or\nthe <a href=\"#!/api/CKEDITOR.config-cfg-keystrokes\" rel=\"CKEDITOR.config-cfg-keystrokes\" class=\"docClass\">CKEDITOR.config.keystrokes</a> option to attach a keystroke to some <a href=\"#!/api/CKEDITOR.command\" rel=\"CKEDITOR.command\" class=\"docClass\">command</a>.\nKey event listeners are usuful when some action should be executed conditionally, based\nfor example on precise selection location.</p>\n","owner":"CKEDITOR.editor","params":[{"tagname":"params","name":"data","doc":"\n","properties":[{"tagname":"params","type":"Number","name":"keyCode","doc":"<p>A number representing the key code (or a combination thereof).\nIt is the sum of the current key code and the <a href=\"#!/api/CKEDITOR-property-CTRL\" rel=\"CKEDITOR-property-CTRL\" class=\"docClass\">CKEDITOR.CTRL</a>, <a href=\"#!/api/CKEDITOR-property-SHIFT\" rel=\"CKEDITOR-property-SHIFT\" class=\"docClass\">CKEDITOR.SHIFT</a>\nand <a href=\"#!/api/CKEDITOR-property-ALT\" rel=\"CKEDITOR-property-ALT\" class=\"docClass\">CKEDITOR.ALT</a> constants, if those are pressed.</p>\n","html_type":"Number"},{"tagname":"params","type":"CKEDITOR.dom.event","name":"domEvent","doc":"<p>A <code>keydown</code> DOM event instance. Available since CKEditor 4.4.1.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.dom.event\" rel=\"CKEDITOR.dom.event\" class=\"docClass\">CKEDITOR.dom.event</a>"}],"type":"Object","html_type":"Object"},{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>This editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"}],"id":"event-key","short_doc":"Fired when any keyboard key (or a combination thereof) is pressed in the editing area. ..."},{"tagname":"event","name":"langLoaded","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1547}],"doc":"<p>Fired when the language is loaded into the editor instance.</p>\n","since":"3.6.1","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>This editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"}],"id":"event-langLoaded","owner":"CKEDITOR.editor","short_doc":"Fired when the language is loaded into the editor instance. ..."},{"tagname":"event","name":"loadSnapshot","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1641}],"doc":"<p>Internal event to perform the <a href=\"#!/api/CKEDITOR.editor-method-loadSnapshot\" rel=\"CKEDITOR.editor-method-loadSnapshot\" class=\"docClass\">loadSnapshot</a> call.</p>\n","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>This editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"},{"tagname":"params","type":"String","name":"data","doc":"<p>The data that will be used.</p>\n","html_type":"String"}],"id":"event-loadSnapshot","owner":"CKEDITOR.editor","short_doc":"Internal event to perform the loadSnapshot call. ..."},{"tagname":"event","name":"loaded","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1694}],"doc":"<p>Fired when editor components (configuration, languages and plugins) are fully\nloaded and initialized. However, the editor will be fully ready to for interaction\non <a href=\"#!/api/CKEDITOR.editor-event-instanceReady\" rel=\"CKEDITOR.editor-event-instanceReady\" class=\"docClass\">instanceReady</a>.</p>\n","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>This editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"}],"id":"event-loaded","owner":"CKEDITOR.editor","short_doc":"Fired when editor components (configuration, languages and plugins) are fully\nloaded and initialized. ..."},{"tagname":"event","name":"mode","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/creators/themedui.js","linenr":505}],"doc":"<p>Fired after setting the editing mode. See also <a href=\"#!/api/CKEDITOR.editor-event-beforeSetMode\" rel=\"CKEDITOR.editor-event-beforeSetMode\" class=\"docClass\">beforeSetMode</a> and <a href=\"#!/api/CKEDITOR.editor-event-beforeModeUnload\" rel=\"CKEDITOR.editor-event-beforeModeUnload\" class=\"docClass\">beforeModeUnload</a></p>\n","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>This editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"}],"id":"event-mode","owner":"CKEDITOR.editor","short_doc":"Fired after setting the editing mode. ..."},{"tagname":"event","name":"pluginsLoaded","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1555}],"doc":"<p>Fired when all plugins are loaded and initialized into the editor instance.</p>\n","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>This editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"}],"id":"event-pluginsLoaded","owner":"CKEDITOR.editor","short_doc":"Fired when all plugins are loaded and initialized into the editor instance. ..."},{"tagname":"event","name":"readOnly","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1729}],"doc":"<p>Event fired after the <a href=\"#!/api/CKEDITOR.editor-property-readOnly\" rel=\"CKEDITOR.editor-property-readOnly\" class=\"docClass\">readOnly</a> property changes.</p>\n","since":"3.6","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>This editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"}],"id":"event-readOnly","owner":"CKEDITOR.editor","short_doc":"Event fired after the readOnly property changes. ..."},{"tagname":"event","name":"required","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/creators/themedui.js","linenr":512}],"doc":"<p>Fired when the editor (replacing a <code>&lt;textarea&gt;</code> which has a <code>required</code> attribute) is empty during form submission.</p>\n\n<p>This event replaces native required fields validation that the browsers cannot\nperform when CKEditor replaces <code>&lt;textarea&gt;</code> elements.</p>\n\n<p>You can cancel this event to prevent the page from submitting data.</p>\n\n<pre><code>editor.on( 'required', function( evt ) {\n    alert( 'Article content is required.' );\n    evt.cancel();\n} );\n</code></pre>\n","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>This editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"}],"id":"event-required","owner":"CKEDITOR.editor","short_doc":"Fired when the editor (replacing a &lt;textarea&gt; which has a required attribute) is empty during form submission. ..."},{"tagname":"event","name":"resize","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/creators/themedui.js","linenr":479}],"doc":"<p>Fired after the editor instance is resized through\nthe <a href=\"#!/api/CKEDITOR.editor-method-resize\" rel=\"CKEDITOR.editor-method-resize\" class=\"docClass\">CKEDITOR.resize</a> method.</p>\n","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>This editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"}],"id":"event-resize","owner":"CKEDITOR.editor","short_doc":"Fired after the editor instance is resized through\nthe CKEDITOR.resize method. ..."},{"tagname":"event","name":"selectionChange","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/selection.js","linenr":2123}],"doc":"<p>Fired when selection inside editor has been changed. Note that this event\nis fired only when selection's start element (container of a selecion start)\nchanges, not on every possible selection change. Thanks to that <code>selectionChange</code>\nis fired less frequently, but on every context\n(the <a href=\"#!/api/CKEDITOR.editor-method-elementPath\" rel=\"CKEDITOR.editor-method-elementPath\" class=\"docClass\">elements path</a> holding selection's start) change.</p>\n","owner":"CKEDITOR.editor","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>This editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"},{"tagname":"params","name":"data","doc":"\n","properties":[{"tagname":"params","type":"CKEDITOR.dom.selection","name":"selection","doc":"\n","html_type":"<a href=\"#!/api/CKEDITOR.dom.selection\" rel=\"CKEDITOR.dom.selection\" class=\"docClass\">CKEDITOR.dom.selection</a>"},{"tagname":"params","type":"CKEDITOR.dom.elementPath","name":"path","doc":"\n","html_type":"<a href=\"#!/api/CKEDITOR.dom.elementPath\" rel=\"CKEDITOR.dom.elementPath\" class=\"docClass\">CKEDITOR.dom.elementPath</a>"}],"type":"Object","html_type":"Object"}],"id":"event-selectionChange","short_doc":"Fired when selection inside editor has been changed. ..."},{"tagname":"event","name":"setData","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1658}],"doc":"<p>Event fired before the <a href=\"#!/api/CKEDITOR.editor-method-setData\" rel=\"CKEDITOR.editor-method-setData\" class=\"docClass\">setData</a> call is executed allowing additional manipulation.</p>\n","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>This editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"},{"tagname":"params","name":"data","doc":"\n","properties":[{"tagname":"params","type":"String","name":"dataValue","doc":"<p>The data that will be used.</p>\n","html_type":"String"}],"type":"Object","html_type":"Object"}],"id":"event-setData","owner":"CKEDITOR.editor","short_doc":"Event fired before the setData call is executed allowing additional manipulation. ..."},{"tagname":"event","name":"stylesSet","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1562}],"doc":"<p>Fired when the styles set is loaded. During the editor initialization\nphase the <a href=\"#!/api/CKEDITOR.editor-method-getStylesSet\" rel=\"CKEDITOR.editor-method-getStylesSet\" class=\"docClass\">getStylesSet</a> method returns only styles that\nare already loaded, which may not include e.g. styles parsed\nby the <code>stylesheetparser</code> plugin. Thus, to be notified when all\nstyles are ready, you can listen on this event.</p>\n","since":"4.1","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>This editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"},{"tagname":"params","type":"Array","name":"styles","doc":"<p>An array of styles definitions.</p>\n","html_type":"Array"}],"id":"event-stylesSet","owner":"CKEDITOR.editor","short_doc":"Fired when the styles set is loaded. ..."},{"tagname":"event","name":"template","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/editor.js","linenr":1737}],"doc":"<p>Event fired when a UI template is added to the editor instance. It makes\nit possible to bring customizations to the template source.</p>\n","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>This editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"},{"tagname":"params","name":"data","doc":"\n","properties":[{"tagname":"params","type":"String","name":"name","doc":"<p>The template name.</p>\n","html_type":"String"},{"tagname":"params","type":"String","name":"source","doc":"<p>The source data for this template.</p>\n","html_type":"String"}],"type":"Object","html_type":"Object"}],"id":"event-template","owner":"CKEDITOR.editor","short_doc":"Event fired when a UI template is added to the editor instance. ..."},{"tagname":"event","name":"toDataFormat","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/htmldataprocessor.js","linenr":994}],"doc":"<p>This event is fired when <a href=\"#!/api/CKEDITOR.htmlDataProcessor\" rel=\"CKEDITOR.htmlDataProcessor\" class=\"docClass\">CKEDITOR.htmlDataProcessor</a> is converting\ninternal HTML to output data HTML.</p>\n\n<p>By adding listeners with different priorities it is possible\nto process input HTML on different stages:</p>\n\n<ul>\n<li>1-4: Data is available in the original string format.</li>\n<li>5: Data is initially filtered with regexp patterns and parsed to\n  <a href=\"#!/api/CKEDITOR.htmlParser.fragment\" rel=\"CKEDITOR.htmlParser.fragment\" class=\"docClass\">CKEDITOR.htmlParser.fragment</a> <a href=\"#!/api/CKEDITOR.htmlParser.element\" rel=\"CKEDITOR.htmlParser.element\" class=\"docClass\">CKEDITOR.htmlParser.element</a>.</li>\n<li>5-9: Data is available in the parsed format, but <a href=\"#!/api/CKEDITOR.htmlDataProcessor-property-htmlFilter\" rel=\"CKEDITOR.htmlDataProcessor-property-htmlFilter\" class=\"docClass\">CKEDITOR.htmlDataProcessor.htmlFilter</a>\n  is not applied yet.</li>\n<li>10: Data is filtered with <a href=\"#!/api/CKEDITOR.htmlDataProcessor-property-htmlFilter\" rel=\"CKEDITOR.htmlDataProcessor-property-htmlFilter\" class=\"docClass\">CKEDITOR.htmlDataProcessor.htmlFilter</a>.</li>\n<li>11: Data is filtered with the {<a href=\"#!/api/CKEDITOR.filter\" rel=\"CKEDITOR.filter\" class=\"docClass\">CKEDITOR.filter</a> content filter} (on output the content filter makes\n only transformations, without filtering).</li>\n<li>10-14: Data is available in the parsed format and <a href=\"#!/api/CKEDITOR.htmlDataProcessor-property-htmlFilter\" rel=\"CKEDITOR.htmlDataProcessor-property-htmlFilter\" class=\"docClass\">CKEDITOR.htmlDataProcessor.htmlFilter</a>\n  has already been applied.</li>\n<li>15: Data is written back to an HTML string.</li>\n<li>15-*: Data is available in an HTML string.</li>\n</ul>\n\n\n<p>For example to be able to process parsed and already processed data add listener this way:</p>\n\n<pre><code>editor.on( 'toDataFormat', function( evt) {\n    evt.data.dataValue; // -&gt; <a href=\"#!/api/CKEDITOR.htmlParser.fragment\" rel=\"CKEDITOR.htmlParser.fragment\" class=\"docClass\">CKEDITOR.htmlParser.fragment</a> instance\n}, null, null, 12 );\n</code></pre>\n","since":"4.1","owner":"CKEDITOR.editor","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>This editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"},{"tagname":"params","name":"data","doc":"\n","properties":[{"tagname":"params","type":"String/CKEDITOR.htmlParser.fragment/CKEDITOR.htmlParser.element","name":"dataValue","doc":"<p>Output data to be prepared.</p>\n","html_type":"String/<a href=\"#!/api/CKEDITOR.htmlParser.fragment\" rel=\"CKEDITOR.htmlParser.fragment\" class=\"docClass\">CKEDITOR.htmlParser.fragment</a>/<a href=\"#!/api/CKEDITOR.htmlParser.element\" rel=\"CKEDITOR.htmlParser.element\" class=\"docClass\">CKEDITOR.htmlParser.element</a>"},{"tagname":"params","type":"String","name":"context","doc":"<p>See <a href=\"#!/api/CKEDITOR.htmlDataProcessor-method-toDataFormat\" rel=\"CKEDITOR.htmlDataProcessor-method-toDataFormat\" class=\"docClass\">CKEDITOR.htmlDataProcessor.toDataFormat</a> The <code>context</code> argument.</p>\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"filter","doc":"<p>See <a href=\"#!/api/CKEDITOR.htmlDataProcessor-method-toDataFormat\" rel=\"CKEDITOR.htmlDataProcessor-method-toDataFormat\" class=\"docClass\">CKEDITOR.htmlDataProcessor.toDataFormat</a> The <code>filter</code> argument.</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"enterMode","doc":"<p>See <a href=\"#!/api/CKEDITOR.htmlDataProcessor-method-toDataFormat\" rel=\"CKEDITOR.htmlDataProcessor-method-toDataFormat\" class=\"docClass\">CKEDITOR.htmlDataProcessor.toDataFormat</a> The <code>enterMode</code> argument.</p>\n","html_type":"Boolean"}],"type":"Object","html_type":"Object"}],"id":"event-toDataFormat","short_doc":"This event is fired when CKEDITOR.htmlDataProcessor is converting\ninternal HTML to output data HTML. ..."},{"tagname":"event","name":"toHtml","autodetected":{},"files":[{"filename":"D:/_Projects/git/tern.jsduck/ckeditor-dev-4.4.7/core/htmldataprocessor.js","linenr":956}],"doc":"<p>This event is fired by the <a href=\"#!/api/CKEDITOR.htmlDataProcessor\" rel=\"CKEDITOR.htmlDataProcessor\" class=\"docClass\">CKEDITOR.htmlDataProcessor</a> when input HTML\nis to be purified by the <a href=\"#!/api/CKEDITOR.htmlDataProcessor-method-toHtml\" rel=\"CKEDITOR.htmlDataProcessor-method-toHtml\" class=\"docClass\">CKEDITOR.htmlDataProcessor.toHtml</a> method.</p>\n\n<p>By adding listeners with different priorities it is possible\nto process input HTML on different stages:</p>\n\n<ul>\n<li>1-4: Data is available in the original string format.</li>\n<li>5: Data is initially filtered with regexp patterns and parsed to\n  <a href=\"#!/api/CKEDITOR.htmlParser.fragment\" rel=\"CKEDITOR.htmlParser.fragment\" class=\"docClass\">CKEDITOR.htmlParser.fragment</a> <a href=\"#!/api/CKEDITOR.htmlParser.element\" rel=\"CKEDITOR.htmlParser.element\" class=\"docClass\">CKEDITOR.htmlParser.element</a>.</li>\n<li>5-9: Data is available in the parsed format, but <a href=\"#!/api/CKEDITOR.htmlDataProcessor-property-dataFilter\" rel=\"CKEDITOR.htmlDataProcessor-property-dataFilter\" class=\"docClass\">CKEDITOR.htmlDataProcessor.dataFilter</a>\n  is not applied yet.</li>\n<li>6: Data is filtered with the {<a href=\"#!/api/CKEDITOR.filter\" rel=\"CKEDITOR.filter\" class=\"docClass\">CKEDITOR.filter</a> content filter}.</li>\n<li>10: Data is processed with <a href=\"#!/api/CKEDITOR.htmlDataProcessor-property-dataFilter\" rel=\"CKEDITOR.htmlDataProcessor-property-dataFilter\" class=\"docClass\">CKEDITOR.htmlDataProcessor.dataFilter</a>.</li>\n<li>10-14: Data is available in the parsed format and <a href=\"#!/api/CKEDITOR.htmlDataProcessor-property-dataFilter\" rel=\"CKEDITOR.htmlDataProcessor-property-dataFilter\" class=\"docClass\">CKEDITOR.htmlDataProcessor.dataFilter</a>\n  has already been applied.</li>\n<li>15: Data is written back to an HTML string.</li>\n<li>15-*: Data is available in an HTML string.</li>\n</ul>\n\n\n<p>For example to be able to process parsed, but not yet filtered data add listener this way:</p>\n\n<pre><code>editor.on( 'toHtml', function( evt) {\n    evt.data.dataValue; // -&gt; <a href=\"#!/api/CKEDITOR.htmlParser.fragment\" rel=\"CKEDITOR.htmlParser.fragment\" class=\"docClass\">CKEDITOR.htmlParser.fragment</a> instance\n}, null, null, 7 );\n</code></pre>\n","since":"4.1","owner":"CKEDITOR.editor","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>This editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"},{"tagname":"params","name":"data","doc":"\n","properties":[{"tagname":"params","type":"String/CKEDITOR.htmlParser.fragment/CKEDITOR.htmlParser.element","name":"dataValue","doc":"<p>Input data to be purified.</p>\n","html_type":"String/<a href=\"#!/api/CKEDITOR.htmlParser.fragment\" rel=\"CKEDITOR.htmlParser.fragment\" class=\"docClass\">CKEDITOR.htmlParser.fragment</a>/<a href=\"#!/api/CKEDITOR.htmlParser.element\" rel=\"CKEDITOR.htmlParser.element\" class=\"docClass\">CKEDITOR.htmlParser.element</a>"},{"tagname":"params","type":"String","name":"context","doc":"<p>See <a href=\"#!/api/CKEDITOR.htmlDataProcessor-method-toHtml\" rel=\"CKEDITOR.htmlDataProcessor-method-toHtml\" class=\"docClass\">CKEDITOR.htmlDataProcessor.toHtml</a> The <code>context</code> argument.</p>\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"fixForBody","doc":"<p>See <a href=\"#!/api/CKEDITOR.htmlDataProcessor-method-toHtml\" rel=\"CKEDITOR.htmlDataProcessor-method-toHtml\" class=\"docClass\">CKEDITOR.htmlDataProcessor.toHtml</a> The <code>fixForBody</code> argument.</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"dontFilter","doc":"<p>See <a href=\"#!/api/CKEDITOR.htmlDataProcessor-method-toHtml\" rel=\"CKEDITOR.htmlDataProcessor-method-toHtml\" class=\"docClass\">CKEDITOR.htmlDataProcessor.toHtml</a> The <code>dontFilter</code> argument.</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"filter","doc":"<p>See <a href=\"#!/api/CKEDITOR.htmlDataProcessor-method-toHtml\" rel=\"CKEDITOR.htmlDataProcessor-method-toHtml\" class=\"docClass\">CKEDITOR.htmlDataProcessor.toHtml</a> The <code>filter</code> argument.</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"enterMode","doc":"<p>See <a href=\"#!/api/CKEDITOR.htmlDataProcessor-method-toHtml\" rel=\"CKEDITOR.htmlDataProcessor-method-toHtml\" class=\"docClass\">CKEDITOR.htmlDataProcessor.toHtml</a> The <code>enterMode</code> argument.</p>\n","html_type":"Boolean"}],"type":"Object","html_type":"Object"}],"id":"event-toHtml","short_doc":"This event is fired by the CKEDITOR.htmlDataProcessor when input HTML\nis to be purified by the CKEDITOR.htmlDataProce..."}],"alternateClassNames":[],"aliases":{},"id":"class-CKEDITOR.editor","extends":null,"singleton":null,"private":null,"mixins":["CKEDITOR.event"],"requires":[],"uses":[],"short_doc":"Represents an editor instance. ..."}