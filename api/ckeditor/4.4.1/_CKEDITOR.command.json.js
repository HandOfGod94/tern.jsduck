var CKEditorApi = {"tagname":"class","name":"CKEDITOR.command","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/command.js","linenr":6}],"doc":"<p>Represents a command that can be executed on an editor instance.</p>\n\n<pre><code>var command = new <a href=\"#!/api/CKEDITOR.command\" rel=\"CKEDITOR.command\" class=\"docClass\">CKEDITOR.command</a>( editor, {\n    exec: function( editor ) {\n        alert( editor.document.getBody().getHtml() );\n    }\n} );\n</code></pre>\n","mixins":["CKEDITOR.event"],"members":[{"tagname":"property","name":"contextSensitive","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"readonly":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/command.js","linenr":142}],"doc":"<p>Indicates that this command is sensible to the selection context.\nIf <code>true</code>, the <a href=\"#!/api/CKEDITOR.command-method-refresh\" rel=\"CKEDITOR.command-method-refresh\" class=\"docClass\">refresh</a> method will be\ncalled for this command on the <a href=\"#!/api/CKEDITOR.editor-event-selectionChange\" rel=\"CKEDITOR.editor-event-selectionChange\" class=\"docClass\">CKEDITOR.editor.selectionChange</a> event.</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-contextSensitive","owner":"CKEDITOR.command","short_doc":"Indicates that this command is sensible to the selection context. ...","html_type":"Boolean"},{"tagname":"property","name":"editorFocus","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"readonly":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/command.js","linenr":131}],"doc":"<p>Indicates that the editor will get the focus before executing\nthe command.</p>\n\n<pre><code>// Do not force the editor to have focus when executing the command.\ncommand.editorFocus = false;\n</code></pre>\n","type":"Boolean","default":"true","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-editorFocus","owner":"CKEDITOR.command","short_doc":"Indicates that the editor will get the focus before executing\nthe command. ...","html_type":"Boolean"},{"tagname":"property","name":"modes","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/command.js","linenr":116}],"doc":"<p>The editor modes within which the command can be executed. The\nexecution will have no action if the current mode is not listed\nin this property.</p>\n\n<pre><code>// Enable the command in both WYSIWYG and Source modes.\ncommand.modes = { wysiwyg:1,source:1 };\n\n// Enable the command in Source mode only.\ncommand.modes = { source:1 };\n</code></pre>\n\n<p>@see <a href=\"#!/api/CKEDITOR.editor-property-mode\" rel=\"CKEDITOR.editor-property-mode\" class=\"docClass\">CKEDITOR.editor.mode</a></p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"type":"Object","default":"{wysiwyg: 1}","readonly":null,"id":"property-modes","owner":"CKEDITOR.command","short_doc":"The editor modes within which the command can be executed. ...","html_type":"Object"},{"tagname":"property","name":"previousState","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/command.js","linenr":248}],"doc":"<p>Indicates the previous command state.</p>\n\n<pre><code>alert( command.previousState );@see <a href=\"#!/api/CKEDITOR.command-property-state\" rel=\"CKEDITOR.command-property-state\" class=\"docClass\">state</a>\n</code></pre>\n","type":"Number","default":null,"properties":null,"id":"property-previousState","owner":"CKEDITOR.command","short_doc":"Indicates the previous command state. ...","html_type":"Number"},{"tagname":"property","name":"state","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"readonly":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/command.js","linenr":151}],"doc":"<p>Indicates the editor state. Possible values are:</p>\n\n<ul>\n<li><a href=\"#!/api/CKEDITOR-property-TRISTATE_DISABLED\" rel=\"CKEDITOR-property-TRISTATE_DISABLED\" class=\"docClass\">CKEDITOR.TRISTATE_DISABLED</a>: the command is\n  disabled. It's execution will have no effect. Same as <a href=\"#!/api/CKEDITOR.command-method-disable\" rel=\"CKEDITOR.command-method-disable\" class=\"docClass\">disable</a>.</li>\n<li><a href=\"#!/api/CKEDITOR-property-TRISTATE_ON\" rel=\"CKEDITOR-property-TRISTATE_ON\" class=\"docClass\">CKEDITOR.TRISTATE_ON</a>: the command is enabled\n  and currently active in the editor (for context sensitive commands, for example).</li>\n<li><a href=\"#!/api/CKEDITOR-property-TRISTATE_OFF\" rel=\"CKEDITOR-property-TRISTATE_OFF\" class=\"docClass\">CKEDITOR.TRISTATE_OFF</a>: the command is enabled\n  and currently inactive in the editor (for context sensitive commands, for example).</li>\n</ul>\n\n\n<p>Do not set this property directly, using the <a href=\"#!/api/CKEDITOR.command-method-setState\" rel=\"CKEDITOR.command-method-setState\" class=\"docClass\">setState</a> method instead.</p>\n\n<pre><code>if ( command.state == <a href=\"#!/api/CKEDITOR-property-TRISTATE_DISABLED\" rel=\"CKEDITOR-property-TRISTATE_DISABLED\" class=\"docClass\">CKEDITOR.TRISTATE_DISABLED</a> )\n    alert( 'This command is disabled' );\n</code></pre>\n","type":"Number","default":"CKEDITOR.TRISTATE_DISABLED","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-state","owner":"CKEDITOR.command","short_doc":"Indicates the editor state. ...","html_type":"Number"},{"tagname":"property","name":"uiItems","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/command.js","linenr":24}],"doc":"<p>Lists UI items that are associated to this command. This list can be\nused to interact with the UI on command execution (by the execution code\nitself, for example).</p>\n\n<pre><code>alert( 'Number of UI items associated to this command: ' + command.uiItems.length );\n</code></pre>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"type":"Array","default":"[]","readonly":null,"id":"property-uiItems","owner":"CKEDITOR.command","short_doc":"Lists UI items that are associated to this command. ...","html_type":"Array"},{"tagname":"method","name":"constructor","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/command.js","linenr":6}],"doc":"<p>Creates a command class instance.</p>\n","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>The editor instance this command will be\nrelated to.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"},{"tagname":"params","type":"CKEDITOR.commandDefinition","name":"commandDefinition","doc":"<p>The command\ndefinition.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.commandDefinition\" rel=\"CKEDITOR.commandDefinition\" class=\"docClass\">CKEDITOR.commandDefinition</a>"}],"id":"method-constructor","owner":"CKEDITOR.command","return":{"type":"CKEDITOR.command","doc":"\n","html_type":"<a href=\"#!/api/CKEDITOR.command\" rel=\"CKEDITOR.command\" class=\"docClass\">CKEDITOR.command</a>"},"overrides":[{"name":"constructor","owner":"CKEDITOR.event","link":"<a href=\"#!/api/CKEDITOR.event-method-constructor\" rel=\"CKEDITOR.event-method-constructor\" class=\"docClass\">CKEDITOR.event.constructor</a>"}],"short_doc":"Creates a command class instance. ..."},{"tagname":"method","name":"capture","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/event.js","linenr":213}],"doc":"<p>Register event handler under the capturing stage on supported target.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-capture","owner":"CKEDITOR.event","short_doc":"Register event handler under the capturing stage on supported target. ..."},{"tagname":"method","name":"checkAllowed","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/command.js","linenr":98}],"doc":"<p>Checks whether this command is allowed by the active allowed\ncontent filter (<a href=\"#!/api/CKEDITOR.editor-property-activeFilter\" rel=\"CKEDITOR.editor-property-activeFilter\" class=\"docClass\">CKEDITOR.editor.activeFilter</a>). This means\nthat if command implements <a href=\"#!/api/CKEDITOR.feature\" rel=\"CKEDITOR.feature\" class=\"docClass\">CKEDITOR.feature</a> interface it will be tested\nby the <a href=\"#!/api/CKEDITOR.filter-method-checkFeature\" rel=\"CKEDITOR.filter-method-checkFeature\" class=\"docClass\">CKEDITOR.filter.checkFeature</a> method.</p>\n","since":"4.1","params":[{"tagname":"params","type":"Boolean","name":"noCache","optional":true,"doc":"<p>Skip cache for example due to active filter change. Since CKEditor 4.2.</p>\n","html_type":"Boolean"}],"return":{"type":"Boolean","name":"return","doc":"<p>Whether this command is allowed.</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-checkAllowed","owner":"CKEDITOR.command","short_doc":"Checks whether this command is allowed by the active allowed\ncontent filter (CKEDITOR.editor.activeFilter). ..."},{"tagname":"method","name":"define","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/event.js","linenr":84}],"doc":"<p>Predefine some intrinsic properties on a specific event name.</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"<p>The event name</p>\n","html_type":"String"},{"tagname":"params","name":"meta","doc":"\n","properties":[{"tagname":"params","name":"errorProof","default":"false","optional":true,"doc":"<p>Whether the event firing should catch error thrown from a per listener call.</p>\n"}],"type":"Object","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-define","owner":"CKEDITOR.event","short_doc":"Predefine some intrinsic properties on a specific event name. ..."},{"tagname":"method","name":"disable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/command.js","linenr":188}],"doc":"<p>Disables the command for execution. The command state (see\n<a href=\"#!/api/CKEDITOR.command-property-state\" rel=\"CKEDITOR.command-property-state\" class=\"docClass\">state</a>) will be set to <a href=\"#!/api/CKEDITOR-property-TRISTATE_DISABLED\" rel=\"CKEDITOR-property-TRISTATE_DISABLED\" class=\"docClass\">CKEDITOR.TRISTATE_DISABLED</a>.</p>\n\n<pre><code>command.disable();\ncommand.exec(); // \"false\" - Nothing happens.\n</code></pre>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["setState"],"id":"method-disable","owner":"CKEDITOR.command","short_doc":"Disables the command for execution. ..."},{"tagname":"method","name":"enable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/command.js","linenr":176}],"doc":"<p>Enables the command for execution. The command state (see\n<a href=\"#!/api/CKEDITOR.command-property-state\" rel=\"CKEDITOR.command-property-state\" class=\"docClass\">state</a>) available before disabling it is restored.</p>\n\n<pre><code>command.enable();\ncommand.exec(); // Execute the command.\n</code></pre>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["checkAllowed","setState"],"id":"method-enable","owner":"CKEDITOR.command","short_doc":"Enables the command for execution. ..."},{"tagname":"method","name":"exec","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/command.js","linenr":33}],"doc":"<p>Executes the command.</p>\n\n<pre><code>command.exec(); // The command gets executed.\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"data","optional":true,"doc":"<p>Any data to pass to the command. Depends on the\ncommand implementation and requirements.</p>\n","html_type":"Object"}],"return":{"type":"Boolean","name":"return","doc":"<p>A boolean indicating that the command has been successfully executed.</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["checkAllowed","fire"],"id":"method-exec","owner":"CKEDITOR.command","short_doc":"Executes the command. ..."},{"tagname":"method","name":"fire","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/event.js","linenr":223}],"doc":"<p>Fires an specific event in the object. All registered listeners are\ncalled at this point.</p>\n\n<pre><code>someObject.on( 'someEvent', function() { ... } );\nsomeObject.on( 'someEvent', function() { ... } );\nsomeObject.fire( 'someEvent' );             // Both listeners are called.\n\nsomeObject.on( 'someEvent', function( event ) {\n    alert( event.data );                    // 'Example'\n} );\nsomeObject.fire( 'someEvent', 'Example' );\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The event name to fire.</p>\n","html_type":"String"},{"tagname":"params","type":"Object","name":"data","optional":true,"doc":"<p>Data to be sent as the\n<a href=\"#!/api/CKEDITOR.eventInfo-property-data\" rel=\"CKEDITOR.eventInfo-property-data\" class=\"docClass\">CKEDITOR.eventInfo.data</a> when calling the listeners.</p>\n","html_type":"Object"},{"tagname":"params","type":"CKEDITOR.editor","name":"editor","optional":true,"doc":"<p>The editor instance to send as the\n<a href=\"#!/api/CKEDITOR.eventInfo-property-editor\" rel=\"CKEDITOR.eventInfo-property-editor\" class=\"docClass\">CKEDITOR.eventInfo.editor</a> when calling the listener.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"}],"return":{"type":"Boolean/Object","name":"return","doc":"<p>A boolean indicating that the event is to be\ncanceled, or data returned by one of the listeners.</p>\n","properties":null,"html_type":"Boolean/Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-fire","owner":"CKEDITOR.event","short_doc":"Fires an specific event in the object. ..."},{"tagname":"method","name":"fireOnce","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/event.js","linenr":313}],"doc":"<p>Fires an specific event in the object, releasing all listeners\nregistered to that event. The same listeners are not called again on\nsuccessive calls of it or of <a href=\"#!/api/CKEDITOR.event-method-fire\" rel=\"CKEDITOR.event-method-fire\" class=\"docClass\">fire</a>.</p>\n\n<pre><code>someObject.on( 'someEvent', function() { ... } );\nsomeObject.fire( 'someEvent' );         // Above listener called.\nsomeObject.fireOnce( 'someEvent' );     // Above listener called.\nsomeObject.fire( 'someEvent' );         // No listeners called.\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The event name to fire.</p>\n","html_type":"String"},{"tagname":"params","type":"Object","name":"data","optional":true,"doc":"<p>Data to be sent as the\n<a href=\"#!/api/CKEDITOR.eventInfo-property-data\" rel=\"CKEDITOR.eventInfo-property-data\" class=\"docClass\">CKEDITOR.eventInfo.data</a> when calling the listeners.</p>\n","html_type":"Object"},{"tagname":"params","type":"CKEDITOR.editor","name":"editor","optional":true,"doc":"<p>The editor instance to send as the\n<a href=\"#!/api/CKEDITOR.eventInfo-property-editor\" rel=\"CKEDITOR.eventInfo-property-editor\" class=\"docClass\">CKEDITOR.eventInfo.editor</a> when calling the listener.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"}],"return":{"type":"Boolean/Object","name":"return","doc":"<p>A booloan indicating that the event is to be\ncanceled, or data returned by one of the listeners.</p>\n","properties":null,"html_type":"Boolean/Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["fire"],"id":"method-fireOnce","owner":"CKEDITOR.event","short_doc":"Fires an specific event in the object, releasing all listeners\nregistered to that event. ..."},{"tagname":"method","name":"hasListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/event.js","linenr":370}],"doc":"<p>Checks if there is any listener registered to a given event.</p>\n\n<pre><code>var myListener = function() { ... };\nsomeObject.on( 'someEvent', myListener );\nalert( someObject.hasListeners( 'someEvent' ) );    // true\nalert( someObject.hasListeners( 'noEvent' ) );      // false\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The event name.</p>\n","html_type":"String"}],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-hasListeners","owner":"CKEDITOR.event","short_doc":"Checks if there is any listener registered to a given event. ..."},{"tagname":"method","name":"on","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/event.js","linenr":96}],"doc":"<p>Registers a listener to a specific event in the current object.</p>\n\n<pre><code>someObject.on( 'someEvent', function() {\n    alert( this == someObject );        // true\n} );\n\nsomeObject.on( 'someEvent', function() {\n    alert( this == anotherObject );     // true\n}, anotherObject );\n\nsomeObject.on( 'someEvent', function( event ) {\n    alert( event.listenerData );        // 'Example'\n}, null, 'Example' );\n\nsomeObject.on( 'someEvent', function() { ... } );                       // 2nd called\nsomeObject.on( 'someEvent', function() { ... }, null, null, 100 );      // 3rd called\nsomeObject.on( 'someEvent', function() { ... }, null, null, 1 );        // 1st called\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The event name to which listen.</p>\n","html_type":"String"},{"tagname":"params","type":"Function","name":"listenerFunction","doc":"<p>The function listening to the\nevent. A single <a href=\"#!/api/CKEDITOR.eventInfo\" rel=\"CKEDITOR.eventInfo\" class=\"docClass\">CKEDITOR.eventInfo</a> object instanced\nis passed to this function containing all the event data.</p>\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scopeObj","optional":true,"doc":"<p>The object used to scope the listener\ncall (the <code>this</code> object). If omitted, the current object is used.</p>\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"listenerData","optional":true,"doc":"<p>Data to be sent as the\n<a href=\"#!/api/CKEDITOR.eventInfo-property-listenerData\" rel=\"CKEDITOR.eventInfo-property-listenerData\" class=\"docClass\">CKEDITOR.eventInfo.listenerData</a> when calling the\nlistener.</p>\n","html_type":"Object"},{"tagname":"params","type":"Number","name":"priority","default":"10","optional":true,"doc":"<p>The listener priority. Lower priority\nlisteners are called first. Listeners with the same priority\nvalue are called in registration order.</p>\n","html_type":"Number"}],"return":{"type":"Object","name":"return","doc":"<p>An object containing the <code>removeListener</code>\nfunction, which can be used to remove the listener at any time.</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-on","owner":"CKEDITOR.event","short_doc":"Registers a listener to a specific event in the current object. ..."},{"tagname":"method","name":"once","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/event.js","linenr":191}],"doc":"<p>Similiar with <a href=\"#!/api/CKEDITOR.event-method-on\" rel=\"CKEDITOR.event-method-on\" class=\"docClass\">on</a> but the listener will be called only once upon the next event firing.</p>\n\n<p>@see <a href=\"#!/api/CKEDITOR.event-method-on\" rel=\"CKEDITOR.event-method-on\" class=\"docClass\">CKEDITOR.event.on</a></p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-once","owner":"CKEDITOR.event","short_doc":"Similiar with on but the listener will be called only once upon the next event firing. ..."},{"tagname":"method","name":"refresh","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/command.js","linenr":55}],"doc":"<p>Explicitly update the status of the command, by firing the <a href=\"#!/api/CKEDITOR.command-event-refresh\" rel=\"CKEDITOR.command-event-refresh\" class=\"docClass\">refresh</a> event,\nas well as invoke the <a href=\"#!/api/CKEDITOR.commandDefinition-method-refresh\" rel=\"CKEDITOR.commandDefinition-method-refresh\" class=\"docClass\">CKEDITOR.commandDefinition.refresh</a> method if defined, this method\nis to allow different parts of the editor code to contribute in command status resolution.</p>\n","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>The editor instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"},{"tagname":"params","type":"CKEDITOR.dom.elementPath","name":"path","doc":"\n","html_type":"<a href=\"#!/api/CKEDITOR.dom.elementPath\" rel=\"CKEDITOR.dom.elementPath\" class=\"docClass\">CKEDITOR.dom.elementPath</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["checkAllowed","disable","enable","fire"],"id":"method-refresh","owner":"CKEDITOR.command","short_doc":"Explicitly update the status of the command, by firing the refresh event,\nas well as invoke the CKEDITOR.commandDefin..."},{"tagname":"method","name":"removeAllListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/event.js","linenr":361}],"doc":"<p>Remove all existing listeners on this object, for cleanup purpose.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-removeAllListeners","owner":"CKEDITOR.event","short_doc":"Remove all existing listeners on this object, for cleanup purpose. ..."},{"tagname":"method","name":"removeListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/event.js","linenr":337}],"doc":"<p>Unregisters a listener function from being called at the specified\nevent. No errors are thrown if the listener has not been registered previously.</p>\n\n<pre><code>var myListener = function() { ... };\nsomeObject.on( 'someEvent', myListener );\nsomeObject.fire( 'someEvent' );                 // myListener called.\nsomeObject.removeListener( 'someEvent', myListener );\nsomeObject.fire( 'someEvent' );                 // myListener not called.\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The event name.</p>\n","html_type":"String"},{"tagname":"params","type":"Function","name":"listenerFunction","doc":"<p>The listener function to unregister.</p>\n","html_type":"Function"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-removeListener","owner":"CKEDITOR.event","short_doc":"Unregisters a listener function from being called at the specified\nevent. ..."},{"tagname":"method","name":"setState","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/command.js","linenr":199}],"doc":"<p>Sets the command state.</p>\n\n<pre><code>command.setState( <a href=\"#!/api/CKEDITOR-property-TRISTATE_ON\" rel=\"CKEDITOR-property-TRISTATE_ON\" class=\"docClass\">CKEDITOR.TRISTATE_ON</a> );\ncommand.exec(); // Execute the command.\ncommand.setState( <a href=\"#!/api/CKEDITOR-property-TRISTATE_DISABLED\" rel=\"CKEDITOR-property-TRISTATE_DISABLED\" class=\"docClass\">CKEDITOR.TRISTATE_DISABLED</a> );\ncommand.exec(); // 'false' - Nothing happens.\ncommand.setState( <a href=\"#!/api/CKEDITOR-property-TRISTATE_OFF\" rel=\"CKEDITOR-property-TRISTATE_OFF\" class=\"docClass\">CKEDITOR.TRISTATE_OFF</a> );\ncommand.exec(); // Execute the command.\n</code></pre>\n","params":[{"tagname":"params","type":"Number","name":"newState","doc":"<p>The new state. See <a href=\"#!/api/CKEDITOR.command-property-state\" rel=\"CKEDITOR.command-property-state\" class=\"docClass\">state</a>.</p>\n","html_type":"Number"}],"return":{"type":"Boolean","name":"return","doc":"<p>Returns <code>true</code> if the command state changed.</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["checkAllowed","fire"],"id":"method-setState","owner":"CKEDITOR.command","short_doc":"Sets the command state. ..."},{"tagname":"method","name":"toggleState","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/command.js","linenr":232}],"doc":"<p>Toggles the on/off (active/inactive) state of the command. This is\nmainly used internally by context sensitive commands.</p>\n\n<pre><code>command.toggleState();\n</code></pre>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["setState"],"id":"method-toggleState","owner":"CKEDITOR.command","short_doc":"Toggles the on/off (active/inactive) state of the command. ..."},{"tagname":"event","name":"refresh","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/command.js","linenr":268}],"doc":"<p>@todo</p>\n","params":[],"id":"event-refresh","owner":"CKEDITOR.command","short_doc":"@todo ..."},{"tagname":"event","name":"state","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/command.js","linenr":257}],"doc":"<p>Fired when the command state changes.</p>\n\n<pre><code>command.on( 'state', function() {\n    // Alerts the new state.\n    alert( this.state );\n} );\n</code></pre>\n","params":[],"id":"event-state","owner":"CKEDITOR.command","short_doc":"Fired when the command state changes. ..."}],"alternateClassNames":[],"aliases":{},"id":"class-CKEDITOR.command","short_doc":"Represents a command that can be executed on an editor instance. ..."}