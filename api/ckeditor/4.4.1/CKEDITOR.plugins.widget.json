{"tagname":"class","name":"CKEDITOR.plugins.widget","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":664}],"doc":"<p>An instance of a widget. Together with <a href=\"#!/api/CKEDITOR.plugins.widget.repository\" rel=\"CKEDITOR.plugins.widget.repository\" class=\"docClass\">CKEDITOR.plugins.widget.repository</a> these\ntwo classes constitute the core of the Widget System.</p>\n\n<p>Note that neither the repository nor the widget instances can be created by using their constructors.\nA repository instance is automatically set up by the Widget plugin and is accessible under\n<a href=\"#!/api/CKEDITOR.editor-property-widgets\" rel=\"CKEDITOR.editor-property-widgets\" class=\"docClass\">CKEDITOR.editor.widgets</a>, while widget instances are created and destroyed by the repository.</p>\n\n<p>To create a widget, first you need to <a href=\"#!/api/CKEDITOR.plugins.widget.repository-method-add\" rel=\"CKEDITOR.plugins.widget.repository-method-add\" class=\"docClass\">register</a> its\n<a href=\"#!/api/CKEDITOR.plugins.widget.definition\" rel=\"CKEDITOR.plugins.widget.definition\" class=\"docClass\">definition</a>:</p>\n\n<pre><code>editor.widgets.add( 'simplebox', {\n    upcast: function( element ) {\n        // Defines which elements will become widgets.\n        if ( element.hasClass( 'simplebox' ) )\n            return true;\n    },\n    init: function() {\n        // ...\n    }\n} );\n</code></pre>\n\n<p>Once the widget definition is registered, widgets will be automatically\ncreated when loading data:</p>\n\n<pre><code>editor.setData( '&lt;div class=\"simplebox\"&gt;foo&lt;/div&gt;', function() {\n    console.log( editor.widgets.instances ); // -&gt; An object containing one instance.\n} );\n</code></pre>\n\n<p>It is also possible to create instances during runtime by using a command\n(if a <a href=\"#!/api/CKEDITOR.plugins.widget.definition-property-template\" rel=\"CKEDITOR.plugins.widget.definition-property-template\" class=\"docClass\">CKEDITOR.plugins.widget.definition.template</a> property was defined):</p>\n\n<pre><code>// You can execute an automatically defined command to\n// insert a new simplebox widget or edit the one currently focused.\neditor.execCommand( 'simplebox' );\n</code></pre>\n\n<p>Or in a completely custom way:</p>\n\n<pre><code>var element = editor.createElement( 'div' );\neditor.insertElement( element );\nvar widget = editor.widgets.initOn( element, 'simplebox' );\n</code></pre>\n","since":"4.3","mixins":["CKEDITOR.event"],"extends":"CKEDITOR.plugins.widget.definition","members":[{"tagname":"property","name":"allowedContent","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/filter.js","linenr":2362}],"doc":"<p>HTML code that can be generated by this feature.</p>\n\n<p>For example a basic image feature (image button displaying the image dialog window)\nmay allow <code>'img[!src,alt,width,height]'</code>.</p>\n\n<p>During the feature activation this value is passed to <a href=\"#!/api/CKEDITOR.filter-method-allow\" rel=\"CKEDITOR.filter-method-allow\" class=\"docClass\">CKEDITOR.filter.allow</a>.</p>\n","type":"CKEDITOR.filter.allowedContentRules","default":"null","properties":null,"id":"property-allowedContent","owner":"CKEDITOR.feature","short_doc":"HTML code that can be generated by this feature. ...","html_type":"<a href=\"#!/api/CKEDITOR.filter.allowedContentRules\" rel=\"CKEDITOR.filter.allowedContentRules\" class=\"docClass\">CKEDITOR.filter.allowedContentRules</a>"},{"tagname":"property","name":"button","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":3551}],"doc":"<p>The label for the widget toolbar button.</p>\n\n<pre><code>editor.widgets.add( 'simplebox', {\n    button: 'Create a simple box'\n} );\n\neditor.widgets.add( 'simplebox', {\n    button: editor.lang.simplebox.title\n} );\n</code></pre>\n","type":"String","default":null,"properties":null,"id":"property-button","owner":"CKEDITOR.plugins.widget.definition","short_doc":"The label for the widget toolbar button. ...","html_type":"String"},{"tagname":"property","name":"contentForms","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/filter.js","linenr":2396}],"doc":"<p>Feature content forms to be registered in the <a href=\"#!/api/CKEDITOR.editor-property-filter\" rel=\"CKEDITOR.editor-property-filter\" class=\"docClass\">CKEDITOR.editor.filter</a>\nduring the feature activation.</p>\n\n<p>See <a href=\"#!/api/CKEDITOR.filter-method-addContentForms\" rel=\"CKEDITOR.filter-method-addContentForms\" class=\"docClass\">CKEDITOR.filter.addContentForms</a> for more details.</p>\n","default":"null","properties":null,"type":"Object","id":"property-contentForms","owner":"CKEDITOR.feature","short_doc":"Feature content forms to be registered in the CKEDITOR.editor.filter\nduring the feature activation. ...","html_type":"Object"},{"tagname":"property","name":"contentTransformations","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/filter.js","linenr":2405}],"doc":"<p>Transformations (usually for content generated by this feature, but not necessarily)\nthat will be registered in the <a href=\"#!/api/CKEDITOR.editor-property-filter\" rel=\"CKEDITOR.editor-property-filter\" class=\"docClass\">CKEDITOR.editor.filter</a> during the feature activation.</p>\n\n<p>See <a href=\"#!/api/CKEDITOR.filter-method-addTransformations\" rel=\"CKEDITOR.filter-method-addTransformations\" class=\"docClass\">CKEDITOR.filter.addTransformations</a> for more details.</p>\n","default":"null","properties":null,"type":"Object","id":"property-contentTransformations","owner":"CKEDITOR.feature","short_doc":"Transformations (usually for content generated by this feature, but not necessarily)\nthat will be registered in the C...","html_type":"Object"},{"tagname":"property","name":"data","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":761}],"doc":"<p>Widget's data object.</p>\n\n<p>The data can only be set by using the <a href=\"#!/api/CKEDITOR.plugins.widget-method-setData\" rel=\"CKEDITOR.plugins.widget-method-setData\" class=\"docClass\">setData</a> method.\nChanges made to the data fire the <a href=\"#!/api/CKEDITOR.plugins.widget-event-data\" rel=\"CKEDITOR.plugins.widget-event-data\" class=\"docClass\">data</a> event.</p>\n","readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"type":"Object","default":null,"id":"property-data","owner":"CKEDITOR.plugins.widget","overrides":[{"name":"data","owner":"CKEDITOR.plugins.widget.definition","link":"<a href=\"#!/api/CKEDITOR.plugins.widget.definition-property-data\" rel=\"CKEDITOR.plugins.widget.definition-property-data\" class=\"docClass\">CKEDITOR.plugins.widget.definition.data</a>"}],"short_doc":"Widget's data object. ...","html_type":"Object"},{"tagname":"property","name":"dataReady","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":771}],"doc":"<p>Indicates if a widget is data-ready. Set to <code>true</code> when data from all sources\n(<a href=\"#!/api/CKEDITOR.plugins.widget.definition-property-defaults\" rel=\"CKEDITOR.plugins.widget.definition-property-defaults\" class=\"docClass\">CKEDITOR.plugins.widget.definition.defaults</a>, set in the\n<a href=\"#!/api/CKEDITOR.plugins.widget-property-init\" rel=\"CKEDITOR.plugins.widget-property-init\" class=\"docClass\">init</a> method, loaded from the widget's element and startup data coming from the constructor)\nare finally loaded. This is immediately followed by the first <a href=\"#!/api/CKEDITOR.plugins.widget-event-data\" rel=\"CKEDITOR.plugins.widget-event-data\" class=\"docClass\">data</a>.</p>\n","readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"type":"Boolean","default":"false","id":"property-dataReady","owner":"CKEDITOR.plugins.widget","short_doc":"Indicates if a widget is data-ready. ...","html_type":"Boolean"},{"tagname":"property","name":"defaults","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":3490}],"doc":"<p>The data object which will be used to populate the data of a newly created widget.\nSee <a href=\"#!/api/CKEDITOR.plugins.widget-property-data\" rel=\"CKEDITOR.plugins.widget-property-data\" class=\"docClass\">CKEDITOR.plugins.widget.data</a>.</p>\n\n<pre><code>defaults: {\n    showCaption: true,\n    align: 'none'\n}\n</code></pre>\n","default":null,"properties":null,"type":"Object","id":"property-defaults","owner":"CKEDITOR.plugins.widget.definition","short_doc":"The data object which will be used to populate the data of a newly created widget. ...","html_type":"Object"},{"tagname":"property","name":"definition","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":821}],"doc":"<p>The widget definition from which this instance was created.</p>\n","readonly":true,"type":"CKEDITOR.plugins.widget.definition","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-definition","owner":"CKEDITOR.plugins.widget","html_type":"<a href=\"#!/api/CKEDITOR.plugins.widget.definition\" rel=\"CKEDITOR.plugins.widget.definition\" class=\"docClass\">CKEDITOR.plugins.widget.definition</a>"},{"tagname":"property","name":"dialog","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":3474}],"doc":"<p>The name of a dialog window which will be opened on <a href=\"#!/api/CKEDITOR.plugins.widget-method-edit\" rel=\"CKEDITOR.plugins.widget-method-edit\" class=\"docClass\">CKEDITOR.plugins.widget.edit</a>.\nIf not defined, then the <a href=\"#!/api/CKEDITOR.plugins.widget-method-edit\" rel=\"CKEDITOR.plugins.widget-method-edit\" class=\"docClass\">CKEDITOR.plugins.widget.edit</a> method will not perform any action and\nwidget's command will insert a new widget without opening a dialog window first.</p>\n","type":"String","default":null,"properties":null,"id":"property-dialog","owner":"CKEDITOR.plugins.widget.definition","short_doc":"The name of a dialog window which will be opened on CKEDITOR.plugins.widget.edit. ...","html_type":"String"},{"tagname":"property","name":"downcast","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":3404}],"doc":"<p>The function to be used to downcast this widget or\na name of the downcast option from the <a href=\"#!/api/CKEDITOR.plugins.widget.definition-property-downcasts\" rel=\"CKEDITOR.plugins.widget.definition-property-downcasts\" class=\"docClass\">downcasts</a> object.</p>\n\n<p>The downcast funciton will be executed in the <a href=\"#!/api/CKEDITOR.plugins.widget\" rel=\"CKEDITOR.plugins.widget\" class=\"docClass\">CKEDITOR.plugins.widget</a> context\nand with <code>widgetElement</code> (<a href=\"#!/api/CKEDITOR.htmlParser.element\" rel=\"CKEDITOR.htmlParser.element\" class=\"docClass\">CKEDITOR.htmlParser.element</a>) argument which is\nthe widget's main element.</p>\n\n<p>The function may return an instance of the <a href=\"#!/api/CKEDITOR.htmlParser.node\" rel=\"CKEDITOR.htmlParser.node\" class=\"docClass\">CKEDITOR.htmlParser.node</a> class if the widget\nneeds to be downcasted to a different node than the widget's main element.</p>\n","type":"String/Function","default":null,"properties":null,"id":"property-downcast","owner":"CKEDITOR.plugins.widget.definition","short_doc":"The function to be used to downcast this widget or\na name of the downcast option from the downcasts object. ...","html_type":"String/Function"},{"tagname":"property","name":"downcasts","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":3418}],"doc":"<p>The object containing functions which can be used to downcast this widget.\nOnly the one pointed by the <a href=\"#!/api/CKEDITOR.plugins.widget.definition-property-downcast\" rel=\"CKEDITOR.plugins.widget.definition-property-downcast\" class=\"docClass\">downcast</a> property will be used.</p>\n\n<p>In most cases it is appropriate to use <a href=\"#!/api/CKEDITOR.plugins.widget.definition-property-downcast\" rel=\"CKEDITOR.plugins.widget.definition-property-downcast\" class=\"docClass\">downcast</a> directly,\nbecause majority of widgets have just one variant of downcasting (or none at all).\nHowever, in some cases the widget author may want to expose more than one variant\nand then this property may be used.</p>\n\n<pre><code>downcasts: {\n    // This downcast may transform the widget into the figure element.\n    figure: function() {\n        // ...\n    },\n    // This downcast may transform the widget into the image element with data-* attributes.\n    image: function() {\n        // ...\n    }\n}\n\n// Then, the widget user may choose one of the downcast options when setting up his editor.\neditor.on( 'widgetDefinition', function( evt ) {\n    if ( evt.data.name == 'image' )\n            evt.data.downcast = 'figure';\n} );\n</code></pre>\n","default":null,"properties":null,"type":"Object","id":"property-downcasts","owner":"CKEDITOR.plugins.widget.definition","short_doc":"The object containing functions which can be used to downcast this widget. ...","html_type":"Object"},{"tagname":"property","name":"draggable","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":3565}],"doc":"<p>Whether widget should be draggable. Defaults to <code>true</code>.\nIf set to <code>false</code> drag handler will not be displayed when hovering widget.</p>\n","type":"Boolean","default":null,"properties":null,"id":"property-draggable","owner":"CKEDITOR.plugins.widget.definition","short_doc":"Whether widget should be draggable. ...","html_type":"Boolean"},{"tagname":"property","name":"edit","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":3447}],"doc":"<p>If set, it will be added as the <a href=\"#!/api/CKEDITOR.plugins.widget-event-edit\" rel=\"CKEDITOR.plugins.widget-event-edit\" class=\"docClass\">CKEDITOR.plugins.widget.edit</a> event listener.\nThis means that it will be executed when a widget is being edited.\nSee the <a href=\"#!/api/CKEDITOR.plugins.widget-method-edit\" rel=\"CKEDITOR.plugins.widget-method-edit\" class=\"docClass\">CKEDITOR.plugins.widget.edit</a> method.</p>\n","type":"Function","default":null,"properties":null,"id":"property-edit","owner":"CKEDITOR.plugins.widget.definition","short_doc":"If set, it will be added as the CKEDITOR.plugins.widget.edit event listener. ...","html_type":"Function"},{"tagname":"property","name":"editables","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":3513}],"doc":"<p>An object containing definitions of nested editables (editable name => <a href=\"#!/api/CKEDITOR.plugins.widget.nestedEditable.definition\" rel=\"CKEDITOR.plugins.widget.nestedEditable.definition\" class=\"docClass\">CKEDITOR.plugins.widget.nestedEditable.definition</a>).</p>\n\n<pre><code>editables: {\n    header: 'h1',\n    content: {\n        selector: 'div.content',\n        allowedContent: 'p strong em; a[!href]'\n    }\n}\n</code></pre>\n","default":null,"properties":null,"type":"Object","id":"property-editables","owner":"CKEDITOR.plugins.widget.definition","short_doc":"An object containing definitions of nested editables (editable name => CKEDITOR.plugins.widget.nestedEditable.definit...","html_type":"Object"},{"tagname":"property","name":"editor","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":724}],"doc":"<p>The editor instance.</p>\n","readonly":true,"type":"CKEDITOR.editor","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-editor","owner":"CKEDITOR.plugins.widget","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"},{"tagname":"property","name":"element","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":753}],"doc":"<p>The widget element &mdash; the element on which the widget was initialized.</p>\n","readonly":true,"type":"CKEDITOR.dom.element","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-element","owner":"CKEDITOR.plugins.widget","html_type":"<a href=\"#!/api/CKEDITOR.dom.element\" rel=\"CKEDITOR.dom.element\" class=\"docClass\">CKEDITOR.dom.element</a>"},{"tagname":"property","name":"focusedEditable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":813}],"doc":"<p>The nested editable element which is currently focused.</p>\n","readonly":true,"type":"CKEDITOR.plugins.widget.nestedEditable","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-focusedEditable","owner":"CKEDITOR.plugins.widget","html_type":"<a href=\"#!/api/CKEDITOR.plugins.widget.nestedEditable\" rel=\"CKEDITOR.plugins.widget.nestedEditable\" class=\"docClass\">CKEDITOR.plugins.widget.nestedEditable</a>"},{"tagname":"property","name":"id","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":732}],"doc":"<p>This widget's unique (per editor instance) ID.</p>\n","readonly":true,"type":"Number","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-id","owner":"CKEDITOR.plugins.widget","html_type":"Number"},{"tagname":"property","name":"init","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":3340}],"doc":"<p>The method executed while initializing a widget, after a widget instance\nis created, but before it is ready. It is executed before the first\n<a href=\"#!/api/CKEDITOR.plugins.widget-event-data\" rel=\"CKEDITOR.plugins.widget-event-data\" class=\"docClass\">CKEDITOR.plugins.widget.data</a> is fired so it is common to\nuse the <code>init</code> method to populate widget data with information loaded from\nthe DOM, like for exmaple:</p>\n\n<pre><code>init: function() {\n    this.setData( 'width', this.element.getStyle( 'width' ) );\n\n    if ( this.parts.caption.getStyle( 'display' ) != 'none' )\n        this.setData( 'showCaption', true );\n}\n</code></pre>\n","type":"Function","default":null,"properties":null,"id":"property-init","owner":"CKEDITOR.plugins.widget.definition","short_doc":"The method executed while initializing a widget, after a widget instance\nis created, but before it is ready. ...","html_type":"Function"},{"tagname":"property","name":"inited","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":781}],"doc":"<p>Whether a widget instance was initialized. This means that:</p>\n\n<ul>\n<li>An instance was created,</li>\n<li>Its properties were set,</li>\n<li>The <code>init</code> method was executed.</li>\n</ul>\n\n\n<p><strong>Note</strong>: The first <a href=\"#!/api/CKEDITOR.plugins.widget-event-data\" rel=\"CKEDITOR.plugins.widget-event-data\" class=\"docClass\">data</a> event could not be fired yet which\nmeans that the widget's DOM has not been set up yet. Wait for the <a href=\"#!/api/CKEDITOR.plugins.widget-event-ready\" rel=\"CKEDITOR.plugins.widget-event-ready\" class=\"docClass\">ready</a>\nevent to be notified when a widget is fully initialized and ready.</p>\n\n<p><strong>Note</strong>: Use the <a href=\"#!/api/CKEDITOR.plugins.widget-method-isInited\" rel=\"CKEDITOR.plugins.widget-method-isInited\" class=\"docClass\">isInited</a> method to check whether a widget is initialized and\nhas not been destroyed.</p>\n","readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"type":"Boolean","default":"false","id":"property-inited","owner":"CKEDITOR.plugins.widget","short_doc":"Whether a widget instance was initialized. ...","html_type":"Boolean"},{"tagname":"property","name":"inline","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":740}],"doc":"<p>Whether this widget is an inline widget (based on an inline element unless\nforced otherwise by <a href=\"#!/api/CKEDITOR.plugins.widget.definition-property-inline\" rel=\"CKEDITOR.plugins.widget.definition-property-inline\" class=\"docClass\">CKEDITOR.plugins.widget.definition.inline</a>).</p>\n\n<p><strong>Note:</strong> This option does not allow to turn a block element into an inline widget.\nHowever, it makes it possible to turn an inline element into a block widget or to\nforce a correct type in case when automatic recognition fails.</p>\n","readonly":true,"type":"Boolean","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-inline","owner":"CKEDITOR.plugins.widget","overrides":[{"name":"inline","owner":"CKEDITOR.plugins.widget.definition","link":"<a href=\"#!/api/CKEDITOR.plugins.widget.definition-property-inline\" rel=\"CKEDITOR.plugins.widget.definition-property-inline\" class=\"docClass\">CKEDITOR.plugins.widget.definition.inline</a>"}],"short_doc":"Whether this widget is an inline widget (based on an inline element unless\nforced otherwise by CKEDITOR.plugins.widge...","html_type":"Boolean"},{"tagname":"property","name":"insert","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":3462}],"doc":"<p>The method to be executed when the widget's command is executed in order to insert a new widget\n(widget of this type is not focused). If not defined, then the default action will be\nperformed which means that:</p>\n\n<ul>\n<li>An instance of the widget will be created in a detached <a href=\"#!/api/CKEDITOR.dom.documentFragment\" rel=\"CKEDITOR.dom.documentFragment\" class=\"docClass\">document fragment</a>,</li>\n<li>The <a href=\"#!/api/CKEDITOR.plugins.widget-method-edit\" rel=\"CKEDITOR.plugins.widget-method-edit\" class=\"docClass\">CKEDITOR.plugins.widget.edit</a> method will be called to trigger widget editing,</li>\n<li>The widget element will be inserted into DOM.</li>\n</ul>\n\n","type":"Function","default":null,"properties":null,"id":"property-insert","owner":"CKEDITOR.plugins.widget.definition","short_doc":"The method to be executed when the widget's command is executed in order to insert a new widget\n(widget of this type ...","html_type":"Function"},{"tagname":"property","name":"mask","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":3533}],"doc":"<p>If set to <code>true</code>, the widget's element will be covered with a transparent mask.\nThis will prevent its content from being clickable, which matters in case\nof special elements like embedded Flash or iframes that generate a separate \"context\".</p>\n","type":"Boolean","default":null,"properties":null,"id":"property-mask","owner":"CKEDITOR.plugins.widget.definition","short_doc":"If set to true, the widget's element will be covered with a transparent mask. ...","html_type":"Boolean"},{"tagname":"property","name":"name","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":3333}],"doc":"<p>Widget definition name. It is automatically set when the definition is\n<a href=\"#!/api/CKEDITOR.plugins.widget.repository-method-add\" rel=\"CKEDITOR.plugins.widget.repository-method-add\" class=\"docClass\">registered</a>.</p>\n","type":"String","default":null,"properties":null,"id":"property-name","owner":"CKEDITOR.plugins.widget.definition","overrides":[{"name":"name","owner":"CKEDITOR.feature","link":"<a href=\"#!/api/CKEDITOR.feature-property-name\" rel=\"CKEDITOR.feature-property-name\" class=\"docClass\">CKEDITOR.feature.name</a>"}],"short_doc":"Widget definition name. ...","html_type":"String"},{"tagname":"property","name":"parts","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":846}],"doc":"<p>An object of widget component elements.</p>\n\n<p>For every <code>partName =&gt; selector</code> pair in <a href=\"#!/api/CKEDITOR.plugins.widget.definition-property-parts\" rel=\"CKEDITOR.plugins.widget.definition-property-parts\" class=\"docClass\">CKEDITOR.plugins.widget.definition.parts</a>,\none <code>partName =&gt; element</code> pair is added to this object during the widget initialization.</p>\n","readonly":true,"type":"Object","default":null,"properties":null,"id":"property-parts","owner":"CKEDITOR.plugins.widget","overrides":[{"name":"parts","owner":"CKEDITOR.plugins.widget.definition","link":"<a href=\"#!/api/CKEDITOR.plugins.widget.definition-property-parts\" rel=\"CKEDITOR.plugins.widget.definition-property-parts\" class=\"docClass\">CKEDITOR.plugins.widget.definition.parts</a>"}],"short_doc":"An object of widget component elements. ...","html_type":"Object"},{"tagname":"property","name":"pathName","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":3527}],"doc":"<p>Widget name displayed in elements path.</p>\n","type":"String","default":null,"properties":null,"id":"property-pathName","owner":"CKEDITOR.plugins.widget.definition","html_type":"String"},{"tagname":"property","name":"ready","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":799}],"doc":"<p>Whether a widget instance is ready. This means that the widget is <a href=\"#!/api/CKEDITOR.plugins.widget-property-inited\" rel=\"CKEDITOR.plugins.widget-property-inited\" class=\"docClass\">inited</a> and\nthat its DOM was finally set up.</p>\n\n<p><strong>Note:</strong> Use the <a href=\"#!/api/CKEDITOR.plugins.widget-method-isReady\" rel=\"CKEDITOR.plugins.widget-method-isReady\" class=\"docClass\">isReady</a> method to check whether a widget is ready and\nhas not been destroyed.</p>\n","readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"type":"Boolean","default":"false","id":"property-ready","owner":"CKEDITOR.plugins.widget","short_doc":"Whether a widget instance is ready. ...","html_type":"Boolean"},{"tagname":"property","name":"repository","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":829}],"doc":"<p>Link to the widget repository which created this instance.</p>\n","readonly":true,"type":"CKEDITOR.plugins.widget.repository","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-repository","owner":"CKEDITOR.plugins.widget","html_type":"<a href=\"#!/api/CKEDITOR.plugins.widget.repository\" rel=\"CKEDITOR.plugins.widget.repository\" class=\"docClass\">CKEDITOR.plugins.widget.repository</a>"},{"tagname":"property","name":"requiredContent","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/filter.js","linenr":2373}],"doc":"<p>Minimal HTML code that this feature must be allowed to\ngenerate in order to work.</p>\n\n<p>For example a basic image feature (image button displaying the image dialog window)\nneeds <code>'img[src,alt]'</code> in order to be activated.</p>\n\n<p>During the feature validation this value is passed to <a href=\"#!/api/CKEDITOR.filter-method-check\" rel=\"CKEDITOR.filter-method-check\" class=\"docClass\">CKEDITOR.filter.check</a>.</p>\n\n<p>If this value is not provided, a feature will be always activated.</p>\n","type":"CKEDITOR.filter.contentRule","default":"null","properties":null,"id":"property-requiredContent","owner":"CKEDITOR.feature","short_doc":"Minimal HTML code that this feature must be allowed to\ngenerate in order to work. ...","html_type":"<a href=\"#!/api/CKEDITOR.filter.contentRule\" rel=\"CKEDITOR.filter.contentRule\" class=\"docClass\">CKEDITOR.filter.contentRule</a>"},{"tagname":"property","name":"styleToAllowedContentRules","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":3603}],"doc":"<p>Function transforming custom widget's <a href=\"#!/api/CKEDITOR.style\" rel=\"CKEDITOR.style\" class=\"docClass\">CKEDITOR.style</a> instance into\n<a href=\"#!/api/CKEDITOR.filter.allowedContentRules\" rel=\"CKEDITOR.filter.allowedContentRules\" class=\"docClass\">CKEDITOR.filter.allowedContentRules</a>. It may be used when a static\n<a href=\"#!/api/CKEDITOR.plugins.widget.definition-property-styleableElements\" rel=\"CKEDITOR.plugins.widget.definition-property-styleableElements\" class=\"docClass\">styleableElements</a> property is not enough to inform the <a href=\"#!/api/CKEDITOR.filter\" rel=\"CKEDITOR.filter\" class=\"docClass\">CKEDITOR.filter</a>\nwhat HTML features should be enabled when allowing the given style.</p>\n\n<p>In most cases, when style's classes just have to be added to element name(s) used by\nthe widget element, it is recommended to use simpler <a href=\"#!/api/CKEDITOR.plugins.widget.definition-property-styleableElements\" rel=\"CKEDITOR.plugins.widget.definition-property-styleableElements\" class=\"docClass\">styleableElements</a> property.</p>\n\n<p>In order to get parsed classes from the style definition you can use\n<a href=\"#!/api/CKEDITOR.style.customHandlers.widget-method-getClassesArray\" rel=\"CKEDITOR.style.customHandlers.widget-method-getClassesArray\" class=\"docClass\">CKEDITOR.style.customHandlers.widget.getClassesArray</a>.</p>\n\n<p>For example, if you want to use the <a href=\"#!/guide/dev_allowed_content_rules-section-object-format\">object format of allowed content rules</a>,\nto specify <code>match</code> validator, your implementation could look like this:</p>\n\n<pre><code>editor.widgets.add( 'customWidget', {\n    // ...\n\n    styleToAllowedContentRules: funciton( style ) {\n        // Retrieve classes defined in the style.\n        var classes = style.getClassesArray();\n\n        // Do something crazy - for example return allowed content rules in object format,\n        // with custom match property and propertiesOnly flag.\n        return {\n            h1: {\n                match: isWidgetElement,\n                propertiesOnly: true,\n                classes: classes\n            }\n        };\n    }\n} );\n</code></pre>\n","since":"4.4","type":"Function","default":null,"properties":null,"params":[{"tagname":"params","type":"CKEDITOR.style.customHandlers.widget","name":"style","doc":"<p>The style to be transformed.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.style.customHandlers.widget\" rel=\"CKEDITOR.style.customHandlers.widget\" class=\"docClass\">CKEDITOR.style.customHandlers.widget</a>"}],"return":{"type":"CKEDITOR.filter.allowedContentRules","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/CKEDITOR.filter.allowedContentRules\" rel=\"CKEDITOR.filter.allowedContentRules\" class=\"docClass\">CKEDITOR.filter.allowedContentRules</a>"},"id":"property-styleToAllowedContentRules","owner":"CKEDITOR.plugins.widget.definition","short_doc":"Function transforming custom widget's CKEDITOR.style instance into\nCKEDITOR.filter.allowedContentRules. ...","html_type":"Function"},{"tagname":"property","name":"styleableElements","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":3572}],"doc":"<p>Names of element(s) (separated by spaces) for which the <a href=\"#!/api/CKEDITOR.filter\" rel=\"CKEDITOR.filter\" class=\"docClass\">CKEDITOR.filter</a> should allow classes\ndefined in the widget styles. For example if your widget is upcasted from a simple <code>&lt;div&gt;</code>\nelement, then in order to make it styleable you can set:</p>\n\n<pre><code>editor.widgets.add( 'customWidget', {\n    upcast: function( element ) {\n        return element.name == 'div';\n    },\n\n    // ...\n\n    styleableElements: 'div'\n} );\n</code></pre>\n\n<p>Then, when the following style is defined:</p>\n\n<pre><code>{\n    name: 'Thick border', type: 'widget', widget: 'customWidget',\n    attributes: { 'class': 'thickBorder' }\n}\n</code></pre>\n\n<p>a rule allowing the <code>thickBorder</code> class for <code>div</code> elements will be registered in the <a href=\"#!/api/CKEDITOR.filter\" rel=\"CKEDITOR.filter\" class=\"docClass\">CKEDITOR.filter</a>.</p>\n\n<p>If you need to have more freedom when transforming widget style to allowed content rules,\nyou can use the <a href=\"#!/api/CKEDITOR.plugins.widget.definition-property-styleToAllowedContentRules\" rel=\"CKEDITOR.plugins.widget.definition-property-styleToAllowedContentRules\" class=\"docClass\">styleToAllowedContentRules</a> callback.</p>\n","since":"4.4","type":"String","default":null,"properties":null,"id":"property-styleableElements","owner":"CKEDITOR.plugins.widget.definition","short_doc":"Names of element(s) (separated by spaces) for which the CKEDITOR.filter should allow classes\ndefined in the widget st...","html_type":"String"},{"tagname":"property","name":"template","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":856}],"doc":"<p>The template which will be used to create a new widget element (when the widget's command is executed).\nIt will be populated with <a href=\"#!/api/CKEDITOR.plugins.widget-property-defaults\" rel=\"CKEDITOR.plugins.widget-property-defaults\" class=\"docClass\">default values</a>.</p>\n","readonly":true,"type":"CKEDITOR.template","default":null,"properties":null,"id":"property-template","owner":"CKEDITOR.plugins.widget","overrides":[{"name":"template","owner":"CKEDITOR.plugins.widget.definition","link":"<a href=\"#!/api/CKEDITOR.plugins.widget.definition-property-template\" rel=\"CKEDITOR.plugins.widget.definition-property-template\" class=\"docClass\">CKEDITOR.plugins.widget.definition.template</a>"}],"short_doc":"The template which will be used to create a new widget element (when the widget's command is executed). ...","html_type":"<a href=\"#!/api/CKEDITOR.template\" rel=\"CKEDITOR.template\" class=\"docClass\">CKEDITOR.template</a>"},{"tagname":"property","name":"upcast","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":3357}],"doc":"<p>The function to be used to upcast an element to this widget or a\ncomma-separated list of upcast methods from the <a href=\"#!/api/CKEDITOR.plugins.widget.definition-property-upcasts\" rel=\"CKEDITOR.plugins.widget.definition-property-upcasts\" class=\"docClass\">upcasts</a> object.</p>\n\n<p>The upcast function <strong>is not</strong> executed in the widget context (because the widget\ndoes not exist yet) and two arguments are passed:</p>\n\n<ul>\n<li><code>element</code> (<a href=\"#!/api/CKEDITOR.htmlParser.element\" rel=\"CKEDITOR.htmlParser.element\" class=\"docClass\">CKEDITOR.htmlParser.element</a>) &ndash; The element to be checked.</li>\n<li><code>data</code> (<code>Object</code>) &ndash; The object which can be extended with data which will then be passed to the widget.</li>\n</ul>\n\n\n<p>An element will be upcasted if a function returned <code>true</code> or an instance of\na <a href=\"#!/api/CKEDITOR.htmlParser.element\" rel=\"CKEDITOR.htmlParser.element\" class=\"docClass\">CKEDITOR.htmlParser.element</a> if upcasting meant DOM structure changes\n(in this case the widget will be initialized on the returned element).</p>\n","type":"String/Function","default":null,"properties":null,"id":"property-upcast","owner":"CKEDITOR.plugins.widget.definition","short_doc":"The function to be used to upcast an element to this widget or a\ncomma-separated list of upcast methods from the upca...","html_type":"String/Function"},{"tagname":"property","name":"upcasts","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":3374}],"doc":"<p>The object containing functions which can be used to upcast this widget.\nOnly those pointed by the <a href=\"#!/api/CKEDITOR.plugins.widget.definition-property-upcast\" rel=\"CKEDITOR.plugins.widget.definition-property-upcast\" class=\"docClass\">upcast</a> property will be used.</p>\n\n<p>In most cases it is appropriate to use <a href=\"#!/api/CKEDITOR.plugins.widget.definition-property-upcast\" rel=\"CKEDITOR.plugins.widget.definition-property-upcast\" class=\"docClass\">upcast</a> directly,\nbecause majority of widgets need just one method.\nHowever, in some cases the widget author may want to expose more than one variant\nand then this property may be used.</p>\n\n<pre><code>upcasts: {\n    // This function may upcast only figure elements.\n    figure: function() {\n        // ...\n    },\n    // This function may upcast only image elements.\n    image: function() {\n        // ...\n    },\n    // More variants...\n}\n\n// Then, widget user may choose which upcast methods will be enabled.\neditor.on( 'widgetDefinition', function( evt ) {\n    if ( evt.data.name == 'image' )\n            evt.data.upcast = 'figure,image'; // Use both methods.\n} );\n</code></pre>\n","type":"Object","default":null,"properties":null,"id":"property-upcasts","owner":"CKEDITOR.plugins.widget.definition","short_doc":"The object containing functions which can be used to upcast this widget. ...","html_type":"Object"},{"tagname":"property","name":"wrapper","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":864}],"doc":"<p>The widget wrapper &mdash; a non-editable <code>div</code> or <code>span</code> element (depending on <a href=\"#!/api/CKEDITOR.plugins.widget-property-inline\" rel=\"CKEDITOR.plugins.widget-property-inline\" class=\"docClass\">inline</a>)\nwhich is a parent of the <a href=\"#!/api/CKEDITOR.plugins.widget-property-element\" rel=\"CKEDITOR.plugins.widget-property-element\" class=\"docClass\">element</a> and widget compontents like the drag handler and the <a href=\"#!/api/CKEDITOR.plugins.widget-property-mask\" rel=\"CKEDITOR.plugins.widget-property-mask\" class=\"docClass\">mask</a>.\nIt is the outermost widget element.</p>\n","readonly":true,"type":"CKEDITOR.dom.element","default":null,"properties":null,"id":"property-wrapper","owner":"CKEDITOR.plugins.widget","short_doc":"The widget wrapper &mdash; a non-editable div or span element (depending on inline)\nwhich is a parent of the element ...","html_type":"<a href=\"#!/api/CKEDITOR.dom.element\" rel=\"CKEDITOR.dom.element\" class=\"docClass\">CKEDITOR.dom.element</a>"},{"tagname":"method","name":"constructor","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":664}],"doc":"<p>Creates an instance of the widget class. Do not use it directly, but instead initialize widgets\nby using the <a href=\"#!/api/CKEDITOR.plugins.widget.repository-method-initOn\" rel=\"CKEDITOR.plugins.widget.repository-method-initOn\" class=\"docClass\">CKEDITOR.plugins.widget.repository.initOn</a> method or by the upcasting system.</p>\n","params":[{"tagname":"params","type":"CKEDITOR.plugins.widget.repository","name":"widgetsRepo","doc":"\n","html_type":"<a href=\"#!/api/CKEDITOR.plugins.widget.repository\" rel=\"CKEDITOR.plugins.widget.repository\" class=\"docClass\">CKEDITOR.plugins.widget.repository</a>"},{"tagname":"params","type":"Number","name":"id","doc":"<p>Unique ID of this widget instance.</p>\n","html_type":"Number"},{"tagname":"params","type":"CKEDITOR.dom.element","name":"element","doc":"<p>The widget element.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.dom.element\" rel=\"CKEDITOR.dom.element\" class=\"docClass\">CKEDITOR.dom.element</a>"},{"tagname":"params","type":"CKEDITOR.plugins.widget.definition","name":"widgetDef","doc":"<p>Widget's registered definition.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.plugins.widget.definition\" rel=\"CKEDITOR.plugins.widget.definition\" class=\"docClass\">CKEDITOR.plugins.widget.definition</a>"},{"tagname":"params","name":"startupData","optional":true,"doc":"<p>Initial widget data. This data object will overwrite the default data and\nthe data loaded from the DOM.</p>\n","type":"Object","html_type":"Object"}],"id":"method-constructor","owner":"CKEDITOR.plugins.widget","return":{"type":"CKEDITOR.plugins.widget","doc":"\n","html_type":"<a href=\"#!/api/CKEDITOR.plugins.widget\" rel=\"CKEDITOR.plugins.widget\" class=\"docClass\">CKEDITOR.plugins.widget</a>"},"overrides":[{"name":"constructor","owner":"CKEDITOR.event","link":"<a href=\"#!/api/CKEDITOR.event-method-constructor\" rel=\"CKEDITOR.event-method-constructor\" class=\"docClass\">CKEDITOR.event.constructor</a>"}],"short_doc":"Creates an instance of the widget class. ..."},{"tagname":"method","name":"addClass","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":893}],"doc":"<p>Adds a class to the widget element. This method is used by\nthe <a href=\"#!/api/CKEDITOR.plugins.widget-method-applyStyle\" rel=\"CKEDITOR.plugins.widget-method-applyStyle\" class=\"docClass\">applyStyle</a> method and should be overriden by widgets\nwhich should handle classes differently (e.g. add them to other elements).</p>\n\n<p><strong>Note</strong>: This method should not be used directly. Use the <a href=\"#!/api/CKEDITOR.plugins.widget-method-setData\" rel=\"CKEDITOR.plugins.widget-method-setData\" class=\"docClass\">setData</a> method to\nset the <code>classes</code> property. Read more in the <a href=\"#!/api/CKEDITOR.plugins.widget-method-setData\" rel=\"CKEDITOR.plugins.widget-method-setData\" class=\"docClass\">setData</a> documentation.</p>\n\n<p>See also: <a href=\"#!/api/CKEDITOR.plugins.widget-method-removeClass\" rel=\"CKEDITOR.plugins.widget-method-removeClass\" class=\"docClass\">removeClass</a>, <a href=\"#!/api/CKEDITOR.plugins.widget-method-hasClass\" rel=\"CKEDITOR.plugins.widget-method-hasClass\" class=\"docClass\">hasClass</a>, <a href=\"#!/api/CKEDITOR.plugins.widget-method-getClasses\" rel=\"CKEDITOR.plugins.widget-method-getClasses\" class=\"docClass\">getClasses</a>.</p>\n","since":"4.4","params":[{"tagname":"params","type":"String","name":"className","doc":"<p>The class name to be added.</p>\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-addClass","owner":"CKEDITOR.plugins.widget","short_doc":"Adds a class to the widget element. ..."},{"tagname":"method","name":"applyStyle","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":910}],"doc":"<p>Applies the specified style to the widget. It is highly recommended to use the\n<a href=\"#!/api/CKEDITOR.editor-method-applyStyle\" rel=\"CKEDITOR.editor-method-applyStyle\" class=\"docClass\">CKEDITOR.editor.applyStyle</a> or <a href=\"#!/api/CKEDITOR.style-method-apply\" rel=\"CKEDITOR.style-method-apply\" class=\"docClass\">CKEDITOR.style.apply</a> methods instead of\nusing this method directly, because unlike editor's and style's methods, this one\ndoes not perform any checks.</p>\n\n<p>By default this method handles only classes defined in the style. It clones existing\nclasses which are stored in the <a href=\"#!/api/CKEDITOR.plugins.widget-property-data\" rel=\"CKEDITOR.plugins.widget-property-data\" class=\"docClass\">widget data</a>'s <code>classes</code> property,\nadds new classes, and calls the <a href=\"#!/api/CKEDITOR.plugins.widget-method-setData\" rel=\"CKEDITOR.plugins.widget-method-setData\" class=\"docClass\">setData</a> method if at least one new class was added.\nThen, using the <a href=\"#!/api/CKEDITOR.plugins.widget-event-data\" rel=\"CKEDITOR.plugins.widget-event-data\" class=\"docClass\">data</a> event listener widget applies modifications passing\nnew classes to the <a href=\"#!/api/CKEDITOR.plugins.widget-method-addClass\" rel=\"CKEDITOR.plugins.widget-method-addClass\" class=\"docClass\">addClass</a> method.</p>\n\n<p>If you need to handle classes differently than in the default way, you can override the\n<a href=\"#!/api/CKEDITOR.plugins.widget-method-addClass\" rel=\"CKEDITOR.plugins.widget-method-addClass\" class=\"docClass\">addClass</a> and related methods. You can also handle other style properties than <code>classes</code>\nby overriding this method.</p>\n\n<p>See also: <a href=\"#!/api/CKEDITOR.plugins.widget-method-checkStyleActive\" rel=\"CKEDITOR.plugins.widget-method-checkStyleActive\" class=\"docClass\">checkStyleActive</a>, <a href=\"#!/api/CKEDITOR.plugins.widget-method-removeStyle\" rel=\"CKEDITOR.plugins.widget-method-removeStyle\" class=\"docClass\">removeStyle</a>.</p>\n","since":"4.4","params":[{"tagname":"params","type":"CKEDITOR.style","name":"style","doc":"<p>The custom widget style to be applied.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.style\" rel=\"CKEDITOR.style\" class=\"docClass\">CKEDITOR.style</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-applyStyle","owner":"CKEDITOR.plugins.widget","short_doc":"Applies the specified style to the widget. ..."},{"tagname":"method","name":"capture","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/event.js","linenr":213}],"doc":"<p>Register event handler under the capturing stage on supported target.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-capture","owner":"CKEDITOR.event","short_doc":"Register event handler under the capturing stage on supported target. ..."},{"tagname":"method","name":"checkStyleActive","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":935}],"doc":"<p>Checks if the specified style is applied to this widget. It is highly recommended to use the\n<a href=\"#!/api/CKEDITOR.style-method-checkActive\" rel=\"CKEDITOR.style-method-checkActive\" class=\"docClass\">CKEDITOR.style.checkActive</a> method instead of using this method directly,\nbecause unlike style's method, this one does not perform any checks.</p>\n\n<p>By default this method handles only classes defined in the style and passes\nthem to the <a href=\"#!/api/CKEDITOR.plugins.widget-method-hasClass\" rel=\"CKEDITOR.plugins.widget-method-hasClass\" class=\"docClass\">hasClass</a> method. You can override these methods to handle classes\ndifferently or to handle more of the style properties.</p>\n\n<p>See also: <a href=\"#!/api/CKEDITOR.plugins.widget-method-applyStyle\" rel=\"CKEDITOR.plugins.widget-method-applyStyle\" class=\"docClass\">applyStyle</a>, <a href=\"#!/api/CKEDITOR.plugins.widget-method-removeStyle\" rel=\"CKEDITOR.plugins.widget-method-removeStyle\" class=\"docClass\">removeStyle</a>.</p>\n","since":"4.4","params":[{"tagname":"params","type":"CKEDITOR.style","name":"style","doc":"<p>The custom widget style to be checked.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.style\" rel=\"CKEDITOR.style\" class=\"docClass\">CKEDITOR.style</a>"}],"return":{"type":"Boolean","name":"return","doc":"<p>Whether the style is applied to this widget.</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["hasClass"],"id":"method-checkStyleActive","owner":"CKEDITOR.plugins.widget","short_doc":"Checks if the specified style is applied to this widget. ..."},{"tagname":"method","name":"define","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/event.js","linenr":84}],"doc":"<p>Predefine some intrinsic properties on a specific event name.</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"<p>The event name</p>\n","html_type":"String"},{"tagname":"params","name":"meta","doc":"\n","properties":[{"tagname":"params","name":"errorProof","default":"false","optional":true,"doc":"<p>Whether the event firing should catch error thrown from a per listener call.</p>\n"}],"type":"Object","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-define","owner":"CKEDITOR.event","short_doc":"Predefine some intrinsic properties on a specific event name. ..."},{"tagname":"method","name":"destroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":964}],"doc":"<p>Destroys this widget instance.</p>\n\n<p>Use <a href=\"#!/api/CKEDITOR.plugins.widget.repository-method-destroy\" rel=\"CKEDITOR.plugins.widget.repository-method-destroy\" class=\"docClass\">CKEDITOR.plugins.widget.repository.destroy</a> when possible instead of this method.</p>\n\n<p>This method fires the {#event-destroy} event.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"offline","optional":true,"doc":"<p>Whether a widget is offline (detached from the DOM tree) &mdash;\nin this case the DOM (attributes, classes, etc.) will not be cleaned up.</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["destroyEditable","fire"],"id":"method-destroy","owner":"CKEDITOR.plugins.widget","short_doc":"Destroys this widget instance. ..."},{"tagname":"method","name":"destroyEditable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":995}],"doc":"<p>Destroys a nested editable.</p>\n","params":[{"tagname":"params","type":"String","name":"editableName","doc":"<p>Nested editable name.</p>\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"offline","optional":true,"doc":"<p>See <a href=\"#!/api/CKEDITOR.plugins.widget-method-destroy\" rel=\"CKEDITOR.plugins.widget-method-destroy\" class=\"docClass\">destroy</a> method.</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-destroyEditable","owner":"CKEDITOR.plugins.widget","short_doc":"Destroys a nested editable. ..."},{"tagname":"method","name":"edit","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":1017}],"doc":"<p>Starts widget editing.</p>\n\n<p>This method fires the <a href=\"#!/api/CKEDITOR.plugins.widget-event-edit\" rel=\"CKEDITOR.plugins.widget-event-edit\" class=\"docClass\">edit</a> event\nwhich may be cancelled in order to prevent it from opening a dialog window.</p>\n\n<p>The dialog window name is obtained from the event's data <code>dialog</code> property or\nfrom <a href=\"#!/api/CKEDITOR.plugins.widget.definition-property-dialog\" rel=\"CKEDITOR.plugins.widget.definition-property-dialog\" class=\"docClass\">CKEDITOR.plugins.widget.definition.dialog</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["fire","on"],"id":"method-edit","owner":"CKEDITOR.plugins.widget","short_doc":"Starts widget editing. ..."},{"tagname":"method","name":"fire","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/event.js","linenr":223}],"doc":"<p>Fires an specific event in the object. All registered listeners are\ncalled at this point.</p>\n\n<pre><code>someObject.on( 'someEvent', function() { ... } );\nsomeObject.on( 'someEvent', function() { ... } );\nsomeObject.fire( 'someEvent' );             // Both listeners are called.\n\nsomeObject.on( 'someEvent', function( event ) {\n    alert( event.data );                    // 'Example'\n} );\nsomeObject.fire( 'someEvent', 'Example' );\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The event name to fire.</p>\n","html_type":"String"},{"tagname":"params","type":"Object","name":"data","optional":true,"doc":"<p>Data to be sent as the\n<a href=\"#!/api/CKEDITOR.eventInfo-property-data\" rel=\"CKEDITOR.eventInfo-property-data\" class=\"docClass\">CKEDITOR.eventInfo.data</a> when calling the listeners.</p>\n","html_type":"Object"},{"tagname":"params","type":"CKEDITOR.editor","name":"editor","optional":true,"doc":"<p>The editor instance to send as the\n<a href=\"#!/api/CKEDITOR.eventInfo-property-editor\" rel=\"CKEDITOR.eventInfo-property-editor\" class=\"docClass\">CKEDITOR.eventInfo.editor</a> when calling the listener.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"}],"return":{"type":"Boolean/Object","name":"return","doc":"<p>A boolean indicating that the event is to be\ncanceled, or data returned by one of the listeners.</p>\n","properties":null,"html_type":"Boolean/Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-fire","owner":"CKEDITOR.event","short_doc":"Fires an specific event in the object. ..."},{"tagname":"method","name":"fireOnce","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/event.js","linenr":313}],"doc":"<p>Fires an specific event in the object, releasing all listeners\nregistered to that event. The same listeners are not called again on\nsuccessive calls of it or of <a href=\"#!/api/CKEDITOR.event-method-fire\" rel=\"CKEDITOR.event-method-fire\" class=\"docClass\">fire</a>.</p>\n\n<pre><code>someObject.on( 'someEvent', function() { ... } );\nsomeObject.fire( 'someEvent' );         // Above listener called.\nsomeObject.fireOnce( 'someEvent' );     // Above listener called.\nsomeObject.fire( 'someEvent' );         // No listeners called.\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The event name to fire.</p>\n","html_type":"String"},{"tagname":"params","type":"Object","name":"data","optional":true,"doc":"<p>Data to be sent as the\n<a href=\"#!/api/CKEDITOR.eventInfo-property-data\" rel=\"CKEDITOR.eventInfo-property-data\" class=\"docClass\">CKEDITOR.eventInfo.data</a> when calling the listeners.</p>\n","html_type":"Object"},{"tagname":"params","type":"CKEDITOR.editor","name":"editor","optional":true,"doc":"<p>The editor instance to send as the\n<a href=\"#!/api/CKEDITOR.eventInfo-property-editor\" rel=\"CKEDITOR.eventInfo-property-editor\" class=\"docClass\">CKEDITOR.eventInfo.editor</a> when calling the listener.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"}],"return":{"type":"Boolean/Object","name":"return","doc":"<p>A booloan indicating that the event is to be\ncanceled, or data returned by one of the listeners.</p>\n","properties":null,"html_type":"Boolean/Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["fire"],"id":"method-fireOnce","owner":"CKEDITOR.event","short_doc":"Fires an specific event in the object, releasing all listeners\nregistered to that event. ..."},{"tagname":"method","name":"focus","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":1179}],"doc":"<p>Focuses a widget by selecting it.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-focus","owner":"CKEDITOR.plugins.widget","short_doc":"Focuses a widget by selecting it. ..."},{"tagname":"method","name":"getClasses","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":1076}],"doc":"<p>Returns widget element classes parsed to an object. This method\nis used to populate the <code>classes</code> property of widget's <a href=\"#!/api/CKEDITOR.plugins.widget-property-data\" rel=\"CKEDITOR.plugins.widget-property-data\" class=\"docClass\">data</a>.</p>\n\n<p>This method reuses <a href=\"#!/api/CKEDITOR.plugins.widget.repository-method-parseElementClasses\" rel=\"CKEDITOR.plugins.widget.repository-method-parseElementClasses\" class=\"docClass\">CKEDITOR.plugins.widget.repository.parseElementClasses</a>.\nIt should be overriden if a widget should handle classes differently (e.g. on other elements).</p>\n\n<p>See also: <a href=\"#!/api/CKEDITOR.plugins.widget-method-removeClass\" rel=\"CKEDITOR.plugins.widget-method-removeClass\" class=\"docClass\">removeClass</a>, <a href=\"#!/api/CKEDITOR.plugins.widget-method-addClass\" rel=\"CKEDITOR.plugins.widget-method-addClass\" class=\"docClass\">addClass</a>, <a href=\"#!/api/CKEDITOR.plugins.widget-method-hasClass\" rel=\"CKEDITOR.plugins.widget-method-hasClass\" class=\"docClass\">hasClass</a>.</p>\n","since":"4.4","return":{"type":"Object","name":"return","doc":"\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getClasses","owner":"CKEDITOR.plugins.widget","short_doc":"Returns widget element classes parsed to an object. ..."},{"tagname":"method","name":"hasClass","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":1092}],"doc":"<p>Checks if the widget element has specified class. This method is used by\nthe <a href=\"#!/api/CKEDITOR.plugins.widget-method-checkStyleActive\" rel=\"CKEDITOR.plugins.widget-method-checkStyleActive\" class=\"docClass\">checkStyleActive</a> method and should be overriden by widgets\nwhich should handle classes differently (e.g. on other elements).</p>\n\n<p>See also: <a href=\"#!/api/CKEDITOR.plugins.widget-method-removeClass\" rel=\"CKEDITOR.plugins.widget-method-removeClass\" class=\"docClass\">removeClass</a>, <a href=\"#!/api/CKEDITOR.plugins.widget-method-addClass\" rel=\"CKEDITOR.plugins.widget-method-addClass\" class=\"docClass\">addClass</a>, <a href=\"#!/api/CKEDITOR.plugins.widget-method-getClasses\" rel=\"CKEDITOR.plugins.widget-method-getClasses\" class=\"docClass\">getClasses</a>.</p>\n","since":"4.4","params":[{"tagname":"params","type":"String","name":"className","doc":"<p>The class to be checked.</p>\n","html_type":"String"},{"tagname":"params","type":"Boolean","name":"Whether","doc":"<p>a widget has specified class.</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-hasClass","owner":"CKEDITOR.plugins.widget","short_doc":"Checks if the widget element has specified class. ..."},{"tagname":"method","name":"hasListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/event.js","linenr":370}],"doc":"<p>Checks if there is any listener registered to a given event.</p>\n\n<pre><code>var myListener = function() { ... };\nsomeObject.on( 'someEvent', myListener );\nalert( someObject.hasListeners( 'someEvent' ) );    // true\nalert( someObject.hasListeners( 'noEvent' ) );      // false\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The event name.</p>\n","html_type":"String"}],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-hasListeners","owner":"CKEDITOR.event","short_doc":"Checks if there is any listener registered to a given event. ..."},{"tagname":"method","name":"initEditable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":1107}],"doc":"<p>Initializes a nested editable.</p>\n\n<p><strong>Note</strong>: Only elements from <a href=\"#!/api/CKEDITOR.dtd-property-S-editable\" rel=\"CKEDITOR.dtd-property-S-editable\" class=\"docClass\">CKEDITOR.dtd.$editable</a> may become editables.</p>\n","params":[{"tagname":"params","type":"String","name":"editableName","doc":"<p>The nested editable name.</p>\n","html_type":"String"},{"tagname":"params","type":"CKEDITOR.plugins.widget.nestedEditable.definition","name":"definition","doc":"<p>The definition of the nested editable.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.plugins.widget.nestedEditable.definition\" rel=\"CKEDITOR.plugins.widget.nestedEditable.definition\" class=\"docClass\">CKEDITOR.plugins.widget.nestedEditable.definition</a>"}],"return":{"type":"Boolean","name":"return","doc":"<p>Whether an editable was successfully initialized.</p>\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-initEditable","owner":"CKEDITOR.plugins.widget","short_doc":"Initializes a nested editable. ..."},{"tagname":"method","name":"isInited","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":1157}],"doc":"<p>Checks if a widget has already been initialized and has not been destroyed yet.</p>\n\n<p>See <a href=\"#!/api/CKEDITOR.plugins.widget-property-inited\" rel=\"CKEDITOR.plugins.widget-property-inited\" class=\"docClass\">inited</a> for more details.</p>\n","return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-isInited","owner":"CKEDITOR.plugins.widget","short_doc":"Checks if a widget has already been initialized and has not been destroyed yet. ..."},{"tagname":"method","name":"isReady","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":1168}],"doc":"<p>Checks if a widget is ready and has not been destroyed yet.</p>\n\n<p>See <a href=\"#!/api/CKEDITOR.plugins.widget-property-ready\" rel=\"CKEDITOR.plugins.widget-property-ready\" class=\"docClass\">ready</a> for more details.</p>\n","return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["isInited"],"id":"method-isReady","owner":"CKEDITOR.plugins.widget","short_doc":"Checks if a widget is ready and has not been destroyed yet. ..."},{"tagname":"method","name":"on","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/event.js","linenr":96}],"doc":"<p>Registers a listener to a specific event in the current object.</p>\n\n<pre><code>someObject.on( 'someEvent', function() {\n    alert( this == someObject );        // true\n} );\n\nsomeObject.on( 'someEvent', function() {\n    alert( this == anotherObject );     // true\n}, anotherObject );\n\nsomeObject.on( 'someEvent', function( event ) {\n    alert( event.listenerData );        // 'Example'\n}, null, 'Example' );\n\nsomeObject.on( 'someEvent', function() { ... } );                       // 2nd called\nsomeObject.on( 'someEvent', function() { ... }, null, null, 100 );      // 3rd called\nsomeObject.on( 'someEvent', function() { ... }, null, null, 1 );        // 1st called\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The event name to which listen.</p>\n","html_type":"String"},{"tagname":"params","type":"Function","name":"listenerFunction","doc":"<p>The function listening to the\nevent. A single <a href=\"#!/api/CKEDITOR.eventInfo\" rel=\"CKEDITOR.eventInfo\" class=\"docClass\">CKEDITOR.eventInfo</a> object instanced\nis passed to this function containing all the event data.</p>\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scopeObj","optional":true,"doc":"<p>The object used to scope the listener\ncall (the <code>this</code> object). If omitted, the current object is used.</p>\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"listenerData","optional":true,"doc":"<p>Data to be sent as the\n<a href=\"#!/api/CKEDITOR.eventInfo-property-listenerData\" rel=\"CKEDITOR.eventInfo-property-listenerData\" class=\"docClass\">CKEDITOR.eventInfo.listenerData</a> when calling the\nlistener.</p>\n","html_type":"Object"},{"tagname":"params","type":"Number","name":"priority","default":"10","optional":true,"doc":"<p>The listener priority. Lower priority\nlisteners are called first. Listeners with the same priority\nvalue are called in registration order.</p>\n","html_type":"Number"}],"return":{"type":"Object","name":"return","doc":"<p>An object containing the <code>removeListener</code>\nfunction, which can be used to remove the listener at any time.</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-on","owner":"CKEDITOR.event","short_doc":"Registers a listener to a specific event in the current object. ..."},{"tagname":"method","name":"once","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/event.js","linenr":191}],"doc":"<p>Similiar with <a href=\"#!/api/CKEDITOR.event-method-on\" rel=\"CKEDITOR.event-method-on\" class=\"docClass\">on</a> but the listener will be called only once upon the next event firing.</p>\n\n<p>@see <a href=\"#!/api/CKEDITOR.event-method-on\" rel=\"CKEDITOR.event-method-on\" class=\"docClass\">CKEDITOR.event.on</a></p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-once","owner":"CKEDITOR.event","short_doc":"Similiar with on but the listener will be called only once upon the next event firing. ..."},{"tagname":"method","name":"removeAllListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/event.js","linenr":361}],"doc":"<p>Remove all existing listeners on this object, for cleanup purpose.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-removeAllListeners","owner":"CKEDITOR.event","short_doc":"Remove all existing listeners on this object, for cleanup purpose. ..."},{"tagname":"method","name":"removeClass","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":1194}],"doc":"<p>Removes a class from the widget element. This method is used by\nthe <a href=\"#!/api/CKEDITOR.plugins.widget-method-removeStyle\" rel=\"CKEDITOR.plugins.widget-method-removeStyle\" class=\"docClass\">removeStyle</a> method and should be overriden by widgets\nwhich should handle classes differently (e.g. on other elements).</p>\n\n<p><strong>Note</strong>: This method should not be used directly. Use the <a href=\"#!/api/CKEDITOR.plugins.widget-method-setData\" rel=\"CKEDITOR.plugins.widget-method-setData\" class=\"docClass\">setData</a> method to\nset the <code>classes</code> property. Read more in the <a href=\"#!/api/CKEDITOR.plugins.widget-method-setData\" rel=\"CKEDITOR.plugins.widget-method-setData\" class=\"docClass\">setData</a> documentation.</p>\n\n<p>See also: <a href=\"#!/api/CKEDITOR.plugins.widget-method-hasClass\" rel=\"CKEDITOR.plugins.widget-method-hasClass\" class=\"docClass\">hasClass</a>, <a href=\"#!/api/CKEDITOR.plugins.widget-method-addClass\" rel=\"CKEDITOR.plugins.widget-method-addClass\" class=\"docClass\">addClass</a>.</p>\n","since":"4.4","params":[{"tagname":"params","type":"String","name":"className","doc":"<p>The class to be removed.</p>\n","html_type":"String"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-removeClass","owner":"CKEDITOR.plugins.widget","short_doc":"Removes a class from the widget element. ..."},{"tagname":"method","name":"removeListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/event.js","linenr":337}],"doc":"<p>Unregisters a listener function from being called at the specified\nevent. No errors are thrown if the listener has not been registered previously.</p>\n\n<pre><code>var myListener = function() { ... };\nsomeObject.on( 'someEvent', myListener );\nsomeObject.fire( 'someEvent' );                 // myListener called.\nsomeObject.removeListener( 'someEvent', myListener );\nsomeObject.fire( 'someEvent' );                 // myListener not called.\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The event name.</p>\n","html_type":"String"},{"tagname":"params","type":"Function","name":"listenerFunction","doc":"<p>The listener function to unregister.</p>\n","html_type":"Function"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-removeListener","owner":"CKEDITOR.event","short_doc":"Unregisters a listener function from being called at the specified\nevent. ..."},{"tagname":"method","name":"removeStyle","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":1211}],"doc":"<p>Removes the specified style from the widget. It is highly recommended to use the\n<a href=\"#!/api/CKEDITOR.editor-method-removeStyle\" rel=\"CKEDITOR.editor-method-removeStyle\" class=\"docClass\">CKEDITOR.editor.removeStyle</a> or <a href=\"#!/api/CKEDITOR.style-method-remove\" rel=\"CKEDITOR.style-method-remove\" class=\"docClass\">CKEDITOR.style.remove</a> methods instead of\nusing this method directly, because unlike editor's and style's methods, this one\ndoes not perform any checks.</p>\n\n<p>Read more about how applying/removing styles works in the <a href=\"#!/api/CKEDITOR.plugins.widget-method-applyStyle\" rel=\"CKEDITOR.plugins.widget-method-applyStyle\" class=\"docClass\">applyStyle</a> method documentation.</p>\n\n<p>See also <a href=\"#!/api/CKEDITOR.plugins.widget-method-checkStyleActive\" rel=\"CKEDITOR.plugins.widget-method-checkStyleActive\" class=\"docClass\">checkStyleActive</a>, <a href=\"#!/api/CKEDITOR.plugins.widget-method-applyStyle\" rel=\"CKEDITOR.plugins.widget-method-applyStyle\" class=\"docClass\">applyStyle</a>, <a href=\"#!/api/CKEDITOR.plugins.widget-method-getClasses\" rel=\"CKEDITOR.plugins.widget-method-getClasses\" class=\"docClass\">getClasses</a>.</p>\n","since":"4.4","params":[{"tagname":"params","type":"CKEDITOR.style","name":"style","doc":"<p>The custom widget style to be removed.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.style\" rel=\"CKEDITOR.style\" class=\"docClass\">CKEDITOR.style</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-removeStyle","owner":"CKEDITOR.plugins.widget","short_doc":"Removes the specified style from the widget. ..."},{"tagname":"method","name":"setData","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":1228}],"doc":"<p>Sets widget value(s) in the <a href=\"#!/api/CKEDITOR.plugins.widget-property-data\" rel=\"CKEDITOR.plugins.widget-property-data\" class=\"docClass\">data</a> object.\nIf the given value(s) modifies current ones, the <a href=\"#!/api/CKEDITOR.plugins.widget-event-data\" rel=\"CKEDITOR.plugins.widget-event-data\" class=\"docClass\">data</a> event is fired.</p>\n\n<pre><code>this.setData( 'align', 'left' );\nthis.data.align; // -&gt; 'left'\n\nthis.setData( { align: 'right', opened: false } );\nthis.data.align; // -&gt; 'right'\nthis.data.opened; // -&gt; false\n</code></pre>\n\n<p>Set values are stored in <a href=\"#!/api/CKEDITOR.plugins.widget-property-element\" rel=\"CKEDITOR.plugins.widget-property-element\" class=\"docClass\">element</a>'s attribute (<code>data-cke-widget-data</code>),\nin a JSON string, therefore <a href=\"#!/api/CKEDITOR.plugins.widget-property-data\" rel=\"CKEDITOR.plugins.widget-property-data\" class=\"docClass\">data</a> should contain\nonly serializable data.</p>\n\n<p><strong>Note:</strong> A special data property, <code>classes</code>, exists. It contains an object with\nclasses which were returned by the <a href=\"#!/api/CKEDITOR.plugins.widget-method-getClasses\" rel=\"CKEDITOR.plugins.widget-method-getClasses\" class=\"docClass\">getClasses</a> method during the widget initialization.\nThis property is then used by the <a href=\"#!/api/CKEDITOR.plugins.widget-method-applyStyle\" rel=\"CKEDITOR.plugins.widget-method-applyStyle\" class=\"docClass\">applyStyle</a> and <a href=\"#!/api/CKEDITOR.plugins.widget-method-removeStyle\" rel=\"CKEDITOR.plugins.widget-method-removeStyle\" class=\"docClass\">removeStyle</a> methods.\nWhen it is changed (the reference to object must be changed!), the widget updates its classes by\nusing the <a href=\"#!/api/CKEDITOR.plugins.widget-method-addClass\" rel=\"CKEDITOR.plugins.widget-method-addClass\" class=\"docClass\">addClass</a> and <a href=\"#!/api/CKEDITOR.plugins.widget-method-removeClass\" rel=\"CKEDITOR.plugins.widget-method-removeClass\" class=\"docClass\">removeClass</a> methods.</p>\n\n<pre><code>// Adding a new class.\nvar classes = <a href=\"#!/api/CKEDITOR.tools-method-clone\" rel=\"CKEDITOR.tools-method-clone\" class=\"docClass\">CKEDITOR.tools.clone</a>( widget.data.classes );\nclasses.newClass = 1;\nwidget.setData( 'classes', classes );\n\n// Removing a class.\nvar classes = <a href=\"#!/api/CKEDITOR.tools-method-clone\" rel=\"CKEDITOR.tools-method-clone\" class=\"docClass\">CKEDITOR.tools.clone</a>( widget.data.classes );\ndelete classes.newClass;\nwidget.setData( 'classes', classes );\n</code></pre>\n","params":[{"tagname":"params","type":"String/Object","name":"keyOrData","doc":"\n","html_type":"String/Object"},{"tagname":"params","type":"Object","name":"value","doc":"\n","html_type":"Object"}],"chainable":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["fire"],"id":"method-setData","owner":"CKEDITOR.plugins.widget","return":{"type":"CKEDITOR.plugins.widget","doc":"<p>this</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.plugins.widget\" rel=\"CKEDITOR.plugins.widget\" class=\"docClass\">CKEDITOR.plugins.widget</a>"},"short_doc":"Sets widget value(s) in the data object. ..."},{"tagname":"method","name":"setFocused","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":1293}],"doc":"<p>Changes the widget's focus state. This method is executed automatically after\na widget has been focused by the <a href=\"#!/api/CKEDITOR.plugins.widget-method-focus\" rel=\"CKEDITOR.plugins.widget-method-focus\" class=\"docClass\">focus</a> method or a selection was moved\nout of the widget.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"selected","doc":"<p>Whether to select or deselect this widget.</p>\n","html_type":"Boolean"}],"chainable":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["fire"],"id":"method-setFocused","owner":"CKEDITOR.plugins.widget","return":{"type":"CKEDITOR.plugins.widget","doc":"<p>this</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.plugins.widget\" rel=\"CKEDITOR.plugins.widget\" class=\"docClass\">CKEDITOR.plugins.widget</a>"},"short_doc":"Changes the widget's focus state. ..."},{"tagname":"method","name":"setSelected","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":1307}],"doc":"<p>Changes the widget's select state. This method is executed automatically after\na widget has been selected by the <a href=\"#!/api/CKEDITOR.plugins.widget-method-focus\" rel=\"CKEDITOR.plugins.widget-method-focus\" class=\"docClass\">focus</a> method or the selection\nwas moved out of widget.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"selected","doc":"<p>Whether to select or deselect this widget.</p>\n","html_type":"Boolean"}],"chainable":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["fire"],"id":"method-setSelected","owner":"CKEDITOR.plugins.widget","return":{"type":"CKEDITOR.plugins.widget","doc":"<p>this</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.plugins.widget\" rel=\"CKEDITOR.plugins.widget\" class=\"docClass\">CKEDITOR.plugins.widget</a>"},"short_doc":"Changes the widget's select state. ..."},{"tagname":"method","name":"toFeature","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/filter.js","linenr":2414}],"doc":"<p>Returns a feature that this feature needs to register.</p>\n\n<p>In some cases, during activation, one feature may need to register\nanother feature. For example a <a href=\"#!/api/CKEDITOR.ui.button\" rel=\"CKEDITOR.ui.button\" class=\"docClass\">CKEDITOR.ui.button</a> often registers\na related command. See <a href=\"#!/api/CKEDITOR.ui.button-method-toFeature\" rel=\"CKEDITOR.ui.button-method-toFeature\" class=\"docClass\">CKEDITOR.ui.button.toFeature</a>.</p>\n\n<p>This method is executed when a feature is passed to the <a href=\"#!/api/CKEDITOR.editor-method-addFeature\" rel=\"CKEDITOR.editor-method-addFeature\" class=\"docClass\">CKEDITOR.editor.addFeature</a>.</p>\n","return":{"type":"CKEDITOR.feature","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/CKEDITOR.feature\" rel=\"CKEDITOR.feature\" class=\"docClass\">CKEDITOR.feature</a>"},"params":[],"id":"method-toFeature","owner":"CKEDITOR.feature","short_doc":"Returns a feature that this feature needs to register. ..."},{"tagname":"method","name":"updateDragHandlerPosition","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":1321}],"doc":"<p>Repositions drag handler according to the widget's element position. Should be called from events, like mouseover.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-updateDragHandlerPosition","owner":"CKEDITOR.plugins.widget","short_doc":"Repositions drag handler according to the widget's element position. ..."},{"tagname":"event","name":"blur","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":1388}],"doc":"<p>An event fired when a widget is blurred.</p>\n","params":[],"id":"event-blur","owner":"CKEDITOR.plugins.widget","short_doc":"An event fired when a widget is blurred. ..."},{"tagname":"event","name":"contextMenu","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":1443}],"doc":"<p>An event fired when the context menu is opened for a widget.</p>\n","params":[{"tagname":"params","name":"data","doc":"<p>The object containing context menu options to be added\nfor this widget. See <a href=\"#!/api/CKEDITOR.plugins.contextMenu-method-addListener\" rel=\"CKEDITOR.plugins.contextMenu-method-addListener\" class=\"docClass\">CKEDITOR.plugins.contextMenu.addListener</a>.</p>\n","type":"Object","html_type":"Object"}],"id":"event-contextMenu","owner":"CKEDITOR.plugins.widget","short_doc":"An event fired when the context menu is opened for a widget. ..."},{"tagname":"event","name":"data","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":1451}],"doc":"<p>An event fired when the widget data changed. See the <a href=\"#!/api/CKEDITOR.plugins.widget-method-setData\" rel=\"CKEDITOR.plugins.widget-method-setData\" class=\"docClass\">setData</a> method and the <a href=\"#!/api/CKEDITOR.plugins.widget-property-data\" rel=\"CKEDITOR.plugins.widget-property-data\" class=\"docClass\">data</a> property.</p>\n","params":[],"id":"event-data","owner":"CKEDITOR.plugins.widget","short_doc":"An event fired when the widget data changed. ..."},{"tagname":"event","name":"deselect","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":1400}],"doc":"<p>An event fired when a widget is deselected.</p>\n","params":[],"id":"event-deselect","owner":"CKEDITOR.plugins.widget","short_doc":"An event fired when a widget is deselected. ..."},{"tagname":"event","name":"destroy","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":1373}],"doc":"<p>An event fired when a widget is about to be destroyed, but before it is\nfully torn down.</p>\n","params":[],"id":"event-destroy","owner":"CKEDITOR.plugins.widget","short_doc":"An event fired when a widget is about to be destroyed, but before it is\nfully torn down. ..."},{"tagname":"event","name":"dialog","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":1417}],"doc":"<p>An event fired when a dialog window for widget editing is opened.\nThis event can be cancelled in order to handle the editing dialog in a custom manner.</p>\n","params":[{"tagname":"params","type":"CKEDITOR.dialog","name":"data","doc":"<p>The opened dialog window instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.dialog\" rel=\"CKEDITOR.dialog\" class=\"docClass\">CKEDITOR.dialog</a>"}],"id":"event-dialog","owner":"CKEDITOR.plugins.widget","short_doc":"An event fired when a dialog window for widget editing is opened. ..."},{"tagname":"event","name":"doubleclick","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":1435}],"doc":"<p>An event fired when a widget is double clicked.</p>\n","params":[{"tagname":"params","name":"data","doc":"\n","properties":[{"tagname":"params","type":"CKEDITOR.dom.element","name":"element","doc":"<p>The double clicked element.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.dom.element\" rel=\"CKEDITOR.dom.element\" class=\"docClass\">CKEDITOR.dom.element</a>"}],"type":"Object","html_type":"Object"}],"id":"event-doubleclick","owner":"CKEDITOR.plugins.widget","short_doc":"An event fired when a widget is double clicked. ..."},{"tagname":"event","name":"edit","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":1406}],"doc":"<p>An event fired by the <a href=\"#!/api/CKEDITOR.plugins.widget-method-edit\" rel=\"CKEDITOR.plugins.widget-method-edit\" class=\"docClass\">edit</a> method. It can be canceled\nin order to stop the default action (opening a dialog window and/or\n<a href=\"#!/api/CKEDITOR.plugins.widget.repository-method-finalizeCreation\" rel=\"CKEDITOR.plugins.widget.repository-method-finalizeCreation\" class=\"docClass\">finalizing widget creation</a>).</p>\n","params":[{"tagname":"params","name":"data","doc":"\n","properties":[{"tagname":"params","type":"String","name":"dialog","doc":"<p>Defaults to <a href=\"#!/api/CKEDITOR.plugins.widget.definition-property-dialog\" rel=\"CKEDITOR.plugins.widget.definition-property-dialog\" class=\"docClass\">CKEDITOR.plugins.widget.definition.dialog</a>\nand can be changed or set by the listener.</p>\n","html_type":"String"}],"type":"Object","html_type":"Object"}],"id":"event-edit","owner":"CKEDITOR.plugins.widget","short_doc":"An event fired by the edit method. ..."},{"tagname":"event","name":"focus","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":1380}],"doc":"<p>An event fired when a widget is focused.</p>\n\n<p>Widget can be focused by executing <a href=\"#!/api/CKEDITOR.plugins.widget-method-focus\" rel=\"CKEDITOR.plugins.widget-method-focus\" class=\"docClass\">focus</a>.</p>\n","params":[],"id":"event-focus","owner":"CKEDITOR.plugins.widget","short_doc":"An event fired when a widget is focused. ..."},{"tagname":"event","name":"key","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":1425}],"doc":"<p>An event fired when a key is pressed on a focused widget.\nThis event is forwarded from the <a href=\"#!/api/CKEDITOR.editor-event-key\" rel=\"CKEDITOR.editor-event-key\" class=\"docClass\">CKEDITOR.editor.key</a> event and\nhas the ability to block editor keystrokes if it is cancelled.</p>\n","params":[{"tagname":"params","name":"data","doc":"\n","properties":[{"tagname":"params","type":"Number","name":"keyCode","doc":"<p>A number representing the key code (or combination).</p>\n","html_type":"Number"}],"type":"Object","html_type":"Object"}],"id":"event-key","owner":"CKEDITOR.plugins.widget","short_doc":"An event fired when a key is pressed on a focused widget. ..."},{"tagname":"event","name":"ready","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":1353}],"doc":"<p>An event fired when a widget is ready (fully initialized). This event is fired after:</p>\n\n<ul>\n<li><a href=\"#!/api/CKEDITOR.plugins.widget-property-init\" rel=\"CKEDITOR.plugins.widget-property-init\" class=\"docClass\">init</a> is called,</li>\n<li>The first <a href=\"#!/api/CKEDITOR.plugins.widget-event-data\" rel=\"CKEDITOR.plugins.widget-event-data\" class=\"docClass\">data</a> event is fired,</li>\n<li>A widget is attached to the document.</li>\n</ul>\n\n\n<p>Therefore, in case of widget creation with a command which opens a dialog window, this event\nwill be delayed after the dialog window is closed and the widget is finally inserted into the document.</p>\n\n<p><strong>Note</strong>: If your widget does not use automatic dialog window binding (i.e. you open the dialog window manually)\nor another situation in which the widget wrapper is not attached to document at the time when it is\ninitialized occurs, you need to take care of firing <a href=\"#!/api/CKEDITOR.plugins.widget-event-ready\" rel=\"CKEDITOR.plugins.widget-event-ready\" class=\"docClass\">ready</a> yourself.</p>\n\n<p>See also <a href=\"#!/api/CKEDITOR.plugins.widget-property-ready\" rel=\"CKEDITOR.plugins.widget-property-ready\" class=\"docClass\">ready</a> and <a href=\"#!/api/CKEDITOR.plugins.widget-property-inited\" rel=\"CKEDITOR.plugins.widget-property-inited\" class=\"docClass\">inited</a> properties, and\n<a href=\"#!/api/CKEDITOR.plugins.widget-method-isReady\" rel=\"CKEDITOR.plugins.widget-method-isReady\" class=\"docClass\">isReady</a> and <a href=\"#!/api/CKEDITOR.plugins.widget-method-isInited\" rel=\"CKEDITOR.plugins.widget-method-isInited\" class=\"docClass\">isInited</a> methods.</p>\n","params":[],"id":"event-ready","owner":"CKEDITOR.plugins.widget","short_doc":"An event fired when a widget is ready (fully initialized). ..."},{"tagname":"event","name":"select","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":1394}],"doc":"<p>An event fired when a widget is selected.</p>\n","params":[],"id":"event-select","owner":"CKEDITOR.plugins.widget","short_doc":"An event fired when a widget is selected. ..."}],"alternateClassNames":[],"aliases":{},"id":"class-CKEDITOR.plugins.widget","short_doc":"An instance of a widget. ..."}