{"tagname":"class","name":"CKEDITOR.plugins.widget.repository","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":108}],"doc":"<p>Widget repository. It keeps track of all <a href=\"#!/api/CKEDITOR.plugins.widget.repository-property-registered\" rel=\"CKEDITOR.plugins.widget.repository-property-registered\" class=\"docClass\">registered widget definitions</a> and\n<a href=\"#!/api/CKEDITOR.plugins.widget.repository-property-instances\" rel=\"CKEDITOR.plugins.widget.repository-property-instances\" class=\"docClass\">initialized instances</a>. An instance of the repository is available under\nthe <a href=\"#!/api/CKEDITOR.editor-property-widgets\" rel=\"CKEDITOR.editor-property-widgets\" class=\"docClass\">CKEDITOR.editor.widgets</a> property.</p>\n","mixins":["CKEDITOR.event"],"members":[{"tagname":"property","name":"MIN_SELECTION_CHECK_INTERVAL","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":191}],"doc":"<p>Minimum interval between selection checks.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"Number","default":"500","readonly":null,"id":"property-MIN_SELECTION_CHECK_INTERVAL","owner":"CKEDITOR.plugins.widget.repository","short_doc":"Minimum interval between selection checks. ...","html_type":"Number"},{"tagname":"property","name":"editor","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":120}],"doc":"<p>The editor instance for which this repository was created.</p>\n","readonly":true,"type":"CKEDITOR.editor","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-editor","owner":"CKEDITOR.plugins.widget.repository","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"},{"tagname":"property","name":"focused","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":152}],"doc":"<p>The focused widget instance. See also <a href=\"#!/api/CKEDITOR.plugins.widget-event-focus\" rel=\"CKEDITOR.plugins.widget-event-focus\" class=\"docClass\">CKEDITOR.plugins.widget.focus</a>\nand <a href=\"#!/api/CKEDITOR.plugins.widget-event-blur\" rel=\"CKEDITOR.plugins.widget-event-blur\" class=\"docClass\">CKEDITOR.plugins.widget.blur</a> events.</p>\n\n<pre><code>editor.on( 'selectionChange', function() {\n    if ( editor.widgets.focused ) {\n        // Do something when a widget is focused...\n    }\n} );\n</code></pre>\n","readonly":true,"type":"CKEDITOR.plugins.widget","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-focused","owner":"CKEDITOR.plugins.widget.repository","short_doc":"The focused widget instance. ...","html_type":"<a href=\"#!/api/CKEDITOR.plugins.widget\" rel=\"CKEDITOR.plugins.widget\" class=\"docClass\">CKEDITOR.plugins.widget</a>"},{"tagname":"property","name":"instances","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":137}],"doc":"<p>An object containing initialized widget instances (widget id => <a href=\"#!/api/CKEDITOR.plugins.widget\" rel=\"CKEDITOR.plugins.widget\" class=\"docClass\">CKEDITOR.plugins.widget</a>).</p>\n","readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"type":"Object","default":"{}","id":"property-instances","owner":"CKEDITOR.plugins.widget.repository","short_doc":"An object containing initialized widget instances (widget id => CKEDITOR.plugins.widget). ...","html_type":"Object"},{"tagname":"property","name":"registered","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":128}],"doc":"<p>A hash of registered widget definitions (definition name => <a href=\"#!/api/CKEDITOR.plugins.widget.definition\" rel=\"CKEDITOR.plugins.widget.definition\" class=\"docClass\">CKEDITOR.plugins.widget.definition</a>).</p>\n\n<p>To register a definition use the <a href=\"#!/api/CKEDITOR.plugins.widget.repository-method-add\" rel=\"CKEDITOR.plugins.widget.repository-method-add\" class=\"docClass\">add</a> method.</p>\n","readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"type":"Object","default":"{}","id":"property-registered","owner":"CKEDITOR.plugins.widget.repository","short_doc":"A hash of registered widget definitions (definition name => CKEDITOR.plugins.widget.definition). ...","html_type":"Object"},{"tagname":"property","name":"selected","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":144}],"doc":"<p>An array of selected widget instances.</p>\n","readonly":true,"type":"CKEDITOR.plugins.widget[]","default":"[]","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-selected","owner":"CKEDITOR.plugins.widget.repository","short_doc":"An array of selected widget instances. ...","html_type":"<a href=\"#!/api/CKEDITOR.plugins.widget\" rel=\"CKEDITOR.plugins.widget\" class=\"docClass\">CKEDITOR.plugins.widget</a>[]"},{"tagname":"property","name":"widgetHoldingFocusedEditable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":167}],"doc":"<p>The widget instance that contains the nested editable which is currently focused.</p>\n","readonly":true,"type":"CKEDITOR.plugins.widget","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-widgetHoldingFocusedEditable","owner":"CKEDITOR.plugins.widget.repository","html_type":"<a href=\"#!/api/CKEDITOR.plugins.widget\" rel=\"CKEDITOR.plugins.widget\" class=\"docClass\">CKEDITOR.plugins.widget</a>"},{"tagname":"method","name":"constructor","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":108}],"doc":"<p>Creates a widget repository instance. Note that the widget plugin automatically\ncreates a repository instance which is available under the <a href=\"#!/api/CKEDITOR.editor-property-widgets\" rel=\"CKEDITOR.editor-property-widgets\" class=\"docClass\">CKEDITOR.editor.widgets</a> property.</p>\n","params":[{"tagname":"params","type":"CKEDITOR.editor","name":"editor","doc":"<p>The editor instance for which the repository will be created.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"}],"id":"method-constructor","owner":"CKEDITOR.plugins.widget.repository","return":{"type":"CKEDITOR.plugins.widget.repository","doc":"\n","html_type":"<a href=\"#!/api/CKEDITOR.plugins.widget.repository\" rel=\"CKEDITOR.plugins.widget.repository\" class=\"docClass\">CKEDITOR.plugins.widget.repository</a>"},"overrides":[{"name":"constructor","owner":"CKEDITOR.event","link":"<a href=\"#!/api/CKEDITOR.event-method-constructor\" rel=\"CKEDITOR.event-method-constructor\" class=\"docClass\">CKEDITOR.event.constructor</a>"}],"short_doc":"Creates a widget repository instance. ..."},{"tagname":"method","name":"add","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":198}],"doc":"<p>Adds a widget definition to the repository. Fires the <a href=\"#!/api/CKEDITOR.editor-event-widgetDefinition\" rel=\"CKEDITOR.editor-event-widgetDefinition\" class=\"docClass\">CKEDITOR.editor.widgetDefinition</a> event\nwhich allows to modify the widget definition which is going to be registered.</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"<p>The name of the widget definition.</p>\n","html_type":"String"},{"tagname":"params","type":"CKEDITOR.plugins.widget.definition","name":"widgetDef","doc":"<p>Widget definition.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.plugins.widget.definition\" rel=\"CKEDITOR.plugins.widget.definition\" class=\"docClass\">CKEDITOR.plugins.widget.definition</a>"}],"return":{"type":"CKEDITOR.plugins.widget.definition","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/CKEDITOR.plugins.widget.definition\" rel=\"CKEDITOR.plugins.widget.definition\" class=\"docClass\">CKEDITOR.plugins.widget.definition</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-add","owner":"CKEDITOR.plugins.widget.repository","short_doc":"Adds a widget definition to the repository. ..."},{"tagname":"method","name":"addUpcastCallback","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":226}],"doc":"<p>Adds a callback for element upcasting. Each callback will be executed\nfor every element which is later tested by upcast methods. If a callback\nreturns <code>false</code>, the element will not be upcasted.</p>\n\n<pre><code>// Images with the \"banner\" class will not be upcasted (e.g. to the image widget).\neditor.widgets.addUpcastCallback( function( element ) {\n    if ( element.name == 'img' &amp;&amp; element.hasClass( 'banner' ) )\n        return false;\n} );\n</code></pre>\n","params":[{"tagname":"params","type":"Function","name":"callback","doc":"\n","properties":[{"tagname":"params","type":"CKEDITOR.htmlParser.element","name":"element","doc":"\n","html_type":"<a href=\"#!/api/CKEDITOR.htmlParser.element\" rel=\"CKEDITOR.htmlParser.element\" class=\"docClass\">CKEDITOR.htmlParser.element</a>"}],"html_type":"Function"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-addUpcastCallback","owner":"CKEDITOR.plugins.widget.repository","short_doc":"Adds a callback for element upcasting. ..."},{"tagname":"method","name":"capture","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/event.js","linenr":213}],"doc":"<p>Register event handler under the capturing stage on supported target.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-capture","owner":"CKEDITOR.event","short_doc":"Register event handler under the capturing stage on supported target. ..."},{"tagname":"method","name":"checkSelection","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":244}],"doc":"<p>Checks the selection to update widget states (selection and focus).</p>\n\n<p>This method is triggered by the <a href=\"#!/api/CKEDITOR.plugins.widget.repository-event-checkSelection\" rel=\"CKEDITOR.plugins.widget.repository-event-checkSelection\" class=\"docClass\">checkSelection</a> event.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getByElement"],"id":"method-checkSelection","owner":"CKEDITOR.plugins.widget.repository","short_doc":"Checks the selection to update widget states (selection and focus). ..."},{"tagname":"method","name":"checkWidgets","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":277}],"doc":"<p>Checks if all widget instances are still present in the DOM.\nDestroys those instances that are not present.\nReinitializes widgets on widget wrappers for which widget instances\ncannot be found.</p>\n\n<p>This method triggers the <a href=\"#!/api/CKEDITOR.plugins.widget.repository-event-checkWidgets\" rel=\"CKEDITOR.plugins.widget.repository-event-checkWidgets\" class=\"docClass\">checkWidgets</a> event whose listeners\ncan cancel the method's execution or modify its options.</p>\n","params":[{"tagname":"params","name":"options","optional":true,"doc":"<p>The options object.</p>\n","properties":[{"tagname":"params","type":"Boolean","name":"initOnlyNew","optional":true,"doc":"<p>Initializes widgets only on newly wrapped\nwidget elements (those which still have the <code>cke_widget_new</code> class). When this option is\nset to <code>true</code>, widgets which were invalidated (e.g. by replacing with a cloned DOM structure)\nwill not be reinitialized. This makes the check faster.</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"focusInited","optional":true,"doc":"<p>If only one widget is initialized by\nthe method, it will be focused.</p>\n","html_type":"Boolean"}],"type":"Object","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["fire"],"id":"method-checkWidgets","owner":"CKEDITOR.plugins.widget.repository","short_doc":"Checks if all widget instances are still present in the DOM. ..."},{"tagname":"method","name":"define","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/event.js","linenr":84}],"doc":"<p>Predefine some intrinsic properties on a specific event name.</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"<p>The event name</p>\n","html_type":"String"},{"tagname":"params","name":"meta","doc":"\n","properties":[{"tagname":"params","name":"errorProof","default":"false","optional":true,"doc":"<p>Whether the event firing should catch error thrown from a per listener call.</p>\n"}],"type":"Object","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-define","owner":"CKEDITOR.event","short_doc":"Predefine some intrinsic properties on a specific event name. ..."},{"tagname":"method","name":"del","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":298}],"doc":"<p>Removes the widget from the editor and moves the selection to the closest\neditable position if the widget was focused before.</p>\n","params":[{"tagname":"params","type":"CKEDITOR.plugins.widget","name":"widget","doc":"<p>The widget instance to be deleted.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.plugins.widget\" rel=\"CKEDITOR.plugins.widget\" class=\"docClass\">CKEDITOR.plugins.widget</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["destroy"],"id":"method-del","owner":"CKEDITOR.plugins.widget.repository","short_doc":"Removes the widget from the editor and moves the selection to the closest\neditable position if the widget was focused..."},{"tagname":"method","name":"destroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":323}],"doc":"<p>Destroys the widget instance.</p>\n","params":[{"tagname":"params","type":"CKEDITOR.plugins.widget","name":"widget","doc":"<p>The widget instance to be destroyed.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.plugins.widget\" rel=\"CKEDITOR.plugins.widget\" class=\"docClass\">CKEDITOR.plugins.widget</a>"},{"tagname":"params","type":"Boolean","name":"offline","optional":true,"doc":"<p>Whether the widget is offline (detached from the DOM tree) &mdash;\nin this case the DOM (attributes, classes, etc.) will not be cleaned up.</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["fire"],"id":"method-destroy","owner":"CKEDITOR.plugins.widget.repository","short_doc":"Destroys the widget instance. ..."},{"tagname":"method","name":"destroyAll","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":339}],"doc":"<p>Destroys all widget instances.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"offline","optional":true,"doc":"<p>Whether the widgets are offline (detached from the DOM tree) &mdash;\nin this case the DOM (attributes, classes, etc.) will not be cleaned up.</p>\n","html_type":"Boolean"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["destroy"],"id":"method-destroyAll","owner":"CKEDITOR.plugins.widget.repository","short_doc":"Destroys all widget instances. ..."},{"tagname":"method","name":"finalizeCreation","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":355}],"doc":"<p>Finalizes a process of widget creation. This includes:</p>\n\n<ul>\n<li>inserting widget element into editor,</li>\n<li>marking widget instance as ready (see <a href=\"#!/api/CKEDITOR.plugins.widget-event-ready\" rel=\"CKEDITOR.plugins.widget-event-ready\" class=\"docClass\">CKEDITOR.plugins.widget.ready</a>),</li>\n<li>focusing widget instance.</li>\n</ul>\n\n\n<p>This method is used by the default widget's command and is called\nafter widget's dialog (if set) is closed. It may also be used in a\ncustomized process of widget creation and insertion.</p>\n\n<pre><code>widget.once( 'edit', function() {\n    // Finalize creation only of not ready widgets.\n    if ( widget.isReady() )\n        return;\n\n    // Cancel edit event to prevent automatic widget insertion.\n    evt.cancel();\n\n    CustomDialog.open( widget.data, function saveCallback( savedData ) {\n        // Cache the container, because widget may be destroyed while saving data,\n        // if this process will require some deep transformations.\n        var container = widget.wrapper.getParent();\n\n        widget.setData( savedData );\n\n        // Widget will be retrieved from container and inserted into editor.\n        editor.widgets.finalizeCreation( container );\n    } );\n} );\n</code></pre>\n","params":[{"tagname":"params","type":"CKEDITOR.dom.element/CKEDITOR.dom.documentFragment","name":"container","doc":"<p>The element\nor document fragment which contains widget wrapper. The container is used, so before\nfinalizing creation the widget can be freely transformed (even destroyed and reinitialized).</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.dom.element\" rel=\"CKEDITOR.dom.element\" class=\"docClass\">CKEDITOR.dom.element</a>/<a href=\"#!/api/CKEDITOR.dom.documentFragment\" rel=\"CKEDITOR.dom.documentFragment\" class=\"docClass\">CKEDITOR.dom.documentFragment</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getByElement"],"id":"method-finalizeCreation","owner":"CKEDITOR.plugins.widget.repository","short_doc":"Finalizes a process of widget creation. ..."},{"tagname":"method","name":"fire","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/event.js","linenr":223}],"doc":"<p>Fires an specific event in the object. All registered listeners are\ncalled at this point.</p>\n\n<pre><code>someObject.on( 'someEvent', function() { ... } );\nsomeObject.on( 'someEvent', function() { ... } );\nsomeObject.fire( 'someEvent' );             // Both listeners are called.\n\nsomeObject.on( 'someEvent', function( event ) {\n    alert( event.data );                    // 'Example'\n} );\nsomeObject.fire( 'someEvent', 'Example' );\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The event name to fire.</p>\n","html_type":"String"},{"tagname":"params","type":"Object","name":"data","optional":true,"doc":"<p>Data to be sent as the\n<a href=\"#!/api/CKEDITOR.eventInfo-property-data\" rel=\"CKEDITOR.eventInfo-property-data\" class=\"docClass\">CKEDITOR.eventInfo.data</a> when calling the listeners.</p>\n","html_type":"Object"},{"tagname":"params","type":"CKEDITOR.editor","name":"editor","optional":true,"doc":"<p>The editor instance to send as the\n<a href=\"#!/api/CKEDITOR.eventInfo-property-editor\" rel=\"CKEDITOR.eventInfo-property-editor\" class=\"docClass\">CKEDITOR.eventInfo.editor</a> when calling the listener.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"}],"return":{"type":"Boolean/Object","name":"return","doc":"<p>A boolean indicating that the event is to be\ncanceled, or data returned by one of the listeners.</p>\n","properties":null,"html_type":"Boolean/Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-fire","owner":"CKEDITOR.event","short_doc":"Fires an specific event in the object. ..."},{"tagname":"method","name":"fireOnce","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/event.js","linenr":313}],"doc":"<p>Fires an specific event in the object, releasing all listeners\nregistered to that event. The same listeners are not called again on\nsuccessive calls of it or of <a href=\"#!/api/CKEDITOR.event-method-fire\" rel=\"CKEDITOR.event-method-fire\" class=\"docClass\">fire</a>.</p>\n\n<pre><code>someObject.on( 'someEvent', function() { ... } );\nsomeObject.fire( 'someEvent' );         // Above listener called.\nsomeObject.fireOnce( 'someEvent' );     // Above listener called.\nsomeObject.fire( 'someEvent' );         // No listeners called.\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The event name to fire.</p>\n","html_type":"String"},{"tagname":"params","type":"Object","name":"data","optional":true,"doc":"<p>Data to be sent as the\n<a href=\"#!/api/CKEDITOR.eventInfo-property-data\" rel=\"CKEDITOR.eventInfo-property-data\" class=\"docClass\">CKEDITOR.eventInfo.data</a> when calling the listeners.</p>\n","html_type":"Object"},{"tagname":"params","type":"CKEDITOR.editor","name":"editor","optional":true,"doc":"<p>The editor instance to send as the\n<a href=\"#!/api/CKEDITOR.eventInfo-property-editor\" rel=\"CKEDITOR.eventInfo-property-editor\" class=\"docClass\">CKEDITOR.eventInfo.editor</a> when calling the listener.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.editor\" rel=\"CKEDITOR.editor\" class=\"docClass\">CKEDITOR.editor</a>"}],"return":{"type":"Boolean/Object","name":"return","doc":"<p>A booloan indicating that the event is to be\ncanceled, or data returned by one of the listeners.</p>\n","properties":null,"html_type":"Boolean/Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["fire"],"id":"method-fireOnce","owner":"CKEDITOR.event","short_doc":"Fires an specific event in the object, releasing all listeners\nregistered to that event. ..."},{"tagname":"method","name":"getByElement","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":403}],"doc":"<p>Finds a widget instance which contains a given element. The element will be the <a href=\"#!/api/CKEDITOR.plugins.widget-property-wrapper\" rel=\"CKEDITOR.plugins.widget-property-wrapper\" class=\"docClass\">wrapper</a>\nof the returned widget or a descendant of this <a href=\"#!/api/CKEDITOR.plugins.widget-property-wrapper\" rel=\"CKEDITOR.plugins.widget-property-wrapper\" class=\"docClass\">wrapper</a>.</p>\n\n<pre><code>editor.widgets.getByElement( someWidget.wrapper ); // -&gt; someWidget\neditor.widgets.getByElement( someWidget.parts.caption ); // -&gt; someWidget\n\n// Check wrapper only:\neditor.widgets.getByElement( someWidget.wrapper, true ); // -&gt; someWidget\neditor.widgets.getByElement( someWidget.parts.caption, true ); // -&gt; null\n</code></pre>\n","params":[{"tagname":"params","type":"CKEDITOR.dom.element","name":"element","doc":"<p>The element to be checked.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.dom.element\" rel=\"CKEDITOR.dom.element\" class=\"docClass\">CKEDITOR.dom.element</a>"},{"tagname":"params","type":"Boolean","name":"checkWrapperOnly","optional":true,"doc":"<p>If set to <code>true</code>, the method will not check wrappers' descendants.</p>\n","html_type":"Boolean"}],"return":{"type":"CKEDITOR.plugins.widget","name":"return","doc":"<p>The widget instance or <code>null</code>.</p>\n","properties":null,"html_type":"<a href=\"#!/api/CKEDITOR.plugins.widget\" rel=\"CKEDITOR.plugins.widget\" class=\"docClass\">CKEDITOR.plugins.widget</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getByElement","owner":"CKEDITOR.plugins.widget.repository","short_doc":"Finds a widget instance which contains a given element. ..."},{"tagname":"method","name":"hasListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/event.js","linenr":370}],"doc":"<p>Checks if there is any listener registered to a given event.</p>\n\n<pre><code>var myListener = function() { ... };\nsomeObject.on( 'someEvent', myListener );\nalert( someObject.hasListeners( 'someEvent' ) );    // true\nalert( someObject.hasListeners( 'noEvent' ) );      // false\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The event name.</p>\n","html_type":"String"}],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"Boolean"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-hasListeners","owner":"CKEDITOR.event","short_doc":"Checks if there is any listener registered to a given event. ..."},{"tagname":"method","name":"initOn","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":433}],"doc":"<p>Initializes a widget on a given element if the widget has not been initialized on it yet.</p>\n","params":[{"tagname":"params","type":"CKEDITOR.dom.element","name":"element","doc":"<p>The future widget element.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.dom.element\" rel=\"CKEDITOR.dom.element\" class=\"docClass\">CKEDITOR.dom.element</a>"},{"tagname":"params","type":"String/CKEDITOR.plugins.widget.definition","name":"widgetDef","optional":true,"doc":"<p>Name of a widget or a widget definition.\nThe widget definition should be previously registered by using the\n<a href=\"#!/api/CKEDITOR.plugins.widget.repository-method-add\" rel=\"CKEDITOR.plugins.widget.repository-method-add\" class=\"docClass\">add</a> method.</p>\n","html_type":"String/<a href=\"#!/api/CKEDITOR.plugins.widget.definition\" rel=\"CKEDITOR.plugins.widget.definition\" class=\"docClass\">CKEDITOR.plugins.widget.definition</a>"},{"tagname":"params","name":"startupData","optional":true,"doc":"<p>Widget startup data (has precedence over default one).</p>\n","type":"Object","html_type":"Object"}],"return":{"type":"CKEDITOR.plugins.widget","name":"return","doc":"<p>The widget instance or <code>null</code> if a widget could not be initialized on\na given element.</p>\n","properties":null,"html_type":"<a href=\"#!/api/CKEDITOR.plugins.widget\" rel=\"CKEDITOR.plugins.widget\" class=\"docClass\">CKEDITOR.plugins.widget</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getByElement","wrapElement"],"id":"method-initOn","owner":"CKEDITOR.plugins.widget.repository","short_doc":"Initializes a widget on a given element if the widget has not been initialized on it yet. ..."},{"tagname":"method","name":"initOnAll","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":481}],"doc":"<p>Initializes widgets on all elements which were wrapped by <a href=\"#!/api/CKEDITOR.plugins.widget.repository-method-wrapElement\" rel=\"CKEDITOR.plugins.widget.repository-method-wrapElement\" class=\"docClass\">wrapElement</a> and\nhave not been initialized yet.</p>\n","params":[{"tagname":"params","type":"CKEDITOR.dom.element","name":"container","default":"editor.editable()","optional":true,"doc":"<p>The container which will be checked for not\ninitialized widgets. Defaults to editor's <a href=\"#!/api/CKEDITOR.editor-method-editable\" rel=\"CKEDITOR.editor-method-editable\" class=\"docClass\">editable</a> element.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.dom.element\" rel=\"CKEDITOR.dom.element\" class=\"docClass\">CKEDITOR.dom.element</a>"}],"return":{"type":"CKEDITOR.plugins.widget[]","name":"return","doc":"<p>Array of widget instances which have been initialized.</p>\n","properties":null,"html_type":"<a href=\"#!/api/CKEDITOR.plugins.widget\" rel=\"CKEDITOR.plugins.widget\" class=\"docClass\">CKEDITOR.plugins.widget</a>[]"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["initOn"],"id":"method-initOnAll","owner":"CKEDITOR.plugins.widget.repository","short_doc":"Initializes widgets on all elements which were wrapped by wrapElement and\nhave not been initialized yet. ..."},{"tagname":"method","name":"on","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/event.js","linenr":96}],"doc":"<p>Registers a listener to a specific event in the current object.</p>\n\n<pre><code>someObject.on( 'someEvent', function() {\n    alert( this == someObject );        // true\n} );\n\nsomeObject.on( 'someEvent', function() {\n    alert( this == anotherObject );     // true\n}, anotherObject );\n\nsomeObject.on( 'someEvent', function( event ) {\n    alert( event.listenerData );        // 'Example'\n}, null, 'Example' );\n\nsomeObject.on( 'someEvent', function() { ... } );                       // 2nd called\nsomeObject.on( 'someEvent', function() { ... }, null, null, 100 );      // 3rd called\nsomeObject.on( 'someEvent', function() { ... }, null, null, 1 );        // 1st called\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The event name to which listen.</p>\n","html_type":"String"},{"tagname":"params","type":"Function","name":"listenerFunction","doc":"<p>The function listening to the\nevent. A single <a href=\"#!/api/CKEDITOR.eventInfo\" rel=\"CKEDITOR.eventInfo\" class=\"docClass\">CKEDITOR.eventInfo</a> object instanced\nis passed to this function containing all the event data.</p>\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scopeObj","optional":true,"doc":"<p>The object used to scope the listener\ncall (the <code>this</code> object). If omitted, the current object is used.</p>\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"listenerData","optional":true,"doc":"<p>Data to be sent as the\n<a href=\"#!/api/CKEDITOR.eventInfo-property-listenerData\" rel=\"CKEDITOR.eventInfo-property-listenerData\" class=\"docClass\">CKEDITOR.eventInfo.listenerData</a> when calling the\nlistener.</p>\n","html_type":"Object"},{"tagname":"params","type":"Number","name":"priority","default":"10","optional":true,"doc":"<p>The listener priority. Lower priority\nlisteners are called first. Listeners with the same priority\nvalue are called in registration order.</p>\n","html_type":"Number"}],"return":{"type":"Object","name":"return","doc":"<p>An object containing the <code>removeListener</code>\nfunction, which can be used to remove the listener at any time.</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-on","owner":"CKEDITOR.event","short_doc":"Registers a listener to a specific event in the current object. ..."},{"tagname":"method","name":"once","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/event.js","linenr":191}],"doc":"<p>Similiar with <a href=\"#!/api/CKEDITOR.event-method-on\" rel=\"CKEDITOR.event-method-on\" class=\"docClass\">on</a> but the listener will be called only once upon the next event firing.</p>\n\n<p>@see <a href=\"#!/api/CKEDITOR.event-method-on\" rel=\"CKEDITOR.event-method-on\" class=\"docClass\">CKEDITOR.event.on</a></p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-once","owner":"CKEDITOR.event","short_doc":"Similiar with on but the listener will be called only once upon the next event firing. ..."},{"tagname":"method","name":"parseElementClasses","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":503}],"doc":"<p>Parses element classes string and returns an object\nwhose keys contain class names. Skips all <code>cke_*</code> classes.</p>\n\n<p>This method is used by the <a href=\"#!/api/CKEDITOR.plugins.widget-method-getClasses\" rel=\"CKEDITOR.plugins.widget-method-getClasses\" class=\"docClass\">CKEDITOR.plugins.widget.getClasses</a> method and\nmay be used when overriding that method.</p>\n","since":"4.4","params":[{"tagname":"params","type":"String","name":"classes","doc":"<p>String (value of <code>class</code> attribute).</p>\n","html_type":"String"}],"return":{"type":"Object","name":"return","doc":"<p>Object containing classes or <code>null</code> if no classes found.</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-parseElementClasses","owner":"CKEDITOR.plugins.widget.repository","short_doc":"Parses element classes string and returns an object\nwhose keys contain class names. ..."},{"tagname":"method","name":"removeAllListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/event.js","linenr":361}],"doc":"<p>Remove all existing listeners on this object, for cleanup purpose.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-removeAllListeners","owner":"CKEDITOR.event","short_doc":"Remove all existing listeners on this object, for cleanup purpose. ..."},{"tagname":"method","name":"removeListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/core/event.js","linenr":337}],"doc":"<p>Unregisters a listener function from being called at the specified\nevent. No errors are thrown if the listener has not been registered previously.</p>\n\n<pre><code>var myListener = function() { ... };\nsomeObject.on( 'someEvent', myListener );\nsomeObject.fire( 'someEvent' );                 // myListener called.\nsomeObject.removeListener( 'someEvent', myListener );\nsomeObject.fire( 'someEvent' );                 // myListener not called.\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The event name.</p>\n","html_type":"String"},{"tagname":"params","type":"Function","name":"listenerFunction","doc":"<p>The listener function to unregister.</p>\n","html_type":"Function"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-removeListener","owner":"CKEDITOR.event","short_doc":"Unregisters a listener function from being called at the specified\nevent. ..."},{"tagname":"method","name":"wrapElement","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":532}],"doc":"<p>Wraps an element with a widget's non-editable container.</p>\n\n<p>If this method is called on an <a href=\"#!/api/CKEDITOR.htmlParser.element\" rel=\"CKEDITOR.htmlParser.element\" class=\"docClass\">CKEDITOR.htmlParser.element</a>, then it will\nalso take care of fixing the DOM after wrapping (the wrapper may not be allowed in element's parent).</p>\n","params":[{"tagname":"params","type":"CKEDITOR.dom.element/CKEDITOR.htmlParser.element","name":"element","doc":"<p>The widget element to be wrapped.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.dom.element\" rel=\"CKEDITOR.dom.element\" class=\"docClass\">CKEDITOR.dom.element</a>/<a href=\"#!/api/CKEDITOR.htmlParser.element\" rel=\"CKEDITOR.htmlParser.element\" class=\"docClass\">CKEDITOR.htmlParser.element</a>"},{"tagname":"params","type":"String","name":"widgetName","optional":true,"doc":"<p>The name of the widget definition. Defaults to element's <code>data-widget</code>\nattribute value.</p>\n","html_type":"String"}],"return":{"type":"CKEDITOR.dom.element/CKEDITOR.htmlParser.element","name":"return","doc":"<p>The wrapper element or <code>null</code> if\nthe widget definition of this name is not registered.</p>\n","properties":null,"html_type":"<a href=\"#!/api/CKEDITOR.dom.element\" rel=\"CKEDITOR.dom.element\" class=\"docClass\">CKEDITOR.dom.element</a>/<a href=\"#!/api/CKEDITOR.htmlParser.element\" rel=\"CKEDITOR.htmlParser.element\" class=\"docClass\">CKEDITOR.htmlParser.element</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-wrapElement","owner":"CKEDITOR.plugins.widget.repository","short_doc":"Wraps an element with a widget's non-editable container. ..."},{"tagname":"event","name":"checkSelection","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":639}],"doc":"<p>An event fired to trigger the selection check.</p>\n\n<p>See the <a href=\"#!/api/CKEDITOR.plugins.widget.repository-method-checkSelection\" rel=\"CKEDITOR.plugins.widget.repository-method-checkSelection\" class=\"docClass\">checkSelection</a> method.</p>\n","params":[],"id":"event-checkSelection","owner":"CKEDITOR.plugins.widget.repository","short_doc":"An event fired to trigger the selection check. ..."},{"tagname":"event","name":"checkWidgets","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":647}],"doc":"<p>An event fired by the the <a href=\"#!/api/CKEDITOR.plugins.widget.repository-method-checkWidgets\" rel=\"CKEDITOR.plugins.widget.repository-method-checkWidgets\" class=\"docClass\">checkWidgets</a> method.</p>\n\n<p>It can be canceled in order to stop the <a href=\"#!/api/CKEDITOR.plugins.widget.repository-method-checkWidgets\" rel=\"CKEDITOR.plugins.widget.repository-method-checkWidgets\" class=\"docClass\">checkWidgets</a>\nmethod execution or the event listener can modify the method's options.</p>\n","params":[{"tagname":"params","name":"data","optional":true,"doc":"\n","properties":[{"tagname":"params","type":"Boolean","name":"initOnlyNew","optional":true,"doc":"<p>Initialize widgets only on newly wrapped\nwidget elements (those which still have the <code>cke_widget_new</code> class). When this option is\nset to <code>true</code>, widgets which were invalidated (e.g. by replacing with a cloned DOM structure)\nwill not be reinitialized. This makes the check faster.</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"focusInited","optional":true,"doc":"<p>If only one widget is initialized by\nthe method, it will be focused.</p>\n","html_type":"Boolean"}],"type":"Object","html_type":"Object"}],"id":"event-checkWidgets","owner":"CKEDITOR.plugins.widget.repository","short_doc":"An event fired by the the checkWidgets method. ..."},{"tagname":"event","name":"instanceCreated","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":623}],"doc":"<p>An event fired when a widget instance is created, but before it is fully initialized.</p>\n","params":[{"tagname":"params","type":"CKEDITOR.plugins.widget","name":"data","doc":"<p>The widget instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.plugins.widget\" rel=\"CKEDITOR.plugins.widget\" class=\"docClass\">CKEDITOR.plugins.widget</a>"}],"id":"event-instanceCreated","owner":"CKEDITOR.plugins.widget.repository","short_doc":"An event fired when a widget instance is created, but before it is fully initialized. ..."},{"tagname":"event","name":"instanceDestroyed","autodetected":{},"files":[{"filename":"D:/_Projects/git/ckeditor-dev-4.4.1/plugins/widget/plugin.js","linenr":630}],"doc":"<p>An event fired when a widget instance was destroyed.</p>\n\n<p>See also <a href=\"#!/api/CKEDITOR.plugins.widget-event-destroy\" rel=\"CKEDITOR.plugins.widget-event-destroy\" class=\"docClass\">CKEDITOR.plugins.widget.destroy</a>.</p>\n","params":[{"tagname":"params","type":"CKEDITOR.plugins.widget","name":"data","doc":"<p>The widget instance.</p>\n","html_type":"<a href=\"#!/api/CKEDITOR.plugins.widget\" rel=\"CKEDITOR.plugins.widget\" class=\"docClass\">CKEDITOR.plugins.widget</a>"}],"id":"event-instanceDestroyed","owner":"CKEDITOR.plugins.widget.repository","short_doc":"An event fired when a widget instance was destroyed. ..."}],"alternateClassNames":[],"aliases":{},"id":"class-CKEDITOR.plugins.widget.repository","short_doc":"Widget repository. ..."}